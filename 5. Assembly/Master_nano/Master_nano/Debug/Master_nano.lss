
Master_nano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000190  00800100  00001208  0000129c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001208  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000013  00800290  00800290  0000142c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000142c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001488  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  000014c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001328  00000000  00000000  00001600  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bd8  00000000  00000000  00002928  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a0a  00000000  00000000  00003500  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000350  00000000  00000000  00003f0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000065c  00000000  00000000  0000425c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a96  00000000  00000000  000048b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  0000534e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_14>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	12 e0       	ldi	r17, 0x02	; 2
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e8 e0       	ldi	r30, 0x08	; 8
      88:	f2 e1       	ldi	r31, 0x12	; 18
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a0 39       	cpi	r26, 0x90	; 144
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	22 e0       	ldi	r18, 0x02	; 2
      98:	a0 e9       	ldi	r26, 0x90	; 144
      9a:	b2 e0       	ldi	r27, 0x02	; 2
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a3 3a       	cpi	r26, 0xA3	; 163
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <main>
      aa:	0c 94 02 09 	jmp	0x1204	; 0x1204 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <i2c_init>:
		printf("Result=%ld \n",result);
		return result;
		
	}
	
}
      b2:	88 e4       	ldi	r24, 0x48	; 72
      b4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
      b8:	08 95       	ret

000000ba <i2c_start>:
      ba:	ec eb       	ldi	r30, 0xBC	; 188
      bc:	f0 e0       	ldi	r31, 0x00	; 0
      be:	10 82       	st	Z, r1
      c0:	16 bc       	out	0x26, r1	; 38
      c2:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <counter+0x1>
      c6:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <counter>
      ca:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <__data_end+0x1>
      ce:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <__data_end>
      d2:	94 ea       	ldi	r25, 0xA4	; 164
      d4:	90 83       	st	Z, r25
      d6:	0e c0       	rjmp	.+28     	; 0xf4 <i2c_start+0x3a>
      d8:	20 91 90 02 	lds	r18, 0x0290	; 0x800290 <__data_end>
      dc:	30 91 91 02 	lds	r19, 0x0291	; 0x800291 <__data_end+0x1>
      e0:	21 30       	cpi	r18, 0x01	; 1
      e2:	31 05       	cpc	r19, r1
      e4:	39 f4       	brne	.+14     	; 0xf4 <i2c_start+0x3a>
      e6:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <__data_end+0x1>
      ea:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <__data_end>
      ee:	8f ef       	ldi	r24, 0xFF	; 255
      f0:	9f ef       	ldi	r25, 0xFF	; 255
      f2:	08 95       	ret
      f4:	90 81       	ld	r25, Z
      f6:	99 23       	and	r25, r25
      f8:	7c f7       	brge	.-34     	; 0xd8 <i2c_start+0x1e>
      fa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      fe:	98 7f       	andi	r25, 0xF8	; 248
     100:	98 30       	cpi	r25, 0x08	; 8
     102:	a9 f4       	brne	.+42     	; 0x12e <i2c_start+0x74>
     104:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     108:	84 e8       	ldi	r24, 0x84	; 132
     10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     10e:	ec eb       	ldi	r30, 0xBC	; 188
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	80 81       	ld	r24, Z
     114:	88 23       	and	r24, r24
     116:	ec f7       	brge	.-6      	; 0x112 <i2c_start+0x58>
     118:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     11c:	28 7f       	andi	r18, 0xF8	; 248
     11e:	28 31       	cpi	r18, 0x18	; 24
     120:	49 f0       	breq	.+18     	; 0x134 <i2c_start+0x7a>
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	20 34       	cpi	r18, 0x40	; 64
     128:	39 f4       	brne	.+14     	; 0x138 <i2c_start+0x7e>
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	08 95       	ret
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	08 95       	ret
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	08 95       	ret

0000013a <i2c_write>:
     13a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     13e:	84 e8       	ldi	r24, 0x84	; 132
     140:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     144:	ec eb       	ldi	r30, 0xBC	; 188
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	80 81       	ld	r24, Z
     14a:	88 23       	and	r24, r24
     14c:	ec f7       	brge	.-6      	; 0x148 <i2c_write+0xe>
     14e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     152:	98 7f       	andi	r25, 0xF8	; 248
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	98 32       	cpi	r25, 0x28	; 40
     158:	09 f4       	brne	.+2      	; 0x15c <i2c_write+0x22>
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	08 95       	ret

0000015e <i2c_read_ack>:
     15e:	16 bc       	out	0x26, r1	; 38
     160:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <counter+0x1>
     164:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <counter>
     168:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <__data_end+0x1>
     16c:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <__data_end>
     170:	84 ec       	ldi	r24, 0xC4	; 196
     172:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     176:	ec eb       	ldi	r30, 0xBC	; 188
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	0d c0       	rjmp	.+26     	; 0x196 <i2c_read_ack+0x38>
     17c:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <__data_end>
     180:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <__data_end+0x1>
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	39 f4       	brne	.+14     	; 0x196 <i2c_read_ack+0x38>
     188:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <__data_end+0x1>
     18c:	10 92 90 02 	sts	0x0290, r1	; 0x800290 <__data_end>
     190:	8f ef       	ldi	r24, 0xFF	; 255
     192:	9f ef       	ldi	r25, 0xFF	; 255
     194:	08 95       	ret
     196:	80 81       	ld	r24, Z
     198:	88 23       	and	r24, r24
     19a:	84 f7       	brge	.-32     	; 0x17c <i2c_read_ack+0x1e>
     19c:	9b b1       	in	r25, 0x0b	; 11
     19e:	84 e0       	ldi	r24, 0x04	; 4
     1a0:	89 27       	eor	r24, r25
     1a2:	8b b9       	out	0x0b, r24	; 11
     1a4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	08 95       	ret

000001ac <i2c_read_nack>:
     1ac:	84 e8       	ldi	r24, 0x84	; 132
     1ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1b2:	ec eb       	ldi	r30, 0xBC	; 188
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	88 23       	and	r24, r24
     1ba:	ec f7       	brge	.-6      	; 0x1b6 <i2c_read_nack+0xa>
     1bc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     1c0:	08 95       	ret

000001c2 <get_data_8bit>:
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
     1c6:	d8 2f       	mov	r29, r24
     1c8:	c6 2f       	mov	r28, r22
     1ca:	86 2f       	mov	r24, r22
     1cc:	88 0f       	add	r24, r24
     1ce:	0e 94 5d 00 	call	0xba	; 0xba <i2c_start>
     1d2:	00 97       	sbiw	r24, 0x00	; 0
     1d4:	91 f0       	breq	.+36     	; 0x1fa <get_data_8bit+0x38>
     1d6:	9f 93       	push	r25
     1d8:	8f 93       	push	r24
     1da:	8f e2       	ldi	r24, 0x2F	; 47
     1dc:	91 e0       	ldi	r25, 0x01	; 1
     1de:	9f 93       	push	r25
     1e0:	8f 93       	push	r24
     1e2:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     1e6:	84 e9       	ldi	r24, 0x94	; 148
     1e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1ec:	0f 90       	pop	r0
     1ee:	0f 90       	pop	r0
     1f0:	0f 90       	pop	r0
     1f2:	0f 90       	pop	r0
     1f4:	8f ef       	ldi	r24, 0xFF	; 255
     1f6:	9f ef       	ldi	r25, 0xFF	; 255
     1f8:	3c c0       	rjmp	.+120    	; 0x272 <get_data_8bit+0xb0>
     1fa:	8d 2f       	mov	r24, r29
     1fc:	0e 94 9d 00 	call	0x13a	; 0x13a <i2c_write>
     200:	88 23       	and	r24, r24
     202:	51 f0       	breq	.+20     	; 0x218 <get_data_8bit+0x56>
     204:	81 e6       	ldi	r24, 0x61	; 97
     206:	91 e0       	ldi	r25, 0x01	; 1
     208:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
     20c:	84 e9       	ldi	r24, 0x94	; 148
     20e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     212:	8f ef       	ldi	r24, 0xFF	; 255
     214:	9f ef       	ldi	r25, 0xFF	; 255
     216:	2d c0       	rjmp	.+90     	; 0x272 <get_data_8bit+0xb0>
     218:	84 e8       	ldi	r24, 0x84	; 132
     21a:	91 e0       	ldi	r25, 0x01	; 1
     21c:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
     220:	84 e9       	ldi	r24, 0x94	; 148
     222:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     226:	8c 2f       	mov	r24, r28
     228:	88 0f       	add	r24, r24
     22a:	81 60       	ori	r24, 0x01	; 1
     22c:	0e 94 5d 00 	call	0xba	; 0xba <i2c_start>
     230:	01 96       	adiw	r24, 0x01	; 1
     232:	51 f4       	brne	.+20     	; 0x248 <get_data_8bit+0x86>
     234:	83 ea       	ldi	r24, 0xA3	; 163
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
     23c:	84 e9       	ldi	r24, 0x94	; 148
     23e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     242:	8f ef       	ldi	r24, 0xFF	; 255
     244:	9f ef       	ldi	r25, 0xFF	; 255
     246:	15 c0       	rjmp	.+42     	; 0x272 <get_data_8bit+0xb0>
     248:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_read_nack>
     24c:	c8 2f       	mov	r28, r24
     24e:	d0 e0       	ldi	r29, 0x00	; 0
     250:	1f 92       	push	r1
     252:	8f 93       	push	r24
     254:	83 ee       	ldi	r24, 0xE3	; 227
     256:	91 e0       	ldi	r25, 0x01	; 1
     258:	9f 93       	push	r25
     25a:	8f 93       	push	r24
     25c:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     260:	84 e9       	ldi	r24, 0x94	; 148
     262:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     266:	0f 90       	pop	r0
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	0f 90       	pop	r0
     26e:	8c 2f       	mov	r24, r28
     270:	9d 2f       	mov	r25, r29
     272:	df 91       	pop	r29
     274:	cf 91       	pop	r28
     276:	08 95       	ret

00000278 <get_data_int>:
     278:	bf 92       	push	r11
     27a:	cf 92       	push	r12
     27c:	df 92       	push	r13
     27e:	ef 92       	push	r14
     280:	ff 92       	push	r15
     282:	0f 93       	push	r16
     284:	1f 93       	push	r17
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	d8 2f       	mov	r29, r24
     28c:	c6 2f       	mov	r28, r22
     28e:	86 2f       	mov	r24, r22
     290:	88 0f       	add	r24, r24
     292:	0e 94 5d 00 	call	0xba	; 0xba <i2c_start>
     296:	88 23       	and	r24, r24
     298:	81 f0       	breq	.+32     	; 0x2ba <get_data_int+0x42>
     29a:	99 27       	eor	r25, r25
     29c:	9f 93       	push	r25
     29e:	8f 93       	push	r24
     2a0:	8f e2       	ldi	r24, 0x2F	; 47
     2a2:	91 e0       	ldi	r25, 0x01	; 1
     2a4:	9f 93       	push	r25
     2a6:	8f 93       	push	r24
     2a8:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     2ac:	0f 90       	pop	r0
     2ae:	0f 90       	pop	r0
     2b0:	0f 90       	pop	r0
     2b2:	0f 90       	pop	r0
     2b4:	8f ef       	ldi	r24, 0xFF	; 255
     2b6:	9f ef       	ldi	r25, 0xFF	; 255
     2b8:	52 c0       	rjmp	.+164    	; 0x35e <get_data_int+0xe6>
     2ba:	8d 2f       	mov	r24, r29
     2bc:	0e 94 9d 00 	call	0x13a	; 0x13a <i2c_write>
     2c0:	88 23       	and	r24, r24
     2c2:	39 f0       	breq	.+14     	; 0x2d2 <get_data_int+0x5a>
     2c4:	81 e6       	ldi	r24, 0x61	; 97
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
     2cc:	8f ef       	ldi	r24, 0xFF	; 255
     2ce:	9f ef       	ldi	r25, 0xFF	; 255
     2d0:	46 c0       	rjmp	.+140    	; 0x35e <get_data_int+0xe6>
     2d2:	84 e8       	ldi	r24, 0x84	; 132
     2d4:	91 e0       	ldi	r25, 0x01	; 1
     2d6:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
     2da:	0f 2e       	mov	r0, r31
     2dc:	fc eb       	ldi	r31, 0xBC	; 188
     2de:	ef 2e       	mov	r14, r31
     2e0:	f1 2c       	mov	r15, r1
     2e2:	f0 2d       	mov	r31, r0
     2e4:	0f 2e       	mov	r0, r31
     2e6:	f4 e9       	ldi	r31, 0x94	; 148
     2e8:	bf 2e       	mov	r11, r31
     2ea:	f0 2d       	mov	r31, r0
     2ec:	f7 01       	movw	r30, r14
     2ee:	b0 82       	st	Z, r11
     2f0:	8c 2f       	mov	r24, r28
     2f2:	88 0f       	add	r24, r24
     2f4:	81 60       	ori	r24, 0x01	; 1
     2f6:	0e 94 5d 00 	call	0xba	; 0xba <i2c_start>
     2fa:	0e 94 af 00 	call	0x15e	; 0x15e <i2c_read_ack>
     2fe:	ec 01       	movw	r28, r24
     300:	dd 27       	eor	r29, r29
     302:	df 93       	push	r29
     304:	cf 93       	push	r28
     306:	0f 2e       	mov	r0, r31
     308:	f9 ef       	ldi	r31, 0xF9	; 249
     30a:	cf 2e       	mov	r12, r31
     30c:	f1 e0       	ldi	r31, 0x01	; 1
     30e:	df 2e       	mov	r13, r31
     310:	f0 2d       	mov	r31, r0
     312:	df 92       	push	r13
     314:	cf 92       	push	r12
     316:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     31a:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_read_nack>
     31e:	08 2f       	mov	r16, r24
     320:	10 e0       	ldi	r17, 0x00	; 0
     322:	1f 92       	push	r1
     324:	8f 93       	push	r24
     326:	df 92       	push	r13
     328:	cf 92       	push	r12
     32a:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     32e:	10 2f       	mov	r17, r16
     330:	00 27       	eor	r16, r16
     332:	c0 0f       	add	r28, r16
     334:	d1 1f       	adc	r29, r17
     336:	f7 01       	movw	r30, r14
     338:	b0 82       	st	Z, r11
     33a:	df 93       	push	r29
     33c:	cf 93       	push	r28
     33e:	83 e0       	ldi	r24, 0x03	; 3
     340:	92 e0       	ldi	r25, 0x02	; 2
     342:	9f 93       	push	r25
     344:	8f 93       	push	r24
     346:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     34a:	ed b7       	in	r30, 0x3d	; 61
     34c:	fe b7       	in	r31, 0x3e	; 62
     34e:	3c 96       	adiw	r30, 0x0c	; 12
     350:	0f b6       	in	r0, 0x3f	; 63
     352:	f8 94       	cli
     354:	fe bf       	out	0x3e, r31	; 62
     356:	0f be       	out	0x3f, r0	; 63
     358:	ed bf       	out	0x3d, r30	; 61
     35a:	8c 2f       	mov	r24, r28
     35c:	9d 2f       	mov	r25, r29
     35e:	df 91       	pop	r29
     360:	cf 91       	pop	r28
     362:	1f 91       	pop	r17
     364:	0f 91       	pop	r16
     366:	ff 90       	pop	r15
     368:	ef 90       	pop	r14
     36a:	df 90       	pop	r13
     36c:	cf 90       	pop	r12
     36e:	bf 90       	pop	r11
     370:	08 95       	ret

00000372 <i2c_timer0_init>:


void i2c_timer0_init(void)
{
	TCCR0A |= (1 << WGM01);
     372:	84 b5       	in	r24, 0x24	; 36
     374:	82 60       	ori	r24, 0x02	; 2
     376:	84 bd       	out	0x24, r24	; 36
	// Set the Timer Mode to CTC
	OCR0A = 0xF9;
     378:	89 ef       	ldi	r24, 0xF9	; 249
     37a:	87 bd       	out	0x27, r24	; 39
	TCNT0 = 0;
     37c:	16 bc       	out	0x26, r1	; 38
	// Set the value that you want to count to 256
	TIMSK0 |= (1 << OCIE0A);
     37e:	ee e6       	ldi	r30, 0x6E	; 110
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	80 81       	ld	r24, Z
     384:	82 60       	ori	r24, 0x02	; 2
     386:	80 83       	st	Z, r24
	//Set the ISR COMPA vect
	TCCR0B |= (1 << CS01) | (1 << CS00);
     388:	85 b5       	in	r24, 0x25	; 37
     38a:	83 60       	ori	r24, 0x03	; 3
     38c:	85 bd       	out	0x25, r24	; 37
	// set prescaler to 64 and start the timer
	sei(); // turn on interrupts
     38e:	78 94       	sei
     390:	08 95       	ret

00000392 <__vector_14>:




ISR (TIMER0_COMPA_vect) // timer0 overflow interrupt
{	
     392:	1f 92       	push	r1
     394:	0f 92       	push	r0
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	0f 92       	push	r0
     39a:	11 24       	eor	r1, r1
     39c:	8f 93       	push	r24
     39e:	9f 93       	push	r25
	counter++;
     3a0:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <counter>
     3a4:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <counter+0x1>
     3a8:	01 96       	adiw	r24, 0x01	; 1
     3aa:	90 93 93 02 	sts	0x0293, r25	; 0x800293 <counter+0x1>
     3ae:	80 93 92 02 	sts	0x0292, r24	; 0x800292 <counter>
	
	if (counter==20)
     3b2:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <counter>
     3b6:	90 91 93 02 	lds	r25, 0x0293	; 0x800293 <counter+0x1>
     3ba:	44 97       	sbiw	r24, 0x14	; 20
     3bc:	51 f4       	brne	.+20     	; 0x3d2 <__vector_14+0x40>
	{
		flag=1;
     3be:	81 e0       	ldi	r24, 0x01	; 1
     3c0:	90 e0       	ldi	r25, 0x00	; 0
     3c2:	90 93 91 02 	sts	0x0291, r25	; 0x800291 <__data_end+0x1>
     3c6:	80 93 90 02 	sts	0x0290, r24	; 0x800290 <__data_end>
		counter=0;
     3ca:	10 92 93 02 	sts	0x0293, r1	; 0x800293 <counter+0x1>
     3ce:	10 92 92 02 	sts	0x0292, r1	; 0x800292 <counter>
		
	}
	
	if (flag==0)
     3d2:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <__data_end>
     3d6:	90 91 91 02 	lds	r25, 0x0291	; 0x800291 <__data_end+0x1>
     3da:	89 2b       	or	r24, r25
     3dc:	19 f4       	brne	.+6      	; 0x3e4 <__vector_14+0x52>
	{PORTD=(1<<PORTD3);
     3de:	88 e0       	ldi	r24, 0x08	; 8
     3e0:	8b b9       	out	0x0b, r24	; 11
     3e2:	01 c0       	rjmp	.+2      	; 0x3e6 <__vector_14+0x54>
	}
	
	else
	{
		
		PORTD=(0<<PORTD3);
     3e4:	1b b8       	out	0x0b, r1	; 11
	}
     3e6:	9f 91       	pop	r25
     3e8:	8f 91       	pop	r24
     3ea:	0f 90       	pop	r0
     3ec:	0f be       	out	0x3f, r0	; 63
     3ee:	0f 90       	pop	r0
     3f0:	1f 90       	pop	r1
     3f2:	18 95       	reti

000003f4 <main>:
 char a=255;
 char b=0;
 
 int main(void)
 {
	 DDRD = 0xFF; // I/O board PD4..7 as outputs, for LEDs
     3f4:	8f ef       	ldi	r24, 0xFF	; 255
     3f6:	8a b9       	out	0x0a, r24	; 10
	 PORTD = 0xFF; // Enable internal pull at PC0...3 inputs
     3f8:	8b b9       	out	0x0b, r24	; 11
	 
	 i2c_init();
     3fa:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_init>
	 i2c_timer0_init();
     3fe:	0e 94 b9 01 	call	0x372	; 0x372 <i2c_timer0_init>
	 uart_init();
     402:	0e 94 a7 02 	call	0x54e	; 0x54e <uart_init>
	 io_redirect();			
     406:	0e 94 b8 02 	call	0x570	; 0x570 <io_redirect>
	 while (1)
	 {	
		
			
		printf("input a number\n");
		scanf("%d",&data);
     40a:	0f 2e       	mov	r0, r31
     40c:	f4 e9       	ldi	r31, 0x94	; 148
     40e:	ef 2e       	mov	r14, r31
     410:	f2 e0       	ldi	r31, 0x02	; 2
     412:	ff 2e       	mov	r15, r31
     414:	f0 2d       	mov	r31, r0
     416:	05 e4       	ldi	r16, 0x45	; 69
     418:	12 e0       	ldi	r17, 0x02	; 2
		printf("thanks \n");
		
		char a=update_gps_data();
		printf("result = %d \n",a);
     41a:	c0 e5       	ldi	r28, 0x50	; 80
     41c:	d2 e0       	ldi	r29, 0x02	; 2
	
	 while (1)
	 {	
		
			
		printf("input a number\n");
     41e:	86 e3       	ldi	r24, 0x36	; 54
     420:	92 e0       	ldi	r25, 0x02	; 2
     422:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
		scanf("%d",&data);
     426:	ff 92       	push	r15
     428:	ef 92       	push	r14
     42a:	1f 93       	push	r17
     42c:	0f 93       	push	r16
     42e:	0e 94 09 03 	call	0x612	; 0x612 <scanf>
		printf("thanks \n");
     432:	88 e4       	ldi	r24, 0x48	; 72
     434:	92 e0       	ldi	r25, 0x02	; 2
     436:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
		
		char a=update_gps_data();
     43a:	0e 94 47 02 	call	0x48e	; 0x48e <update_gps_data>
		printf("result = %d \n",a);
     43e:	1f 92       	push	r1
     440:	8f 93       	push	r24
     442:	df 93       	push	r29
     444:	cf 93       	push	r28
     446:	0e 94 c3 02 	call	0x586	; 0x586 <printf>
     44a:	8d b7       	in	r24, 0x3d	; 61
     44c:	9e b7       	in	r25, 0x3e	; 62
     44e:	08 96       	adiw	r24, 0x08	; 8
     450:	0f b6       	in	r0, 0x3f	; 63
     452:	f8 94       	cli
     454:	9e bf       	out	0x3e, r25	; 62
     456:	0f be       	out	0x3f, r0	; 63
     458:	8d bf       	out	0x3d, r24	; 61
     45a:	e1 cf       	rjmp	.-62     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>

0000045c <cal_checksum>:

Gps_data Gps;


int cal_checksum(int value, char length)
{
     45c:	fc 01       	movw	r30, r24
	 char array[length];
     45e:	70 e0       	ldi	r23, 0x00	; 0
     460:	9b 01       	movw	r18, r22
     462:	21 50       	subi	r18, 0x01	; 1
     464:	31 09       	sbc	r19, r1
	 char Checksum=0;
	 for (int i=0; i<length; i++)
     466:	16 16       	cp	r1, r22
     468:	17 06       	cpc	r1, r23
     46a:	74 f4       	brge	.+28     	; 0x488 <cal_checksum+0x2c>
     46c:	80 e0       	ldi	r24, 0x00	; 0
	 {   array[i] = 0;
		 array[i]= (value>>((length-1)-i)) & 1;
		 Checksum^=array[i];
     46e:	af 01       	movw	r20, r30
     470:	02 2e       	mov	r0, r18
     472:	02 c0       	rjmp	.+4      	; 0x478 <cal_checksum+0x1c>
     474:	55 95       	asr	r21
     476:	47 95       	ror	r20
     478:	0a 94       	dec	r0
     47a:	e2 f7       	brpl	.-8      	; 0x474 <cal_checksum+0x18>
     47c:	41 70       	andi	r20, 0x01	; 1
     47e:	84 27       	eor	r24, r20
     480:	21 50       	subi	r18, 0x01	; 1
     482:	31 09       	sbc	r19, r1
     484:	a0 f7       	brcc	.-24     	; 0x46e <cal_checksum+0x12>
     486:	01 c0       	rjmp	.+2      	; 0x48a <cal_checksum+0x2e>


int cal_checksum(int value, char length)
{
	 char array[length];
	 char Checksum=0;
     488:	80 e0       	ldi	r24, 0x00	; 0
	 {   array[i] = 0;
		 array[i]= (value>>((length-1)-i)) & 1;
		 Checksum^=array[i];
	 }	
	return Checksum;
}
     48a:	90 e0       	ldi	r25, 0x00	; 0
     48c:	08 95       	ret

0000048e <update_gps_data>:



char update_gps_data (void)
{	
     48e:	1f 93       	push	r17
     490:	cf 93       	push	r28
     492:	df 93       	push	r29
	Gps_data New_data;
	char checksum_cal;
	
	New_data.status = get_data_8bit(Device_status, GPS_address);
     494:	60 e4       	ldi	r22, 0x40	; 64
     496:	81 e0       	ldi	r24, 0x01	; 1
     498:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <get_data_8bit>
     49c:	ec 01       	movw	r28, r24
	New_data.checksum = get_data_8bit(data_check, GPS_address);
     49e:	60 e4       	ldi	r22, 0x40	; 64
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <get_data_8bit>
     4a6:	18 2f       	mov	r17, r24
	checksum_cal=cal_checksum(New_data.status, 8);
     4a8:	68 e0       	ldi	r22, 0x08	; 8
     4aa:	ce 01       	movw	r24, r28
     4ac:	0e 94 2e 02 	call	0x45c	; 0x45c <cal_checksum>
	
	

	
	if (((New_data.status==1))&&(checksum_cal==New_data.checksum))
     4b0:	21 97       	sbiw	r28, 0x01	; 1
     4b2:	51 f5       	brne	.+84     	; 0x508 <update_gps_data+0x7a>
     4b4:	18 13       	cpse	r17, r24
     4b6:	2a c0       	rjmp	.+84     	; 0x50c <update_gps_data+0x7e>
	{

		Gps.status=New_data.status;
     4b8:	81 e0       	ldi	r24, 0x01	; 1
     4ba:	90 e0       	ldi	r25, 0x00	; 0
     4bc:	90 93 97 02 	sts	0x0297, r25	; 0x800297 <Gps+0x1>
     4c0:	80 93 96 02 	sts	0x0296, r24	; 0x800296 <Gps>
		printf("Status messgae was ok \n");
     4c4:	8e e5       	ldi	r24, 0x5E	; 94
     4c6:	92 e0       	ldi	r25, 0x02	; 2
     4c8:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
	    New_data.direction = get_data_int(Direction, GPS_address);
     4cc:	60 e4       	ldi	r22, 0x40	; 64
     4ce:	82 e0       	ldi	r24, 0x02	; 2
     4d0:	0e 94 3c 01 	call	0x278	; 0x278 <get_data_int>
     4d4:	ec 01       	movw	r28, r24
		New_data.checksum = get_data_8bit(data_check, GPS_address);
     4d6:	60 e4       	ldi	r22, 0x40	; 64
     4d8:	80 e0       	ldi	r24, 0x00	; 0
     4da:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <get_data_8bit>
     4de:	18 2f       	mov	r17, r24
		checksum_cal=cal_checksum(New_data.direction, 16);
     4e0:	60 e1       	ldi	r22, 0x10	; 16
     4e2:	ce 01       	movw	r24, r28
     4e4:	0e 94 2e 02 	call	0x45c	; 0x45c <cal_checksum>
		
	
		if ((!(New_data.direction==-1))&&(checksum_cal==New_data.checksum))
     4e8:	cf 3f       	cpi	r28, 0xFF	; 255
     4ea:	9f ef       	ldi	r25, 0xFF	; 255
     4ec:	d9 07       	cpc	r29, r25
     4ee:	81 f0       	breq	.+32     	; 0x510 <update_gps_data+0x82>
     4f0:	18 13       	cpse	r17, r24
     4f2:	10 c0       	rjmp	.+32     	; 0x514 <update_gps_data+0x86>
		{
			
			Gps.direction=New_data.direction;
     4f4:	d0 93 99 02 	sts	0x0299, r29	; 0x800299 <Gps+0x3>
     4f8:	c0 93 98 02 	sts	0x0298, r28	; 0x800298 <Gps+0x2>
			printf("direction  messgae was ok \n");
     4fc:	85 e7       	ldi	r24, 0x75	; 117
     4fe:	92 e0       	ldi	r25, 0x02	; 2
     500:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <puts>
			return 1;
     504:	81 e0       	ldi	r24, 0x01	; 1
     506:	07 c0       	rjmp	.+14     	; 0x516 <update_gps_data+0x88>
		//	}
		}
			
	}

return 0;	
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	05 c0       	rjmp	.+10     	; 0x516 <update_gps_data+0x88>
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	03 c0       	rjmp	.+6      	; 0x516 <update_gps_data+0x88>
     510:	80 e0       	ldi	r24, 0x00	; 0
     512:	01 c0       	rjmp	.+2      	; 0x516 <update_gps_data+0x88>
     514:	80 e0       	ldi	r24, 0x00	; 0
}
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	1f 91       	pop	r17
     51c:	08 95       	ret

0000051e <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
     51e:	cf 93       	push	r28
     520:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     522:	8a 30       	cpi	r24, 0x0A	; 10
     524:	19 f4       	brne	.+6      	; 0x52c <uart_putchar+0xe>
		uart_putchar('\r', stream);
     526:	8d e0       	ldi	r24, 0x0D	; 13
     528:	0e 94 8f 02 	call	0x51e	; 0x51e <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     52c:	e0 ec       	ldi	r30, 0xC0	; 192
     52e:	f0 e0       	ldi	r31, 0x00	; 0
     530:	80 81       	ld	r24, Z
     532:	85 ff       	sbrs	r24, 5
     534:	fd cf       	rjmp	.-6      	; 0x530 <uart_putchar+0x12>
	UDR0 = c;
     536:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     53a:	cf 91       	pop	r28
     53c:	08 95       	ret

0000053e <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     53e:	e0 ec       	ldi	r30, 0xC0	; 192
     540:	f0 e0       	ldi	r31, 0x00	; 0
     542:	80 81       	ld	r24, Z
     544:	88 23       	and	r24, r24
     546:	ec f7       	brge	.-6      	; 0x542 <uart_getchar+0x4>
	return UDR0;
     548:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     54c:	08 95       	ret

0000054e <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     54e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
     552:	87 e6       	ldi	r24, 0x67	; 103
     554:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     558:	e0 ec       	ldi	r30, 0xC0	; 192
     55a:	f0 e0       	ldi	r31, 0x00	; 0
     55c:	80 81       	ld	r24, Z
     55e:	8d 7f       	andi	r24, 0xFD	; 253
     560:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     562:	86 e0       	ldi	r24, 0x06	; 6
     564:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     568:	88 e1       	ldi	r24, 0x18	; 24
     56a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     56e:	08 95       	ret

00000570 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
     570:	ed e9       	ldi	r30, 0x9D	; 157
     572:	f2 e0       	ldi	r31, 0x02	; 2
     574:	8e e0       	ldi	r24, 0x0E	; 14
     576:	91 e0       	ldi	r25, 0x01	; 1
     578:	93 83       	std	Z+3, r25	; 0x03
     57a:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
     57c:	80 e0       	ldi	r24, 0x00	; 0
     57e:	91 e0       	ldi	r25, 0x01	; 1
     580:	91 83       	std	Z+1, r25	; 0x01
     582:	80 83       	st	Z, r24
     584:	08 95       	ret

00000586 <printf>:
     586:	a0 e0       	ldi	r26, 0x00	; 0
     588:	b0 e0       	ldi	r27, 0x00	; 0
     58a:	e9 ec       	ldi	r30, 0xC9	; 201
     58c:	f2 e0       	ldi	r31, 0x02	; 2
     58e:	0c 94 db 08 	jmp	0x11b6	; 0x11b6 <__prologue_saves__+0x20>
     592:	ae 01       	movw	r20, r28
     594:	4b 5f       	subi	r20, 0xFB	; 251
     596:	5f 4f       	sbci	r21, 0xFF	; 255
     598:	fa 01       	movw	r30, r20
     59a:	61 91       	ld	r22, Z+
     59c:	71 91       	ld	r23, Z+
     59e:	af 01       	movw	r20, r30
     5a0:	80 91 9f 02 	lds	r24, 0x029F	; 0x80029f <__iob+0x2>
     5a4:	90 91 a0 02 	lds	r25, 0x02A0	; 0x8002a0 <__iob+0x3>
     5a8:	0e 94 1f 03 	call	0x63e	; 0x63e <vfprintf>
     5ac:	e2 e0       	ldi	r30, 0x02	; 2
     5ae:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__epilogue_restores__+0x20>

000005b2 <puts>:
     5b2:	0f 93       	push	r16
     5b4:	1f 93       	push	r17
     5b6:	cf 93       	push	r28
     5b8:	df 93       	push	r29
     5ba:	e0 91 9f 02 	lds	r30, 0x029F	; 0x80029f <__iob+0x2>
     5be:	f0 91 a0 02 	lds	r31, 0x02A0	; 0x8002a0 <__iob+0x3>
     5c2:	23 81       	ldd	r18, Z+3	; 0x03
     5c4:	21 ff       	sbrs	r18, 1
     5c6:	1b c0       	rjmp	.+54     	; 0x5fe <puts+0x4c>
     5c8:	8c 01       	movw	r16, r24
     5ca:	d0 e0       	ldi	r29, 0x00	; 0
     5cc:	c0 e0       	ldi	r28, 0x00	; 0
     5ce:	f8 01       	movw	r30, r16
     5d0:	81 91       	ld	r24, Z+
     5d2:	8f 01       	movw	r16, r30
     5d4:	60 91 9f 02 	lds	r22, 0x029F	; 0x80029f <__iob+0x2>
     5d8:	70 91 a0 02 	lds	r23, 0x02A0	; 0x8002a0 <__iob+0x3>
     5dc:	db 01       	movw	r26, r22
     5de:	18 96       	adiw	r26, 0x08	; 8
     5e0:	ed 91       	ld	r30, X+
     5e2:	fc 91       	ld	r31, X
     5e4:	19 97       	sbiw	r26, 0x09	; 9
     5e6:	88 23       	and	r24, r24
     5e8:	31 f0       	breq	.+12     	; 0x5f6 <puts+0x44>
     5ea:	09 95       	icall
     5ec:	89 2b       	or	r24, r25
     5ee:	79 f3       	breq	.-34     	; 0x5ce <puts+0x1c>
     5f0:	df ef       	ldi	r29, 0xFF	; 255
     5f2:	cf ef       	ldi	r28, 0xFF	; 255
     5f4:	ec cf       	rjmp	.-40     	; 0x5ce <puts+0x1c>
     5f6:	8a e0       	ldi	r24, 0x0A	; 10
     5f8:	09 95       	icall
     5fa:	89 2b       	or	r24, r25
     5fc:	19 f0       	breq	.+6      	; 0x604 <puts+0x52>
     5fe:	8f ef       	ldi	r24, 0xFF	; 255
     600:	9f ef       	ldi	r25, 0xFF	; 255
     602:	02 c0       	rjmp	.+4      	; 0x608 <puts+0x56>
     604:	8d 2f       	mov	r24, r29
     606:	9c 2f       	mov	r25, r28
     608:	df 91       	pop	r29
     60a:	cf 91       	pop	r28
     60c:	1f 91       	pop	r17
     60e:	0f 91       	pop	r16
     610:	08 95       	ret

00000612 <scanf>:
     612:	a0 e0       	ldi	r26, 0x00	; 0
     614:	b0 e0       	ldi	r27, 0x00	; 0
     616:	ef e0       	ldi	r30, 0x0F	; 15
     618:	f3 e0       	ldi	r31, 0x03	; 3
     61a:	0c 94 db 08 	jmp	0x11b6	; 0x11b6 <__prologue_saves__+0x20>
     61e:	ae 01       	movw	r20, r28
     620:	4b 5f       	subi	r20, 0xFB	; 251
     622:	5f 4f       	sbci	r21, 0xFF	; 255
     624:	fa 01       	movw	r30, r20
     626:	61 91       	ld	r22, Z+
     628:	71 91       	ld	r23, Z+
     62a:	af 01       	movw	r20, r30
     62c:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <__iob>
     630:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <__iob+0x1>
     634:	0e 94 9c 06 	call	0xd38	; 0xd38 <vfscanf>
     638:	e2 e0       	ldi	r30, 0x02	; 2
     63a:	0c 94 f7 08 	jmp	0x11ee	; 0x11ee <__epilogue_restores__+0x20>

0000063e <vfprintf>:
     63e:	ab e0       	ldi	r26, 0x0B	; 11
     640:	b0 e0       	ldi	r27, 0x00	; 0
     642:	e5 e2       	ldi	r30, 0x25	; 37
     644:	f3 e0       	ldi	r31, 0x03	; 3
     646:	0c 94 cb 08 	jmp	0x1196	; 0x1196 <__prologue_saves__>
     64a:	6c 01       	movw	r12, r24
     64c:	7b 01       	movw	r14, r22
     64e:	8a 01       	movw	r16, r20
     650:	fc 01       	movw	r30, r24
     652:	17 82       	std	Z+7, r1	; 0x07
     654:	16 82       	std	Z+6, r1	; 0x06
     656:	83 81       	ldd	r24, Z+3	; 0x03
     658:	81 ff       	sbrs	r24, 1
     65a:	cc c1       	rjmp	.+920    	; 0x9f4 <__stack+0xf5>
     65c:	ce 01       	movw	r24, r28
     65e:	01 96       	adiw	r24, 0x01	; 1
     660:	3c 01       	movw	r6, r24
     662:	f6 01       	movw	r30, r12
     664:	93 81       	ldd	r25, Z+3	; 0x03
     666:	f7 01       	movw	r30, r14
     668:	93 fd       	sbrc	r25, 3
     66a:	85 91       	lpm	r24, Z+
     66c:	93 ff       	sbrs	r25, 3
     66e:	81 91       	ld	r24, Z+
     670:	7f 01       	movw	r14, r30
     672:	88 23       	and	r24, r24
     674:	09 f4       	brne	.+2      	; 0x678 <vfprintf+0x3a>
     676:	ba c1       	rjmp	.+884    	; 0x9ec <__stack+0xed>
     678:	85 32       	cpi	r24, 0x25	; 37
     67a:	39 f4       	brne	.+14     	; 0x68a <vfprintf+0x4c>
     67c:	93 fd       	sbrc	r25, 3
     67e:	85 91       	lpm	r24, Z+
     680:	93 ff       	sbrs	r25, 3
     682:	81 91       	ld	r24, Z+
     684:	7f 01       	movw	r14, r30
     686:	85 32       	cpi	r24, 0x25	; 37
     688:	29 f4       	brne	.+10     	; 0x694 <vfprintf+0x56>
     68a:	b6 01       	movw	r22, r12
     68c:	90 e0       	ldi	r25, 0x00	; 0
     68e:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     692:	e7 cf       	rjmp	.-50     	; 0x662 <vfprintf+0x24>
     694:	91 2c       	mov	r9, r1
     696:	21 2c       	mov	r2, r1
     698:	31 2c       	mov	r3, r1
     69a:	ff e1       	ldi	r31, 0x1F	; 31
     69c:	f3 15       	cp	r31, r3
     69e:	d8 f0       	brcs	.+54     	; 0x6d6 <vfprintf+0x98>
     6a0:	8b 32       	cpi	r24, 0x2B	; 43
     6a2:	79 f0       	breq	.+30     	; 0x6c2 <vfprintf+0x84>
     6a4:	38 f4       	brcc	.+14     	; 0x6b4 <vfprintf+0x76>
     6a6:	80 32       	cpi	r24, 0x20	; 32
     6a8:	79 f0       	breq	.+30     	; 0x6c8 <vfprintf+0x8a>
     6aa:	83 32       	cpi	r24, 0x23	; 35
     6ac:	a1 f4       	brne	.+40     	; 0x6d6 <vfprintf+0x98>
     6ae:	23 2d       	mov	r18, r3
     6b0:	20 61       	ori	r18, 0x10	; 16
     6b2:	1d c0       	rjmp	.+58     	; 0x6ee <vfprintf+0xb0>
     6b4:	8d 32       	cpi	r24, 0x2D	; 45
     6b6:	61 f0       	breq	.+24     	; 0x6d0 <vfprintf+0x92>
     6b8:	80 33       	cpi	r24, 0x30	; 48
     6ba:	69 f4       	brne	.+26     	; 0x6d6 <vfprintf+0x98>
     6bc:	23 2d       	mov	r18, r3
     6be:	21 60       	ori	r18, 0x01	; 1
     6c0:	16 c0       	rjmp	.+44     	; 0x6ee <vfprintf+0xb0>
     6c2:	83 2d       	mov	r24, r3
     6c4:	82 60       	ori	r24, 0x02	; 2
     6c6:	38 2e       	mov	r3, r24
     6c8:	e3 2d       	mov	r30, r3
     6ca:	e4 60       	ori	r30, 0x04	; 4
     6cc:	3e 2e       	mov	r3, r30
     6ce:	2a c0       	rjmp	.+84     	; 0x724 <vfprintf+0xe6>
     6d0:	f3 2d       	mov	r31, r3
     6d2:	f8 60       	ori	r31, 0x08	; 8
     6d4:	1d c0       	rjmp	.+58     	; 0x710 <vfprintf+0xd2>
     6d6:	37 fc       	sbrc	r3, 7
     6d8:	2d c0       	rjmp	.+90     	; 0x734 <vfprintf+0xf6>
     6da:	20 ed       	ldi	r18, 0xD0	; 208
     6dc:	28 0f       	add	r18, r24
     6de:	2a 30       	cpi	r18, 0x0A	; 10
     6e0:	40 f0       	brcs	.+16     	; 0x6f2 <vfprintf+0xb4>
     6e2:	8e 32       	cpi	r24, 0x2E	; 46
     6e4:	b9 f4       	brne	.+46     	; 0x714 <vfprintf+0xd6>
     6e6:	36 fc       	sbrc	r3, 6
     6e8:	81 c1       	rjmp	.+770    	; 0x9ec <__stack+0xed>
     6ea:	23 2d       	mov	r18, r3
     6ec:	20 64       	ori	r18, 0x40	; 64
     6ee:	32 2e       	mov	r3, r18
     6f0:	19 c0       	rjmp	.+50     	; 0x724 <vfprintf+0xe6>
     6f2:	36 fe       	sbrs	r3, 6
     6f4:	06 c0       	rjmp	.+12     	; 0x702 <vfprintf+0xc4>
     6f6:	8a e0       	ldi	r24, 0x0A	; 10
     6f8:	98 9e       	mul	r9, r24
     6fa:	20 0d       	add	r18, r0
     6fc:	11 24       	eor	r1, r1
     6fe:	92 2e       	mov	r9, r18
     700:	11 c0       	rjmp	.+34     	; 0x724 <vfprintf+0xe6>
     702:	ea e0       	ldi	r30, 0x0A	; 10
     704:	2e 9e       	mul	r2, r30
     706:	20 0d       	add	r18, r0
     708:	11 24       	eor	r1, r1
     70a:	22 2e       	mov	r2, r18
     70c:	f3 2d       	mov	r31, r3
     70e:	f0 62       	ori	r31, 0x20	; 32
     710:	3f 2e       	mov	r3, r31
     712:	08 c0       	rjmp	.+16     	; 0x724 <vfprintf+0xe6>
     714:	8c 36       	cpi	r24, 0x6C	; 108
     716:	21 f4       	brne	.+8      	; 0x720 <vfprintf+0xe2>
     718:	83 2d       	mov	r24, r3
     71a:	80 68       	ori	r24, 0x80	; 128
     71c:	38 2e       	mov	r3, r24
     71e:	02 c0       	rjmp	.+4      	; 0x724 <vfprintf+0xe6>
     720:	88 36       	cpi	r24, 0x68	; 104
     722:	41 f4       	brne	.+16     	; 0x734 <vfprintf+0xf6>
     724:	f7 01       	movw	r30, r14
     726:	93 fd       	sbrc	r25, 3
     728:	85 91       	lpm	r24, Z+
     72a:	93 ff       	sbrs	r25, 3
     72c:	81 91       	ld	r24, Z+
     72e:	7f 01       	movw	r14, r30
     730:	81 11       	cpse	r24, r1
     732:	b3 cf       	rjmp	.-154    	; 0x69a <vfprintf+0x5c>
     734:	98 2f       	mov	r25, r24
     736:	9f 7d       	andi	r25, 0xDF	; 223
     738:	95 54       	subi	r25, 0x45	; 69
     73a:	93 30       	cpi	r25, 0x03	; 3
     73c:	28 f4       	brcc	.+10     	; 0x748 <vfprintf+0x10a>
     73e:	0c 5f       	subi	r16, 0xFC	; 252
     740:	1f 4f       	sbci	r17, 0xFF	; 255
     742:	9f e3       	ldi	r25, 0x3F	; 63
     744:	99 83       	std	Y+1, r25	; 0x01
     746:	0d c0       	rjmp	.+26     	; 0x762 <vfprintf+0x124>
     748:	83 36       	cpi	r24, 0x63	; 99
     74a:	31 f0       	breq	.+12     	; 0x758 <vfprintf+0x11a>
     74c:	83 37       	cpi	r24, 0x73	; 115
     74e:	71 f0       	breq	.+28     	; 0x76c <vfprintf+0x12e>
     750:	83 35       	cpi	r24, 0x53	; 83
     752:	09 f0       	breq	.+2      	; 0x756 <vfprintf+0x118>
     754:	59 c0       	rjmp	.+178    	; 0x808 <vfprintf+0x1ca>
     756:	21 c0       	rjmp	.+66     	; 0x79a <vfprintf+0x15c>
     758:	f8 01       	movw	r30, r16
     75a:	80 81       	ld	r24, Z
     75c:	89 83       	std	Y+1, r24	; 0x01
     75e:	0e 5f       	subi	r16, 0xFE	; 254
     760:	1f 4f       	sbci	r17, 0xFF	; 255
     762:	88 24       	eor	r8, r8
     764:	83 94       	inc	r8
     766:	91 2c       	mov	r9, r1
     768:	53 01       	movw	r10, r6
     76a:	13 c0       	rjmp	.+38     	; 0x792 <vfprintf+0x154>
     76c:	28 01       	movw	r4, r16
     76e:	f2 e0       	ldi	r31, 0x02	; 2
     770:	4f 0e       	add	r4, r31
     772:	51 1c       	adc	r5, r1
     774:	f8 01       	movw	r30, r16
     776:	a0 80       	ld	r10, Z
     778:	b1 80       	ldd	r11, Z+1	; 0x01
     77a:	36 fe       	sbrs	r3, 6
     77c:	03 c0       	rjmp	.+6      	; 0x784 <vfprintf+0x146>
     77e:	69 2d       	mov	r22, r9
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	02 c0       	rjmp	.+4      	; 0x788 <vfprintf+0x14a>
     784:	6f ef       	ldi	r22, 0xFF	; 255
     786:	7f ef       	ldi	r23, 0xFF	; 255
     788:	c5 01       	movw	r24, r10
     78a:	0e 94 cc 07 	call	0xf98	; 0xf98 <strnlen>
     78e:	4c 01       	movw	r8, r24
     790:	82 01       	movw	r16, r4
     792:	f3 2d       	mov	r31, r3
     794:	ff 77       	andi	r31, 0x7F	; 127
     796:	3f 2e       	mov	r3, r31
     798:	16 c0       	rjmp	.+44     	; 0x7c6 <vfprintf+0x188>
     79a:	28 01       	movw	r4, r16
     79c:	22 e0       	ldi	r18, 0x02	; 2
     79e:	42 0e       	add	r4, r18
     7a0:	51 1c       	adc	r5, r1
     7a2:	f8 01       	movw	r30, r16
     7a4:	a0 80       	ld	r10, Z
     7a6:	b1 80       	ldd	r11, Z+1	; 0x01
     7a8:	36 fe       	sbrs	r3, 6
     7aa:	03 c0       	rjmp	.+6      	; 0x7b2 <vfprintf+0x174>
     7ac:	69 2d       	mov	r22, r9
     7ae:	70 e0       	ldi	r23, 0x00	; 0
     7b0:	02 c0       	rjmp	.+4      	; 0x7b6 <vfprintf+0x178>
     7b2:	6f ef       	ldi	r22, 0xFF	; 255
     7b4:	7f ef       	ldi	r23, 0xFF	; 255
     7b6:	c5 01       	movw	r24, r10
     7b8:	0e 94 c1 07 	call	0xf82	; 0xf82 <strnlen_P>
     7bc:	4c 01       	movw	r8, r24
     7be:	f3 2d       	mov	r31, r3
     7c0:	f0 68       	ori	r31, 0x80	; 128
     7c2:	3f 2e       	mov	r3, r31
     7c4:	82 01       	movw	r16, r4
     7c6:	33 fc       	sbrc	r3, 3
     7c8:	1b c0       	rjmp	.+54     	; 0x800 <vfprintf+0x1c2>
     7ca:	82 2d       	mov	r24, r2
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	88 16       	cp	r8, r24
     7d0:	99 06       	cpc	r9, r25
     7d2:	b0 f4       	brcc	.+44     	; 0x800 <vfprintf+0x1c2>
     7d4:	b6 01       	movw	r22, r12
     7d6:	80 e2       	ldi	r24, 0x20	; 32
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     7de:	2a 94       	dec	r2
     7e0:	f4 cf       	rjmp	.-24     	; 0x7ca <vfprintf+0x18c>
     7e2:	f5 01       	movw	r30, r10
     7e4:	37 fc       	sbrc	r3, 7
     7e6:	85 91       	lpm	r24, Z+
     7e8:	37 fe       	sbrs	r3, 7
     7ea:	81 91       	ld	r24, Z+
     7ec:	5f 01       	movw	r10, r30
     7ee:	b6 01       	movw	r22, r12
     7f0:	90 e0       	ldi	r25, 0x00	; 0
     7f2:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     7f6:	21 10       	cpse	r2, r1
     7f8:	2a 94       	dec	r2
     7fa:	21 e0       	ldi	r18, 0x01	; 1
     7fc:	82 1a       	sub	r8, r18
     7fe:	91 08       	sbc	r9, r1
     800:	81 14       	cp	r8, r1
     802:	91 04       	cpc	r9, r1
     804:	71 f7       	brne	.-36     	; 0x7e2 <vfprintf+0x1a4>
     806:	e8 c0       	rjmp	.+464    	; 0x9d8 <__stack+0xd9>
     808:	84 36       	cpi	r24, 0x64	; 100
     80a:	11 f0       	breq	.+4      	; 0x810 <vfprintf+0x1d2>
     80c:	89 36       	cpi	r24, 0x69	; 105
     80e:	41 f5       	brne	.+80     	; 0x860 <vfprintf+0x222>
     810:	f8 01       	movw	r30, r16
     812:	37 fe       	sbrs	r3, 7
     814:	07 c0       	rjmp	.+14     	; 0x824 <vfprintf+0x1e6>
     816:	60 81       	ld	r22, Z
     818:	71 81       	ldd	r23, Z+1	; 0x01
     81a:	82 81       	ldd	r24, Z+2	; 0x02
     81c:	93 81       	ldd	r25, Z+3	; 0x03
     81e:	0c 5f       	subi	r16, 0xFC	; 252
     820:	1f 4f       	sbci	r17, 0xFF	; 255
     822:	08 c0       	rjmp	.+16     	; 0x834 <vfprintf+0x1f6>
     824:	60 81       	ld	r22, Z
     826:	71 81       	ldd	r23, Z+1	; 0x01
     828:	07 2e       	mov	r0, r23
     82a:	00 0c       	add	r0, r0
     82c:	88 0b       	sbc	r24, r24
     82e:	99 0b       	sbc	r25, r25
     830:	0e 5f       	subi	r16, 0xFE	; 254
     832:	1f 4f       	sbci	r17, 0xFF	; 255
     834:	f3 2d       	mov	r31, r3
     836:	ff 76       	andi	r31, 0x6F	; 111
     838:	3f 2e       	mov	r3, r31
     83a:	97 ff       	sbrs	r25, 7
     83c:	09 c0       	rjmp	.+18     	; 0x850 <vfprintf+0x212>
     83e:	90 95       	com	r25
     840:	80 95       	com	r24
     842:	70 95       	com	r23
     844:	61 95       	neg	r22
     846:	7f 4f       	sbci	r23, 0xFF	; 255
     848:	8f 4f       	sbci	r24, 0xFF	; 255
     84a:	9f 4f       	sbci	r25, 0xFF	; 255
     84c:	f0 68       	ori	r31, 0x80	; 128
     84e:	3f 2e       	mov	r3, r31
     850:	2a e0       	ldi	r18, 0x0A	; 10
     852:	30 e0       	ldi	r19, 0x00	; 0
     854:	a3 01       	movw	r20, r6
     856:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <__ultoa_invert>
     85a:	88 2e       	mov	r8, r24
     85c:	86 18       	sub	r8, r6
     85e:	45 c0       	rjmp	.+138    	; 0x8ea <vfprintf+0x2ac>
     860:	85 37       	cpi	r24, 0x75	; 117
     862:	31 f4       	brne	.+12     	; 0x870 <vfprintf+0x232>
     864:	23 2d       	mov	r18, r3
     866:	2f 7e       	andi	r18, 0xEF	; 239
     868:	b2 2e       	mov	r11, r18
     86a:	2a e0       	ldi	r18, 0x0A	; 10
     86c:	30 e0       	ldi	r19, 0x00	; 0
     86e:	25 c0       	rjmp	.+74     	; 0x8ba <vfprintf+0x27c>
     870:	93 2d       	mov	r25, r3
     872:	99 7f       	andi	r25, 0xF9	; 249
     874:	b9 2e       	mov	r11, r25
     876:	8f 36       	cpi	r24, 0x6F	; 111
     878:	c1 f0       	breq	.+48     	; 0x8aa <vfprintf+0x26c>
     87a:	18 f4       	brcc	.+6      	; 0x882 <vfprintf+0x244>
     87c:	88 35       	cpi	r24, 0x58	; 88
     87e:	79 f0       	breq	.+30     	; 0x89e <vfprintf+0x260>
     880:	b5 c0       	rjmp	.+362    	; 0x9ec <__stack+0xed>
     882:	80 37       	cpi	r24, 0x70	; 112
     884:	19 f0       	breq	.+6      	; 0x88c <vfprintf+0x24e>
     886:	88 37       	cpi	r24, 0x78	; 120
     888:	21 f0       	breq	.+8      	; 0x892 <vfprintf+0x254>
     88a:	b0 c0       	rjmp	.+352    	; 0x9ec <__stack+0xed>
     88c:	e9 2f       	mov	r30, r25
     88e:	e0 61       	ori	r30, 0x10	; 16
     890:	be 2e       	mov	r11, r30
     892:	b4 fe       	sbrs	r11, 4
     894:	0d c0       	rjmp	.+26     	; 0x8b0 <vfprintf+0x272>
     896:	fb 2d       	mov	r31, r11
     898:	f4 60       	ori	r31, 0x04	; 4
     89a:	bf 2e       	mov	r11, r31
     89c:	09 c0       	rjmp	.+18     	; 0x8b0 <vfprintf+0x272>
     89e:	34 fe       	sbrs	r3, 4
     8a0:	0a c0       	rjmp	.+20     	; 0x8b6 <vfprintf+0x278>
     8a2:	29 2f       	mov	r18, r25
     8a4:	26 60       	ori	r18, 0x06	; 6
     8a6:	b2 2e       	mov	r11, r18
     8a8:	06 c0       	rjmp	.+12     	; 0x8b6 <vfprintf+0x278>
     8aa:	28 e0       	ldi	r18, 0x08	; 8
     8ac:	30 e0       	ldi	r19, 0x00	; 0
     8ae:	05 c0       	rjmp	.+10     	; 0x8ba <vfprintf+0x27c>
     8b0:	20 e1       	ldi	r18, 0x10	; 16
     8b2:	30 e0       	ldi	r19, 0x00	; 0
     8b4:	02 c0       	rjmp	.+4      	; 0x8ba <vfprintf+0x27c>
     8b6:	20 e1       	ldi	r18, 0x10	; 16
     8b8:	32 e0       	ldi	r19, 0x02	; 2
     8ba:	f8 01       	movw	r30, r16
     8bc:	b7 fe       	sbrs	r11, 7
     8be:	07 c0       	rjmp	.+14     	; 0x8ce <vfprintf+0x290>
     8c0:	60 81       	ld	r22, Z
     8c2:	71 81       	ldd	r23, Z+1	; 0x01
     8c4:	82 81       	ldd	r24, Z+2	; 0x02
     8c6:	93 81       	ldd	r25, Z+3	; 0x03
     8c8:	0c 5f       	subi	r16, 0xFC	; 252
     8ca:	1f 4f       	sbci	r17, 0xFF	; 255
     8cc:	06 c0       	rjmp	.+12     	; 0x8da <vfprintf+0x29c>
     8ce:	60 81       	ld	r22, Z
     8d0:	71 81       	ldd	r23, Z+1	; 0x01
     8d2:	80 e0       	ldi	r24, 0x00	; 0
     8d4:	90 e0       	ldi	r25, 0x00	; 0
     8d6:	0e 5f       	subi	r16, 0xFE	; 254
     8d8:	1f 4f       	sbci	r17, 0xFF	; 255
     8da:	a3 01       	movw	r20, r6
     8dc:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <__ultoa_invert>
     8e0:	88 2e       	mov	r8, r24
     8e2:	86 18       	sub	r8, r6
     8e4:	fb 2d       	mov	r31, r11
     8e6:	ff 77       	andi	r31, 0x7F	; 127
     8e8:	3f 2e       	mov	r3, r31
     8ea:	36 fe       	sbrs	r3, 6
     8ec:	0d c0       	rjmp	.+26     	; 0x908 <__stack+0x9>
     8ee:	23 2d       	mov	r18, r3
     8f0:	2e 7f       	andi	r18, 0xFE	; 254
     8f2:	a2 2e       	mov	r10, r18
     8f4:	89 14       	cp	r8, r9
     8f6:	58 f4       	brcc	.+22     	; 0x90e <__stack+0xf>
     8f8:	34 fe       	sbrs	r3, 4
     8fa:	0b c0       	rjmp	.+22     	; 0x912 <__stack+0x13>
     8fc:	32 fc       	sbrc	r3, 2
     8fe:	09 c0       	rjmp	.+18     	; 0x912 <__stack+0x13>
     900:	83 2d       	mov	r24, r3
     902:	8e 7e       	andi	r24, 0xEE	; 238
     904:	a8 2e       	mov	r10, r24
     906:	05 c0       	rjmp	.+10     	; 0x912 <__stack+0x13>
     908:	b8 2c       	mov	r11, r8
     90a:	a3 2c       	mov	r10, r3
     90c:	03 c0       	rjmp	.+6      	; 0x914 <__stack+0x15>
     90e:	b8 2c       	mov	r11, r8
     910:	01 c0       	rjmp	.+2      	; 0x914 <__stack+0x15>
     912:	b9 2c       	mov	r11, r9
     914:	a4 fe       	sbrs	r10, 4
     916:	0f c0       	rjmp	.+30     	; 0x936 <__stack+0x37>
     918:	fe 01       	movw	r30, r28
     91a:	e8 0d       	add	r30, r8
     91c:	f1 1d       	adc	r31, r1
     91e:	80 81       	ld	r24, Z
     920:	80 33       	cpi	r24, 0x30	; 48
     922:	21 f4       	brne	.+8      	; 0x92c <__stack+0x2d>
     924:	9a 2d       	mov	r25, r10
     926:	99 7e       	andi	r25, 0xE9	; 233
     928:	a9 2e       	mov	r10, r25
     92a:	09 c0       	rjmp	.+18     	; 0x93e <__stack+0x3f>
     92c:	a2 fe       	sbrs	r10, 2
     92e:	06 c0       	rjmp	.+12     	; 0x93c <__stack+0x3d>
     930:	b3 94       	inc	r11
     932:	b3 94       	inc	r11
     934:	04 c0       	rjmp	.+8      	; 0x93e <__stack+0x3f>
     936:	8a 2d       	mov	r24, r10
     938:	86 78       	andi	r24, 0x86	; 134
     93a:	09 f0       	breq	.+2      	; 0x93e <__stack+0x3f>
     93c:	b3 94       	inc	r11
     93e:	a3 fc       	sbrc	r10, 3
     940:	11 c0       	rjmp	.+34     	; 0x964 <__stack+0x65>
     942:	a0 fe       	sbrs	r10, 0
     944:	06 c0       	rjmp	.+12     	; 0x952 <__stack+0x53>
     946:	b2 14       	cp	r11, r2
     948:	88 f4       	brcc	.+34     	; 0x96c <__stack+0x6d>
     94a:	28 0c       	add	r2, r8
     94c:	92 2c       	mov	r9, r2
     94e:	9b 18       	sub	r9, r11
     950:	0e c0       	rjmp	.+28     	; 0x96e <__stack+0x6f>
     952:	b2 14       	cp	r11, r2
     954:	60 f4       	brcc	.+24     	; 0x96e <__stack+0x6f>
     956:	b6 01       	movw	r22, r12
     958:	80 e2       	ldi	r24, 0x20	; 32
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     960:	b3 94       	inc	r11
     962:	f7 cf       	rjmp	.-18     	; 0x952 <__stack+0x53>
     964:	b2 14       	cp	r11, r2
     966:	18 f4       	brcc	.+6      	; 0x96e <__stack+0x6f>
     968:	2b 18       	sub	r2, r11
     96a:	02 c0       	rjmp	.+4      	; 0x970 <__stack+0x71>
     96c:	98 2c       	mov	r9, r8
     96e:	21 2c       	mov	r2, r1
     970:	a4 fe       	sbrs	r10, 4
     972:	10 c0       	rjmp	.+32     	; 0x994 <__stack+0x95>
     974:	b6 01       	movw	r22, r12
     976:	80 e3       	ldi	r24, 0x30	; 48
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     97e:	a2 fe       	sbrs	r10, 2
     980:	17 c0       	rjmp	.+46     	; 0x9b0 <__stack+0xb1>
     982:	a1 fc       	sbrc	r10, 1
     984:	03 c0       	rjmp	.+6      	; 0x98c <__stack+0x8d>
     986:	88 e7       	ldi	r24, 0x78	; 120
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	02 c0       	rjmp	.+4      	; 0x990 <__stack+0x91>
     98c:	88 e5       	ldi	r24, 0x58	; 88
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	b6 01       	movw	r22, r12
     992:	0c c0       	rjmp	.+24     	; 0x9ac <__stack+0xad>
     994:	8a 2d       	mov	r24, r10
     996:	86 78       	andi	r24, 0x86	; 134
     998:	59 f0       	breq	.+22     	; 0x9b0 <__stack+0xb1>
     99a:	a1 fe       	sbrs	r10, 1
     99c:	02 c0       	rjmp	.+4      	; 0x9a2 <__stack+0xa3>
     99e:	8b e2       	ldi	r24, 0x2B	; 43
     9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <__stack+0xa5>
     9a2:	80 e2       	ldi	r24, 0x20	; 32
     9a4:	a7 fc       	sbrc	r10, 7
     9a6:	8d e2       	ldi	r24, 0x2D	; 45
     9a8:	b6 01       	movw	r22, r12
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     9b0:	89 14       	cp	r8, r9
     9b2:	38 f4       	brcc	.+14     	; 0x9c2 <__stack+0xc3>
     9b4:	b6 01       	movw	r22, r12
     9b6:	80 e3       	ldi	r24, 0x30	; 48
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     9be:	9a 94       	dec	r9
     9c0:	f7 cf       	rjmp	.-18     	; 0x9b0 <__stack+0xb1>
     9c2:	8a 94       	dec	r8
     9c4:	f3 01       	movw	r30, r6
     9c6:	e8 0d       	add	r30, r8
     9c8:	f1 1d       	adc	r31, r1
     9ca:	80 81       	ld	r24, Z
     9cc:	b6 01       	movw	r22, r12
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     9d4:	81 10       	cpse	r8, r1
     9d6:	f5 cf       	rjmp	.-22     	; 0x9c2 <__stack+0xc3>
     9d8:	22 20       	and	r2, r2
     9da:	09 f4       	brne	.+2      	; 0x9de <__stack+0xdf>
     9dc:	42 ce       	rjmp	.-892    	; 0x662 <vfprintf+0x24>
     9de:	b6 01       	movw	r22, r12
     9e0:	80 e2       	ldi	r24, 0x20	; 32
     9e2:	90 e0       	ldi	r25, 0x00	; 0
     9e4:	0e 94 15 08 	call	0x102a	; 0x102a <fputc>
     9e8:	2a 94       	dec	r2
     9ea:	f6 cf       	rjmp	.-20     	; 0x9d8 <__stack+0xd9>
     9ec:	f6 01       	movw	r30, r12
     9ee:	86 81       	ldd	r24, Z+6	; 0x06
     9f0:	97 81       	ldd	r25, Z+7	; 0x07
     9f2:	02 c0       	rjmp	.+4      	; 0x9f8 <__stack+0xf9>
     9f4:	8f ef       	ldi	r24, 0xFF	; 255
     9f6:	9f ef       	ldi	r25, 0xFF	; 255
     9f8:	2b 96       	adiw	r28, 0x0b	; 11
     9fa:	e2 e1       	ldi	r30, 0x12	; 18
     9fc:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__epilogue_restores__>

00000a00 <putval>:
     a00:	20 fd       	sbrc	r18, 0
     a02:	09 c0       	rjmp	.+18     	; 0xa16 <putval+0x16>
     a04:	fc 01       	movw	r30, r24
     a06:	23 fd       	sbrc	r18, 3
     a08:	05 c0       	rjmp	.+10     	; 0xa14 <putval+0x14>
     a0a:	22 ff       	sbrs	r18, 2
     a0c:	02 c0       	rjmp	.+4      	; 0xa12 <putval+0x12>
     a0e:	73 83       	std	Z+3, r23	; 0x03
     a10:	62 83       	std	Z+2, r22	; 0x02
     a12:	51 83       	std	Z+1, r21	; 0x01
     a14:	40 83       	st	Z, r20
     a16:	08 95       	ret

00000a18 <mulacc>:
     a18:	44 fd       	sbrc	r20, 4
     a1a:	17 c0       	rjmp	.+46     	; 0xa4a <mulacc+0x32>
     a1c:	46 fd       	sbrc	r20, 6
     a1e:	17 c0       	rjmp	.+46     	; 0xa4e <mulacc+0x36>
     a20:	ab 01       	movw	r20, r22
     a22:	bc 01       	movw	r22, r24
     a24:	da 01       	movw	r26, r20
     a26:	fb 01       	movw	r30, r22
     a28:	aa 0f       	add	r26, r26
     a2a:	bb 1f       	adc	r27, r27
     a2c:	ee 1f       	adc	r30, r30
     a2e:	ff 1f       	adc	r31, r31
     a30:	10 94       	com	r1
     a32:	d1 f7       	brne	.-12     	; 0xa28 <mulacc+0x10>
     a34:	4a 0f       	add	r20, r26
     a36:	5b 1f       	adc	r21, r27
     a38:	6e 1f       	adc	r22, r30
     a3a:	7f 1f       	adc	r23, r31
     a3c:	cb 01       	movw	r24, r22
     a3e:	ba 01       	movw	r22, r20
     a40:	66 0f       	add	r22, r22
     a42:	77 1f       	adc	r23, r23
     a44:	88 1f       	adc	r24, r24
     a46:	99 1f       	adc	r25, r25
     a48:	09 c0       	rjmp	.+18     	; 0xa5c <mulacc+0x44>
     a4a:	33 e0       	ldi	r19, 0x03	; 3
     a4c:	01 c0       	rjmp	.+2      	; 0xa50 <mulacc+0x38>
     a4e:	34 e0       	ldi	r19, 0x04	; 4
     a50:	66 0f       	add	r22, r22
     a52:	77 1f       	adc	r23, r23
     a54:	88 1f       	adc	r24, r24
     a56:	99 1f       	adc	r25, r25
     a58:	31 50       	subi	r19, 0x01	; 1
     a5a:	d1 f7       	brne	.-12     	; 0xa50 <mulacc+0x38>
     a5c:	62 0f       	add	r22, r18
     a5e:	71 1d       	adc	r23, r1
     a60:	81 1d       	adc	r24, r1
     a62:	91 1d       	adc	r25, r1
     a64:	08 95       	ret

00000a66 <skip_spaces>:
     a66:	0f 93       	push	r16
     a68:	1f 93       	push	r17
     a6a:	cf 93       	push	r28
     a6c:	df 93       	push	r29
     a6e:	8c 01       	movw	r16, r24
     a70:	c8 01       	movw	r24, r16
     a72:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     a76:	ec 01       	movw	r28, r24
     a78:	97 fd       	sbrc	r25, 7
     a7a:	08 c0       	rjmp	.+16     	; 0xa8c <skip_spaces+0x26>
     a7c:	0e 94 ad 07 	call	0xf5a	; 0xf5a <isspace>
     a80:	89 2b       	or	r24, r25
     a82:	b1 f7       	brne	.-20     	; 0xa70 <skip_spaces+0xa>
     a84:	b8 01       	movw	r22, r16
     a86:	ce 01       	movw	r24, r28
     a88:	0e 94 51 08 	call	0x10a2	; 0x10a2 <ungetc>
     a8c:	ce 01       	movw	r24, r28
     a8e:	df 91       	pop	r29
     a90:	cf 91       	pop	r28
     a92:	1f 91       	pop	r17
     a94:	0f 91       	pop	r16
     a96:	08 95       	ret

00000a98 <conv_int>:
     a98:	8f 92       	push	r8
     a9a:	9f 92       	push	r9
     a9c:	af 92       	push	r10
     a9e:	bf 92       	push	r11
     aa0:	ef 92       	push	r14
     aa2:	ff 92       	push	r15
     aa4:	0f 93       	push	r16
     aa6:	1f 93       	push	r17
     aa8:	cf 93       	push	r28
     aaa:	df 93       	push	r29
     aac:	8c 01       	movw	r16, r24
     aae:	d6 2f       	mov	r29, r22
     ab0:	7a 01       	movw	r14, r20
     ab2:	b2 2e       	mov	r11, r18
     ab4:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     ab8:	9c 01       	movw	r18, r24
     aba:	33 27       	eor	r19, r19
     abc:	2b 32       	cpi	r18, 0x2B	; 43
     abe:	31 05       	cpc	r19, r1
     ac0:	31 f0       	breq	.+12     	; 0xace <conv_int+0x36>
     ac2:	2d 32       	cpi	r18, 0x2D	; 45
     ac4:	31 05       	cpc	r19, r1
     ac6:	61 f4       	brne	.+24     	; 0xae0 <conv_int+0x48>
     ac8:	8b 2d       	mov	r24, r11
     aca:	80 68       	ori	r24, 0x80	; 128
     acc:	b8 2e       	mov	r11, r24
     ace:	d1 50       	subi	r29, 0x01	; 1
     ad0:	11 f4       	brne	.+4      	; 0xad6 <conv_int+0x3e>
     ad2:	80 e0       	ldi	r24, 0x00	; 0
     ad4:	68 c0       	rjmp	.+208    	; 0xba6 <conv_int+0x10e>
     ad6:	c8 01       	movw	r24, r16
     ad8:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     adc:	97 fd       	sbrc	r25, 7
     ade:	f9 cf       	rjmp	.-14     	; 0xad2 <conv_int+0x3a>
     ae0:	cb 2d       	mov	r28, r11
     ae2:	cd 7f       	andi	r28, 0xFD	; 253
     ae4:	2b 2d       	mov	r18, r11
     ae6:	20 73       	andi	r18, 0x30	; 48
     ae8:	09 f5       	brne	.+66     	; 0xb2c <conv_int+0x94>
     aea:	80 33       	cpi	r24, 0x30	; 48
     aec:	f9 f4       	brne	.+62     	; 0xb2c <conv_int+0x94>
     aee:	aa 24       	eor	r10, r10
     af0:	aa 94       	dec	r10
     af2:	ad 0e       	add	r10, r29
     af4:	09 f4       	brne	.+2      	; 0xaf8 <conv_int+0x60>
     af6:	43 c0       	rjmp	.+134    	; 0xb7e <conv_int+0xe6>
     af8:	c8 01       	movw	r24, r16
     afa:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     afe:	97 fd       	sbrc	r25, 7
     b00:	3e c0       	rjmp	.+124    	; 0xb7e <conv_int+0xe6>
     b02:	9c 01       	movw	r18, r24
     b04:	2f 7d       	andi	r18, 0xDF	; 223
     b06:	33 27       	eor	r19, r19
     b08:	28 35       	cpi	r18, 0x58	; 88
     b0a:	31 05       	cpc	r19, r1
     b0c:	49 f4       	brne	.+18     	; 0xb20 <conv_int+0x88>
     b0e:	c2 64       	ori	r28, 0x42	; 66
     b10:	d2 50       	subi	r29, 0x02	; 2
     b12:	a9 f1       	breq	.+106    	; 0xb7e <conv_int+0xe6>
     b14:	c8 01       	movw	r24, r16
     b16:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     b1a:	97 ff       	sbrs	r25, 7
     b1c:	07 c0       	rjmp	.+14     	; 0xb2c <conv_int+0x94>
     b1e:	2f c0       	rjmp	.+94     	; 0xb7e <conv_int+0xe6>
     b20:	b6 fe       	sbrs	r11, 6
     b22:	02 c0       	rjmp	.+4      	; 0xb28 <conv_int+0x90>
     b24:	c2 60       	ori	r28, 0x02	; 2
     b26:	01 c0       	rjmp	.+2      	; 0xb2a <conv_int+0x92>
     b28:	c2 61       	ori	r28, 0x12	; 18
     b2a:	da 2d       	mov	r29, r10
     b2c:	81 2c       	mov	r8, r1
     b2e:	91 2c       	mov	r9, r1
     b30:	54 01       	movw	r10, r8
     b32:	20 ed       	ldi	r18, 0xD0	; 208
     b34:	28 0f       	add	r18, r24
     b36:	28 30       	cpi	r18, 0x08	; 8
     b38:	80 f0       	brcs	.+32     	; 0xb5a <conv_int+0xc2>
     b3a:	c4 ff       	sbrs	r28, 4
     b3c:	04 c0       	rjmp	.+8      	; 0xb46 <conv_int+0xae>
     b3e:	b8 01       	movw	r22, r16
     b40:	0e 94 51 08 	call	0x10a2	; 0x10a2 <ungetc>
     b44:	19 c0       	rjmp	.+50     	; 0xb78 <conv_int+0xe0>
     b46:	2a 30       	cpi	r18, 0x0A	; 10
     b48:	40 f0       	brcs	.+16     	; 0xb5a <conv_int+0xc2>
     b4a:	c6 ff       	sbrs	r28, 6
     b4c:	f8 cf       	rjmp	.-16     	; 0xb3e <conv_int+0xa6>
     b4e:	2f 7d       	andi	r18, 0xDF	; 223
     b50:	3f ee       	ldi	r19, 0xEF	; 239
     b52:	32 0f       	add	r19, r18
     b54:	36 30       	cpi	r19, 0x06	; 6
     b56:	98 f7       	brcc	.-26     	; 0xb3e <conv_int+0xa6>
     b58:	27 50       	subi	r18, 0x07	; 7
     b5a:	4c 2f       	mov	r20, r28
     b5c:	c5 01       	movw	r24, r10
     b5e:	b4 01       	movw	r22, r8
     b60:	0e 94 0c 05 	call	0xa18	; 0xa18 <mulacc>
     b64:	4b 01       	movw	r8, r22
     b66:	5c 01       	movw	r10, r24
     b68:	c2 60       	ori	r28, 0x02	; 2
     b6a:	d1 50       	subi	r29, 0x01	; 1
     b6c:	59 f0       	breq	.+22     	; 0xb84 <conv_int+0xec>
     b6e:	c8 01       	movw	r24, r16
     b70:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     b74:	97 ff       	sbrs	r25, 7
     b76:	dd cf       	rjmp	.-70     	; 0xb32 <conv_int+0x9a>
     b78:	c1 fd       	sbrc	r28, 1
     b7a:	04 c0       	rjmp	.+8      	; 0xb84 <conv_int+0xec>
     b7c:	aa cf       	rjmp	.-172    	; 0xad2 <conv_int+0x3a>
     b7e:	81 2c       	mov	r8, r1
     b80:	91 2c       	mov	r9, r1
     b82:	54 01       	movw	r10, r8
     b84:	c7 ff       	sbrs	r28, 7
     b86:	08 c0       	rjmp	.+16     	; 0xb98 <conv_int+0x100>
     b88:	b0 94       	com	r11
     b8a:	a0 94       	com	r10
     b8c:	90 94       	com	r9
     b8e:	80 94       	com	r8
     b90:	81 1c       	adc	r8, r1
     b92:	91 1c       	adc	r9, r1
     b94:	a1 1c       	adc	r10, r1
     b96:	b1 1c       	adc	r11, r1
     b98:	2c 2f       	mov	r18, r28
     b9a:	b5 01       	movw	r22, r10
     b9c:	a4 01       	movw	r20, r8
     b9e:	c7 01       	movw	r24, r14
     ba0:	0e 94 00 05 	call	0xa00	; 0xa00 <putval>
     ba4:	81 e0       	ldi	r24, 0x01	; 1
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	1f 91       	pop	r17
     bac:	0f 91       	pop	r16
     bae:	ff 90       	pop	r15
     bb0:	ef 90       	pop	r14
     bb2:	bf 90       	pop	r11
     bb4:	af 90       	pop	r10
     bb6:	9f 90       	pop	r9
     bb8:	8f 90       	pop	r8
     bba:	08 95       	ret

00000bbc <conv_brk>:
     bbc:	a0 e2       	ldi	r26, 0x20	; 32
     bbe:	b0 e0       	ldi	r27, 0x00	; 0
     bc0:	e4 ee       	ldi	r30, 0xE4	; 228
     bc2:	f5 e0       	ldi	r31, 0x05	; 5
     bc4:	0c 94 ce 08 	jmp	0x119c	; 0x119c <__prologue_saves__+0x6>
     bc8:	5c 01       	movw	r10, r24
     bca:	96 2e       	mov	r9, r22
     bcc:	7a 01       	movw	r14, r20
     bce:	f9 01       	movw	r30, r18
     bd0:	8e 01       	movw	r16, r28
     bd2:	0f 5f       	subi	r16, 0xFF	; 255
     bd4:	1f 4f       	sbci	r17, 0xFF	; 255
     bd6:	68 01       	movw	r12, r16
     bd8:	80 e2       	ldi	r24, 0x20	; 32
     bda:	d8 01       	movw	r26, r16
     bdc:	1d 92       	st	X+, r1
     bde:	8a 95       	dec	r24
     be0:	e9 f7       	brne	.-6      	; 0xbdc <conv_brk+0x20>
     be2:	d5 01       	movw	r26, r10
     be4:	13 96       	adiw	r26, 0x03	; 3
     be6:	8c 90       	ld	r8, X
     be8:	80 e0       	ldi	r24, 0x00	; 0
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	61 2c       	mov	r6, r1
     bee:	71 2c       	mov	r7, r1
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	61 e0       	ldi	r22, 0x01	; 1
     bf4:	70 e0       	ldi	r23, 0x00	; 0
     bf6:	83 fc       	sbrc	r8, 3
     bf8:	25 91       	lpm	r18, Z+
     bfa:	83 fe       	sbrs	r8, 3
     bfc:	21 91       	ld	r18, Z+
     bfe:	8f 01       	movw	r16, r30
     c00:	52 2e       	mov	r5, r18
     c02:	21 11       	cpse	r18, r1
     c04:	03 c0       	rjmp	.+6      	; 0xc0c <conv_brk+0x50>
     c06:	80 e0       	ldi	r24, 0x00	; 0
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	92 c0       	rjmp	.+292    	; 0xd30 <conv_brk+0x174>
     c0c:	2e 35       	cpi	r18, 0x5E	; 94
     c0e:	11 f4       	brne	.+4      	; 0xc14 <conv_brk+0x58>
     c10:	00 97       	sbiw	r24, 0x00	; 0
     c12:	51 f1       	breq	.+84     	; 0xc68 <conv_brk+0xac>
     c14:	43 2f       	mov	r20, r19
     c16:	50 e0       	ldi	r21, 0x00	; 0
     c18:	48 17       	cp	r20, r24
     c1a:	59 07       	cpc	r21, r25
     c1c:	3c f4       	brge	.+14     	; 0xc2c <conv_brk+0x70>
     c1e:	2d 35       	cpi	r18, 0x5D	; 93
     c20:	59 f1       	breq	.+86     	; 0xc78 <conv_brk+0xbc>
     c22:	2d 32       	cpi	r18, 0x2D	; 45
     c24:	19 f4       	brne	.+6      	; 0xc2c <conv_brk+0x70>
     c26:	77 20       	and	r7, r7
     c28:	09 f1       	breq	.+66     	; 0xc6c <conv_brk+0xb0>
     c2a:	03 c0       	rjmp	.+6      	; 0xc32 <conv_brk+0x76>
     c2c:	77 20       	and	r7, r7
     c2e:	09 f4       	brne	.+2      	; 0xc32 <conv_brk+0x76>
     c30:	6a c0       	rjmp	.+212    	; 0xd06 <conv_brk+0x14a>
     c32:	45 2d       	mov	r20, r5
     c34:	46 95       	lsr	r20
     c36:	46 95       	lsr	r20
     c38:	46 95       	lsr	r20
     c3a:	d6 01       	movw	r26, r12
     c3c:	a4 0f       	add	r26, r20
     c3e:	b1 1d       	adc	r27, r1
     c40:	45 2d       	mov	r20, r5
     c42:	47 70       	andi	r20, 0x07	; 7
     c44:	8b 01       	movw	r16, r22
     c46:	02 c0       	rjmp	.+4      	; 0xc4c <conv_brk+0x90>
     c48:	00 0f       	add	r16, r16
     c4a:	11 1f       	adc	r17, r17
     c4c:	4a 95       	dec	r20
     c4e:	e2 f7       	brpl	.-8      	; 0xc48 <conv_brk+0x8c>
     c50:	a8 01       	movw	r20, r16
     c52:	5c 91       	ld	r21, X
     c54:	45 2b       	or	r20, r21
     c56:	4c 93       	st	X, r20
     c58:	65 14       	cp	r6, r5
     c5a:	59 f0       	breq	.+22     	; 0xc72 <conv_brk+0xb6>
     c5c:	56 14       	cp	r5, r6
     c5e:	10 f4       	brcc	.+4      	; 0xc64 <conv_brk+0xa8>
     c60:	53 94       	inc	r5
     c62:	e7 cf       	rjmp	.-50     	; 0xc32 <conv_brk+0x76>
     c64:	5a 94       	dec	r5
     c66:	e5 cf       	rjmp	.-54     	; 0xc32 <conv_brk+0x76>
     c68:	31 e0       	ldi	r19, 0x01	; 1
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <conv_brk+0xb8>
     c6c:	77 24       	eor	r7, r7
     c6e:	73 94       	inc	r7
     c70:	01 c0       	rjmp	.+2      	; 0xc74 <conv_brk+0xb8>
     c72:	71 2c       	mov	r7, r1
     c74:	01 96       	adiw	r24, 0x01	; 1
     c76:	bf cf       	rjmp	.-130    	; 0xbf6 <conv_brk+0x3a>
     c78:	77 20       	and	r7, r7
     c7a:	19 f0       	breq	.+6      	; 0xc82 <conv_brk+0xc6>
     c7c:	8e 81       	ldd	r24, Y+6	; 0x06
     c7e:	80 62       	ori	r24, 0x20	; 32
     c80:	8e 83       	std	Y+6, r24	; 0x06
     c82:	31 11       	cpse	r19, r1
     c84:	03 c0       	rjmp	.+6      	; 0xc8c <conv_brk+0xd0>
     c86:	88 24       	eor	r8, r8
     c88:	83 94       	inc	r8
     c8a:	17 c0       	rjmp	.+46     	; 0xcba <conv_brk+0xfe>
     c8c:	f6 01       	movw	r30, r12
     c8e:	9e 01       	movw	r18, r28
     c90:	2f 5d       	subi	r18, 0xDF	; 223
     c92:	3f 4f       	sbci	r19, 0xFF	; 255
     c94:	80 81       	ld	r24, Z
     c96:	80 95       	com	r24
     c98:	81 93       	st	Z+, r24
     c9a:	2e 17       	cp	r18, r30
     c9c:	3f 07       	cpc	r19, r31
     c9e:	d1 f7       	brne	.-12     	; 0xc94 <conv_brk+0xd8>
     ca0:	f2 cf       	rjmp	.-28     	; 0xc86 <conv_brk+0xca>
     ca2:	e1 14       	cp	r14, r1
     ca4:	f1 04       	cpc	r15, r1
     ca6:	29 f0       	breq	.+10     	; 0xcb2 <conv_brk+0xf6>
     ca8:	d7 01       	movw	r26, r14
     caa:	8c 93       	st	X, r24
     cac:	f7 01       	movw	r30, r14
     cae:	31 96       	adiw	r30, 0x01	; 1
     cb0:	7f 01       	movw	r14, r30
     cb2:	9a 94       	dec	r9
     cb4:	81 2c       	mov	r8, r1
     cb6:	99 20       	and	r9, r9
     cb8:	f9 f0       	breq	.+62     	; 0xcf8 <conv_brk+0x13c>
     cba:	c5 01       	movw	r24, r10
     cbc:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     cc0:	97 fd       	sbrc	r25, 7
     cc2:	18 c0       	rjmp	.+48     	; 0xcf4 <conv_brk+0x138>
     cc4:	fc 01       	movw	r30, r24
     cc6:	ff 27       	eor	r31, r31
     cc8:	23 e0       	ldi	r18, 0x03	; 3
     cca:	f5 95       	asr	r31
     ccc:	e7 95       	ror	r30
     cce:	2a 95       	dec	r18
     cd0:	e1 f7       	brne	.-8      	; 0xcca <conv_brk+0x10e>
     cd2:	ec 0d       	add	r30, r12
     cd4:	fd 1d       	adc	r31, r13
     cd6:	20 81       	ld	r18, Z
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	ac 01       	movw	r20, r24
     cdc:	47 70       	andi	r20, 0x07	; 7
     cde:	55 27       	eor	r21, r21
     ce0:	02 c0       	rjmp	.+4      	; 0xce6 <conv_brk+0x12a>
     ce2:	35 95       	asr	r19
     ce4:	27 95       	ror	r18
     ce6:	4a 95       	dec	r20
     ce8:	e2 f7       	brpl	.-8      	; 0xce2 <conv_brk+0x126>
     cea:	20 fd       	sbrc	r18, 0
     cec:	da cf       	rjmp	.-76     	; 0xca2 <conv_brk+0xe6>
     cee:	b5 01       	movw	r22, r10
     cf0:	0e 94 51 08 	call	0x10a2	; 0x10a2 <ungetc>
     cf4:	81 10       	cpse	r8, r1
     cf6:	87 cf       	rjmp	.-242    	; 0xc06 <conv_brk+0x4a>
     cf8:	e1 14       	cp	r14, r1
     cfa:	f1 04       	cpc	r15, r1
     cfc:	11 f0       	breq	.+4      	; 0xd02 <conv_brk+0x146>
     cfe:	d7 01       	movw	r26, r14
     d00:	1c 92       	st	X, r1
     d02:	c8 01       	movw	r24, r16
     d04:	15 c0       	rjmp	.+42     	; 0xd30 <conv_brk+0x174>
     d06:	42 2f       	mov	r20, r18
     d08:	46 95       	lsr	r20
     d0a:	46 95       	lsr	r20
     d0c:	46 95       	lsr	r20
     d0e:	d6 01       	movw	r26, r12
     d10:	a4 0f       	add	r26, r20
     d12:	b1 1d       	adc	r27, r1
     d14:	42 2f       	mov	r20, r18
     d16:	47 70       	andi	r20, 0x07	; 7
     d18:	8b 01       	movw	r16, r22
     d1a:	02 c0       	rjmp	.+4      	; 0xd20 <conv_brk+0x164>
     d1c:	00 0f       	add	r16, r16
     d1e:	11 1f       	adc	r17, r17
     d20:	4a 95       	dec	r20
     d22:	e2 f7       	brpl	.-8      	; 0xd1c <conv_brk+0x160>
     d24:	a8 01       	movw	r20, r16
     d26:	5c 91       	ld	r21, X
     d28:	45 2b       	or	r20, r21
     d2a:	4c 93       	st	X, r20
     d2c:	62 2e       	mov	r6, r18
     d2e:	a2 cf       	rjmp	.-188    	; 0xc74 <conv_brk+0xb8>
     d30:	a0 96       	adiw	r28, 0x20	; 32
     d32:	ef e0       	ldi	r30, 0x0F	; 15
     d34:	0c 94 ea 08 	jmp	0x11d4	; 0x11d4 <__epilogue_restores__+0x6>

00000d38 <vfscanf>:
     d38:	a0 e0       	ldi	r26, 0x00	; 0
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	e2 ea       	ldi	r30, 0xA2	; 162
     d3e:	f6 e0       	ldi	r31, 0x06	; 6
     d40:	0c 94 ce 08 	jmp	0x119c	; 0x119c <__prologue_saves__+0x6>
     d44:	6c 01       	movw	r12, r24
     d46:	eb 01       	movw	r28, r22
     d48:	5a 01       	movw	r10, r20
     d4a:	fc 01       	movw	r30, r24
     d4c:	17 82       	std	Z+7, r1	; 0x07
     d4e:	16 82       	std	Z+6, r1	; 0x06
     d50:	51 2c       	mov	r5, r1
     d52:	f6 01       	movw	r30, r12
     d54:	e3 80       	ldd	r14, Z+3	; 0x03
     d56:	fe 01       	movw	r30, r28
     d58:	e3 fc       	sbrc	r14, 3
     d5a:	85 91       	lpm	r24, Z+
     d5c:	e3 fe       	sbrs	r14, 3
     d5e:	81 91       	ld	r24, Z+
     d60:	18 2f       	mov	r17, r24
     d62:	ef 01       	movw	r28, r30
     d64:	88 23       	and	r24, r24
     d66:	09 f4       	brne	.+2      	; 0xd6a <vfscanf+0x32>
     d68:	ee c0       	rjmp	.+476    	; 0xf46 <vfscanf+0x20e>
     d6a:	90 e0       	ldi	r25, 0x00	; 0
     d6c:	0e 94 ad 07 	call	0xf5a	; 0xf5a <isspace>
     d70:	89 2b       	or	r24, r25
     d72:	21 f0       	breq	.+8      	; 0xd7c <vfscanf+0x44>
     d74:	c6 01       	movw	r24, r12
     d76:	0e 94 33 05 	call	0xa66	; 0xa66 <skip_spaces>
     d7a:	eb cf       	rjmp	.-42     	; 0xd52 <vfscanf+0x1a>
     d7c:	15 32       	cpi	r17, 0x25	; 37
     d7e:	41 f4       	brne	.+16     	; 0xd90 <vfscanf+0x58>
     d80:	fe 01       	movw	r30, r28
     d82:	e3 fc       	sbrc	r14, 3
     d84:	15 91       	lpm	r17, Z+
     d86:	e3 fe       	sbrs	r14, 3
     d88:	11 91       	ld	r17, Z+
     d8a:	ef 01       	movw	r28, r30
     d8c:	15 32       	cpi	r17, 0x25	; 37
     d8e:	81 f4       	brne	.+32     	; 0xdb0 <vfscanf+0x78>
     d90:	c6 01       	movw	r24, r12
     d92:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     d96:	97 fd       	sbrc	r25, 7
     d98:	d4 c0       	rjmp	.+424    	; 0xf42 <vfscanf+0x20a>
     d9a:	41 2f       	mov	r20, r17
     d9c:	50 e0       	ldi	r21, 0x00	; 0
     d9e:	9c 01       	movw	r18, r24
     da0:	33 27       	eor	r19, r19
     da2:	24 17       	cp	r18, r20
     da4:	35 07       	cpc	r19, r21
     da6:	a9 f2       	breq	.-86     	; 0xd52 <vfscanf+0x1a>
     da8:	b6 01       	movw	r22, r12
     daa:	0e 94 51 08 	call	0x10a2	; 0x10a2 <ungetc>
     dae:	cb c0       	rjmp	.+406    	; 0xf46 <vfscanf+0x20e>
     db0:	1a 32       	cpi	r17, 0x2A	; 42
     db2:	39 f4       	brne	.+14     	; 0xdc2 <vfscanf+0x8a>
     db4:	e3 fc       	sbrc	r14, 3
     db6:	15 91       	lpm	r17, Z+
     db8:	e3 fe       	sbrs	r14, 3
     dba:	11 91       	ld	r17, Z+
     dbc:	ef 01       	movw	r28, r30
     dbe:	01 e0       	ldi	r16, 0x01	; 1
     dc0:	01 c0       	rjmp	.+2      	; 0xdc4 <vfscanf+0x8c>
     dc2:	00 e0       	ldi	r16, 0x00	; 0
     dc4:	f1 2c       	mov	r15, r1
     dc6:	20 ed       	ldi	r18, 0xD0	; 208
     dc8:	21 0f       	add	r18, r17
     dca:	2a 30       	cpi	r18, 0x0A	; 10
     dcc:	80 f4       	brcc	.+32     	; 0xdee <vfscanf+0xb6>
     dce:	02 60       	ori	r16, 0x02	; 2
     dd0:	6f 2d       	mov	r22, r15
     dd2:	70 e0       	ldi	r23, 0x00	; 0
     dd4:	80 e0       	ldi	r24, 0x00	; 0
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	40 e2       	ldi	r20, 0x20	; 32
     dda:	0e 94 0c 05 	call	0xa18	; 0xa18 <mulacc>
     dde:	f6 2e       	mov	r15, r22
     de0:	fe 01       	movw	r30, r28
     de2:	e3 fc       	sbrc	r14, 3
     de4:	15 91       	lpm	r17, Z+
     de6:	e3 fe       	sbrs	r14, 3
     de8:	11 91       	ld	r17, Z+
     dea:	ef 01       	movw	r28, r30
     dec:	ec cf       	rjmp	.-40     	; 0xdc6 <vfscanf+0x8e>
     dee:	01 ff       	sbrs	r16, 1
     df0:	03 c0       	rjmp	.+6      	; 0xdf8 <vfscanf+0xc0>
     df2:	f1 10       	cpse	r15, r1
     df4:	03 c0       	rjmp	.+6      	; 0xdfc <vfscanf+0xc4>
     df6:	a7 c0       	rjmp	.+334    	; 0xf46 <vfscanf+0x20e>
     df8:	ff 24       	eor	r15, r15
     dfa:	fa 94       	dec	r15
     dfc:	18 36       	cpi	r17, 0x68	; 104
     dfe:	19 f0       	breq	.+6      	; 0xe06 <vfscanf+0xce>
     e00:	1c 36       	cpi	r17, 0x6C	; 108
     e02:	51 f0       	breq	.+20     	; 0xe18 <vfscanf+0xe0>
     e04:	10 c0       	rjmp	.+32     	; 0xe26 <vfscanf+0xee>
     e06:	fe 01       	movw	r30, r28
     e08:	e3 fc       	sbrc	r14, 3
     e0a:	15 91       	lpm	r17, Z+
     e0c:	e3 fe       	sbrs	r14, 3
     e0e:	11 91       	ld	r17, Z+
     e10:	ef 01       	movw	r28, r30
     e12:	18 36       	cpi	r17, 0x68	; 104
     e14:	41 f4       	brne	.+16     	; 0xe26 <vfscanf+0xee>
     e16:	08 60       	ori	r16, 0x08	; 8
     e18:	04 60       	ori	r16, 0x04	; 4
     e1a:	fe 01       	movw	r30, r28
     e1c:	e3 fc       	sbrc	r14, 3
     e1e:	15 91       	lpm	r17, Z+
     e20:	e3 fe       	sbrs	r14, 3
     e22:	11 91       	ld	r17, Z+
     e24:	ef 01       	movw	r28, r30
     e26:	11 23       	and	r17, r17
     e28:	09 f4       	brne	.+2      	; 0xe2c <vfscanf+0xf4>
     e2a:	8d c0       	rjmp	.+282    	; 0xf46 <vfscanf+0x20e>
     e2c:	61 2f       	mov	r22, r17
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	88 e6       	ldi	r24, 0x68	; 104
     e32:	90 e0       	ldi	r25, 0x00	; 0
     e34:	0e 94 b6 07 	call	0xf6c	; 0xf6c <strchr_P>
     e38:	89 2b       	or	r24, r25
     e3a:	09 f4       	brne	.+2      	; 0xe3e <vfscanf+0x106>
     e3c:	84 c0       	rjmp	.+264    	; 0xf46 <vfscanf+0x20e>
     e3e:	00 fd       	sbrc	r16, 0
     e40:	07 c0       	rjmp	.+14     	; 0xe50 <vfscanf+0x118>
     e42:	f5 01       	movw	r30, r10
     e44:	80 80       	ld	r8, Z
     e46:	91 80       	ldd	r9, Z+1	; 0x01
     e48:	c5 01       	movw	r24, r10
     e4a:	02 96       	adiw	r24, 0x02	; 2
     e4c:	5c 01       	movw	r10, r24
     e4e:	02 c0       	rjmp	.+4      	; 0xe54 <vfscanf+0x11c>
     e50:	81 2c       	mov	r8, r1
     e52:	91 2c       	mov	r9, r1
     e54:	1e 36       	cpi	r17, 0x6E	; 110
     e56:	51 f4       	brne	.+20     	; 0xe6c <vfscanf+0x134>
     e58:	f6 01       	movw	r30, r12
     e5a:	46 81       	ldd	r20, Z+6	; 0x06
     e5c:	57 81       	ldd	r21, Z+7	; 0x07
     e5e:	60 e0       	ldi	r22, 0x00	; 0
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	20 2f       	mov	r18, r16
     e64:	c4 01       	movw	r24, r8
     e66:	0e 94 00 05 	call	0xa00	; 0xa00 <putval>
     e6a:	73 cf       	rjmp	.-282    	; 0xd52 <vfscanf+0x1a>
     e6c:	13 36       	cpi	r17, 0x63	; 99
     e6e:	a9 f4       	brne	.+42     	; 0xe9a <vfscanf+0x162>
     e70:	01 fd       	sbrc	r16, 1
     e72:	02 c0       	rjmp	.+4      	; 0xe78 <vfscanf+0x140>
     e74:	ff 24       	eor	r15, r15
     e76:	f3 94       	inc	r15
     e78:	c6 01       	movw	r24, r12
     e7a:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     e7e:	97 fd       	sbrc	r25, 7
     e80:	60 c0       	rjmp	.+192    	; 0xf42 <vfscanf+0x20a>
     e82:	81 14       	cp	r8, r1
     e84:	91 04       	cpc	r9, r1
     e86:	29 f0       	breq	.+10     	; 0xe92 <vfscanf+0x15a>
     e88:	f4 01       	movw	r30, r8
     e8a:	80 83       	st	Z, r24
     e8c:	c4 01       	movw	r24, r8
     e8e:	01 96       	adiw	r24, 0x01	; 1
     e90:	4c 01       	movw	r8, r24
     e92:	fa 94       	dec	r15
     e94:	f1 10       	cpse	r15, r1
     e96:	f0 cf       	rjmp	.-32     	; 0xe78 <vfscanf+0x140>
     e98:	50 c0       	rjmp	.+160    	; 0xf3a <vfscanf+0x202>
     e9a:	1b 35       	cpi	r17, 0x5B	; 91
     e9c:	59 f4       	brne	.+22     	; 0xeb4 <vfscanf+0x17c>
     e9e:	9e 01       	movw	r18, r28
     ea0:	a4 01       	movw	r20, r8
     ea2:	6f 2d       	mov	r22, r15
     ea4:	c6 01       	movw	r24, r12
     ea6:	0e 94 de 05 	call	0xbbc	; 0xbbc <conv_brk>
     eaa:	ec 01       	movw	r28, r24
     eac:	89 2b       	or	r24, r25
     eae:	09 f0       	breq	.+2      	; 0xeb2 <vfscanf+0x17a>
     eb0:	44 c0       	rjmp	.+136    	; 0xf3a <vfscanf+0x202>
     eb2:	3e c0       	rjmp	.+124    	; 0xf30 <vfscanf+0x1f8>
     eb4:	c6 01       	movw	r24, r12
     eb6:	0e 94 33 05 	call	0xa66	; 0xa66 <skip_spaces>
     eba:	97 fd       	sbrc	r25, 7
     ebc:	42 c0       	rjmp	.+132    	; 0xf42 <vfscanf+0x20a>
     ebe:	1f 36       	cpi	r17, 0x6F	; 111
     ec0:	61 f1       	breq	.+88     	; 0xf1a <vfscanf+0x1e2>
     ec2:	28 f4       	brcc	.+10     	; 0xece <vfscanf+0x196>
     ec4:	14 36       	cpi	r17, 0x64	; 100
     ec6:	39 f1       	breq	.+78     	; 0xf16 <vfscanf+0x1de>
     ec8:	19 36       	cpi	r17, 0x69	; 105
     eca:	51 f1       	breq	.+84     	; 0xf20 <vfscanf+0x1e8>
     ecc:	28 c0       	rjmp	.+80     	; 0xf1e <vfscanf+0x1e6>
     ece:	13 37       	cpi	r17, 0x73	; 115
     ed0:	71 f0       	breq	.+28     	; 0xeee <vfscanf+0x1b6>
     ed2:	15 37       	cpi	r17, 0x75	; 117
     ed4:	01 f1       	breq	.+64     	; 0xf16 <vfscanf+0x1de>
     ed6:	23 c0       	rjmp	.+70     	; 0xf1e <vfscanf+0x1e6>
     ed8:	81 14       	cp	r8, r1
     eda:	91 04       	cpc	r9, r1
     edc:	29 f0       	breq	.+10     	; 0xee8 <vfscanf+0x1b0>
     ede:	f4 01       	movw	r30, r8
     ee0:	60 82       	st	Z, r6
     ee2:	c4 01       	movw	r24, r8
     ee4:	01 96       	adiw	r24, 0x01	; 1
     ee6:	4c 01       	movw	r8, r24
     ee8:	fa 94       	dec	r15
     eea:	ff 20       	and	r15, r15
     eec:	71 f0       	breq	.+28     	; 0xf0a <vfscanf+0x1d2>
     eee:	c6 01       	movw	r24, r12
     ef0:	0e 94 d7 07 	call	0xfae	; 0xfae <fgetc>
     ef4:	3c 01       	movw	r6, r24
     ef6:	97 fd       	sbrc	r25, 7
     ef8:	08 c0       	rjmp	.+16     	; 0xf0a <vfscanf+0x1d2>
     efa:	0e 94 ad 07 	call	0xf5a	; 0xf5a <isspace>
     efe:	89 2b       	or	r24, r25
     f00:	59 f3       	breq	.-42     	; 0xed8 <vfscanf+0x1a0>
     f02:	b6 01       	movw	r22, r12
     f04:	c3 01       	movw	r24, r6
     f06:	0e 94 51 08 	call	0x10a2	; 0x10a2 <ungetc>
     f0a:	81 14       	cp	r8, r1
     f0c:	91 04       	cpc	r9, r1
     f0e:	a9 f0       	breq	.+42     	; 0xf3a <vfscanf+0x202>
     f10:	f4 01       	movw	r30, r8
     f12:	10 82       	st	Z, r1
     f14:	12 c0       	rjmp	.+36     	; 0xf3a <vfscanf+0x202>
     f16:	00 62       	ori	r16, 0x20	; 32
     f18:	03 c0       	rjmp	.+6      	; 0xf20 <vfscanf+0x1e8>
     f1a:	00 61       	ori	r16, 0x10	; 16
     f1c:	01 c0       	rjmp	.+2      	; 0xf20 <vfscanf+0x1e8>
     f1e:	00 64       	ori	r16, 0x40	; 64
     f20:	20 2f       	mov	r18, r16
     f22:	a4 01       	movw	r20, r8
     f24:	6f 2d       	mov	r22, r15
     f26:	c6 01       	movw	r24, r12
     f28:	0e 94 4c 05 	call	0xa98	; 0xa98 <conv_int>
     f2c:	81 11       	cpse	r24, r1
     f2e:	05 c0       	rjmp	.+10     	; 0xf3a <vfscanf+0x202>
     f30:	f6 01       	movw	r30, r12
     f32:	83 81       	ldd	r24, Z+3	; 0x03
     f34:	80 73       	andi	r24, 0x30	; 48
     f36:	29 f4       	brne	.+10     	; 0xf42 <vfscanf+0x20a>
     f38:	06 c0       	rjmp	.+12     	; 0xf46 <vfscanf+0x20e>
     f3a:	00 fd       	sbrc	r16, 0
     f3c:	0a cf       	rjmp	.-492    	; 0xd52 <vfscanf+0x1a>
     f3e:	53 94       	inc	r5
     f40:	08 cf       	rjmp	.-496    	; 0xd52 <vfscanf+0x1a>
     f42:	55 20       	and	r5, r5
     f44:	19 f0       	breq	.+6      	; 0xf4c <vfscanf+0x214>
     f46:	85 2d       	mov	r24, r5
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	02 c0       	rjmp	.+4      	; 0xf50 <vfscanf+0x218>
     f4c:	8f ef       	ldi	r24, 0xFF	; 255
     f4e:	9f ef       	ldi	r25, 0xFF	; 255
     f50:	cd b7       	in	r28, 0x3d	; 61
     f52:	de b7       	in	r29, 0x3e	; 62
     f54:	ef e0       	ldi	r30, 0x0F	; 15
     f56:	0c 94 ea 08 	jmp	0x11d4	; 0x11d4 <__epilogue_restores__+0x6>

00000f5a <isspace>:
     f5a:	91 11       	cpse	r25, r1
     f5c:	0c 94 c8 08 	jmp	0x1190	; 0x1190 <__ctype_isfalse>
     f60:	80 32       	cpi	r24, 0x20	; 32
     f62:	19 f0       	breq	.+6      	; 0xf6a <isspace+0x10>
     f64:	89 50       	subi	r24, 0x09	; 9
     f66:	85 50       	subi	r24, 0x05	; 5
     f68:	c8 f7       	brcc	.-14     	; 0xf5c <isspace+0x2>
     f6a:	08 95       	ret

00000f6c <strchr_P>:
     f6c:	fc 01       	movw	r30, r24
     f6e:	05 90       	lpm	r0, Z+
     f70:	06 16       	cp	r0, r22
     f72:	21 f0       	breq	.+8      	; 0xf7c <strchr_P+0x10>
     f74:	00 20       	and	r0, r0
     f76:	d9 f7       	brne	.-10     	; 0xf6e <strchr_P+0x2>
     f78:	c0 01       	movw	r24, r0
     f7a:	08 95       	ret
     f7c:	31 97       	sbiw	r30, 0x01	; 1
     f7e:	cf 01       	movw	r24, r30
     f80:	08 95       	ret

00000f82 <strnlen_P>:
     f82:	fc 01       	movw	r30, r24
     f84:	05 90       	lpm	r0, Z+
     f86:	61 50       	subi	r22, 0x01	; 1
     f88:	70 40       	sbci	r23, 0x00	; 0
     f8a:	01 10       	cpse	r0, r1
     f8c:	d8 f7       	brcc	.-10     	; 0xf84 <strnlen_P+0x2>
     f8e:	80 95       	com	r24
     f90:	90 95       	com	r25
     f92:	8e 0f       	add	r24, r30
     f94:	9f 1f       	adc	r25, r31
     f96:	08 95       	ret

00000f98 <strnlen>:
     f98:	fc 01       	movw	r30, r24
     f9a:	61 50       	subi	r22, 0x01	; 1
     f9c:	70 40       	sbci	r23, 0x00	; 0
     f9e:	01 90       	ld	r0, Z+
     fa0:	01 10       	cpse	r0, r1
     fa2:	d8 f7       	brcc	.-10     	; 0xf9a <strnlen+0x2>
     fa4:	80 95       	com	r24
     fa6:	90 95       	com	r25
     fa8:	8e 0f       	add	r24, r30
     faa:	9f 1f       	adc	r25, r31
     fac:	08 95       	ret

00000fae <fgetc>:
     fae:	cf 93       	push	r28
     fb0:	df 93       	push	r29
     fb2:	ec 01       	movw	r28, r24
     fb4:	2b 81       	ldd	r18, Y+3	; 0x03
     fb6:	20 ff       	sbrs	r18, 0
     fb8:	33 c0       	rjmp	.+102    	; 0x1020 <fgetc+0x72>
     fba:	26 ff       	sbrs	r18, 6
     fbc:	0a c0       	rjmp	.+20     	; 0xfd2 <fgetc+0x24>
     fbe:	2f 7b       	andi	r18, 0xBF	; 191
     fc0:	2b 83       	std	Y+3, r18	; 0x03
     fc2:	8e 81       	ldd	r24, Y+6	; 0x06
     fc4:	9f 81       	ldd	r25, Y+7	; 0x07
     fc6:	01 96       	adiw	r24, 0x01	; 1
     fc8:	9f 83       	std	Y+7, r25	; 0x07
     fca:	8e 83       	std	Y+6, r24	; 0x06
     fcc:	8a 81       	ldd	r24, Y+2	; 0x02
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	29 c0       	rjmp	.+82     	; 0x1024 <fgetc+0x76>
     fd2:	22 ff       	sbrs	r18, 2
     fd4:	0f c0       	rjmp	.+30     	; 0xff4 <fgetc+0x46>
     fd6:	e8 81       	ld	r30, Y
     fd8:	f9 81       	ldd	r31, Y+1	; 0x01
     fda:	80 81       	ld	r24, Z
     fdc:	08 2e       	mov	r0, r24
     fde:	00 0c       	add	r0, r0
     fe0:	99 0b       	sbc	r25, r25
     fe2:	00 97       	sbiw	r24, 0x00	; 0
     fe4:	19 f4       	brne	.+6      	; 0xfec <fgetc+0x3e>
     fe6:	20 62       	ori	r18, 0x20	; 32
     fe8:	2b 83       	std	Y+3, r18	; 0x03
     fea:	1a c0       	rjmp	.+52     	; 0x1020 <fgetc+0x72>
     fec:	31 96       	adiw	r30, 0x01	; 1
     fee:	f9 83       	std	Y+1, r31	; 0x01
     ff0:	e8 83       	st	Y, r30
     ff2:	0e c0       	rjmp	.+28     	; 0x1010 <fgetc+0x62>
     ff4:	ea 85       	ldd	r30, Y+10	; 0x0a
     ff6:	fb 85       	ldd	r31, Y+11	; 0x0b
     ff8:	09 95       	icall
     ffa:	97 ff       	sbrs	r25, 7
     ffc:	09 c0       	rjmp	.+18     	; 0x1010 <fgetc+0x62>
     ffe:	2b 81       	ldd	r18, Y+3	; 0x03
    1000:	01 96       	adiw	r24, 0x01	; 1
    1002:	11 f0       	breq	.+4      	; 0x1008 <fgetc+0x5a>
    1004:	80 e2       	ldi	r24, 0x20	; 32
    1006:	01 c0       	rjmp	.+2      	; 0x100a <fgetc+0x5c>
    1008:	80 e1       	ldi	r24, 0x10	; 16
    100a:	82 2b       	or	r24, r18
    100c:	8b 83       	std	Y+3, r24	; 0x03
    100e:	08 c0       	rjmp	.+16     	; 0x1020 <fgetc+0x72>
    1010:	2e 81       	ldd	r18, Y+6	; 0x06
    1012:	3f 81       	ldd	r19, Y+7	; 0x07
    1014:	2f 5f       	subi	r18, 0xFF	; 255
    1016:	3f 4f       	sbci	r19, 0xFF	; 255
    1018:	3f 83       	std	Y+7, r19	; 0x07
    101a:	2e 83       	std	Y+6, r18	; 0x06
    101c:	99 27       	eor	r25, r25
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <fgetc+0x76>
    1020:	8f ef       	ldi	r24, 0xFF	; 255
    1022:	9f ef       	ldi	r25, 0xFF	; 255
    1024:	df 91       	pop	r29
    1026:	cf 91       	pop	r28
    1028:	08 95       	ret

0000102a <fputc>:
    102a:	0f 93       	push	r16
    102c:	1f 93       	push	r17
    102e:	cf 93       	push	r28
    1030:	df 93       	push	r29
    1032:	fb 01       	movw	r30, r22
    1034:	23 81       	ldd	r18, Z+3	; 0x03
    1036:	21 fd       	sbrc	r18, 1
    1038:	03 c0       	rjmp	.+6      	; 0x1040 <fputc+0x16>
    103a:	8f ef       	ldi	r24, 0xFF	; 255
    103c:	9f ef       	ldi	r25, 0xFF	; 255
    103e:	2c c0       	rjmp	.+88     	; 0x1098 <fputc+0x6e>
    1040:	22 ff       	sbrs	r18, 2
    1042:	16 c0       	rjmp	.+44     	; 0x1070 <fputc+0x46>
    1044:	46 81       	ldd	r20, Z+6	; 0x06
    1046:	57 81       	ldd	r21, Z+7	; 0x07
    1048:	24 81       	ldd	r18, Z+4	; 0x04
    104a:	35 81       	ldd	r19, Z+5	; 0x05
    104c:	42 17       	cp	r20, r18
    104e:	53 07       	cpc	r21, r19
    1050:	44 f4       	brge	.+16     	; 0x1062 <fputc+0x38>
    1052:	a0 81       	ld	r26, Z
    1054:	b1 81       	ldd	r27, Z+1	; 0x01
    1056:	9d 01       	movw	r18, r26
    1058:	2f 5f       	subi	r18, 0xFF	; 255
    105a:	3f 4f       	sbci	r19, 0xFF	; 255
    105c:	31 83       	std	Z+1, r19	; 0x01
    105e:	20 83       	st	Z, r18
    1060:	8c 93       	st	X, r24
    1062:	26 81       	ldd	r18, Z+6	; 0x06
    1064:	37 81       	ldd	r19, Z+7	; 0x07
    1066:	2f 5f       	subi	r18, 0xFF	; 255
    1068:	3f 4f       	sbci	r19, 0xFF	; 255
    106a:	37 83       	std	Z+7, r19	; 0x07
    106c:	26 83       	std	Z+6, r18	; 0x06
    106e:	14 c0       	rjmp	.+40     	; 0x1098 <fputc+0x6e>
    1070:	8b 01       	movw	r16, r22
    1072:	ec 01       	movw	r28, r24
    1074:	fb 01       	movw	r30, r22
    1076:	00 84       	ldd	r0, Z+8	; 0x08
    1078:	f1 85       	ldd	r31, Z+9	; 0x09
    107a:	e0 2d       	mov	r30, r0
    107c:	09 95       	icall
    107e:	89 2b       	or	r24, r25
    1080:	e1 f6       	brne	.-72     	; 0x103a <fputc+0x10>
    1082:	d8 01       	movw	r26, r16
    1084:	16 96       	adiw	r26, 0x06	; 6
    1086:	8d 91       	ld	r24, X+
    1088:	9c 91       	ld	r25, X
    108a:	17 97       	sbiw	r26, 0x07	; 7
    108c:	01 96       	adiw	r24, 0x01	; 1
    108e:	17 96       	adiw	r26, 0x07	; 7
    1090:	9c 93       	st	X, r25
    1092:	8e 93       	st	-X, r24
    1094:	16 97       	sbiw	r26, 0x06	; 6
    1096:	ce 01       	movw	r24, r28
    1098:	df 91       	pop	r29
    109a:	cf 91       	pop	r28
    109c:	1f 91       	pop	r17
    109e:	0f 91       	pop	r16
    10a0:	08 95       	ret

000010a2 <ungetc>:
    10a2:	fb 01       	movw	r30, r22
    10a4:	23 81       	ldd	r18, Z+3	; 0x03
    10a6:	20 ff       	sbrs	r18, 0
    10a8:	12 c0       	rjmp	.+36     	; 0x10ce <ungetc+0x2c>
    10aa:	26 fd       	sbrc	r18, 6
    10ac:	10 c0       	rjmp	.+32     	; 0x10ce <ungetc+0x2c>
    10ae:	8f 3f       	cpi	r24, 0xFF	; 255
    10b0:	3f ef       	ldi	r19, 0xFF	; 255
    10b2:	93 07       	cpc	r25, r19
    10b4:	61 f0       	breq	.+24     	; 0x10ce <ungetc+0x2c>
    10b6:	82 83       	std	Z+2, r24	; 0x02
    10b8:	2f 7d       	andi	r18, 0xDF	; 223
    10ba:	20 64       	ori	r18, 0x40	; 64
    10bc:	23 83       	std	Z+3, r18	; 0x03
    10be:	26 81       	ldd	r18, Z+6	; 0x06
    10c0:	37 81       	ldd	r19, Z+7	; 0x07
    10c2:	21 50       	subi	r18, 0x01	; 1
    10c4:	31 09       	sbc	r19, r1
    10c6:	37 83       	std	Z+7, r19	; 0x07
    10c8:	26 83       	std	Z+6, r18	; 0x06
    10ca:	99 27       	eor	r25, r25
    10cc:	08 95       	ret
    10ce:	8f ef       	ldi	r24, 0xFF	; 255
    10d0:	9f ef       	ldi	r25, 0xFF	; 255
    10d2:	08 95       	ret

000010d4 <__ultoa_invert>:
    10d4:	fa 01       	movw	r30, r20
    10d6:	aa 27       	eor	r26, r26
    10d8:	28 30       	cpi	r18, 0x08	; 8
    10da:	51 f1       	breq	.+84     	; 0x1130 <__ultoa_invert+0x5c>
    10dc:	20 31       	cpi	r18, 0x10	; 16
    10de:	81 f1       	breq	.+96     	; 0x1140 <__ultoa_invert+0x6c>
    10e0:	e8 94       	clt
    10e2:	6f 93       	push	r22
    10e4:	6e 7f       	andi	r22, 0xFE	; 254
    10e6:	6e 5f       	subi	r22, 0xFE	; 254
    10e8:	7f 4f       	sbci	r23, 0xFF	; 255
    10ea:	8f 4f       	sbci	r24, 0xFF	; 255
    10ec:	9f 4f       	sbci	r25, 0xFF	; 255
    10ee:	af 4f       	sbci	r26, 0xFF	; 255
    10f0:	b1 e0       	ldi	r27, 0x01	; 1
    10f2:	3e d0       	rcall	.+124    	; 0x1170 <__ultoa_invert+0x9c>
    10f4:	b4 e0       	ldi	r27, 0x04	; 4
    10f6:	3c d0       	rcall	.+120    	; 0x1170 <__ultoa_invert+0x9c>
    10f8:	67 0f       	add	r22, r23
    10fa:	78 1f       	adc	r23, r24
    10fc:	89 1f       	adc	r24, r25
    10fe:	9a 1f       	adc	r25, r26
    1100:	a1 1d       	adc	r26, r1
    1102:	68 0f       	add	r22, r24
    1104:	79 1f       	adc	r23, r25
    1106:	8a 1f       	adc	r24, r26
    1108:	91 1d       	adc	r25, r1
    110a:	a1 1d       	adc	r26, r1
    110c:	6a 0f       	add	r22, r26
    110e:	71 1d       	adc	r23, r1
    1110:	81 1d       	adc	r24, r1
    1112:	91 1d       	adc	r25, r1
    1114:	a1 1d       	adc	r26, r1
    1116:	20 d0       	rcall	.+64     	; 0x1158 <__ultoa_invert+0x84>
    1118:	09 f4       	brne	.+2      	; 0x111c <__ultoa_invert+0x48>
    111a:	68 94       	set
    111c:	3f 91       	pop	r19
    111e:	2a e0       	ldi	r18, 0x0A	; 10
    1120:	26 9f       	mul	r18, r22
    1122:	11 24       	eor	r1, r1
    1124:	30 19       	sub	r19, r0
    1126:	30 5d       	subi	r19, 0xD0	; 208
    1128:	31 93       	st	Z+, r19
    112a:	de f6       	brtc	.-74     	; 0x10e2 <__ultoa_invert+0xe>
    112c:	cf 01       	movw	r24, r30
    112e:	08 95       	ret
    1130:	46 2f       	mov	r20, r22
    1132:	47 70       	andi	r20, 0x07	; 7
    1134:	40 5d       	subi	r20, 0xD0	; 208
    1136:	41 93       	st	Z+, r20
    1138:	b3 e0       	ldi	r27, 0x03	; 3
    113a:	0f d0       	rcall	.+30     	; 0x115a <__ultoa_invert+0x86>
    113c:	c9 f7       	brne	.-14     	; 0x1130 <__ultoa_invert+0x5c>
    113e:	f6 cf       	rjmp	.-20     	; 0x112c <__ultoa_invert+0x58>
    1140:	46 2f       	mov	r20, r22
    1142:	4f 70       	andi	r20, 0x0F	; 15
    1144:	40 5d       	subi	r20, 0xD0	; 208
    1146:	4a 33       	cpi	r20, 0x3A	; 58
    1148:	18 f0       	brcs	.+6      	; 0x1150 <__ultoa_invert+0x7c>
    114a:	49 5d       	subi	r20, 0xD9	; 217
    114c:	31 fd       	sbrc	r19, 1
    114e:	40 52       	subi	r20, 0x20	; 32
    1150:	41 93       	st	Z+, r20
    1152:	02 d0       	rcall	.+4      	; 0x1158 <__ultoa_invert+0x84>
    1154:	a9 f7       	brne	.-22     	; 0x1140 <__ultoa_invert+0x6c>
    1156:	ea cf       	rjmp	.-44     	; 0x112c <__ultoa_invert+0x58>
    1158:	b4 e0       	ldi	r27, 0x04	; 4
    115a:	a6 95       	lsr	r26
    115c:	97 95       	ror	r25
    115e:	87 95       	ror	r24
    1160:	77 95       	ror	r23
    1162:	67 95       	ror	r22
    1164:	ba 95       	dec	r27
    1166:	c9 f7       	brne	.-14     	; 0x115a <__ultoa_invert+0x86>
    1168:	00 97       	sbiw	r24, 0x00	; 0
    116a:	61 05       	cpc	r22, r1
    116c:	71 05       	cpc	r23, r1
    116e:	08 95       	ret
    1170:	9b 01       	movw	r18, r22
    1172:	ac 01       	movw	r20, r24
    1174:	0a 2e       	mov	r0, r26
    1176:	06 94       	lsr	r0
    1178:	57 95       	ror	r21
    117a:	47 95       	ror	r20
    117c:	37 95       	ror	r19
    117e:	27 95       	ror	r18
    1180:	ba 95       	dec	r27
    1182:	c9 f7       	brne	.-14     	; 0x1176 <__ultoa_invert+0xa2>
    1184:	62 0f       	add	r22, r18
    1186:	73 1f       	adc	r23, r19
    1188:	84 1f       	adc	r24, r20
    118a:	95 1f       	adc	r25, r21
    118c:	a0 1d       	adc	r26, r0
    118e:	08 95       	ret

00001190 <__ctype_isfalse>:
    1190:	99 27       	eor	r25, r25
    1192:	88 27       	eor	r24, r24

00001194 <__ctype_istrue>:
    1194:	08 95       	ret

00001196 <__prologue_saves__>:
    1196:	2f 92       	push	r2
    1198:	3f 92       	push	r3
    119a:	4f 92       	push	r4
    119c:	5f 92       	push	r5
    119e:	6f 92       	push	r6
    11a0:	7f 92       	push	r7
    11a2:	8f 92       	push	r8
    11a4:	9f 92       	push	r9
    11a6:	af 92       	push	r10
    11a8:	bf 92       	push	r11
    11aa:	cf 92       	push	r12
    11ac:	df 92       	push	r13
    11ae:	ef 92       	push	r14
    11b0:	ff 92       	push	r15
    11b2:	0f 93       	push	r16
    11b4:	1f 93       	push	r17
    11b6:	cf 93       	push	r28
    11b8:	df 93       	push	r29
    11ba:	cd b7       	in	r28, 0x3d	; 61
    11bc:	de b7       	in	r29, 0x3e	; 62
    11be:	ca 1b       	sub	r28, r26
    11c0:	db 0b       	sbc	r29, r27
    11c2:	0f b6       	in	r0, 0x3f	; 63
    11c4:	f8 94       	cli
    11c6:	de bf       	out	0x3e, r29	; 62
    11c8:	0f be       	out	0x3f, r0	; 63
    11ca:	cd bf       	out	0x3d, r28	; 61
    11cc:	09 94       	ijmp

000011ce <__epilogue_restores__>:
    11ce:	2a 88       	ldd	r2, Y+18	; 0x12
    11d0:	39 88       	ldd	r3, Y+17	; 0x11
    11d2:	48 88       	ldd	r4, Y+16	; 0x10
    11d4:	5f 84       	ldd	r5, Y+15	; 0x0f
    11d6:	6e 84       	ldd	r6, Y+14	; 0x0e
    11d8:	7d 84       	ldd	r7, Y+13	; 0x0d
    11da:	8c 84       	ldd	r8, Y+12	; 0x0c
    11dc:	9b 84       	ldd	r9, Y+11	; 0x0b
    11de:	aa 84       	ldd	r10, Y+10	; 0x0a
    11e0:	b9 84       	ldd	r11, Y+9	; 0x09
    11e2:	c8 84       	ldd	r12, Y+8	; 0x08
    11e4:	df 80       	ldd	r13, Y+7	; 0x07
    11e6:	ee 80       	ldd	r14, Y+6	; 0x06
    11e8:	fd 80       	ldd	r15, Y+5	; 0x05
    11ea:	0c 81       	ldd	r16, Y+4	; 0x04
    11ec:	1b 81       	ldd	r17, Y+3	; 0x03
    11ee:	aa 81       	ldd	r26, Y+2	; 0x02
    11f0:	b9 81       	ldd	r27, Y+1	; 0x01
    11f2:	ce 0f       	add	r28, r30
    11f4:	d1 1d       	adc	r29, r1
    11f6:	0f b6       	in	r0, 0x3f	; 63
    11f8:	f8 94       	cli
    11fa:	de bf       	out	0x3e, r29	; 62
    11fc:	0f be       	out	0x3f, r0	; 63
    11fe:	cd bf       	out	0x3d, r28	; 61
    1200:	ed 01       	movw	r28, r26
    1202:	08 95       	ret

00001204 <_exit>:
    1204:	f8 94       	cli

00001206 <__stop_program>:
    1206:	ff cf       	rjmp	.-2      	; 0x1206 <__stop_program>
