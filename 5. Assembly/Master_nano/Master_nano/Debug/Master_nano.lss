
Master_nano.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000136  00800100  00001146  000011da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001146  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000c  00800236  00800236  00001310  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001310  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000136c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000130  00000000  00000000  000013ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011ad  00000000  00000000  000014dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b30  00000000  00000000  00002689  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009ee  00000000  00000000  000031b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000031c  00000000  00000000  00003ba8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000605  00000000  00000000  00003ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007fe  00000000  00000000  000044c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000108  00000000  00000000  00004cc7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 f5 00 	jmp	0x1ea	; 0x1ea <__vector_14>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	12 e0       	ldi	r17, 0x02	; 2
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	e6 e4       	ldi	r30, 0x46	; 70
      88:	f1 e1       	ldi	r31, 0x11	; 17
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a6 33       	cpi	r26, 0x36	; 54
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	22 e0       	ldi	r18, 0x02	; 2
      98:	a6 e3       	ldi	r26, 0x36	; 54
      9a:	b2 e0       	ldi	r27, 0x02	; 2
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a2 34       	cpi	r26, 0x42	; 66
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 26 01 	call	0x24c	; 0x24c <main>
      aa:	0c 94 a1 08 	jmp	0x1142	; 0x1142 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <i2c_init>:
		if(!(logic=i2c_start(i<<1 | I2C_WRITE)))
		{
			printf("%X is on the bus \n",i);
		}
	}
}
      b2:	88 e4       	ldi	r24, 0x48	; 72
      b4:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
      b8:	08 95       	ret

000000ba <i2c_start>:
      ba:	ec eb       	ldi	r30, 0xBC	; 188
      bc:	f0 e0       	ldi	r31, 0x00	; 0
      be:	10 82       	st	Z, r1
      c0:	16 bc       	out	0x26, r1	; 38
      c2:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <counter+0x1>
      c6:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <counter>
      ca:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <__data_end+0x1>
      ce:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <__data_end>
      d2:	94 ea       	ldi	r25, 0xA4	; 164
      d4:	90 83       	st	Z, r25
      d6:	0e c0       	rjmp	.+28     	; 0xf4 <i2c_start+0x3a>
      d8:	20 91 36 02 	lds	r18, 0x0236	; 0x800236 <__data_end>
      dc:	30 91 37 02 	lds	r19, 0x0237	; 0x800237 <__data_end+0x1>
      e0:	21 30       	cpi	r18, 0x01	; 1
      e2:	31 05       	cpc	r19, r1
      e4:	39 f4       	brne	.+14     	; 0xf4 <i2c_start+0x3a>
      e6:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <__data_end+0x1>
      ea:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <__data_end>
      ee:	8f ef       	ldi	r24, 0xFF	; 255
      f0:	9f ef       	ldi	r25, 0xFF	; 255
      f2:	08 95       	ret
      f4:	90 81       	ld	r25, Z
      f6:	99 23       	and	r25, r25
      f8:	7c f7       	brge	.-34     	; 0xd8 <i2c_start+0x1e>
      fa:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
      fe:	98 7f       	andi	r25, 0xF8	; 248
     100:	98 30       	cpi	r25, 0x08	; 8
     102:	a9 f4       	brne	.+42     	; 0x12e <i2c_start+0x74>
     104:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     108:	84 e8       	ldi	r24, 0x84	; 132
     10a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     10e:	ec eb       	ldi	r30, 0xBC	; 188
     110:	f0 e0       	ldi	r31, 0x00	; 0
     112:	80 81       	ld	r24, Z
     114:	88 23       	and	r24, r24
     116:	ec f7       	brge	.-6      	; 0x112 <i2c_start+0x58>
     118:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     11c:	28 7f       	andi	r18, 0xF8	; 248
     11e:	28 31       	cpi	r18, 0x18	; 24
     120:	49 f0       	breq	.+18     	; 0x134 <i2c_start+0x7a>
     122:	81 e0       	ldi	r24, 0x01	; 1
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	20 34       	cpi	r18, 0x40	; 64
     128:	39 f4       	brne	.+14     	; 0x138 <i2c_start+0x7e>
     12a:	80 e0       	ldi	r24, 0x00	; 0
     12c:	08 95       	ret
     12e:	81 e0       	ldi	r24, 0x01	; 1
     130:	90 e0       	ldi	r25, 0x00	; 0
     132:	08 95       	ret
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	08 95       	ret

0000013a <i2c_write>:
     13a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     13e:	84 e8       	ldi	r24, 0x84	; 132
     140:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     144:	ec eb       	ldi	r30, 0xBC	; 188
     146:	f0 e0       	ldi	r31, 0x00	; 0
     148:	80 81       	ld	r24, Z
     14a:	88 23       	and	r24, r24
     14c:	ec f7       	brge	.-6      	; 0x148 <i2c_write+0xe>
     14e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     152:	98 7f       	andi	r25, 0xF8	; 248
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	98 32       	cpi	r25, 0x28	; 40
     158:	09 f4       	brne	.+2      	; 0x15c <i2c_write+0x22>
     15a:	80 e0       	ldi	r24, 0x00	; 0
     15c:	08 95       	ret

0000015e <i2c_read_ack>:
     15e:	16 bc       	out	0x26, r1	; 38
     160:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <counter+0x1>
     164:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <counter>
     168:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <__data_end+0x1>
     16c:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <__data_end>
     170:	84 ec       	ldi	r24, 0xC4	; 196
     172:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     176:	ec eb       	ldi	r30, 0xBC	; 188
     178:	f0 e0       	ldi	r31, 0x00	; 0
     17a:	0d c0       	rjmp	.+26     	; 0x196 <i2c_read_ack+0x38>
     17c:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <__data_end>
     180:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <__data_end+0x1>
     184:	01 97       	sbiw	r24, 0x01	; 1
     186:	39 f4       	brne	.+14     	; 0x196 <i2c_read_ack+0x38>
     188:	10 92 37 02 	sts	0x0237, r1	; 0x800237 <__data_end+0x1>
     18c:	10 92 36 02 	sts	0x0236, r1	; 0x800236 <__data_end>
     190:	8f ef       	ldi	r24, 0xFF	; 255
     192:	9f ef       	ldi	r25, 0xFF	; 255
     194:	08 95       	ret
     196:	80 81       	ld	r24, Z
     198:	88 23       	and	r24, r24
     19a:	84 f7       	brge	.-32     	; 0x17c <i2c_read_ack+0x1e>
     19c:	9b b1       	in	r25, 0x0b	; 11
     19e:	84 e0       	ldi	r24, 0x04	; 4
     1a0:	89 27       	eor	r24, r25
     1a2:	8b b9       	out	0x0b, r24	; 11
     1a4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	08 95       	ret

000001ac <i2c_read_nack>:
     1ac:	84 e8       	ldi	r24, 0x84	; 132
     1ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1b2:	ec eb       	ldi	r30, 0xBC	; 188
     1b4:	f0 e0       	ldi	r31, 0x00	; 0
     1b6:	80 81       	ld	r24, Z
     1b8:	88 23       	and	r24, r24
     1ba:	ec f7       	brge	.-6      	; 0x1b6 <i2c_read_nack+0xa>
     1bc:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     1c0:	08 95       	ret

000001c2 <i2c_stop>:
     1c2:	84 e9       	ldi	r24, 0x94	; 148
     1c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     1c8:	08 95       	ret

000001ca <i2c_timer0_init>:


void i2c_timer0_init(void)
{
	TCCR0A |= (1 << WGM01);
     1ca:	84 b5       	in	r24, 0x24	; 36
     1cc:	82 60       	ori	r24, 0x02	; 2
     1ce:	84 bd       	out	0x24, r24	; 36
	// Set the Timer Mode to CTC
	OCR0A = 0xF9;
     1d0:	89 ef       	ldi	r24, 0xF9	; 249
     1d2:	87 bd       	out	0x27, r24	; 39
	TCNT0 = 0;
     1d4:	16 bc       	out	0x26, r1	; 38
	// Set the value that you want to count to 256
	TIMSK0 |= (1 << OCIE0A);
     1d6:	ee e6       	ldi	r30, 0x6E	; 110
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	80 81       	ld	r24, Z
     1dc:	82 60       	ori	r24, 0x02	; 2
     1de:	80 83       	st	Z, r24
	//Set the ISR COMPA vect
	TCCR0B |= (1 << CS01) | (1 << CS00);
     1e0:	85 b5       	in	r24, 0x25	; 37
     1e2:	83 60       	ori	r24, 0x03	; 3
     1e4:	85 bd       	out	0x25, r24	; 37
	// set prescaler to 64 and start the timer
	sei(); // turn on interrupts
     1e6:	78 94       	sei
     1e8:	08 95       	ret

000001ea <__vector_14>:




ISR (TIMER0_COMPA_vect) // timer0 overflow interrupt
{	
     1ea:	1f 92       	push	r1
     1ec:	0f 92       	push	r0
     1ee:	0f b6       	in	r0, 0x3f	; 63
     1f0:	0f 92       	push	r0
     1f2:	11 24       	eor	r1, r1
     1f4:	8f 93       	push	r24
     1f6:	9f 93       	push	r25
	counter++;
     1f8:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <counter>
     1fc:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <counter+0x1>
     200:	01 96       	adiw	r24, 0x01	; 1
     202:	90 93 39 02 	sts	0x0239, r25	; 0x800239 <counter+0x1>
     206:	80 93 38 02 	sts	0x0238, r24	; 0x800238 <counter>
	
	if (counter==20)
     20a:	80 91 38 02 	lds	r24, 0x0238	; 0x800238 <counter>
     20e:	90 91 39 02 	lds	r25, 0x0239	; 0x800239 <counter+0x1>
     212:	44 97       	sbiw	r24, 0x14	; 20
     214:	51 f4       	brne	.+20     	; 0x22a <__vector_14+0x40>
	{
		flag=1;
     216:	81 e0       	ldi	r24, 0x01	; 1
     218:	90 e0       	ldi	r25, 0x00	; 0
     21a:	90 93 37 02 	sts	0x0237, r25	; 0x800237 <__data_end+0x1>
     21e:	80 93 36 02 	sts	0x0236, r24	; 0x800236 <__data_end>
		counter=0;
     222:	10 92 39 02 	sts	0x0239, r1	; 0x800239 <counter+0x1>
     226:	10 92 38 02 	sts	0x0238, r1	; 0x800238 <counter>
		
	}
	
	if (flag==0)
     22a:	80 91 36 02 	lds	r24, 0x0236	; 0x800236 <__data_end>
     22e:	90 91 37 02 	lds	r25, 0x0237	; 0x800237 <__data_end+0x1>
     232:	89 2b       	or	r24, r25
     234:	19 f4       	brne	.+6      	; 0x23c <__vector_14+0x52>
	{PORTD=(1<<PORTD3);
     236:	88 e0       	ldi	r24, 0x08	; 8
     238:	8b b9       	out	0x0b, r24	; 11
     23a:	01 c0       	rjmp	.+2      	; 0x23e <__vector_14+0x54>
	}
	
	else
	{
		
		PORTD=(0<<PORTD3);
     23c:	1b b8       	out	0x0b, r1	; 11
	}
     23e:	9f 91       	pop	r25
     240:	8f 91       	pop	r24
     242:	0f 90       	pop	r0
     244:	0f be       	out	0x3f, r0	; 63
     246:	0f 90       	pop	r0
     248:	1f 90       	pop	r1
     24a:	18 95       	reti

0000024c <main>:
 #include "master.h"
 unsigned int data=0;
 uint8_t byte=1;
 int main(void)
 {
	 DDRD = 0xFF; // I/O board PD4..7 as outputs, for LEDs
     24c:	8f ef       	ldi	r24, 0xFF	; 255
     24e:	8a b9       	out	0x0a, r24	; 10
	 PORTD = 0xFF; // Enable internal pull at PC0...3 inputs
     250:	8b b9       	out	0x0b, r24	; 11
	 
	 i2c_init();
     252:	0e 94 59 00 	call	0xb2	; 0xb2 <i2c_init>
	 i2c_timer0_init();
     256:	0e 94 e5 00 	call	0x1ca	; 0x1ca <i2c_timer0_init>
	 uart_init();
     25a:	0e 94 46 02 	call	0x48c	; 0x48c <uart_init>
	 io_redirect();			
     25e:	0e 94 57 02 	call	0x4ae	; 0x4ae <io_redirect>
	 while (1)
	 {	
		
			
		printf("input a number\n");
		scanf("%d",&data);
     262:	ca e3       	ldi	r28, 0x3A	; 58
     264:	d2 e0       	ldi	r29, 0x02	; 2
     266:	0b e2       	ldi	r16, 0x2B	; 43
     268:	11 e0       	ldi	r17, 0x01	; 1
	
	 while (1)
	 {	
		
			
		printf("input a number\n");
     26a:	8c e1       	ldi	r24, 0x1C	; 28
     26c:	91 e0       	ldi	r25, 0x01	; 1
     26e:	0e 94 78 02 	call	0x4f0	; 0x4f0 <puts>
		scanf("%d",&data);
     272:	df 93       	push	r29
     274:	cf 93       	push	r28
     276:	1f 93       	push	r17
     278:	0f 93       	push	r16
     27a:	0e 94 a8 02 	call	0x550	; 0x550 <scanf>
		
		data=get_data_long(data, GPS_address);
     27e:	60 e4       	ldi	r22, 0x40	; 64
     280:	88 81       	ld	r24, Y
     282:	0e 94 4c 01 	call	0x298	; 0x298 <get_data_long>
     286:	70 93 3b 02 	sts	0x023B, r23	; 0x80023b <data+0x1>
     28a:	60 93 3a 02 	sts	0x023A, r22	; 0x80023a <data>
     28e:	0f 90       	pop	r0
     290:	0f 90       	pop	r0
     292:	0f 90       	pop	r0
     294:	0f 90       	pop	r0
     296:	e9 cf       	rjmp	.-46     	; 0x26a <main+0x1e>

00000298 <get_data_long>:
			
	}
}

long get_data_long( uint8_t opcode, uint8_t address)
{
     298:	4f 92       	push	r4
     29a:	5f 92       	push	r5
     29c:	6f 92       	push	r6
     29e:	7f 92       	push	r7
     2a0:	af 92       	push	r10
     2a2:	bf 92       	push	r11
     2a4:	cf 92       	push	r12
     2a6:	df 92       	push	r13
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	cd b7       	in	r28, 0x3d	; 61
     2b6:	de b7       	in	r29, 0x3e	; 62
     2b8:	60 97       	sbiw	r28, 0x10	; 16
     2ba:	0f b6       	in	r0, 0x3f	; 63
     2bc:	f8 94       	cli
     2be:	de bf       	out	0x3e, r29	; 62
     2c0:	0f be       	out	0x3f, r0	; 63
     2c2:	cd bf       	out	0x3d, r28	; 61
     2c4:	08 2f       	mov	r16, r24
     2c6:	16 2f       	mov	r17, r22
	
	char info, bytes =4;
	long result=0;
	long data_received[bytes];
	
	info = i2c_start(address<<1 | I2C_WRITE);		//starts i2c comm here in writing mode
     2c8:	86 2f       	mov	r24, r22
     2ca:	88 0f       	add	r24, r24
     2cc:	0e 94 5d 00 	call	0xba	; 0xba <i2c_start>
	
	if (info !=0)
     2d0:	88 23       	and	r24, r24
     2d2:	91 f0       	breq	.+36     	; 0x2f8 <get_data_long+0x60>
	{
		printf("The receiver is unresponsive return value is %d \n",info);
     2d4:	99 27       	eor	r25, r25
     2d6:	9f 93       	push	r25
     2d8:	8f 93       	push	r24
     2da:	8e e2       	ldi	r24, 0x2E	; 46
     2dc:	91 e0       	ldi	r25, 0x01	; 1
     2de:	9f 93       	push	r25
     2e0:	8f 93       	push	r24
     2e2:	0e 94 62 02 	call	0x4c4	; 0x4c4 <printf>
		return -1;
     2e6:	0f 90       	pop	r0
     2e8:	0f 90       	pop	r0
     2ea:	0f 90       	pop	r0
     2ec:	0f 90       	pop	r0
     2ee:	44 24       	eor	r4, r4
     2f0:	4a 94       	dec	r4
     2f2:	54 2c       	mov	r5, r4
     2f4:	32 01       	movw	r6, r4
     2f6:	9b c0       	rjmp	.+310    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
	}
	
	else
	{
		info = i2c_write(opcode);		//send pressed key char
     2f8:	80 2f       	mov	r24, r16
     2fa:	0e 94 9d 00 	call	0x13a	; 0x13a <i2c_write>
		
		if (info!=0)
     2fe:	88 23       	and	r24, r24
     300:	49 f0       	breq	.+18     	; 0x314 <get_data_long+0x7c>
		{
			printf("The receiver did not ack the data \n");
     302:	80 e6       	ldi	r24, 0x60	; 96
     304:	91 e0       	ldi	r25, 0x01	; 1
     306:	0e 94 78 02 	call	0x4f0	; 0x4f0 <puts>
			return -1;
     30a:	44 24       	eor	r4, r4
     30c:	4a 94       	dec	r4
     30e:	54 2c       	mov	r5, r4
     310:	32 01       	movw	r6, r4
     312:	8d c0       	rjmp	.+282    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		}
		
		else
		{
			printf("The receiver did ack the data \n");
     314:	83 e8       	ldi	r24, 0x83	; 131
     316:	91 e0       	ldi	r25, 0x01	; 1
     318:	0e 94 78 02 	call	0x4f0	; 0x4f0 <puts>
		}
	}
	
	i2c_stop();				//stop i2c here
     31c:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <i2c_stop>
	
	info = i2c_start(address<<1 | I2C_READ);		//starts i2c comm here in writing mode
     320:	81 2f       	mov	r24, r17
     322:	88 0f       	add	r24, r24
     324:	81 60       	ori	r24, 0x01	; 1
     326:	0e 94 5d 00 	call	0xba	; 0xba <i2c_start>
     32a:	8e 01       	movw	r16, r28
     32c:	0f 5f       	subi	r16, 0xFF	; 255
     32e:	1f 4f       	sbci	r17, 0xFF	; 255
     330:	5e 01       	movw	r10, r28
     332:	8d e0       	ldi	r24, 0x0D	; 13
     334:	a8 0e       	add	r10, r24
     336:	b1 1c       	adc	r11, r1
     338:	78 01       	movw	r14, r16
	{
		
		for (int i=0; i<(bytes-1); i++)
		{
			data_received[i]=i2c_read_ack();
			printf("data %ld \n",data_received[i]);
     33a:	0f 2e       	mov	r0, r31
     33c:	fd e1       	ldi	r31, 0x1D	; 29
     33e:	cf 2e       	mov	r12, r31
     340:	f2 e0       	ldi	r31, 0x02	; 2
     342:	df 2e       	mov	r13, r31
     344:	f0 2d       	mov	r31, r0
	else
	{
		
		for (int i=0; i<(bytes-1); i++)
		{
			data_received[i]=i2c_read_ack();
     346:	0e 94 af 00 	call	0x15e	; 0x15e <i2c_read_ack>
     34a:	2c 01       	movw	r4, r24
     34c:	99 0f       	add	r25, r25
     34e:	66 08       	sbc	r6, r6
     350:	77 08       	sbc	r7, r7
     352:	f7 01       	movw	r30, r14
     354:	41 92       	st	Z+, r4
     356:	51 92       	st	Z+, r5
     358:	61 92       	st	Z+, r6
     35a:	71 92       	st	Z+, r7
     35c:	7f 01       	movw	r14, r30
			printf("data %ld \n",data_received[i]);
     35e:	7f 92       	push	r7
     360:	6f 92       	push	r6
     362:	5f 92       	push	r5
     364:	4f 92       	push	r4
     366:	df 92       	push	r13
     368:	cf 92       	push	r12
     36a:	0e 94 62 02 	call	0x4c4	; 0x4c4 <printf>
			if (data_received[i]== -1)
     36e:	0f 90       	pop	r0
     370:	0f 90       	pop	r0
     372:	0f 90       	pop	r0
     374:	0f 90       	pop	r0
     376:	0f 90       	pop	r0
     378:	0f 90       	pop	r0
     37a:	ff ef       	ldi	r31, 0xFF	; 255
     37c:	4f 16       	cp	r4, r31
     37e:	5f 06       	cpc	r5, r31
     380:	6f 06       	cpc	r6, r31
     382:	7f 06       	cpc	r7, r31
     384:	29 f4       	brne	.+10     	; 0x390 <get_data_long+0xf8>
			{
				printf("The receiver did not send the data \n");
     386:	8e eb       	ldi	r24, 0xBE	; 190
     388:	91 e0       	ldi	r25, 0x01	; 1
     38a:	0e 94 78 02 	call	0x4f0	; 0x4f0 <puts>
				return -1;
     38e:	4f c0       	rjmp	.+158    	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		return -1;
	}
	else
	{
		
		for (int i=0; i<(bytes-1); i++)
     390:	ea 14       	cp	r14, r10
     392:	fb 04       	cpc	r15, r11
     394:	c1 f6       	brne	.-80     	; 0x346 <get_data_long+0xae>
				printf("The receiver did not send the data \n");
				return -1;
			}
		}
		
		data_received[bytes-1]=i2c_read_nack();	//read the byte
     396:	0e 94 d6 00 	call	0x1ac	; 0x1ac <i2c_read_nack>
     39a:	48 2e       	mov	r4, r24
     39c:	51 2c       	mov	r5, r1
     39e:	61 2c       	mov	r6, r1
     3a0:	71 2c       	mov	r7, r1
     3a2:	4d 86       	std	Y+13, r4	; 0x0d
     3a4:	5e 86       	std	Y+14, r5	; 0x0e
     3a6:	6f 86       	std	Y+15, r6	; 0x0f
     3a8:	78 8a       	std	Y+16, r7	; 0x10
		printf("data %ld \n",data_received[bytes-1]);
     3aa:	1f 92       	push	r1
     3ac:	1f 92       	push	r1
     3ae:	1f 92       	push	r1
     3b0:	8f 93       	push	r24
     3b2:	8d e1       	ldi	r24, 0x1D	; 29
     3b4:	92 e0       	ldi	r25, 0x02	; 2
     3b6:	9f 93       	push	r25
     3b8:	8f 93       	push	r24
     3ba:	0e 94 62 02 	call	0x4c4	; 0x4c4 <printf>
		if (data_received[bytes-1]== -1)
     3be:	0f 90       	pop	r0
     3c0:	0f 90       	pop	r0
     3c2:	0f 90       	pop	r0
     3c4:	0f 90       	pop	r0
     3c6:	0f 90       	pop	r0
     3c8:	0f 90       	pop	r0
     3ca:	80 e0       	ldi	r24, 0x00	; 0
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	41 2c       	mov	r4, r1
     3d0:	51 2c       	mov	r5, r1
     3d2:	32 01       	movw	r6, r4
		
	
		
		for (int i=0; i<bytes; i++)
		{
			result=result+(data_received[i] << 8*i);
     3d4:	f8 01       	movw	r30, r16
     3d6:	41 91       	ld	r20, Z+
     3d8:	51 91       	ld	r21, Z+
     3da:	61 91       	ld	r22, Z+
     3dc:	71 91       	ld	r23, Z+
     3de:	8f 01       	movw	r16, r30
     3e0:	08 2e       	mov	r0, r24
     3e2:	04 c0       	rjmp	.+8      	; 0x3ec <get_data_long+0x154>
     3e4:	44 0f       	add	r20, r20
     3e6:	55 1f       	adc	r21, r21
     3e8:	66 1f       	adc	r22, r22
     3ea:	77 1f       	adc	r23, r23
     3ec:	0a 94       	dec	r0
     3ee:	d2 f7       	brpl	.-12     	; 0x3e4 <get_data_long+0x14c>
     3f0:	44 0e       	add	r4, r20
     3f2:	55 1e       	adc	r5, r21
     3f4:	66 1e       	adc	r6, r22
     3f6:	77 1e       	adc	r7, r23
     3f8:	08 96       	adiw	r24, 0x08	; 8
		}
		
		
	
		
		for (int i=0; i<bytes; i++)
     3fa:	80 32       	cpi	r24, 0x20	; 32
     3fc:	91 05       	cpc	r25, r1
     3fe:	51 f7       	brne	.-44     	; 0x3d4 <get_data_long+0x13c>
		{
			result=result+(data_received[i] << 8*i);
		}
		
		i2c_stop();
     400:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <i2c_stop>
		printf("stopping i2c \n ");
     404:	82 e0       	ldi	r24, 0x02	; 2
     406:	92 e0       	ldi	r25, 0x02	; 2
     408:	9f 93       	push	r25
     40a:	8f 93       	push	r24
     40c:	0e 94 62 02 	call	0x4c4	; 0x4c4 <printf>
		printf("Result=%ld \n",result);
     410:	7f 92       	push	r7
     412:	6f 92       	push	r6
     414:	5f 92       	push	r5
     416:	4f 92       	push	r4
     418:	88 e2       	ldi	r24, 0x28	; 40
     41a:	92 e0       	ldi	r25, 0x02	; 2
     41c:	9f 93       	push	r25
     41e:	8f 93       	push	r24
     420:	0e 94 62 02 	call	0x4c4	; 0x4c4 <printf>
		return result;
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	f8 94       	cli
     428:	de bf       	out	0x3e, r29	; 62
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	cd bf       	out	0x3d, r28	; 61
		
	}
	
}
     42e:	c3 01       	movw	r24, r6
     430:	b2 01       	movw	r22, r4
     432:	60 96       	adiw	r28, 0x10	; 16
     434:	0f b6       	in	r0, 0x3f	; 63
     436:	f8 94       	cli
     438:	de bf       	out	0x3e, r29	; 62
     43a:	0f be       	out	0x3f, r0	; 63
     43c:	cd bf       	out	0x3d, r28	; 61
     43e:	df 91       	pop	r29
     440:	cf 91       	pop	r28
     442:	1f 91       	pop	r17
     444:	0f 91       	pop	r16
     446:	ff 90       	pop	r15
     448:	ef 90       	pop	r14
     44a:	df 90       	pop	r13
     44c:	cf 90       	pop	r12
     44e:	bf 90       	pop	r11
     450:	af 90       	pop	r10
     452:	7f 90       	pop	r7
     454:	6f 90       	pop	r6
     456:	5f 90       	pop	r5
     458:	4f 90       	pop	r4
     45a:	08 95       	ret

0000045c <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
     45c:	cf 93       	push	r28
     45e:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     460:	8a 30       	cpi	r24, 0x0A	; 10
     462:	19 f4       	brne	.+6      	; 0x46a <uart_putchar+0xe>
		uart_putchar('\r', stream);
     464:	8d e0       	ldi	r24, 0x0D	; 13
     466:	0e 94 2e 02 	call	0x45c	; 0x45c <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     46a:	e0 ec       	ldi	r30, 0xC0	; 192
     46c:	f0 e0       	ldi	r31, 0x00	; 0
     46e:	80 81       	ld	r24, Z
     470:	85 ff       	sbrs	r24, 5
     472:	fd cf       	rjmp	.-6      	; 0x46e <uart_putchar+0x12>
	UDR0 = c;
     474:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     478:	cf 91       	pop	r28
     47a:	08 95       	ret

0000047c <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     47c:	e0 ec       	ldi	r30, 0xC0	; 192
     47e:	f0 e0       	ldi	r31, 0x00	; 0
     480:	80 81       	ld	r24, Z
     482:	88 23       	and	r24, r24
     484:	ec f7       	brge	.-6      	; 0x480 <uart_getchar+0x4>
	return UDR0;
     486:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     48a:	08 95       	ret

0000048c <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     48c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
     490:	87 e6       	ldi	r24, 0x67	; 103
     492:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     496:	e0 ec       	ldi	r30, 0xC0	; 192
     498:	f0 e0       	ldi	r31, 0x00	; 0
     49a:	80 81       	ld	r24, Z
     49c:	8d 7f       	andi	r24, 0xFD	; 253
     49e:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     4a0:	86 e0       	ldi	r24, 0x06	; 6
     4a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     4a6:	88 e1       	ldi	r24, 0x18	; 24
     4a8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     4ac:	08 95       	ret

000004ae <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
     4ae:	ec e3       	ldi	r30, 0x3C	; 60
     4b0:	f2 e0       	ldi	r31, 0x02	; 2
     4b2:	8e e0       	ldi	r24, 0x0E	; 14
     4b4:	91 e0       	ldi	r25, 0x01	; 1
     4b6:	93 83       	std	Z+3, r25	; 0x03
     4b8:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
     4ba:	80 e0       	ldi	r24, 0x00	; 0
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	91 83       	std	Z+1, r25	; 0x01
     4c0:	80 83       	st	Z, r24
     4c2:	08 95       	ret

000004c4 <printf>:
     4c4:	a0 e0       	ldi	r26, 0x00	; 0
     4c6:	b0 e0       	ldi	r27, 0x00	; 0
     4c8:	e8 e6       	ldi	r30, 0x68	; 104
     4ca:	f2 e0       	ldi	r31, 0x02	; 2
     4cc:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__prologue_saves__+0x20>
     4d0:	ae 01       	movw	r20, r28
     4d2:	4b 5f       	subi	r20, 0xFB	; 251
     4d4:	5f 4f       	sbci	r21, 0xFF	; 255
     4d6:	fa 01       	movw	r30, r20
     4d8:	61 91       	ld	r22, Z+
     4da:	71 91       	ld	r23, Z+
     4dc:	af 01       	movw	r20, r30
     4de:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__iob+0x2>
     4e2:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__iob+0x3>
     4e6:	0e 94 be 02 	call	0x57c	; 0x57c <vfprintf>
     4ea:	e2 e0       	ldi	r30, 0x02	; 2
     4ec:	0c 94 96 08 	jmp	0x112c	; 0x112c <__epilogue_restores__+0x20>

000004f0 <puts>:
     4f0:	0f 93       	push	r16
     4f2:	1f 93       	push	r17
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	e0 91 3e 02 	lds	r30, 0x023E	; 0x80023e <__iob+0x2>
     4fc:	f0 91 3f 02 	lds	r31, 0x023F	; 0x80023f <__iob+0x3>
     500:	23 81       	ldd	r18, Z+3	; 0x03
     502:	21 ff       	sbrs	r18, 1
     504:	1b c0       	rjmp	.+54     	; 0x53c <puts+0x4c>
     506:	8c 01       	movw	r16, r24
     508:	d0 e0       	ldi	r29, 0x00	; 0
     50a:	c0 e0       	ldi	r28, 0x00	; 0
     50c:	f8 01       	movw	r30, r16
     50e:	81 91       	ld	r24, Z+
     510:	8f 01       	movw	r16, r30
     512:	60 91 3e 02 	lds	r22, 0x023E	; 0x80023e <__iob+0x2>
     516:	70 91 3f 02 	lds	r23, 0x023F	; 0x80023f <__iob+0x3>
     51a:	db 01       	movw	r26, r22
     51c:	18 96       	adiw	r26, 0x08	; 8
     51e:	ed 91       	ld	r30, X+
     520:	fc 91       	ld	r31, X
     522:	19 97       	sbiw	r26, 0x09	; 9
     524:	88 23       	and	r24, r24
     526:	31 f0       	breq	.+12     	; 0x534 <puts+0x44>
     528:	09 95       	icall
     52a:	89 2b       	or	r24, r25
     52c:	79 f3       	breq	.-34     	; 0x50c <puts+0x1c>
     52e:	df ef       	ldi	r29, 0xFF	; 255
     530:	cf ef       	ldi	r28, 0xFF	; 255
     532:	ec cf       	rjmp	.-40     	; 0x50c <puts+0x1c>
     534:	8a e0       	ldi	r24, 0x0A	; 10
     536:	09 95       	icall
     538:	89 2b       	or	r24, r25
     53a:	19 f0       	breq	.+6      	; 0x542 <puts+0x52>
     53c:	8f ef       	ldi	r24, 0xFF	; 255
     53e:	9f ef       	ldi	r25, 0xFF	; 255
     540:	02 c0       	rjmp	.+4      	; 0x546 <puts+0x56>
     542:	8d 2f       	mov	r24, r29
     544:	9c 2f       	mov	r25, r28
     546:	df 91       	pop	r29
     548:	cf 91       	pop	r28
     54a:	1f 91       	pop	r17
     54c:	0f 91       	pop	r16
     54e:	08 95       	ret

00000550 <scanf>:
     550:	a0 e0       	ldi	r26, 0x00	; 0
     552:	b0 e0       	ldi	r27, 0x00	; 0
     554:	ee ea       	ldi	r30, 0xAE	; 174
     556:	f2 e0       	ldi	r31, 0x02	; 2
     558:	0c 94 7a 08 	jmp	0x10f4	; 0x10f4 <__prologue_saves__+0x20>
     55c:	ae 01       	movw	r20, r28
     55e:	4b 5f       	subi	r20, 0xFB	; 251
     560:	5f 4f       	sbci	r21, 0xFF	; 255
     562:	fa 01       	movw	r30, r20
     564:	61 91       	ld	r22, Z+
     566:	71 91       	ld	r23, Z+
     568:	af 01       	movw	r20, r30
     56a:	80 91 3c 02 	lds	r24, 0x023C	; 0x80023c <__iob>
     56e:	90 91 3d 02 	lds	r25, 0x023D	; 0x80023d <__iob+0x1>
     572:	0e 94 3b 06 	call	0xc76	; 0xc76 <vfscanf>
     576:	e2 e0       	ldi	r30, 0x02	; 2
     578:	0c 94 96 08 	jmp	0x112c	; 0x112c <__epilogue_restores__+0x20>

0000057c <vfprintf>:
     57c:	ab e0       	ldi	r26, 0x0B	; 11
     57e:	b0 e0       	ldi	r27, 0x00	; 0
     580:	e4 ec       	ldi	r30, 0xC4	; 196
     582:	f2 e0       	ldi	r31, 0x02	; 2
     584:	0c 94 6a 08 	jmp	0x10d4	; 0x10d4 <__prologue_saves__>
     588:	6c 01       	movw	r12, r24
     58a:	7b 01       	movw	r14, r22
     58c:	8a 01       	movw	r16, r20
     58e:	fc 01       	movw	r30, r24
     590:	17 82       	std	Z+7, r1	; 0x07
     592:	16 82       	std	Z+6, r1	; 0x06
     594:	83 81       	ldd	r24, Z+3	; 0x03
     596:	81 ff       	sbrs	r24, 1
     598:	cc c1       	rjmp	.+920    	; 0x932 <__stack+0x33>
     59a:	ce 01       	movw	r24, r28
     59c:	01 96       	adiw	r24, 0x01	; 1
     59e:	3c 01       	movw	r6, r24
     5a0:	f6 01       	movw	r30, r12
     5a2:	93 81       	ldd	r25, Z+3	; 0x03
     5a4:	f7 01       	movw	r30, r14
     5a6:	93 fd       	sbrc	r25, 3
     5a8:	85 91       	lpm	r24, Z+
     5aa:	93 ff       	sbrs	r25, 3
     5ac:	81 91       	ld	r24, Z+
     5ae:	7f 01       	movw	r14, r30
     5b0:	88 23       	and	r24, r24
     5b2:	09 f4       	brne	.+2      	; 0x5b6 <vfprintf+0x3a>
     5b4:	ba c1       	rjmp	.+884    	; 0x92a <__stack+0x2b>
     5b6:	85 32       	cpi	r24, 0x25	; 37
     5b8:	39 f4       	brne	.+14     	; 0x5c8 <vfprintf+0x4c>
     5ba:	93 fd       	sbrc	r25, 3
     5bc:	85 91       	lpm	r24, Z+
     5be:	93 ff       	sbrs	r25, 3
     5c0:	81 91       	ld	r24, Z+
     5c2:	7f 01       	movw	r14, r30
     5c4:	85 32       	cpi	r24, 0x25	; 37
     5c6:	29 f4       	brne	.+10     	; 0x5d2 <vfprintf+0x56>
     5c8:	b6 01       	movw	r22, r12
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     5d0:	e7 cf       	rjmp	.-50     	; 0x5a0 <vfprintf+0x24>
     5d2:	91 2c       	mov	r9, r1
     5d4:	21 2c       	mov	r2, r1
     5d6:	31 2c       	mov	r3, r1
     5d8:	ff e1       	ldi	r31, 0x1F	; 31
     5da:	f3 15       	cp	r31, r3
     5dc:	d8 f0       	brcs	.+54     	; 0x614 <vfprintf+0x98>
     5de:	8b 32       	cpi	r24, 0x2B	; 43
     5e0:	79 f0       	breq	.+30     	; 0x600 <vfprintf+0x84>
     5e2:	38 f4       	brcc	.+14     	; 0x5f2 <vfprintf+0x76>
     5e4:	80 32       	cpi	r24, 0x20	; 32
     5e6:	79 f0       	breq	.+30     	; 0x606 <vfprintf+0x8a>
     5e8:	83 32       	cpi	r24, 0x23	; 35
     5ea:	a1 f4       	brne	.+40     	; 0x614 <vfprintf+0x98>
     5ec:	23 2d       	mov	r18, r3
     5ee:	20 61       	ori	r18, 0x10	; 16
     5f0:	1d c0       	rjmp	.+58     	; 0x62c <vfprintf+0xb0>
     5f2:	8d 32       	cpi	r24, 0x2D	; 45
     5f4:	61 f0       	breq	.+24     	; 0x60e <vfprintf+0x92>
     5f6:	80 33       	cpi	r24, 0x30	; 48
     5f8:	69 f4       	brne	.+26     	; 0x614 <vfprintf+0x98>
     5fa:	23 2d       	mov	r18, r3
     5fc:	21 60       	ori	r18, 0x01	; 1
     5fe:	16 c0       	rjmp	.+44     	; 0x62c <vfprintf+0xb0>
     600:	83 2d       	mov	r24, r3
     602:	82 60       	ori	r24, 0x02	; 2
     604:	38 2e       	mov	r3, r24
     606:	e3 2d       	mov	r30, r3
     608:	e4 60       	ori	r30, 0x04	; 4
     60a:	3e 2e       	mov	r3, r30
     60c:	2a c0       	rjmp	.+84     	; 0x662 <vfprintf+0xe6>
     60e:	f3 2d       	mov	r31, r3
     610:	f8 60       	ori	r31, 0x08	; 8
     612:	1d c0       	rjmp	.+58     	; 0x64e <vfprintf+0xd2>
     614:	37 fc       	sbrc	r3, 7
     616:	2d c0       	rjmp	.+90     	; 0x672 <vfprintf+0xf6>
     618:	20 ed       	ldi	r18, 0xD0	; 208
     61a:	28 0f       	add	r18, r24
     61c:	2a 30       	cpi	r18, 0x0A	; 10
     61e:	40 f0       	brcs	.+16     	; 0x630 <vfprintf+0xb4>
     620:	8e 32       	cpi	r24, 0x2E	; 46
     622:	b9 f4       	brne	.+46     	; 0x652 <vfprintf+0xd6>
     624:	36 fc       	sbrc	r3, 6
     626:	81 c1       	rjmp	.+770    	; 0x92a <__stack+0x2b>
     628:	23 2d       	mov	r18, r3
     62a:	20 64       	ori	r18, 0x40	; 64
     62c:	32 2e       	mov	r3, r18
     62e:	19 c0       	rjmp	.+50     	; 0x662 <vfprintf+0xe6>
     630:	36 fe       	sbrs	r3, 6
     632:	06 c0       	rjmp	.+12     	; 0x640 <vfprintf+0xc4>
     634:	8a e0       	ldi	r24, 0x0A	; 10
     636:	98 9e       	mul	r9, r24
     638:	20 0d       	add	r18, r0
     63a:	11 24       	eor	r1, r1
     63c:	92 2e       	mov	r9, r18
     63e:	11 c0       	rjmp	.+34     	; 0x662 <vfprintf+0xe6>
     640:	ea e0       	ldi	r30, 0x0A	; 10
     642:	2e 9e       	mul	r2, r30
     644:	20 0d       	add	r18, r0
     646:	11 24       	eor	r1, r1
     648:	22 2e       	mov	r2, r18
     64a:	f3 2d       	mov	r31, r3
     64c:	f0 62       	ori	r31, 0x20	; 32
     64e:	3f 2e       	mov	r3, r31
     650:	08 c0       	rjmp	.+16     	; 0x662 <vfprintf+0xe6>
     652:	8c 36       	cpi	r24, 0x6C	; 108
     654:	21 f4       	brne	.+8      	; 0x65e <vfprintf+0xe2>
     656:	83 2d       	mov	r24, r3
     658:	80 68       	ori	r24, 0x80	; 128
     65a:	38 2e       	mov	r3, r24
     65c:	02 c0       	rjmp	.+4      	; 0x662 <vfprintf+0xe6>
     65e:	88 36       	cpi	r24, 0x68	; 104
     660:	41 f4       	brne	.+16     	; 0x672 <vfprintf+0xf6>
     662:	f7 01       	movw	r30, r14
     664:	93 fd       	sbrc	r25, 3
     666:	85 91       	lpm	r24, Z+
     668:	93 ff       	sbrs	r25, 3
     66a:	81 91       	ld	r24, Z+
     66c:	7f 01       	movw	r14, r30
     66e:	81 11       	cpse	r24, r1
     670:	b3 cf       	rjmp	.-154    	; 0x5d8 <vfprintf+0x5c>
     672:	98 2f       	mov	r25, r24
     674:	9f 7d       	andi	r25, 0xDF	; 223
     676:	95 54       	subi	r25, 0x45	; 69
     678:	93 30       	cpi	r25, 0x03	; 3
     67a:	28 f4       	brcc	.+10     	; 0x686 <vfprintf+0x10a>
     67c:	0c 5f       	subi	r16, 0xFC	; 252
     67e:	1f 4f       	sbci	r17, 0xFF	; 255
     680:	9f e3       	ldi	r25, 0x3F	; 63
     682:	99 83       	std	Y+1, r25	; 0x01
     684:	0d c0       	rjmp	.+26     	; 0x6a0 <vfprintf+0x124>
     686:	83 36       	cpi	r24, 0x63	; 99
     688:	31 f0       	breq	.+12     	; 0x696 <vfprintf+0x11a>
     68a:	83 37       	cpi	r24, 0x73	; 115
     68c:	71 f0       	breq	.+28     	; 0x6aa <vfprintf+0x12e>
     68e:	83 35       	cpi	r24, 0x53	; 83
     690:	09 f0       	breq	.+2      	; 0x694 <vfprintf+0x118>
     692:	59 c0       	rjmp	.+178    	; 0x746 <vfprintf+0x1ca>
     694:	21 c0       	rjmp	.+66     	; 0x6d8 <vfprintf+0x15c>
     696:	f8 01       	movw	r30, r16
     698:	80 81       	ld	r24, Z
     69a:	89 83       	std	Y+1, r24	; 0x01
     69c:	0e 5f       	subi	r16, 0xFE	; 254
     69e:	1f 4f       	sbci	r17, 0xFF	; 255
     6a0:	88 24       	eor	r8, r8
     6a2:	83 94       	inc	r8
     6a4:	91 2c       	mov	r9, r1
     6a6:	53 01       	movw	r10, r6
     6a8:	13 c0       	rjmp	.+38     	; 0x6d0 <vfprintf+0x154>
     6aa:	28 01       	movw	r4, r16
     6ac:	f2 e0       	ldi	r31, 0x02	; 2
     6ae:	4f 0e       	add	r4, r31
     6b0:	51 1c       	adc	r5, r1
     6b2:	f8 01       	movw	r30, r16
     6b4:	a0 80       	ld	r10, Z
     6b6:	b1 80       	ldd	r11, Z+1	; 0x01
     6b8:	36 fe       	sbrs	r3, 6
     6ba:	03 c0       	rjmp	.+6      	; 0x6c2 <vfprintf+0x146>
     6bc:	69 2d       	mov	r22, r9
     6be:	70 e0       	ldi	r23, 0x00	; 0
     6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <vfprintf+0x14a>
     6c2:	6f ef       	ldi	r22, 0xFF	; 255
     6c4:	7f ef       	ldi	r23, 0xFF	; 255
     6c6:	c5 01       	movw	r24, r10
     6c8:	0e 94 6b 07 	call	0xed6	; 0xed6 <strnlen>
     6cc:	4c 01       	movw	r8, r24
     6ce:	82 01       	movw	r16, r4
     6d0:	f3 2d       	mov	r31, r3
     6d2:	ff 77       	andi	r31, 0x7F	; 127
     6d4:	3f 2e       	mov	r3, r31
     6d6:	16 c0       	rjmp	.+44     	; 0x704 <vfprintf+0x188>
     6d8:	28 01       	movw	r4, r16
     6da:	22 e0       	ldi	r18, 0x02	; 2
     6dc:	42 0e       	add	r4, r18
     6de:	51 1c       	adc	r5, r1
     6e0:	f8 01       	movw	r30, r16
     6e2:	a0 80       	ld	r10, Z
     6e4:	b1 80       	ldd	r11, Z+1	; 0x01
     6e6:	36 fe       	sbrs	r3, 6
     6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <vfprintf+0x174>
     6ea:	69 2d       	mov	r22, r9
     6ec:	70 e0       	ldi	r23, 0x00	; 0
     6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <vfprintf+0x178>
     6f0:	6f ef       	ldi	r22, 0xFF	; 255
     6f2:	7f ef       	ldi	r23, 0xFF	; 255
     6f4:	c5 01       	movw	r24, r10
     6f6:	0e 94 60 07 	call	0xec0	; 0xec0 <strnlen_P>
     6fa:	4c 01       	movw	r8, r24
     6fc:	f3 2d       	mov	r31, r3
     6fe:	f0 68       	ori	r31, 0x80	; 128
     700:	3f 2e       	mov	r3, r31
     702:	82 01       	movw	r16, r4
     704:	33 fc       	sbrc	r3, 3
     706:	1b c0       	rjmp	.+54     	; 0x73e <vfprintf+0x1c2>
     708:	82 2d       	mov	r24, r2
     70a:	90 e0       	ldi	r25, 0x00	; 0
     70c:	88 16       	cp	r8, r24
     70e:	99 06       	cpc	r9, r25
     710:	b0 f4       	brcc	.+44     	; 0x73e <vfprintf+0x1c2>
     712:	b6 01       	movw	r22, r12
     714:	80 e2       	ldi	r24, 0x20	; 32
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     71c:	2a 94       	dec	r2
     71e:	f4 cf       	rjmp	.-24     	; 0x708 <vfprintf+0x18c>
     720:	f5 01       	movw	r30, r10
     722:	37 fc       	sbrc	r3, 7
     724:	85 91       	lpm	r24, Z+
     726:	37 fe       	sbrs	r3, 7
     728:	81 91       	ld	r24, Z+
     72a:	5f 01       	movw	r10, r30
     72c:	b6 01       	movw	r22, r12
     72e:	90 e0       	ldi	r25, 0x00	; 0
     730:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     734:	21 10       	cpse	r2, r1
     736:	2a 94       	dec	r2
     738:	21 e0       	ldi	r18, 0x01	; 1
     73a:	82 1a       	sub	r8, r18
     73c:	91 08       	sbc	r9, r1
     73e:	81 14       	cp	r8, r1
     740:	91 04       	cpc	r9, r1
     742:	71 f7       	brne	.-36     	; 0x720 <vfprintf+0x1a4>
     744:	e8 c0       	rjmp	.+464    	; 0x916 <__stack+0x17>
     746:	84 36       	cpi	r24, 0x64	; 100
     748:	11 f0       	breq	.+4      	; 0x74e <vfprintf+0x1d2>
     74a:	89 36       	cpi	r24, 0x69	; 105
     74c:	41 f5       	brne	.+80     	; 0x79e <vfprintf+0x222>
     74e:	f8 01       	movw	r30, r16
     750:	37 fe       	sbrs	r3, 7
     752:	07 c0       	rjmp	.+14     	; 0x762 <vfprintf+0x1e6>
     754:	60 81       	ld	r22, Z
     756:	71 81       	ldd	r23, Z+1	; 0x01
     758:	82 81       	ldd	r24, Z+2	; 0x02
     75a:	93 81       	ldd	r25, Z+3	; 0x03
     75c:	0c 5f       	subi	r16, 0xFC	; 252
     75e:	1f 4f       	sbci	r17, 0xFF	; 255
     760:	08 c0       	rjmp	.+16     	; 0x772 <vfprintf+0x1f6>
     762:	60 81       	ld	r22, Z
     764:	71 81       	ldd	r23, Z+1	; 0x01
     766:	07 2e       	mov	r0, r23
     768:	00 0c       	add	r0, r0
     76a:	88 0b       	sbc	r24, r24
     76c:	99 0b       	sbc	r25, r25
     76e:	0e 5f       	subi	r16, 0xFE	; 254
     770:	1f 4f       	sbci	r17, 0xFF	; 255
     772:	f3 2d       	mov	r31, r3
     774:	ff 76       	andi	r31, 0x6F	; 111
     776:	3f 2e       	mov	r3, r31
     778:	97 ff       	sbrs	r25, 7
     77a:	09 c0       	rjmp	.+18     	; 0x78e <vfprintf+0x212>
     77c:	90 95       	com	r25
     77e:	80 95       	com	r24
     780:	70 95       	com	r23
     782:	61 95       	neg	r22
     784:	7f 4f       	sbci	r23, 0xFF	; 255
     786:	8f 4f       	sbci	r24, 0xFF	; 255
     788:	9f 4f       	sbci	r25, 0xFF	; 255
     78a:	f0 68       	ori	r31, 0x80	; 128
     78c:	3f 2e       	mov	r3, r31
     78e:	2a e0       	ldi	r18, 0x0A	; 10
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	a3 01       	movw	r20, r6
     794:	0e 94 09 08 	call	0x1012	; 0x1012 <__ultoa_invert>
     798:	88 2e       	mov	r8, r24
     79a:	86 18       	sub	r8, r6
     79c:	45 c0       	rjmp	.+138    	; 0x828 <vfprintf+0x2ac>
     79e:	85 37       	cpi	r24, 0x75	; 117
     7a0:	31 f4       	brne	.+12     	; 0x7ae <vfprintf+0x232>
     7a2:	23 2d       	mov	r18, r3
     7a4:	2f 7e       	andi	r18, 0xEF	; 239
     7a6:	b2 2e       	mov	r11, r18
     7a8:	2a e0       	ldi	r18, 0x0A	; 10
     7aa:	30 e0       	ldi	r19, 0x00	; 0
     7ac:	25 c0       	rjmp	.+74     	; 0x7f8 <vfprintf+0x27c>
     7ae:	93 2d       	mov	r25, r3
     7b0:	99 7f       	andi	r25, 0xF9	; 249
     7b2:	b9 2e       	mov	r11, r25
     7b4:	8f 36       	cpi	r24, 0x6F	; 111
     7b6:	c1 f0       	breq	.+48     	; 0x7e8 <vfprintf+0x26c>
     7b8:	18 f4       	brcc	.+6      	; 0x7c0 <vfprintf+0x244>
     7ba:	88 35       	cpi	r24, 0x58	; 88
     7bc:	79 f0       	breq	.+30     	; 0x7dc <vfprintf+0x260>
     7be:	b5 c0       	rjmp	.+362    	; 0x92a <__stack+0x2b>
     7c0:	80 37       	cpi	r24, 0x70	; 112
     7c2:	19 f0       	breq	.+6      	; 0x7ca <vfprintf+0x24e>
     7c4:	88 37       	cpi	r24, 0x78	; 120
     7c6:	21 f0       	breq	.+8      	; 0x7d0 <vfprintf+0x254>
     7c8:	b0 c0       	rjmp	.+352    	; 0x92a <__stack+0x2b>
     7ca:	e9 2f       	mov	r30, r25
     7cc:	e0 61       	ori	r30, 0x10	; 16
     7ce:	be 2e       	mov	r11, r30
     7d0:	b4 fe       	sbrs	r11, 4
     7d2:	0d c0       	rjmp	.+26     	; 0x7ee <vfprintf+0x272>
     7d4:	fb 2d       	mov	r31, r11
     7d6:	f4 60       	ori	r31, 0x04	; 4
     7d8:	bf 2e       	mov	r11, r31
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <vfprintf+0x272>
     7dc:	34 fe       	sbrs	r3, 4
     7de:	0a c0       	rjmp	.+20     	; 0x7f4 <vfprintf+0x278>
     7e0:	29 2f       	mov	r18, r25
     7e2:	26 60       	ori	r18, 0x06	; 6
     7e4:	b2 2e       	mov	r11, r18
     7e6:	06 c0       	rjmp	.+12     	; 0x7f4 <vfprintf+0x278>
     7e8:	28 e0       	ldi	r18, 0x08	; 8
     7ea:	30 e0       	ldi	r19, 0x00	; 0
     7ec:	05 c0       	rjmp	.+10     	; 0x7f8 <vfprintf+0x27c>
     7ee:	20 e1       	ldi	r18, 0x10	; 16
     7f0:	30 e0       	ldi	r19, 0x00	; 0
     7f2:	02 c0       	rjmp	.+4      	; 0x7f8 <vfprintf+0x27c>
     7f4:	20 e1       	ldi	r18, 0x10	; 16
     7f6:	32 e0       	ldi	r19, 0x02	; 2
     7f8:	f8 01       	movw	r30, r16
     7fa:	b7 fe       	sbrs	r11, 7
     7fc:	07 c0       	rjmp	.+14     	; 0x80c <vfprintf+0x290>
     7fe:	60 81       	ld	r22, Z
     800:	71 81       	ldd	r23, Z+1	; 0x01
     802:	82 81       	ldd	r24, Z+2	; 0x02
     804:	93 81       	ldd	r25, Z+3	; 0x03
     806:	0c 5f       	subi	r16, 0xFC	; 252
     808:	1f 4f       	sbci	r17, 0xFF	; 255
     80a:	06 c0       	rjmp	.+12     	; 0x818 <vfprintf+0x29c>
     80c:	60 81       	ld	r22, Z
     80e:	71 81       	ldd	r23, Z+1	; 0x01
     810:	80 e0       	ldi	r24, 0x00	; 0
     812:	90 e0       	ldi	r25, 0x00	; 0
     814:	0e 5f       	subi	r16, 0xFE	; 254
     816:	1f 4f       	sbci	r17, 0xFF	; 255
     818:	a3 01       	movw	r20, r6
     81a:	0e 94 09 08 	call	0x1012	; 0x1012 <__ultoa_invert>
     81e:	88 2e       	mov	r8, r24
     820:	86 18       	sub	r8, r6
     822:	fb 2d       	mov	r31, r11
     824:	ff 77       	andi	r31, 0x7F	; 127
     826:	3f 2e       	mov	r3, r31
     828:	36 fe       	sbrs	r3, 6
     82a:	0d c0       	rjmp	.+26     	; 0x846 <vfprintf+0x2ca>
     82c:	23 2d       	mov	r18, r3
     82e:	2e 7f       	andi	r18, 0xFE	; 254
     830:	a2 2e       	mov	r10, r18
     832:	89 14       	cp	r8, r9
     834:	58 f4       	brcc	.+22     	; 0x84c <vfprintf+0x2d0>
     836:	34 fe       	sbrs	r3, 4
     838:	0b c0       	rjmp	.+22     	; 0x850 <vfprintf+0x2d4>
     83a:	32 fc       	sbrc	r3, 2
     83c:	09 c0       	rjmp	.+18     	; 0x850 <vfprintf+0x2d4>
     83e:	83 2d       	mov	r24, r3
     840:	8e 7e       	andi	r24, 0xEE	; 238
     842:	a8 2e       	mov	r10, r24
     844:	05 c0       	rjmp	.+10     	; 0x850 <vfprintf+0x2d4>
     846:	b8 2c       	mov	r11, r8
     848:	a3 2c       	mov	r10, r3
     84a:	03 c0       	rjmp	.+6      	; 0x852 <vfprintf+0x2d6>
     84c:	b8 2c       	mov	r11, r8
     84e:	01 c0       	rjmp	.+2      	; 0x852 <vfprintf+0x2d6>
     850:	b9 2c       	mov	r11, r9
     852:	a4 fe       	sbrs	r10, 4
     854:	0f c0       	rjmp	.+30     	; 0x874 <vfprintf+0x2f8>
     856:	fe 01       	movw	r30, r28
     858:	e8 0d       	add	r30, r8
     85a:	f1 1d       	adc	r31, r1
     85c:	80 81       	ld	r24, Z
     85e:	80 33       	cpi	r24, 0x30	; 48
     860:	21 f4       	brne	.+8      	; 0x86a <vfprintf+0x2ee>
     862:	9a 2d       	mov	r25, r10
     864:	99 7e       	andi	r25, 0xE9	; 233
     866:	a9 2e       	mov	r10, r25
     868:	09 c0       	rjmp	.+18     	; 0x87c <vfprintf+0x300>
     86a:	a2 fe       	sbrs	r10, 2
     86c:	06 c0       	rjmp	.+12     	; 0x87a <vfprintf+0x2fe>
     86e:	b3 94       	inc	r11
     870:	b3 94       	inc	r11
     872:	04 c0       	rjmp	.+8      	; 0x87c <vfprintf+0x300>
     874:	8a 2d       	mov	r24, r10
     876:	86 78       	andi	r24, 0x86	; 134
     878:	09 f0       	breq	.+2      	; 0x87c <vfprintf+0x300>
     87a:	b3 94       	inc	r11
     87c:	a3 fc       	sbrc	r10, 3
     87e:	11 c0       	rjmp	.+34     	; 0x8a2 <vfprintf+0x326>
     880:	a0 fe       	sbrs	r10, 0
     882:	06 c0       	rjmp	.+12     	; 0x890 <vfprintf+0x314>
     884:	b2 14       	cp	r11, r2
     886:	88 f4       	brcc	.+34     	; 0x8aa <vfprintf+0x32e>
     888:	28 0c       	add	r2, r8
     88a:	92 2c       	mov	r9, r2
     88c:	9b 18       	sub	r9, r11
     88e:	0e c0       	rjmp	.+28     	; 0x8ac <vfprintf+0x330>
     890:	b2 14       	cp	r11, r2
     892:	60 f4       	brcc	.+24     	; 0x8ac <vfprintf+0x330>
     894:	b6 01       	movw	r22, r12
     896:	80 e2       	ldi	r24, 0x20	; 32
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     89e:	b3 94       	inc	r11
     8a0:	f7 cf       	rjmp	.-18     	; 0x890 <vfprintf+0x314>
     8a2:	b2 14       	cp	r11, r2
     8a4:	18 f4       	brcc	.+6      	; 0x8ac <vfprintf+0x330>
     8a6:	2b 18       	sub	r2, r11
     8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x332>
     8aa:	98 2c       	mov	r9, r8
     8ac:	21 2c       	mov	r2, r1
     8ae:	a4 fe       	sbrs	r10, 4
     8b0:	10 c0       	rjmp	.+32     	; 0x8d2 <vfprintf+0x356>
     8b2:	b6 01       	movw	r22, r12
     8b4:	80 e3       	ldi	r24, 0x30	; 48
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     8bc:	a2 fe       	sbrs	r10, 2
     8be:	17 c0       	rjmp	.+46     	; 0x8ee <vfprintf+0x372>
     8c0:	a1 fc       	sbrc	r10, 1
     8c2:	03 c0       	rjmp	.+6      	; 0x8ca <vfprintf+0x34e>
     8c4:	88 e7       	ldi	r24, 0x78	; 120
     8c6:	90 e0       	ldi	r25, 0x00	; 0
     8c8:	02 c0       	rjmp	.+4      	; 0x8ce <vfprintf+0x352>
     8ca:	88 e5       	ldi	r24, 0x58	; 88
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	b6 01       	movw	r22, r12
     8d0:	0c c0       	rjmp	.+24     	; 0x8ea <vfprintf+0x36e>
     8d2:	8a 2d       	mov	r24, r10
     8d4:	86 78       	andi	r24, 0x86	; 134
     8d6:	59 f0       	breq	.+22     	; 0x8ee <vfprintf+0x372>
     8d8:	a1 fe       	sbrs	r10, 1
     8da:	02 c0       	rjmp	.+4      	; 0x8e0 <vfprintf+0x364>
     8dc:	8b e2       	ldi	r24, 0x2B	; 43
     8de:	01 c0       	rjmp	.+2      	; 0x8e2 <vfprintf+0x366>
     8e0:	80 e2       	ldi	r24, 0x20	; 32
     8e2:	a7 fc       	sbrc	r10, 7
     8e4:	8d e2       	ldi	r24, 0x2D	; 45
     8e6:	b6 01       	movw	r22, r12
     8e8:	90 e0       	ldi	r25, 0x00	; 0
     8ea:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     8ee:	89 14       	cp	r8, r9
     8f0:	38 f4       	brcc	.+14     	; 0x900 <__stack+0x1>
     8f2:	b6 01       	movw	r22, r12
     8f4:	80 e3       	ldi	r24, 0x30	; 48
     8f6:	90 e0       	ldi	r25, 0x00	; 0
     8f8:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     8fc:	9a 94       	dec	r9
     8fe:	f7 cf       	rjmp	.-18     	; 0x8ee <vfprintf+0x372>
     900:	8a 94       	dec	r8
     902:	f3 01       	movw	r30, r6
     904:	e8 0d       	add	r30, r8
     906:	f1 1d       	adc	r31, r1
     908:	80 81       	ld	r24, Z
     90a:	b6 01       	movw	r22, r12
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     912:	81 10       	cpse	r8, r1
     914:	f5 cf       	rjmp	.-22     	; 0x900 <__stack+0x1>
     916:	22 20       	and	r2, r2
     918:	09 f4       	brne	.+2      	; 0x91c <__stack+0x1d>
     91a:	42 ce       	rjmp	.-892    	; 0x5a0 <vfprintf+0x24>
     91c:	b6 01       	movw	r22, r12
     91e:	80 e2       	ldi	r24, 0x20	; 32
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e 94 b4 07 	call	0xf68	; 0xf68 <fputc>
     926:	2a 94       	dec	r2
     928:	f6 cf       	rjmp	.-20     	; 0x916 <__stack+0x17>
     92a:	f6 01       	movw	r30, r12
     92c:	86 81       	ldd	r24, Z+6	; 0x06
     92e:	97 81       	ldd	r25, Z+7	; 0x07
     930:	02 c0       	rjmp	.+4      	; 0x936 <__stack+0x37>
     932:	8f ef       	ldi	r24, 0xFF	; 255
     934:	9f ef       	ldi	r25, 0xFF	; 255
     936:	2b 96       	adiw	r28, 0x0b	; 11
     938:	e2 e1       	ldi	r30, 0x12	; 18
     93a:	0c 94 86 08 	jmp	0x110c	; 0x110c <__epilogue_restores__>

0000093e <putval>:
     93e:	20 fd       	sbrc	r18, 0
     940:	09 c0       	rjmp	.+18     	; 0x954 <putval+0x16>
     942:	fc 01       	movw	r30, r24
     944:	23 fd       	sbrc	r18, 3
     946:	05 c0       	rjmp	.+10     	; 0x952 <putval+0x14>
     948:	22 ff       	sbrs	r18, 2
     94a:	02 c0       	rjmp	.+4      	; 0x950 <putval+0x12>
     94c:	73 83       	std	Z+3, r23	; 0x03
     94e:	62 83       	std	Z+2, r22	; 0x02
     950:	51 83       	std	Z+1, r21	; 0x01
     952:	40 83       	st	Z, r20
     954:	08 95       	ret

00000956 <mulacc>:
     956:	44 fd       	sbrc	r20, 4
     958:	17 c0       	rjmp	.+46     	; 0x988 <mulacc+0x32>
     95a:	46 fd       	sbrc	r20, 6
     95c:	17 c0       	rjmp	.+46     	; 0x98c <mulacc+0x36>
     95e:	ab 01       	movw	r20, r22
     960:	bc 01       	movw	r22, r24
     962:	da 01       	movw	r26, r20
     964:	fb 01       	movw	r30, r22
     966:	aa 0f       	add	r26, r26
     968:	bb 1f       	adc	r27, r27
     96a:	ee 1f       	adc	r30, r30
     96c:	ff 1f       	adc	r31, r31
     96e:	10 94       	com	r1
     970:	d1 f7       	brne	.-12     	; 0x966 <mulacc+0x10>
     972:	4a 0f       	add	r20, r26
     974:	5b 1f       	adc	r21, r27
     976:	6e 1f       	adc	r22, r30
     978:	7f 1f       	adc	r23, r31
     97a:	cb 01       	movw	r24, r22
     97c:	ba 01       	movw	r22, r20
     97e:	66 0f       	add	r22, r22
     980:	77 1f       	adc	r23, r23
     982:	88 1f       	adc	r24, r24
     984:	99 1f       	adc	r25, r25
     986:	09 c0       	rjmp	.+18     	; 0x99a <mulacc+0x44>
     988:	33 e0       	ldi	r19, 0x03	; 3
     98a:	01 c0       	rjmp	.+2      	; 0x98e <mulacc+0x38>
     98c:	34 e0       	ldi	r19, 0x04	; 4
     98e:	66 0f       	add	r22, r22
     990:	77 1f       	adc	r23, r23
     992:	88 1f       	adc	r24, r24
     994:	99 1f       	adc	r25, r25
     996:	31 50       	subi	r19, 0x01	; 1
     998:	d1 f7       	brne	.-12     	; 0x98e <mulacc+0x38>
     99a:	62 0f       	add	r22, r18
     99c:	71 1d       	adc	r23, r1
     99e:	81 1d       	adc	r24, r1
     9a0:	91 1d       	adc	r25, r1
     9a2:	08 95       	ret

000009a4 <skip_spaces>:
     9a4:	0f 93       	push	r16
     9a6:	1f 93       	push	r17
     9a8:	cf 93       	push	r28
     9aa:	df 93       	push	r29
     9ac:	8c 01       	movw	r16, r24
     9ae:	c8 01       	movw	r24, r16
     9b0:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     9b4:	ec 01       	movw	r28, r24
     9b6:	97 fd       	sbrc	r25, 7
     9b8:	08 c0       	rjmp	.+16     	; 0x9ca <skip_spaces+0x26>
     9ba:	0e 94 4c 07 	call	0xe98	; 0xe98 <isspace>
     9be:	89 2b       	or	r24, r25
     9c0:	b1 f7       	brne	.-20     	; 0x9ae <skip_spaces+0xa>
     9c2:	b8 01       	movw	r22, r16
     9c4:	ce 01       	movw	r24, r28
     9c6:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <ungetc>
     9ca:	ce 01       	movw	r24, r28
     9cc:	df 91       	pop	r29
     9ce:	cf 91       	pop	r28
     9d0:	1f 91       	pop	r17
     9d2:	0f 91       	pop	r16
     9d4:	08 95       	ret

000009d6 <conv_int>:
     9d6:	8f 92       	push	r8
     9d8:	9f 92       	push	r9
     9da:	af 92       	push	r10
     9dc:	bf 92       	push	r11
     9de:	ef 92       	push	r14
     9e0:	ff 92       	push	r15
     9e2:	0f 93       	push	r16
     9e4:	1f 93       	push	r17
     9e6:	cf 93       	push	r28
     9e8:	df 93       	push	r29
     9ea:	8c 01       	movw	r16, r24
     9ec:	d6 2f       	mov	r29, r22
     9ee:	7a 01       	movw	r14, r20
     9f0:	b2 2e       	mov	r11, r18
     9f2:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     9f6:	9c 01       	movw	r18, r24
     9f8:	33 27       	eor	r19, r19
     9fa:	2b 32       	cpi	r18, 0x2B	; 43
     9fc:	31 05       	cpc	r19, r1
     9fe:	31 f0       	breq	.+12     	; 0xa0c <conv_int+0x36>
     a00:	2d 32       	cpi	r18, 0x2D	; 45
     a02:	31 05       	cpc	r19, r1
     a04:	61 f4       	brne	.+24     	; 0xa1e <conv_int+0x48>
     a06:	8b 2d       	mov	r24, r11
     a08:	80 68       	ori	r24, 0x80	; 128
     a0a:	b8 2e       	mov	r11, r24
     a0c:	d1 50       	subi	r29, 0x01	; 1
     a0e:	11 f4       	brne	.+4      	; 0xa14 <conv_int+0x3e>
     a10:	80 e0       	ldi	r24, 0x00	; 0
     a12:	68 c0       	rjmp	.+208    	; 0xae4 <conv_int+0x10e>
     a14:	c8 01       	movw	r24, r16
     a16:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     a1a:	97 fd       	sbrc	r25, 7
     a1c:	f9 cf       	rjmp	.-14     	; 0xa10 <conv_int+0x3a>
     a1e:	cb 2d       	mov	r28, r11
     a20:	cd 7f       	andi	r28, 0xFD	; 253
     a22:	2b 2d       	mov	r18, r11
     a24:	20 73       	andi	r18, 0x30	; 48
     a26:	09 f5       	brne	.+66     	; 0xa6a <conv_int+0x94>
     a28:	80 33       	cpi	r24, 0x30	; 48
     a2a:	f9 f4       	brne	.+62     	; 0xa6a <conv_int+0x94>
     a2c:	aa 24       	eor	r10, r10
     a2e:	aa 94       	dec	r10
     a30:	ad 0e       	add	r10, r29
     a32:	09 f4       	brne	.+2      	; 0xa36 <conv_int+0x60>
     a34:	43 c0       	rjmp	.+134    	; 0xabc <conv_int+0xe6>
     a36:	c8 01       	movw	r24, r16
     a38:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     a3c:	97 fd       	sbrc	r25, 7
     a3e:	3e c0       	rjmp	.+124    	; 0xabc <conv_int+0xe6>
     a40:	9c 01       	movw	r18, r24
     a42:	2f 7d       	andi	r18, 0xDF	; 223
     a44:	33 27       	eor	r19, r19
     a46:	28 35       	cpi	r18, 0x58	; 88
     a48:	31 05       	cpc	r19, r1
     a4a:	49 f4       	brne	.+18     	; 0xa5e <conv_int+0x88>
     a4c:	c2 64       	ori	r28, 0x42	; 66
     a4e:	d2 50       	subi	r29, 0x02	; 2
     a50:	a9 f1       	breq	.+106    	; 0xabc <conv_int+0xe6>
     a52:	c8 01       	movw	r24, r16
     a54:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     a58:	97 ff       	sbrs	r25, 7
     a5a:	07 c0       	rjmp	.+14     	; 0xa6a <conv_int+0x94>
     a5c:	2f c0       	rjmp	.+94     	; 0xabc <conv_int+0xe6>
     a5e:	b6 fe       	sbrs	r11, 6
     a60:	02 c0       	rjmp	.+4      	; 0xa66 <conv_int+0x90>
     a62:	c2 60       	ori	r28, 0x02	; 2
     a64:	01 c0       	rjmp	.+2      	; 0xa68 <conv_int+0x92>
     a66:	c2 61       	ori	r28, 0x12	; 18
     a68:	da 2d       	mov	r29, r10
     a6a:	81 2c       	mov	r8, r1
     a6c:	91 2c       	mov	r9, r1
     a6e:	54 01       	movw	r10, r8
     a70:	20 ed       	ldi	r18, 0xD0	; 208
     a72:	28 0f       	add	r18, r24
     a74:	28 30       	cpi	r18, 0x08	; 8
     a76:	80 f0       	brcs	.+32     	; 0xa98 <conv_int+0xc2>
     a78:	c4 ff       	sbrs	r28, 4
     a7a:	04 c0       	rjmp	.+8      	; 0xa84 <conv_int+0xae>
     a7c:	b8 01       	movw	r22, r16
     a7e:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <ungetc>
     a82:	19 c0       	rjmp	.+50     	; 0xab6 <conv_int+0xe0>
     a84:	2a 30       	cpi	r18, 0x0A	; 10
     a86:	40 f0       	brcs	.+16     	; 0xa98 <conv_int+0xc2>
     a88:	c6 ff       	sbrs	r28, 6
     a8a:	f8 cf       	rjmp	.-16     	; 0xa7c <conv_int+0xa6>
     a8c:	2f 7d       	andi	r18, 0xDF	; 223
     a8e:	3f ee       	ldi	r19, 0xEF	; 239
     a90:	32 0f       	add	r19, r18
     a92:	36 30       	cpi	r19, 0x06	; 6
     a94:	98 f7       	brcc	.-26     	; 0xa7c <conv_int+0xa6>
     a96:	27 50       	subi	r18, 0x07	; 7
     a98:	4c 2f       	mov	r20, r28
     a9a:	c5 01       	movw	r24, r10
     a9c:	b4 01       	movw	r22, r8
     a9e:	0e 94 ab 04 	call	0x956	; 0x956 <mulacc>
     aa2:	4b 01       	movw	r8, r22
     aa4:	5c 01       	movw	r10, r24
     aa6:	c2 60       	ori	r28, 0x02	; 2
     aa8:	d1 50       	subi	r29, 0x01	; 1
     aaa:	59 f0       	breq	.+22     	; 0xac2 <conv_int+0xec>
     aac:	c8 01       	movw	r24, r16
     aae:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     ab2:	97 ff       	sbrs	r25, 7
     ab4:	dd cf       	rjmp	.-70     	; 0xa70 <conv_int+0x9a>
     ab6:	c1 fd       	sbrc	r28, 1
     ab8:	04 c0       	rjmp	.+8      	; 0xac2 <conv_int+0xec>
     aba:	aa cf       	rjmp	.-172    	; 0xa10 <conv_int+0x3a>
     abc:	81 2c       	mov	r8, r1
     abe:	91 2c       	mov	r9, r1
     ac0:	54 01       	movw	r10, r8
     ac2:	c7 ff       	sbrs	r28, 7
     ac4:	08 c0       	rjmp	.+16     	; 0xad6 <conv_int+0x100>
     ac6:	b0 94       	com	r11
     ac8:	a0 94       	com	r10
     aca:	90 94       	com	r9
     acc:	80 94       	com	r8
     ace:	81 1c       	adc	r8, r1
     ad0:	91 1c       	adc	r9, r1
     ad2:	a1 1c       	adc	r10, r1
     ad4:	b1 1c       	adc	r11, r1
     ad6:	2c 2f       	mov	r18, r28
     ad8:	b5 01       	movw	r22, r10
     ada:	a4 01       	movw	r20, r8
     adc:	c7 01       	movw	r24, r14
     ade:	0e 94 9f 04 	call	0x93e	; 0x93e <putval>
     ae2:	81 e0       	ldi	r24, 0x01	; 1
     ae4:	df 91       	pop	r29
     ae6:	cf 91       	pop	r28
     ae8:	1f 91       	pop	r17
     aea:	0f 91       	pop	r16
     aec:	ff 90       	pop	r15
     aee:	ef 90       	pop	r14
     af0:	bf 90       	pop	r11
     af2:	af 90       	pop	r10
     af4:	9f 90       	pop	r9
     af6:	8f 90       	pop	r8
     af8:	08 95       	ret

00000afa <conv_brk>:
     afa:	a0 e2       	ldi	r26, 0x20	; 32
     afc:	b0 e0       	ldi	r27, 0x00	; 0
     afe:	e3 e8       	ldi	r30, 0x83	; 131
     b00:	f5 e0       	ldi	r31, 0x05	; 5
     b02:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__prologue_saves__+0x6>
     b06:	5c 01       	movw	r10, r24
     b08:	96 2e       	mov	r9, r22
     b0a:	7a 01       	movw	r14, r20
     b0c:	f9 01       	movw	r30, r18
     b0e:	8e 01       	movw	r16, r28
     b10:	0f 5f       	subi	r16, 0xFF	; 255
     b12:	1f 4f       	sbci	r17, 0xFF	; 255
     b14:	68 01       	movw	r12, r16
     b16:	80 e2       	ldi	r24, 0x20	; 32
     b18:	d8 01       	movw	r26, r16
     b1a:	1d 92       	st	X+, r1
     b1c:	8a 95       	dec	r24
     b1e:	e9 f7       	brne	.-6      	; 0xb1a <conv_brk+0x20>
     b20:	d5 01       	movw	r26, r10
     b22:	13 96       	adiw	r26, 0x03	; 3
     b24:	8c 90       	ld	r8, X
     b26:	80 e0       	ldi	r24, 0x00	; 0
     b28:	90 e0       	ldi	r25, 0x00	; 0
     b2a:	61 2c       	mov	r6, r1
     b2c:	71 2c       	mov	r7, r1
     b2e:	30 e0       	ldi	r19, 0x00	; 0
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	83 fc       	sbrc	r8, 3
     b36:	25 91       	lpm	r18, Z+
     b38:	83 fe       	sbrs	r8, 3
     b3a:	21 91       	ld	r18, Z+
     b3c:	8f 01       	movw	r16, r30
     b3e:	52 2e       	mov	r5, r18
     b40:	21 11       	cpse	r18, r1
     b42:	03 c0       	rjmp	.+6      	; 0xb4a <conv_brk+0x50>
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	92 c0       	rjmp	.+292    	; 0xc6e <conv_brk+0x174>
     b4a:	2e 35       	cpi	r18, 0x5E	; 94
     b4c:	11 f4       	brne	.+4      	; 0xb52 <conv_brk+0x58>
     b4e:	00 97       	sbiw	r24, 0x00	; 0
     b50:	51 f1       	breq	.+84     	; 0xba6 <conv_brk+0xac>
     b52:	43 2f       	mov	r20, r19
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	48 17       	cp	r20, r24
     b58:	59 07       	cpc	r21, r25
     b5a:	3c f4       	brge	.+14     	; 0xb6a <conv_brk+0x70>
     b5c:	2d 35       	cpi	r18, 0x5D	; 93
     b5e:	59 f1       	breq	.+86     	; 0xbb6 <conv_brk+0xbc>
     b60:	2d 32       	cpi	r18, 0x2D	; 45
     b62:	19 f4       	brne	.+6      	; 0xb6a <conv_brk+0x70>
     b64:	77 20       	and	r7, r7
     b66:	09 f1       	breq	.+66     	; 0xbaa <conv_brk+0xb0>
     b68:	03 c0       	rjmp	.+6      	; 0xb70 <conv_brk+0x76>
     b6a:	77 20       	and	r7, r7
     b6c:	09 f4       	brne	.+2      	; 0xb70 <conv_brk+0x76>
     b6e:	6a c0       	rjmp	.+212    	; 0xc44 <conv_brk+0x14a>
     b70:	45 2d       	mov	r20, r5
     b72:	46 95       	lsr	r20
     b74:	46 95       	lsr	r20
     b76:	46 95       	lsr	r20
     b78:	d6 01       	movw	r26, r12
     b7a:	a4 0f       	add	r26, r20
     b7c:	b1 1d       	adc	r27, r1
     b7e:	45 2d       	mov	r20, r5
     b80:	47 70       	andi	r20, 0x07	; 7
     b82:	8b 01       	movw	r16, r22
     b84:	02 c0       	rjmp	.+4      	; 0xb8a <conv_brk+0x90>
     b86:	00 0f       	add	r16, r16
     b88:	11 1f       	adc	r17, r17
     b8a:	4a 95       	dec	r20
     b8c:	e2 f7       	brpl	.-8      	; 0xb86 <conv_brk+0x8c>
     b8e:	a8 01       	movw	r20, r16
     b90:	5c 91       	ld	r21, X
     b92:	45 2b       	or	r20, r21
     b94:	4c 93       	st	X, r20
     b96:	65 14       	cp	r6, r5
     b98:	59 f0       	breq	.+22     	; 0xbb0 <conv_brk+0xb6>
     b9a:	56 14       	cp	r5, r6
     b9c:	10 f4       	brcc	.+4      	; 0xba2 <conv_brk+0xa8>
     b9e:	53 94       	inc	r5
     ba0:	e7 cf       	rjmp	.-50     	; 0xb70 <conv_brk+0x76>
     ba2:	5a 94       	dec	r5
     ba4:	e5 cf       	rjmp	.-54     	; 0xb70 <conv_brk+0x76>
     ba6:	31 e0       	ldi	r19, 0x01	; 1
     ba8:	04 c0       	rjmp	.+8      	; 0xbb2 <conv_brk+0xb8>
     baa:	77 24       	eor	r7, r7
     bac:	73 94       	inc	r7
     bae:	01 c0       	rjmp	.+2      	; 0xbb2 <conv_brk+0xb8>
     bb0:	71 2c       	mov	r7, r1
     bb2:	01 96       	adiw	r24, 0x01	; 1
     bb4:	bf cf       	rjmp	.-130    	; 0xb34 <conv_brk+0x3a>
     bb6:	77 20       	and	r7, r7
     bb8:	19 f0       	breq	.+6      	; 0xbc0 <conv_brk+0xc6>
     bba:	8e 81       	ldd	r24, Y+6	; 0x06
     bbc:	80 62       	ori	r24, 0x20	; 32
     bbe:	8e 83       	std	Y+6, r24	; 0x06
     bc0:	31 11       	cpse	r19, r1
     bc2:	03 c0       	rjmp	.+6      	; 0xbca <conv_brk+0xd0>
     bc4:	88 24       	eor	r8, r8
     bc6:	83 94       	inc	r8
     bc8:	17 c0       	rjmp	.+46     	; 0xbf8 <conv_brk+0xfe>
     bca:	f6 01       	movw	r30, r12
     bcc:	9e 01       	movw	r18, r28
     bce:	2f 5d       	subi	r18, 0xDF	; 223
     bd0:	3f 4f       	sbci	r19, 0xFF	; 255
     bd2:	80 81       	ld	r24, Z
     bd4:	80 95       	com	r24
     bd6:	81 93       	st	Z+, r24
     bd8:	2e 17       	cp	r18, r30
     bda:	3f 07       	cpc	r19, r31
     bdc:	d1 f7       	brne	.-12     	; 0xbd2 <conv_brk+0xd8>
     bde:	f2 cf       	rjmp	.-28     	; 0xbc4 <conv_brk+0xca>
     be0:	e1 14       	cp	r14, r1
     be2:	f1 04       	cpc	r15, r1
     be4:	29 f0       	breq	.+10     	; 0xbf0 <conv_brk+0xf6>
     be6:	d7 01       	movw	r26, r14
     be8:	8c 93       	st	X, r24
     bea:	f7 01       	movw	r30, r14
     bec:	31 96       	adiw	r30, 0x01	; 1
     bee:	7f 01       	movw	r14, r30
     bf0:	9a 94       	dec	r9
     bf2:	81 2c       	mov	r8, r1
     bf4:	99 20       	and	r9, r9
     bf6:	f9 f0       	breq	.+62     	; 0xc36 <conv_brk+0x13c>
     bf8:	c5 01       	movw	r24, r10
     bfa:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     bfe:	97 fd       	sbrc	r25, 7
     c00:	18 c0       	rjmp	.+48     	; 0xc32 <conv_brk+0x138>
     c02:	fc 01       	movw	r30, r24
     c04:	ff 27       	eor	r31, r31
     c06:	23 e0       	ldi	r18, 0x03	; 3
     c08:	f5 95       	asr	r31
     c0a:	e7 95       	ror	r30
     c0c:	2a 95       	dec	r18
     c0e:	e1 f7       	brne	.-8      	; 0xc08 <conv_brk+0x10e>
     c10:	ec 0d       	add	r30, r12
     c12:	fd 1d       	adc	r31, r13
     c14:	20 81       	ld	r18, Z
     c16:	30 e0       	ldi	r19, 0x00	; 0
     c18:	ac 01       	movw	r20, r24
     c1a:	47 70       	andi	r20, 0x07	; 7
     c1c:	55 27       	eor	r21, r21
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <conv_brk+0x12a>
     c20:	35 95       	asr	r19
     c22:	27 95       	ror	r18
     c24:	4a 95       	dec	r20
     c26:	e2 f7       	brpl	.-8      	; 0xc20 <conv_brk+0x126>
     c28:	20 fd       	sbrc	r18, 0
     c2a:	da cf       	rjmp	.-76     	; 0xbe0 <conv_brk+0xe6>
     c2c:	b5 01       	movw	r22, r10
     c2e:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <ungetc>
     c32:	81 10       	cpse	r8, r1
     c34:	87 cf       	rjmp	.-242    	; 0xb44 <conv_brk+0x4a>
     c36:	e1 14       	cp	r14, r1
     c38:	f1 04       	cpc	r15, r1
     c3a:	11 f0       	breq	.+4      	; 0xc40 <conv_brk+0x146>
     c3c:	d7 01       	movw	r26, r14
     c3e:	1c 92       	st	X, r1
     c40:	c8 01       	movw	r24, r16
     c42:	15 c0       	rjmp	.+42     	; 0xc6e <conv_brk+0x174>
     c44:	42 2f       	mov	r20, r18
     c46:	46 95       	lsr	r20
     c48:	46 95       	lsr	r20
     c4a:	46 95       	lsr	r20
     c4c:	d6 01       	movw	r26, r12
     c4e:	a4 0f       	add	r26, r20
     c50:	b1 1d       	adc	r27, r1
     c52:	42 2f       	mov	r20, r18
     c54:	47 70       	andi	r20, 0x07	; 7
     c56:	8b 01       	movw	r16, r22
     c58:	02 c0       	rjmp	.+4      	; 0xc5e <conv_brk+0x164>
     c5a:	00 0f       	add	r16, r16
     c5c:	11 1f       	adc	r17, r17
     c5e:	4a 95       	dec	r20
     c60:	e2 f7       	brpl	.-8      	; 0xc5a <conv_brk+0x160>
     c62:	a8 01       	movw	r20, r16
     c64:	5c 91       	ld	r21, X
     c66:	45 2b       	or	r20, r21
     c68:	4c 93       	st	X, r20
     c6a:	62 2e       	mov	r6, r18
     c6c:	a2 cf       	rjmp	.-188    	; 0xbb2 <conv_brk+0xb8>
     c6e:	a0 96       	adiw	r28, 0x20	; 32
     c70:	ef e0       	ldi	r30, 0x0F	; 15
     c72:	0c 94 89 08 	jmp	0x1112	; 0x1112 <__epilogue_restores__+0x6>

00000c76 <vfscanf>:
     c76:	a0 e0       	ldi	r26, 0x00	; 0
     c78:	b0 e0       	ldi	r27, 0x00	; 0
     c7a:	e1 e4       	ldi	r30, 0x41	; 65
     c7c:	f6 e0       	ldi	r31, 0x06	; 6
     c7e:	0c 94 6d 08 	jmp	0x10da	; 0x10da <__prologue_saves__+0x6>
     c82:	6c 01       	movw	r12, r24
     c84:	eb 01       	movw	r28, r22
     c86:	5a 01       	movw	r10, r20
     c88:	fc 01       	movw	r30, r24
     c8a:	17 82       	std	Z+7, r1	; 0x07
     c8c:	16 82       	std	Z+6, r1	; 0x06
     c8e:	51 2c       	mov	r5, r1
     c90:	f6 01       	movw	r30, r12
     c92:	e3 80       	ldd	r14, Z+3	; 0x03
     c94:	fe 01       	movw	r30, r28
     c96:	e3 fc       	sbrc	r14, 3
     c98:	85 91       	lpm	r24, Z+
     c9a:	e3 fe       	sbrs	r14, 3
     c9c:	81 91       	ld	r24, Z+
     c9e:	18 2f       	mov	r17, r24
     ca0:	ef 01       	movw	r28, r30
     ca2:	88 23       	and	r24, r24
     ca4:	09 f4       	brne	.+2      	; 0xca8 <vfscanf+0x32>
     ca6:	ee c0       	rjmp	.+476    	; 0xe84 <vfscanf+0x20e>
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	0e 94 4c 07 	call	0xe98	; 0xe98 <isspace>
     cae:	89 2b       	or	r24, r25
     cb0:	21 f0       	breq	.+8      	; 0xcba <vfscanf+0x44>
     cb2:	c6 01       	movw	r24, r12
     cb4:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <skip_spaces>
     cb8:	eb cf       	rjmp	.-42     	; 0xc90 <vfscanf+0x1a>
     cba:	15 32       	cpi	r17, 0x25	; 37
     cbc:	41 f4       	brne	.+16     	; 0xcce <vfscanf+0x58>
     cbe:	fe 01       	movw	r30, r28
     cc0:	e3 fc       	sbrc	r14, 3
     cc2:	15 91       	lpm	r17, Z+
     cc4:	e3 fe       	sbrs	r14, 3
     cc6:	11 91       	ld	r17, Z+
     cc8:	ef 01       	movw	r28, r30
     cca:	15 32       	cpi	r17, 0x25	; 37
     ccc:	81 f4       	brne	.+32     	; 0xcee <vfscanf+0x78>
     cce:	c6 01       	movw	r24, r12
     cd0:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     cd4:	97 fd       	sbrc	r25, 7
     cd6:	d4 c0       	rjmp	.+424    	; 0xe80 <vfscanf+0x20a>
     cd8:	41 2f       	mov	r20, r17
     cda:	50 e0       	ldi	r21, 0x00	; 0
     cdc:	9c 01       	movw	r18, r24
     cde:	33 27       	eor	r19, r19
     ce0:	24 17       	cp	r18, r20
     ce2:	35 07       	cpc	r19, r21
     ce4:	a9 f2       	breq	.-86     	; 0xc90 <vfscanf+0x1a>
     ce6:	b6 01       	movw	r22, r12
     ce8:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <ungetc>
     cec:	cb c0       	rjmp	.+406    	; 0xe84 <vfscanf+0x20e>
     cee:	1a 32       	cpi	r17, 0x2A	; 42
     cf0:	39 f4       	brne	.+14     	; 0xd00 <vfscanf+0x8a>
     cf2:	e3 fc       	sbrc	r14, 3
     cf4:	15 91       	lpm	r17, Z+
     cf6:	e3 fe       	sbrs	r14, 3
     cf8:	11 91       	ld	r17, Z+
     cfa:	ef 01       	movw	r28, r30
     cfc:	01 e0       	ldi	r16, 0x01	; 1
     cfe:	01 c0       	rjmp	.+2      	; 0xd02 <vfscanf+0x8c>
     d00:	00 e0       	ldi	r16, 0x00	; 0
     d02:	f1 2c       	mov	r15, r1
     d04:	20 ed       	ldi	r18, 0xD0	; 208
     d06:	21 0f       	add	r18, r17
     d08:	2a 30       	cpi	r18, 0x0A	; 10
     d0a:	80 f4       	brcc	.+32     	; 0xd2c <vfscanf+0xb6>
     d0c:	02 60       	ori	r16, 0x02	; 2
     d0e:	6f 2d       	mov	r22, r15
     d10:	70 e0       	ldi	r23, 0x00	; 0
     d12:	80 e0       	ldi	r24, 0x00	; 0
     d14:	90 e0       	ldi	r25, 0x00	; 0
     d16:	40 e2       	ldi	r20, 0x20	; 32
     d18:	0e 94 ab 04 	call	0x956	; 0x956 <mulacc>
     d1c:	f6 2e       	mov	r15, r22
     d1e:	fe 01       	movw	r30, r28
     d20:	e3 fc       	sbrc	r14, 3
     d22:	15 91       	lpm	r17, Z+
     d24:	e3 fe       	sbrs	r14, 3
     d26:	11 91       	ld	r17, Z+
     d28:	ef 01       	movw	r28, r30
     d2a:	ec cf       	rjmp	.-40     	; 0xd04 <vfscanf+0x8e>
     d2c:	01 ff       	sbrs	r16, 1
     d2e:	03 c0       	rjmp	.+6      	; 0xd36 <vfscanf+0xc0>
     d30:	f1 10       	cpse	r15, r1
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <vfscanf+0xc4>
     d34:	a7 c0       	rjmp	.+334    	; 0xe84 <vfscanf+0x20e>
     d36:	ff 24       	eor	r15, r15
     d38:	fa 94       	dec	r15
     d3a:	18 36       	cpi	r17, 0x68	; 104
     d3c:	19 f0       	breq	.+6      	; 0xd44 <vfscanf+0xce>
     d3e:	1c 36       	cpi	r17, 0x6C	; 108
     d40:	51 f0       	breq	.+20     	; 0xd56 <vfscanf+0xe0>
     d42:	10 c0       	rjmp	.+32     	; 0xd64 <vfscanf+0xee>
     d44:	fe 01       	movw	r30, r28
     d46:	e3 fc       	sbrc	r14, 3
     d48:	15 91       	lpm	r17, Z+
     d4a:	e3 fe       	sbrs	r14, 3
     d4c:	11 91       	ld	r17, Z+
     d4e:	ef 01       	movw	r28, r30
     d50:	18 36       	cpi	r17, 0x68	; 104
     d52:	41 f4       	brne	.+16     	; 0xd64 <vfscanf+0xee>
     d54:	08 60       	ori	r16, 0x08	; 8
     d56:	04 60       	ori	r16, 0x04	; 4
     d58:	fe 01       	movw	r30, r28
     d5a:	e3 fc       	sbrc	r14, 3
     d5c:	15 91       	lpm	r17, Z+
     d5e:	e3 fe       	sbrs	r14, 3
     d60:	11 91       	ld	r17, Z+
     d62:	ef 01       	movw	r28, r30
     d64:	11 23       	and	r17, r17
     d66:	09 f4       	brne	.+2      	; 0xd6a <vfscanf+0xf4>
     d68:	8d c0       	rjmp	.+282    	; 0xe84 <vfscanf+0x20e>
     d6a:	61 2f       	mov	r22, r17
     d6c:	70 e0       	ldi	r23, 0x00	; 0
     d6e:	88 e6       	ldi	r24, 0x68	; 104
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	0e 94 55 07 	call	0xeaa	; 0xeaa <strchr_P>
     d76:	89 2b       	or	r24, r25
     d78:	09 f4       	brne	.+2      	; 0xd7c <vfscanf+0x106>
     d7a:	84 c0       	rjmp	.+264    	; 0xe84 <vfscanf+0x20e>
     d7c:	00 fd       	sbrc	r16, 0
     d7e:	07 c0       	rjmp	.+14     	; 0xd8e <vfscanf+0x118>
     d80:	f5 01       	movw	r30, r10
     d82:	80 80       	ld	r8, Z
     d84:	91 80       	ldd	r9, Z+1	; 0x01
     d86:	c5 01       	movw	r24, r10
     d88:	02 96       	adiw	r24, 0x02	; 2
     d8a:	5c 01       	movw	r10, r24
     d8c:	02 c0       	rjmp	.+4      	; 0xd92 <vfscanf+0x11c>
     d8e:	81 2c       	mov	r8, r1
     d90:	91 2c       	mov	r9, r1
     d92:	1e 36       	cpi	r17, 0x6E	; 110
     d94:	51 f4       	brne	.+20     	; 0xdaa <vfscanf+0x134>
     d96:	f6 01       	movw	r30, r12
     d98:	46 81       	ldd	r20, Z+6	; 0x06
     d9a:	57 81       	ldd	r21, Z+7	; 0x07
     d9c:	60 e0       	ldi	r22, 0x00	; 0
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	20 2f       	mov	r18, r16
     da2:	c4 01       	movw	r24, r8
     da4:	0e 94 9f 04 	call	0x93e	; 0x93e <putval>
     da8:	73 cf       	rjmp	.-282    	; 0xc90 <vfscanf+0x1a>
     daa:	13 36       	cpi	r17, 0x63	; 99
     dac:	a9 f4       	brne	.+42     	; 0xdd8 <vfscanf+0x162>
     dae:	01 fd       	sbrc	r16, 1
     db0:	02 c0       	rjmp	.+4      	; 0xdb6 <vfscanf+0x140>
     db2:	ff 24       	eor	r15, r15
     db4:	f3 94       	inc	r15
     db6:	c6 01       	movw	r24, r12
     db8:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     dbc:	97 fd       	sbrc	r25, 7
     dbe:	60 c0       	rjmp	.+192    	; 0xe80 <vfscanf+0x20a>
     dc0:	81 14       	cp	r8, r1
     dc2:	91 04       	cpc	r9, r1
     dc4:	29 f0       	breq	.+10     	; 0xdd0 <vfscanf+0x15a>
     dc6:	f4 01       	movw	r30, r8
     dc8:	80 83       	st	Z, r24
     dca:	c4 01       	movw	r24, r8
     dcc:	01 96       	adiw	r24, 0x01	; 1
     dce:	4c 01       	movw	r8, r24
     dd0:	fa 94       	dec	r15
     dd2:	f1 10       	cpse	r15, r1
     dd4:	f0 cf       	rjmp	.-32     	; 0xdb6 <vfscanf+0x140>
     dd6:	50 c0       	rjmp	.+160    	; 0xe78 <vfscanf+0x202>
     dd8:	1b 35       	cpi	r17, 0x5B	; 91
     dda:	59 f4       	brne	.+22     	; 0xdf2 <vfscanf+0x17c>
     ddc:	9e 01       	movw	r18, r28
     dde:	a4 01       	movw	r20, r8
     de0:	6f 2d       	mov	r22, r15
     de2:	c6 01       	movw	r24, r12
     de4:	0e 94 7d 05 	call	0xafa	; 0xafa <conv_brk>
     de8:	ec 01       	movw	r28, r24
     dea:	89 2b       	or	r24, r25
     dec:	09 f0       	breq	.+2      	; 0xdf0 <vfscanf+0x17a>
     dee:	44 c0       	rjmp	.+136    	; 0xe78 <vfscanf+0x202>
     df0:	3e c0       	rjmp	.+124    	; 0xe6e <vfscanf+0x1f8>
     df2:	c6 01       	movw	r24, r12
     df4:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <skip_spaces>
     df8:	97 fd       	sbrc	r25, 7
     dfa:	42 c0       	rjmp	.+132    	; 0xe80 <vfscanf+0x20a>
     dfc:	1f 36       	cpi	r17, 0x6F	; 111
     dfe:	61 f1       	breq	.+88     	; 0xe58 <vfscanf+0x1e2>
     e00:	28 f4       	brcc	.+10     	; 0xe0c <vfscanf+0x196>
     e02:	14 36       	cpi	r17, 0x64	; 100
     e04:	39 f1       	breq	.+78     	; 0xe54 <vfscanf+0x1de>
     e06:	19 36       	cpi	r17, 0x69	; 105
     e08:	51 f1       	breq	.+84     	; 0xe5e <vfscanf+0x1e8>
     e0a:	28 c0       	rjmp	.+80     	; 0xe5c <vfscanf+0x1e6>
     e0c:	13 37       	cpi	r17, 0x73	; 115
     e0e:	71 f0       	breq	.+28     	; 0xe2c <vfscanf+0x1b6>
     e10:	15 37       	cpi	r17, 0x75	; 117
     e12:	01 f1       	breq	.+64     	; 0xe54 <vfscanf+0x1de>
     e14:	23 c0       	rjmp	.+70     	; 0xe5c <vfscanf+0x1e6>
     e16:	81 14       	cp	r8, r1
     e18:	91 04       	cpc	r9, r1
     e1a:	29 f0       	breq	.+10     	; 0xe26 <vfscanf+0x1b0>
     e1c:	f4 01       	movw	r30, r8
     e1e:	60 82       	st	Z, r6
     e20:	c4 01       	movw	r24, r8
     e22:	01 96       	adiw	r24, 0x01	; 1
     e24:	4c 01       	movw	r8, r24
     e26:	fa 94       	dec	r15
     e28:	ff 20       	and	r15, r15
     e2a:	71 f0       	breq	.+28     	; 0xe48 <vfscanf+0x1d2>
     e2c:	c6 01       	movw	r24, r12
     e2e:	0e 94 76 07 	call	0xeec	; 0xeec <fgetc>
     e32:	3c 01       	movw	r6, r24
     e34:	97 fd       	sbrc	r25, 7
     e36:	08 c0       	rjmp	.+16     	; 0xe48 <vfscanf+0x1d2>
     e38:	0e 94 4c 07 	call	0xe98	; 0xe98 <isspace>
     e3c:	89 2b       	or	r24, r25
     e3e:	59 f3       	breq	.-42     	; 0xe16 <vfscanf+0x1a0>
     e40:	b6 01       	movw	r22, r12
     e42:	c3 01       	movw	r24, r6
     e44:	0e 94 f0 07 	call	0xfe0	; 0xfe0 <ungetc>
     e48:	81 14       	cp	r8, r1
     e4a:	91 04       	cpc	r9, r1
     e4c:	a9 f0       	breq	.+42     	; 0xe78 <vfscanf+0x202>
     e4e:	f4 01       	movw	r30, r8
     e50:	10 82       	st	Z, r1
     e52:	12 c0       	rjmp	.+36     	; 0xe78 <vfscanf+0x202>
     e54:	00 62       	ori	r16, 0x20	; 32
     e56:	03 c0       	rjmp	.+6      	; 0xe5e <vfscanf+0x1e8>
     e58:	00 61       	ori	r16, 0x10	; 16
     e5a:	01 c0       	rjmp	.+2      	; 0xe5e <vfscanf+0x1e8>
     e5c:	00 64       	ori	r16, 0x40	; 64
     e5e:	20 2f       	mov	r18, r16
     e60:	a4 01       	movw	r20, r8
     e62:	6f 2d       	mov	r22, r15
     e64:	c6 01       	movw	r24, r12
     e66:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <conv_int>
     e6a:	81 11       	cpse	r24, r1
     e6c:	05 c0       	rjmp	.+10     	; 0xe78 <vfscanf+0x202>
     e6e:	f6 01       	movw	r30, r12
     e70:	83 81       	ldd	r24, Z+3	; 0x03
     e72:	80 73       	andi	r24, 0x30	; 48
     e74:	29 f4       	brne	.+10     	; 0xe80 <vfscanf+0x20a>
     e76:	06 c0       	rjmp	.+12     	; 0xe84 <vfscanf+0x20e>
     e78:	00 fd       	sbrc	r16, 0
     e7a:	0a cf       	rjmp	.-492    	; 0xc90 <vfscanf+0x1a>
     e7c:	53 94       	inc	r5
     e7e:	08 cf       	rjmp	.-496    	; 0xc90 <vfscanf+0x1a>
     e80:	55 20       	and	r5, r5
     e82:	19 f0       	breq	.+6      	; 0xe8a <vfscanf+0x214>
     e84:	85 2d       	mov	r24, r5
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfscanf+0x218>
     e8a:	8f ef       	ldi	r24, 0xFF	; 255
     e8c:	9f ef       	ldi	r25, 0xFF	; 255
     e8e:	cd b7       	in	r28, 0x3d	; 61
     e90:	de b7       	in	r29, 0x3e	; 62
     e92:	ef e0       	ldi	r30, 0x0F	; 15
     e94:	0c 94 89 08 	jmp	0x1112	; 0x1112 <__epilogue_restores__+0x6>

00000e98 <isspace>:
     e98:	91 11       	cpse	r25, r1
     e9a:	0c 94 67 08 	jmp	0x10ce	; 0x10ce <__ctype_isfalse>
     e9e:	80 32       	cpi	r24, 0x20	; 32
     ea0:	19 f0       	breq	.+6      	; 0xea8 <isspace+0x10>
     ea2:	89 50       	subi	r24, 0x09	; 9
     ea4:	85 50       	subi	r24, 0x05	; 5
     ea6:	c8 f7       	brcc	.-14     	; 0xe9a <isspace+0x2>
     ea8:	08 95       	ret

00000eaa <strchr_P>:
     eaa:	fc 01       	movw	r30, r24
     eac:	05 90       	lpm	r0, Z+
     eae:	06 16       	cp	r0, r22
     eb0:	21 f0       	breq	.+8      	; 0xeba <strchr_P+0x10>
     eb2:	00 20       	and	r0, r0
     eb4:	d9 f7       	brne	.-10     	; 0xeac <strchr_P+0x2>
     eb6:	c0 01       	movw	r24, r0
     eb8:	08 95       	ret
     eba:	31 97       	sbiw	r30, 0x01	; 1
     ebc:	cf 01       	movw	r24, r30
     ebe:	08 95       	ret

00000ec0 <strnlen_P>:
     ec0:	fc 01       	movw	r30, r24
     ec2:	05 90       	lpm	r0, Z+
     ec4:	61 50       	subi	r22, 0x01	; 1
     ec6:	70 40       	sbci	r23, 0x00	; 0
     ec8:	01 10       	cpse	r0, r1
     eca:	d8 f7       	brcc	.-10     	; 0xec2 <strnlen_P+0x2>
     ecc:	80 95       	com	r24
     ece:	90 95       	com	r25
     ed0:	8e 0f       	add	r24, r30
     ed2:	9f 1f       	adc	r25, r31
     ed4:	08 95       	ret

00000ed6 <strnlen>:
     ed6:	fc 01       	movw	r30, r24
     ed8:	61 50       	subi	r22, 0x01	; 1
     eda:	70 40       	sbci	r23, 0x00	; 0
     edc:	01 90       	ld	r0, Z+
     ede:	01 10       	cpse	r0, r1
     ee0:	d8 f7       	brcc	.-10     	; 0xed8 <strnlen+0x2>
     ee2:	80 95       	com	r24
     ee4:	90 95       	com	r25
     ee6:	8e 0f       	add	r24, r30
     ee8:	9f 1f       	adc	r25, r31
     eea:	08 95       	ret

00000eec <fgetc>:
     eec:	cf 93       	push	r28
     eee:	df 93       	push	r29
     ef0:	ec 01       	movw	r28, r24
     ef2:	2b 81       	ldd	r18, Y+3	; 0x03
     ef4:	20 ff       	sbrs	r18, 0
     ef6:	33 c0       	rjmp	.+102    	; 0xf5e <fgetc+0x72>
     ef8:	26 ff       	sbrs	r18, 6
     efa:	0a c0       	rjmp	.+20     	; 0xf10 <fgetc+0x24>
     efc:	2f 7b       	andi	r18, 0xBF	; 191
     efe:	2b 83       	std	Y+3, r18	; 0x03
     f00:	8e 81       	ldd	r24, Y+6	; 0x06
     f02:	9f 81       	ldd	r25, Y+7	; 0x07
     f04:	01 96       	adiw	r24, 0x01	; 1
     f06:	9f 83       	std	Y+7, r25	; 0x07
     f08:	8e 83       	std	Y+6, r24	; 0x06
     f0a:	8a 81       	ldd	r24, Y+2	; 0x02
     f0c:	90 e0       	ldi	r25, 0x00	; 0
     f0e:	29 c0       	rjmp	.+82     	; 0xf62 <fgetc+0x76>
     f10:	22 ff       	sbrs	r18, 2
     f12:	0f c0       	rjmp	.+30     	; 0xf32 <fgetc+0x46>
     f14:	e8 81       	ld	r30, Y
     f16:	f9 81       	ldd	r31, Y+1	; 0x01
     f18:	80 81       	ld	r24, Z
     f1a:	08 2e       	mov	r0, r24
     f1c:	00 0c       	add	r0, r0
     f1e:	99 0b       	sbc	r25, r25
     f20:	00 97       	sbiw	r24, 0x00	; 0
     f22:	19 f4       	brne	.+6      	; 0xf2a <fgetc+0x3e>
     f24:	20 62       	ori	r18, 0x20	; 32
     f26:	2b 83       	std	Y+3, r18	; 0x03
     f28:	1a c0       	rjmp	.+52     	; 0xf5e <fgetc+0x72>
     f2a:	31 96       	adiw	r30, 0x01	; 1
     f2c:	f9 83       	std	Y+1, r31	; 0x01
     f2e:	e8 83       	st	Y, r30
     f30:	0e c0       	rjmp	.+28     	; 0xf4e <fgetc+0x62>
     f32:	ea 85       	ldd	r30, Y+10	; 0x0a
     f34:	fb 85       	ldd	r31, Y+11	; 0x0b
     f36:	09 95       	icall
     f38:	97 ff       	sbrs	r25, 7
     f3a:	09 c0       	rjmp	.+18     	; 0xf4e <fgetc+0x62>
     f3c:	2b 81       	ldd	r18, Y+3	; 0x03
     f3e:	01 96       	adiw	r24, 0x01	; 1
     f40:	11 f0       	breq	.+4      	; 0xf46 <fgetc+0x5a>
     f42:	80 e2       	ldi	r24, 0x20	; 32
     f44:	01 c0       	rjmp	.+2      	; 0xf48 <fgetc+0x5c>
     f46:	80 e1       	ldi	r24, 0x10	; 16
     f48:	82 2b       	or	r24, r18
     f4a:	8b 83       	std	Y+3, r24	; 0x03
     f4c:	08 c0       	rjmp	.+16     	; 0xf5e <fgetc+0x72>
     f4e:	2e 81       	ldd	r18, Y+6	; 0x06
     f50:	3f 81       	ldd	r19, Y+7	; 0x07
     f52:	2f 5f       	subi	r18, 0xFF	; 255
     f54:	3f 4f       	sbci	r19, 0xFF	; 255
     f56:	3f 83       	std	Y+7, r19	; 0x07
     f58:	2e 83       	std	Y+6, r18	; 0x06
     f5a:	99 27       	eor	r25, r25
     f5c:	02 c0       	rjmp	.+4      	; 0xf62 <fgetc+0x76>
     f5e:	8f ef       	ldi	r24, 0xFF	; 255
     f60:	9f ef       	ldi	r25, 0xFF	; 255
     f62:	df 91       	pop	r29
     f64:	cf 91       	pop	r28
     f66:	08 95       	ret

00000f68 <fputc>:
     f68:	0f 93       	push	r16
     f6a:	1f 93       	push	r17
     f6c:	cf 93       	push	r28
     f6e:	df 93       	push	r29
     f70:	fb 01       	movw	r30, r22
     f72:	23 81       	ldd	r18, Z+3	; 0x03
     f74:	21 fd       	sbrc	r18, 1
     f76:	03 c0       	rjmp	.+6      	; 0xf7e <fputc+0x16>
     f78:	8f ef       	ldi	r24, 0xFF	; 255
     f7a:	9f ef       	ldi	r25, 0xFF	; 255
     f7c:	2c c0       	rjmp	.+88     	; 0xfd6 <fputc+0x6e>
     f7e:	22 ff       	sbrs	r18, 2
     f80:	16 c0       	rjmp	.+44     	; 0xfae <fputc+0x46>
     f82:	46 81       	ldd	r20, Z+6	; 0x06
     f84:	57 81       	ldd	r21, Z+7	; 0x07
     f86:	24 81       	ldd	r18, Z+4	; 0x04
     f88:	35 81       	ldd	r19, Z+5	; 0x05
     f8a:	42 17       	cp	r20, r18
     f8c:	53 07       	cpc	r21, r19
     f8e:	44 f4       	brge	.+16     	; 0xfa0 <fputc+0x38>
     f90:	a0 81       	ld	r26, Z
     f92:	b1 81       	ldd	r27, Z+1	; 0x01
     f94:	9d 01       	movw	r18, r26
     f96:	2f 5f       	subi	r18, 0xFF	; 255
     f98:	3f 4f       	sbci	r19, 0xFF	; 255
     f9a:	31 83       	std	Z+1, r19	; 0x01
     f9c:	20 83       	st	Z, r18
     f9e:	8c 93       	st	X, r24
     fa0:	26 81       	ldd	r18, Z+6	; 0x06
     fa2:	37 81       	ldd	r19, Z+7	; 0x07
     fa4:	2f 5f       	subi	r18, 0xFF	; 255
     fa6:	3f 4f       	sbci	r19, 0xFF	; 255
     fa8:	37 83       	std	Z+7, r19	; 0x07
     faa:	26 83       	std	Z+6, r18	; 0x06
     fac:	14 c0       	rjmp	.+40     	; 0xfd6 <fputc+0x6e>
     fae:	8b 01       	movw	r16, r22
     fb0:	ec 01       	movw	r28, r24
     fb2:	fb 01       	movw	r30, r22
     fb4:	00 84       	ldd	r0, Z+8	; 0x08
     fb6:	f1 85       	ldd	r31, Z+9	; 0x09
     fb8:	e0 2d       	mov	r30, r0
     fba:	09 95       	icall
     fbc:	89 2b       	or	r24, r25
     fbe:	e1 f6       	brne	.-72     	; 0xf78 <fputc+0x10>
     fc0:	d8 01       	movw	r26, r16
     fc2:	16 96       	adiw	r26, 0x06	; 6
     fc4:	8d 91       	ld	r24, X+
     fc6:	9c 91       	ld	r25, X
     fc8:	17 97       	sbiw	r26, 0x07	; 7
     fca:	01 96       	adiw	r24, 0x01	; 1
     fcc:	17 96       	adiw	r26, 0x07	; 7
     fce:	9c 93       	st	X, r25
     fd0:	8e 93       	st	-X, r24
     fd2:	16 97       	sbiw	r26, 0x06	; 6
     fd4:	ce 01       	movw	r24, r28
     fd6:	df 91       	pop	r29
     fd8:	cf 91       	pop	r28
     fda:	1f 91       	pop	r17
     fdc:	0f 91       	pop	r16
     fde:	08 95       	ret

00000fe0 <ungetc>:
     fe0:	fb 01       	movw	r30, r22
     fe2:	23 81       	ldd	r18, Z+3	; 0x03
     fe4:	20 ff       	sbrs	r18, 0
     fe6:	12 c0       	rjmp	.+36     	; 0x100c <ungetc+0x2c>
     fe8:	26 fd       	sbrc	r18, 6
     fea:	10 c0       	rjmp	.+32     	; 0x100c <ungetc+0x2c>
     fec:	8f 3f       	cpi	r24, 0xFF	; 255
     fee:	3f ef       	ldi	r19, 0xFF	; 255
     ff0:	93 07       	cpc	r25, r19
     ff2:	61 f0       	breq	.+24     	; 0x100c <ungetc+0x2c>
     ff4:	82 83       	std	Z+2, r24	; 0x02
     ff6:	2f 7d       	andi	r18, 0xDF	; 223
     ff8:	20 64       	ori	r18, 0x40	; 64
     ffa:	23 83       	std	Z+3, r18	; 0x03
     ffc:	26 81       	ldd	r18, Z+6	; 0x06
     ffe:	37 81       	ldd	r19, Z+7	; 0x07
    1000:	21 50       	subi	r18, 0x01	; 1
    1002:	31 09       	sbc	r19, r1
    1004:	37 83       	std	Z+7, r19	; 0x07
    1006:	26 83       	std	Z+6, r18	; 0x06
    1008:	99 27       	eor	r25, r25
    100a:	08 95       	ret
    100c:	8f ef       	ldi	r24, 0xFF	; 255
    100e:	9f ef       	ldi	r25, 0xFF	; 255
    1010:	08 95       	ret

00001012 <__ultoa_invert>:
    1012:	fa 01       	movw	r30, r20
    1014:	aa 27       	eor	r26, r26
    1016:	28 30       	cpi	r18, 0x08	; 8
    1018:	51 f1       	breq	.+84     	; 0x106e <__ultoa_invert+0x5c>
    101a:	20 31       	cpi	r18, 0x10	; 16
    101c:	81 f1       	breq	.+96     	; 0x107e <__ultoa_invert+0x6c>
    101e:	e8 94       	clt
    1020:	6f 93       	push	r22
    1022:	6e 7f       	andi	r22, 0xFE	; 254
    1024:	6e 5f       	subi	r22, 0xFE	; 254
    1026:	7f 4f       	sbci	r23, 0xFF	; 255
    1028:	8f 4f       	sbci	r24, 0xFF	; 255
    102a:	9f 4f       	sbci	r25, 0xFF	; 255
    102c:	af 4f       	sbci	r26, 0xFF	; 255
    102e:	b1 e0       	ldi	r27, 0x01	; 1
    1030:	3e d0       	rcall	.+124    	; 0x10ae <__ultoa_invert+0x9c>
    1032:	b4 e0       	ldi	r27, 0x04	; 4
    1034:	3c d0       	rcall	.+120    	; 0x10ae <__ultoa_invert+0x9c>
    1036:	67 0f       	add	r22, r23
    1038:	78 1f       	adc	r23, r24
    103a:	89 1f       	adc	r24, r25
    103c:	9a 1f       	adc	r25, r26
    103e:	a1 1d       	adc	r26, r1
    1040:	68 0f       	add	r22, r24
    1042:	79 1f       	adc	r23, r25
    1044:	8a 1f       	adc	r24, r26
    1046:	91 1d       	adc	r25, r1
    1048:	a1 1d       	adc	r26, r1
    104a:	6a 0f       	add	r22, r26
    104c:	71 1d       	adc	r23, r1
    104e:	81 1d       	adc	r24, r1
    1050:	91 1d       	adc	r25, r1
    1052:	a1 1d       	adc	r26, r1
    1054:	20 d0       	rcall	.+64     	; 0x1096 <__ultoa_invert+0x84>
    1056:	09 f4       	brne	.+2      	; 0x105a <__ultoa_invert+0x48>
    1058:	68 94       	set
    105a:	3f 91       	pop	r19
    105c:	2a e0       	ldi	r18, 0x0A	; 10
    105e:	26 9f       	mul	r18, r22
    1060:	11 24       	eor	r1, r1
    1062:	30 19       	sub	r19, r0
    1064:	30 5d       	subi	r19, 0xD0	; 208
    1066:	31 93       	st	Z+, r19
    1068:	de f6       	brtc	.-74     	; 0x1020 <__ultoa_invert+0xe>
    106a:	cf 01       	movw	r24, r30
    106c:	08 95       	ret
    106e:	46 2f       	mov	r20, r22
    1070:	47 70       	andi	r20, 0x07	; 7
    1072:	40 5d       	subi	r20, 0xD0	; 208
    1074:	41 93       	st	Z+, r20
    1076:	b3 e0       	ldi	r27, 0x03	; 3
    1078:	0f d0       	rcall	.+30     	; 0x1098 <__ultoa_invert+0x86>
    107a:	c9 f7       	brne	.-14     	; 0x106e <__ultoa_invert+0x5c>
    107c:	f6 cf       	rjmp	.-20     	; 0x106a <__ultoa_invert+0x58>
    107e:	46 2f       	mov	r20, r22
    1080:	4f 70       	andi	r20, 0x0F	; 15
    1082:	40 5d       	subi	r20, 0xD0	; 208
    1084:	4a 33       	cpi	r20, 0x3A	; 58
    1086:	18 f0       	brcs	.+6      	; 0x108e <__ultoa_invert+0x7c>
    1088:	49 5d       	subi	r20, 0xD9	; 217
    108a:	31 fd       	sbrc	r19, 1
    108c:	40 52       	subi	r20, 0x20	; 32
    108e:	41 93       	st	Z+, r20
    1090:	02 d0       	rcall	.+4      	; 0x1096 <__ultoa_invert+0x84>
    1092:	a9 f7       	brne	.-22     	; 0x107e <__ultoa_invert+0x6c>
    1094:	ea cf       	rjmp	.-44     	; 0x106a <__ultoa_invert+0x58>
    1096:	b4 e0       	ldi	r27, 0x04	; 4
    1098:	a6 95       	lsr	r26
    109a:	97 95       	ror	r25
    109c:	87 95       	ror	r24
    109e:	77 95       	ror	r23
    10a0:	67 95       	ror	r22
    10a2:	ba 95       	dec	r27
    10a4:	c9 f7       	brne	.-14     	; 0x1098 <__ultoa_invert+0x86>
    10a6:	00 97       	sbiw	r24, 0x00	; 0
    10a8:	61 05       	cpc	r22, r1
    10aa:	71 05       	cpc	r23, r1
    10ac:	08 95       	ret
    10ae:	9b 01       	movw	r18, r22
    10b0:	ac 01       	movw	r20, r24
    10b2:	0a 2e       	mov	r0, r26
    10b4:	06 94       	lsr	r0
    10b6:	57 95       	ror	r21
    10b8:	47 95       	ror	r20
    10ba:	37 95       	ror	r19
    10bc:	27 95       	ror	r18
    10be:	ba 95       	dec	r27
    10c0:	c9 f7       	brne	.-14     	; 0x10b4 <__ultoa_invert+0xa2>
    10c2:	62 0f       	add	r22, r18
    10c4:	73 1f       	adc	r23, r19
    10c6:	84 1f       	adc	r24, r20
    10c8:	95 1f       	adc	r25, r21
    10ca:	a0 1d       	adc	r26, r0
    10cc:	08 95       	ret

000010ce <__ctype_isfalse>:
    10ce:	99 27       	eor	r25, r25
    10d0:	88 27       	eor	r24, r24

000010d2 <__ctype_istrue>:
    10d2:	08 95       	ret

000010d4 <__prologue_saves__>:
    10d4:	2f 92       	push	r2
    10d6:	3f 92       	push	r3
    10d8:	4f 92       	push	r4
    10da:	5f 92       	push	r5
    10dc:	6f 92       	push	r6
    10de:	7f 92       	push	r7
    10e0:	8f 92       	push	r8
    10e2:	9f 92       	push	r9
    10e4:	af 92       	push	r10
    10e6:	bf 92       	push	r11
    10e8:	cf 92       	push	r12
    10ea:	df 92       	push	r13
    10ec:	ef 92       	push	r14
    10ee:	ff 92       	push	r15
    10f0:	0f 93       	push	r16
    10f2:	1f 93       	push	r17
    10f4:	cf 93       	push	r28
    10f6:	df 93       	push	r29
    10f8:	cd b7       	in	r28, 0x3d	; 61
    10fa:	de b7       	in	r29, 0x3e	; 62
    10fc:	ca 1b       	sub	r28, r26
    10fe:	db 0b       	sbc	r29, r27
    1100:	0f b6       	in	r0, 0x3f	; 63
    1102:	f8 94       	cli
    1104:	de bf       	out	0x3e, r29	; 62
    1106:	0f be       	out	0x3f, r0	; 63
    1108:	cd bf       	out	0x3d, r28	; 61
    110a:	09 94       	ijmp

0000110c <__epilogue_restores__>:
    110c:	2a 88       	ldd	r2, Y+18	; 0x12
    110e:	39 88       	ldd	r3, Y+17	; 0x11
    1110:	48 88       	ldd	r4, Y+16	; 0x10
    1112:	5f 84       	ldd	r5, Y+15	; 0x0f
    1114:	6e 84       	ldd	r6, Y+14	; 0x0e
    1116:	7d 84       	ldd	r7, Y+13	; 0x0d
    1118:	8c 84       	ldd	r8, Y+12	; 0x0c
    111a:	9b 84       	ldd	r9, Y+11	; 0x0b
    111c:	aa 84       	ldd	r10, Y+10	; 0x0a
    111e:	b9 84       	ldd	r11, Y+9	; 0x09
    1120:	c8 84       	ldd	r12, Y+8	; 0x08
    1122:	df 80       	ldd	r13, Y+7	; 0x07
    1124:	ee 80       	ldd	r14, Y+6	; 0x06
    1126:	fd 80       	ldd	r15, Y+5	; 0x05
    1128:	0c 81       	ldd	r16, Y+4	; 0x04
    112a:	1b 81       	ldd	r17, Y+3	; 0x03
    112c:	aa 81       	ldd	r26, Y+2	; 0x02
    112e:	b9 81       	ldd	r27, Y+1	; 0x01
    1130:	ce 0f       	add	r28, r30
    1132:	d1 1d       	adc	r29, r1
    1134:	0f b6       	in	r0, 0x3f	; 63
    1136:	f8 94       	cli
    1138:	de bf       	out	0x3e, r29	; 62
    113a:	0f be       	out	0x3f, r0	; 63
    113c:	cd bf       	out	0x3d, r28	; 61
    113e:	ed 01       	movw	r28, r26
    1140:	08 95       	ret

00001142 <_exit>:
    1142:	f8 94       	cli

00001144 <__stop_program>:
    1144:	ff cf       	rjmp	.-2      	; 0x1144 <__stop_program>
