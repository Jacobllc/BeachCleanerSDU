
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009c  00800100  0000152a  000015be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000152a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080019c  0080019c  0000165a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000165a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  000016f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001399  00000000  00000000  00001830  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b91  00000000  00000000  00002bc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000090c  00000000  00000000  0000375a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00004068  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000742  00000000  00000000  00004288  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000623  00000000  00000000  000049ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004fed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ea e2       	ldi	r30, 0x2A	; 42
     17e:	f5 e1       	ldi	r31, 0x15	; 21
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 39       	cpi	r26, 0x9C	; 156
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e9       	ldi	r26, 0x9C	; 156
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a2 3a       	cpi	r26, 0xA2	; 162
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
     1a0:	0c 94 93 0a 	jmp	0x1526	; 0x1526 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     1a8:	0e 94 11 03 	call	0x622	; 0x622 <system_init>
     1ac:	08 95       	ret

000001ae <main>:

char msg1[80] = "$GPGGA,133800.000,5454.7212,N,00946.8262,E,2,06,1.58,28.1,M,44.6,M,0000,0000*52";


int main(void)
{
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	64 97       	sbiw	r28, 0x14	; 20
     1bc:	0f b6       	in	r0, 0x3f	; 63
     1be:	f8 94       	cli
     1c0:	de bf       	out	0x3e, r29	; 62
     1c2:	0f be       	out	0x3f, r0	; 63
     1c4:	cd bf       	out	0x3d, r28	; 61
	atmel_start_init();
     1c6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <atmel_start_init>
	
	struct DATA NMEA1;	//Create new instance of Data.

	if(GPS_Decode(msg1, &NMEA1))	//Take message as char array and reference to data struct. Returns true if checksum is okay.
     1ca:	be 01       	movw	r22, r28
     1cc:	6f 5f       	subi	r22, 0xFF	; 255
     1ce:	7f 4f       	sbci	r23, 0xFF	; 255
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	91 e0       	ldi	r25, 0x01	; 1
     1d4:	0e 94 fe 01 	call	0x3fc	; 0x3fc <GPS_Decode>
     1d8:	89 2b       	or	r24, r25
     1da:	09 f4       	brne	.+2      	; 0x1de <main+0x30>
     1dc:	44 c0       	rjmp	.+136    	; 0x266 <main+0xb8>
	{
		printf("Lat:\t%f ", NMEA1.LAT);
     1de:	8c 81       	ldd	r24, Y+4	; 0x04
     1e0:	8f 93       	push	r24
     1e2:	8b 81       	ldd	r24, Y+3	; 0x03
     1e4:	8f 93       	push	r24
     1e6:	8a 81       	ldd	r24, Y+2	; 0x02
     1e8:	8f 93       	push	r24
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	8f 93       	push	r24
     1ee:	8a e6       	ldi	r24, 0x6A	; 106
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	9f 93       	push	r25
     1f4:	8f 93       	push	r24
     1f6:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
		printf("%c\n", NMEA1.LATdir);
     1fa:	8d 81       	ldd	r24, Y+5	; 0x05
     1fc:	1f 92       	push	r1
     1fe:	8f 93       	push	r24
     200:	03 e7       	ldi	r16, 0x73	; 115
     202:	11 e0       	ldi	r17, 0x01	; 1
     204:	1f 93       	push	r17
     206:	0f 93       	push	r16
     208:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
		printf("Lon:\t%f ", NMEA1.LON);
     20c:	89 85       	ldd	r24, Y+9	; 0x09
     20e:	8f 93       	push	r24
     210:	88 85       	ldd	r24, Y+8	; 0x08
     212:	8f 93       	push	r24
     214:	8f 81       	ldd	r24, Y+7	; 0x07
     216:	8f 93       	push	r24
     218:	8e 81       	ldd	r24, Y+6	; 0x06
     21a:	8f 93       	push	r24
     21c:	87 e7       	ldi	r24, 0x77	; 119
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	9f 93       	push	r25
     222:	8f 93       	push	r24
     224:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
		printf("%c\n", NMEA1.LONdir);
     228:	8a 85       	ldd	r24, Y+10	; 0x0a
     22a:	1f 92       	push	r1
     22c:	8f 93       	push	r24
     22e:	1f 93       	push	r17
     230:	0f 93       	push	r16
     232:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
		printf("Quality: %d\n", NMEA1.quality);
     236:	8b 85       	ldd	r24, Y+11	; 0x0b
     238:	1f 92       	push	r1
     23a:	8f 93       	push	r24
     23c:	80 e8       	ldi	r24, 0x80	; 128
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	9f 93       	push	r25
     242:	8f 93       	push	r24
     244:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
		printf("Age: %d\n", NMEA1.ageOfCorrection);
     248:	8c 85       	ldd	r24, Y+12	; 0x0c
     24a:	1f 92       	push	r1
     24c:	8f 93       	push	r24
     24e:	8d e8       	ldi	r24, 0x8D	; 141
     250:	91 e0       	ldi	r25, 0x01	; 1
     252:	9f 93       	push	r25
     254:	8f 93       	push	r24
     256:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
     25a:	0f b6       	in	r0, 0x3f	; 63
     25c:	f8 94       	cli
     25e:	de bf       	out	0x3e, r29	; 62
     260:	0f be       	out	0x3f, r0	; 63
     262:	cd bf       	out	0x3d, r28	; 61
     264:	08 c0       	rjmp	.+16     	; 0x276 <main+0xc8>
		
	}
	else
	{
		printf("NoGo!");
     266:	86 e9       	ldi	r24, 0x96	; 150
     268:	91 e0       	ldi	r25, 0x01	; 1
     26a:	9f 93       	push	r25
     26c:	8f 93       	push	r24
     26e:	0e 94 1f 0a 	call	0x143e	; 0x143e <printf>
     272:	0f 90       	pop	r0
     274:	0f 90       	pop	r0
	}
}
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	64 96       	adiw	r28, 0x14	; 20
     27c:	0f b6       	in	r0, 0x3f	; 63
     27e:	f8 94       	cli
     280:	de bf       	out	0x3e, r29	; 62
     282:	0f be       	out	0x3f, r0	; 63
     284:	cd bf       	out	0x3d, r28	; 61
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	1f 91       	pop	r17
     28c:	0f 91       	pop	r16
     28e:	08 95       	ret

00000290 <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     290:	fc 01       	movw	r30, r24
	GPS_Data->LON = 0.0;
     292:	15 82       	std	Z+5, r1	; 0x05
     294:	16 82       	std	Z+6, r1	; 0x06
     296:	17 82       	std	Z+7, r1	; 0x07
     298:	10 86       	std	Z+8, r1	; 0x08
	GPS_Data->LAT = 0.0;
     29a:	10 82       	st	Z, r1
     29c:	11 82       	std	Z+1, r1	; 0x01
     29e:	12 82       	std	Z+2, r1	; 0x02
     2a0:	13 82       	std	Z+3, r1	; 0x03
	GPS_Data->ageOfCorrection = 0;
     2a2:	13 86       	std	Z+11, r1	; 0x0b
	GPS_Data->quality=0;
     2a4:	12 86       	std	Z+10, r1	; 0x0a
	GPS_Data->Speed=0;
     2a6:	10 8a       	std	Z+16, r1	; 0x10
     2a8:	11 8a       	std	Z+17, r1	; 0x11
     2aa:	12 8a       	std	Z+18, r1	; 0x12
     2ac:	13 8a       	std	Z+19, r1	; 0x13
	GPS_Data->TrueDir=0;
     2ae:	14 86       	std	Z+12, r1	; 0x0c
     2b0:	15 86       	std	Z+13, r1	; 0x0d
     2b2:	16 86       	std	Z+14, r1	; 0x0e
     2b4:	17 86       	std	Z+15, r1	; 0x0f
     2b6:	08 95       	ret

000002b8 <checksum>:
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
     2b8:	fc 01       	movw	r30, r24
     2ba:	20 81       	ld	r18, Z
     2bc:	24 32       	cpi	r18, 0x24	; 36
     2be:	69 f5       	brne	.+90     	; 0x31a <checksum+0x62>
	{
		i++;
		while(msg[i] != '*')
     2c0:	21 81       	ldd	r18, Z+1	; 0x01
     2c2:	2a 32       	cpi	r18, 0x2A	; 42
     2c4:	69 f1       	breq	.+90     	; 0x320 <checksum+0x68>
     2c6:	dc 01       	movw	r26, r24
     2c8:	12 96       	adiw	r26, 0x02	; 2
     2ca:	60 e0       	ldi	r22, 0x00	; 0
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	50 e0       	ldi	r21, 0x00	; 0
		{
			checksum ^= (msg[i]-48);
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	20 53       	subi	r18, 0x30	; 48
     2d6:	31 09       	sbc	r19, r1
     2d8:	62 27       	eor	r22, r18
     2da:	73 27       	eor	r23, r19
			i++;
     2dc:	4f 5f       	subi	r20, 0xFF	; 255
     2de:	5f 4f       	sbci	r21, 0xFF	; 255
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     2e0:	2d 91       	ld	r18, X+
     2e2:	2a 32       	cpi	r18, 0x2A	; 42
     2e4:	b1 f7       	brne	.-20     	; 0x2d2 <checksum+0x1a>
     2e6:	20 c0       	rjmp	.+64     	; 0x328 <checksum+0x70>
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
			{
				nmea_sum += 1*(msg[i]-48);
     2e8:	42 2f       	mov	r20, r18
     2ea:	50 e0       	ldi	r21, 0x00	; 0
     2ec:	40 53       	subi	r20, 0x30	; 48
     2ee:	51 09       	sbc	r21, r1
     2f0:	84 0f       	add	r24, r20
     2f2:	95 1f       	adc	r25, r21
			}
			
			if((msg[i]>='A') && (msg[i]<='F'))
     2f4:	3f eb       	ldi	r19, 0xBF	; 191
     2f6:	32 0f       	add	r19, r18
     2f8:	36 30       	cpi	r19, 0x06	; 6
     2fa:	28 f4       	brcc	.+10     	; 0x306 <checksum+0x4e>
			{
				nmea_sum += 1*(msg[i]-55);
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	27 53       	subi	r18, 0x37	; 55
     300:	31 09       	sbc	r19, r1
     302:	82 0f       	add	r24, r18
     304:	93 1f       	adc	r25, r19
			
		}
		
		if(checksum==(nmea_sum-48))
		{
			return 1;
     306:	c0 97       	sbiw	r24, 0x30	; 48
     308:	31 e0       	ldi	r19, 0x01	; 1
     30a:	20 e0       	ldi	r18, 0x00	; 0
     30c:	86 17       	cp	r24, r22
     30e:	97 07       	cpc	r25, r23
     310:	09 f0       	breq	.+2      	; 0x314 <checksum+0x5c>
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	83 2f       	mov	r24, r19
     316:	92 2f       	mov	r25, r18
     318:	08 95       	ret
		{
			return 0;
		}
		
	}
return 0; 
     31a:	80 e0       	ldi	r24, 0x00	; 0
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	08 95       	ret
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     320:	60 e0       	ldi	r22, 0x00	; 0
     322:	70 e0       	ldi	r23, 0x00	; 0
     324:	41 e0       	ldi	r20, 0x01	; 1
     326:	50 e0       	ldi	r21, 0x00	; 0
		
		if(msg[i] == '*')
		{
			////////////MSB
			i++;
			nmea_sum = 16*(msg[i]-48);
     328:	fc 01       	movw	r30, r24
     32a:	e4 0f       	add	r30, r20
     32c:	f5 1f       	adc	r31, r21
     32e:	81 81       	ldd	r24, Z+1	; 0x01
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	c0 97       	sbiw	r24, 0x30	; 48
     334:	82 95       	swap	r24
     336:	92 95       	swap	r25
     338:	90 7f       	andi	r25, 0xF0	; 240
     33a:	98 27       	eor	r25, r24
     33c:	80 7f       	andi	r24, 0xF0	; 240
     33e:	98 27       	eor	r25, r24
			
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     340:	22 81       	ldd	r18, Z+2	; 0x02
     342:	30 ed       	ldi	r19, 0xD0	; 208
     344:	32 0f       	add	r19, r18
     346:	3a 30       	cpi	r19, 0x0A	; 10
     348:	78 f2       	brcs	.-98     	; 0x2e8 <checksum+0x30>
     34a:	d4 cf       	rjmp	.-88     	; 0x2f4 <checksum+0x3c>

0000034c <MessageType>:
		
	}
return 0; 
}

uint8_t MessageType(char* msg){
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
     350:	cd b7       	in	r28, 0x3d	; 61
     352:	de b7       	in	r29, 0x3e	; 62
     354:	2f 97       	sbiw	r28, 0x0f	; 15
     356:	0f b6       	in	r0, 0x3f	; 63
     358:	f8 94       	cli
     35a:	de bf       	out	0x3e, r29	; 62
     35c:	0f be       	out	0x3f, r0	; 63
     35e:	cd bf       	out	0x3d, r28	; 61
	if(msg[0]=='$')
     360:	fc 01       	movw	r30, r24
     362:	20 81       	ld	r18, Z
     364:	24 32       	cpi	r18, 0x24	; 36
     366:	09 f0       	breq	.+2      	; 0x36a <MessageType+0x1e>
     368:	3f c0       	rjmp	.+126    	; 0x3e8 <MessageType+0x9c>
     36a:	dc 01       	movw	r26, r24
     36c:	11 96       	adiw	r26, 0x01	; 1
     36e:	fe 01       	movw	r30, r28
     370:	3b 96       	adiw	r30, 0x0b	; 11
     372:	9e 01       	movw	r18, r28
     374:	20 5f       	subi	r18, 0xF0	; 240
     376:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     378:	8d 91       	ld	r24, X+
     37a:	9f eb       	ldi	r25, 0xBF	; 191
     37c:	98 0f       	add	r25, r24
     37e:	9a 31       	cpi	r25, 0x1A	; 26
     380:	08 f4       	brcc	.+2      	; 0x384 <MessageType+0x38>
			{
				msg_type[k]	= msg[k+1];
     382:	80 83       	st	Z, r24
     384:	31 96       	adiw	r30, 0x01	; 1

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     386:	e2 17       	cp	r30, r18
     388:	f3 07       	cpc	r31, r19
     38a:	b1 f7       	brne	.-20     	; 0x378 <MessageType+0x2c>
			else
			{
				//printf("Failed message type\n");
			}
		}
		char msg_gpgga[5] = "GPGGA";
     38c:	85 e0       	ldi	r24, 0x05	; 5
     38e:	ee e5       	ldi	r30, 0x5E	; 94
     390:	f1 e0       	ldi	r31, 0x01	; 1
     392:	de 01       	movw	r26, r28
     394:	16 96       	adiw	r26, 0x06	; 6
     396:	01 90       	ld	r0, Z+
     398:	0d 92       	st	X+, r0
     39a:	8a 95       	dec	r24
     39c:	e1 f7       	brne	.-8      	; 0x396 <MessageType+0x4a>
		char msg_gpvtg[5] = "GPVTG";
     39e:	85 e0       	ldi	r24, 0x05	; 5
     3a0:	e4 e6       	ldi	r30, 0x64	; 100
     3a2:	f1 e0       	ldi	r31, 0x01	; 1
     3a4:	de 01       	movw	r26, r28
     3a6:	11 96       	adiw	r26, 0x01	; 1
     3a8:	01 90       	ld	r0, Z+
     3aa:	0d 92       	st	X+, r0
     3ac:	8a 95       	dec	r24
     3ae:	e1 f7       	brne	.-8      	; 0x3a8 <MessageType+0x5c>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     3b0:	45 e0       	ldi	r20, 0x05	; 5
     3b2:	50 e0       	ldi	r21, 0x00	; 0
     3b4:	be 01       	movw	r22, r28
     3b6:	6a 5f       	subi	r22, 0xFA	; 250
     3b8:	7f 4f       	sbci	r23, 0xFF	; 255
     3ba:	ce 01       	movw	r24, r28
     3bc:	0b 96       	adiw	r24, 0x0b	; 11
     3be:	0e 94 ca 09 	call	0x1394	; 0x1394 <strncmp>
     3c2:	89 2b       	or	r24, r25
     3c4:	69 f0       	breq	.+26     	; 0x3e0 <MessageType+0x94>
		{
			return GPGGA;
		}
		else if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     3c6:	45 e0       	ldi	r20, 0x05	; 5
     3c8:	50 e0       	ldi	r21, 0x00	; 0
     3ca:	be 01       	movw	r22, r28
     3cc:	6f 5f       	subi	r22, 0xFF	; 255
     3ce:	7f 4f       	sbci	r23, 0xFF	; 255
     3d0:	ce 01       	movw	r24, r28
     3d2:	0b 96       	adiw	r24, 0x0b	; 11
     3d4:	0e 94 ca 09 	call	0x1394	; 0x1394 <strncmp>
     3d8:	89 2b       	or	r24, r25
     3da:	21 f0       	breq	.+8      	; 0x3e4 <MessageType+0x98>
		{
			return GPVTG;
		}
	}
	return 0; 
     3dc:	80 e0       	ldi	r24, 0x00	; 0
     3de:	05 c0       	rjmp	.+10     	; 0x3ea <MessageType+0x9e>
		char msg_gpgga[5] = "GPGGA";
		char msg_gpvtg[5] = "GPVTG";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     3e0:	81 e0       	ldi	r24, 0x01	; 1
     3e2:	03 c0       	rjmp	.+6      	; 0x3ea <MessageType+0x9e>
		}
		else if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     3e4:	82 e0       	ldi	r24, 0x02	; 2
     3e6:	01 c0       	rjmp	.+2      	; 0x3ea <MessageType+0x9e>
		}
	}
	return 0; 
     3e8:	80 e0       	ldi	r24, 0x00	; 0
}
     3ea:	2f 96       	adiw	r28, 0x0f	; 15
     3ec:	0f b6       	in	r0, 0x3f	; 63
     3ee:	f8 94       	cli
     3f0:	de bf       	out	0x3e, r29	; 62
     3f2:	0f be       	out	0x3f, r0	; 63
     3f4:	cd bf       	out	0x3d, r28	; 61
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	08 95       	ret

000003fc <GPS_Decode>:

int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
     3fc:	4f 92       	push	r4
     3fe:	5f 92       	push	r5
     400:	6f 92       	push	r6
     402:	7f 92       	push	r7
     404:	8f 92       	push	r8
     406:	9f 92       	push	r9
     408:	af 92       	push	r10
     40a:	bf 92       	push	r11
     40c:	cf 92       	push	r12
     40e:	df 92       	push	r13
     410:	ef 92       	push	r14
     412:	ff 92       	push	r15
     414:	0f 93       	push	r16
     416:	1f 93       	push	r17
     418:	cf 93       	push	r28
     41a:	df 93       	push	r29
     41c:	8c 01       	movw	r16, r24
     41e:	7b 01       	movw	r14, r22
	///////////////////Checksum////////////////////////
	if(checksum(msg))
     420:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <checksum>
     424:	00 97       	sbiw	r24, 0x00	; 0
     426:	09 f4       	brne	.+2      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     428:	e4 c0       	rjmp	.+456    	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
	{
		uint8_t type = MessageType(msg);
     42a:	c8 01       	movw	r24, r16
     42c:	0e 94 a6 01 	call	0x34c	; 0x34c <MessageType>
     430:	c8 2f       	mov	r28, r24
		init(GPS_Data);
     432:	c7 01       	movw	r24, r14
     434:	0e 94 48 01 	call	0x290	; 0x290 <init>

	switch(type)
     438:	c1 30       	cpi	r28, 0x01	; 1
     43a:	09 f0       	breq	.+2      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     43c:	d5 c0       	rjmp	.+426    	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
				uint8_t CommaCounter=0;	//Comma counter
				float Lat_divider = 1000;	//Digit number
				float Lon_divider = 10000;
				uint8_t age = 10;
				
				while(msg[i] != '*')
     43e:	f8 01       	movw	r30, r16
     440:	86 81       	ldd	r24, Z+6	; 0x06
     442:	8a 32       	cpi	r24, 0x2A	; 42
     444:	09 f4       	brne	.+2      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
     446:	d3 c0       	rjmp	.+422    	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
     448:	0f 2e       	mov	r0, r31
     44a:	fa e0       	ldi	r31, 0x0A	; 10
     44c:	df 2e       	mov	r13, r31
     44e:	f0 2d       	mov	r31, r0
     450:	0f 2e       	mov	r0, r31
     452:	41 2c       	mov	r4, r1
     454:	f0 e4       	ldi	r31, 0x40	; 64
     456:	5f 2e       	mov	r5, r31
     458:	fc e1       	ldi	r31, 0x1C	; 28
     45a:	6f 2e       	mov	r6, r31
     45c:	f6 e4       	ldi	r31, 0x46	; 70
     45e:	7f 2e       	mov	r7, r31
     460:	f0 2d       	mov	r31, r0
     462:	0f 2e       	mov	r0, r31
     464:	81 2c       	mov	r8, r1
     466:	91 2c       	mov	r9, r1
     468:	fa e7       	ldi	r31, 0x7A	; 122
     46a:	af 2e       	mov	r10, r31
     46c:	f4 e4       	ldi	r31, 0x44	; 68
     46e:	bf 2e       	mov	r11, r31
     470:	f0 2d       	mov	r31, r0
     472:	d0 e0       	ldi	r29, 0x00	; 0
     474:	c6 e0       	ldi	r28, 0x06	; 6
						}
						//////////////////////////////////////////////////
						case 13:
						{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
							age /= 10;
     476:	0f 2e       	mov	r0, r31
     478:	fd ec       	ldi	r31, 0xCD	; 205
     47a:	cf 2e       	mov	r12, r31
     47c:	f0 2d       	mov	r31, r0
				float Lon_divider = 10000;
				uint8_t age = 10;
				
				while(msg[i] != '*')
				{
					if(msg[i] == ',')
     47e:	8c 32       	cpi	r24, 0x2C	; 44
     480:	11 f4       	brne	.+4      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
					{
						CommaCounter++;
     482:	df 5f       	subi	r29, 0xFF	; 255
						i++;
     484:	cf 5f       	subi	r28, 0xFF	; 255
					}
					
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
     486:	d4 30       	cpi	r29, 0x04	; 4
     488:	09 f4       	brne	.+2      	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
     48a:	4c c0       	rjmp	.+152    	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
     48c:	28 f4       	brcc	.+10     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
     48e:	d2 30       	cpi	r29, 0x02	; 2
     490:	61 f0       	breq	.+24     	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     492:	d3 30       	cpi	r29, 0x03	; 3
     494:	d9 f1       	breq	.+118    	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
     496:	9d c0       	rjmp	.+314    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
     498:	d6 30       	cpi	r29, 0x06	; 6
     49a:	09 f4       	brne	.+2      	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
     49c:	7f c0       	rjmp	.+254    	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
     49e:	08 f4       	brcc	.+2      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     4a0:	72 c0       	rjmp	.+228    	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
     4a2:	dd 30       	cpi	r29, 0x0D	; 13
     4a4:	09 f4       	brne	.+2      	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     4a6:	84 c0       	rjmp	.+264    	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
     4a8:	94 c0       	rjmp	.+296    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
					{
						case 2:		//Latitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     4aa:	f8 01       	movw	r30, r16
     4ac:	ec 0f       	add	r30, r28
     4ae:	f1 1d       	adc	r31, r1
     4b0:	60 81       	ld	r22, Z
     4b2:	86 2f       	mov	r24, r22
     4b4:	8d 7f       	andi	r24, 0xFD	; 253
     4b6:	8c 32       	cpi	r24, 0x2C	; 44
     4b8:	09 f4       	brne	.+2      	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
     4ba:	8b c0       	rjmp	.+278    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							{
								GPS_Data->LAT += (msg[i] - 48.0) * Lat_divider;
     4bc:	70 e0       	ldi	r23, 0x00	; 0
     4be:	80 e0       	ldi	r24, 0x00	; 0
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 3a 04 	call	0x874	; 0x874 <__floatsisf>
     4c6:	20 e0       	ldi	r18, 0x00	; 0
     4c8:	30 e0       	ldi	r19, 0x00	; 0
     4ca:	40 e4       	ldi	r20, 0x40	; 64
     4cc:	52 e4       	ldi	r21, 0x42	; 66
     4ce:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__subsf3>
     4d2:	a5 01       	movw	r20, r10
     4d4:	94 01       	movw	r18, r8
     4d6:	0e 94 c6 04 	call	0x98c	; 0x98c <__mulsf3>
     4da:	9b 01       	movw	r18, r22
     4dc:	ac 01       	movw	r20, r24
     4de:	f7 01       	movw	r30, r14
     4e0:	60 81       	ld	r22, Z
     4e2:	71 81       	ldd	r23, Z+1	; 0x01
     4e4:	82 81       	ldd	r24, Z+2	; 0x02
     4e6:	93 81       	ldd	r25, Z+3	; 0x03
     4e8:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__addsf3>
     4ec:	f7 01       	movw	r30, r14
     4ee:	60 83       	st	Z, r22
     4f0:	71 83       	std	Z+1, r23	; 0x01
     4f2:	82 83       	std	Z+2, r24	; 0x02
     4f4:	93 83       	std	Z+3, r25	; 0x03
								Lat_divider /= 10;
     4f6:	20 e0       	ldi	r18, 0x00	; 0
     4f8:	30 e0       	ldi	r19, 0x00	; 0
     4fa:	40 e2       	ldi	r20, 0x20	; 32
     4fc:	51 e4       	ldi	r21, 0x41	; 65
     4fe:	c5 01       	movw	r24, r10
     500:	b4 01       	movw	r22, r8
     502:	0e 94 c6 03 	call	0x78c	; 0x78c <__divsf3>
     506:	4b 01       	movw	r8, r22
     508:	5c 01       	movw	r10, r24
     50a:	63 c0       	rjmp	.+198    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							break;
						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
						{
							if(msg[i]>='A' && msg[i]<='Z')
     50c:	f8 01       	movw	r30, r16
     50e:	ec 0f       	add	r30, r28
     510:	f1 1d       	adc	r31, r1
     512:	80 81       	ld	r24, Z
     514:	9f eb       	ldi	r25, 0xBF	; 191
     516:	98 0f       	add	r25, r24
     518:	9a 31       	cpi	r25, 0x1A	; 26
     51a:	08 f0       	brcs	.+2      	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
     51c:	5a c0       	rjmp	.+180    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							{
								GPS_Data->LATdir = msg[i];
     51e:	f7 01       	movw	r30, r14
     520:	84 83       	std	Z+4, r24	; 0x04
     522:	57 c0       	rjmp	.+174    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     524:	f8 01       	movw	r30, r16
     526:	ec 0f       	add	r30, r28
     528:	f1 1d       	adc	r31, r1
     52a:	60 81       	ld	r22, Z
     52c:	86 2f       	mov	r24, r22
     52e:	8d 7f       	andi	r24, 0xFD	; 253
     530:	8c 32       	cpi	r24, 0x2C	; 44
     532:	09 f4       	brne	.+2      	; 0x536 <__LOCK_REGION_LENGTH__+0x136>
     534:	4e c0       	rjmp	.+156    	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							{
								GPS_Data->LON += (msg[i] - 48.0) * Lon_divider;
     536:	70 e0       	ldi	r23, 0x00	; 0
     538:	80 e0       	ldi	r24, 0x00	; 0
     53a:	90 e0       	ldi	r25, 0x00	; 0
     53c:	0e 94 3a 04 	call	0x874	; 0x874 <__floatsisf>
     540:	20 e0       	ldi	r18, 0x00	; 0
     542:	30 e0       	ldi	r19, 0x00	; 0
     544:	40 e4       	ldi	r20, 0x40	; 64
     546:	52 e4       	ldi	r21, 0x42	; 66
     548:	0e 94 59 03 	call	0x6b2	; 0x6b2 <__subsf3>
     54c:	a3 01       	movw	r20, r6
     54e:	92 01       	movw	r18, r4
     550:	0e 94 c6 04 	call	0x98c	; 0x98c <__mulsf3>
     554:	9b 01       	movw	r18, r22
     556:	ac 01       	movw	r20, r24
     558:	f7 01       	movw	r30, r14
     55a:	65 81       	ldd	r22, Z+5	; 0x05
     55c:	76 81       	ldd	r23, Z+6	; 0x06
     55e:	87 81       	ldd	r24, Z+7	; 0x07
     560:	90 85       	ldd	r25, Z+8	; 0x08
     562:	0e 94 5a 03 	call	0x6b4	; 0x6b4 <__addsf3>
     566:	f7 01       	movw	r30, r14
     568:	65 83       	std	Z+5, r22	; 0x05
     56a:	76 83       	std	Z+6, r23	; 0x06
     56c:	87 83       	std	Z+7, r24	; 0x07
     56e:	90 87       	std	Z+8, r25	; 0x08
								Lon_divider /= 10;
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	40 e2       	ldi	r20, 0x20	; 32
     576:	51 e4       	ldi	r21, 0x41	; 65
     578:	c3 01       	movw	r24, r6
     57a:	b2 01       	movw	r22, r4
     57c:	0e 94 c6 03 	call	0x78c	; 0x78c <__divsf3>
     580:	2b 01       	movw	r4, r22
     582:	3c 01       	movw	r6, r24
     584:	26 c0       	rjmp	.+76     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							break;
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
						{
							if(msg[i]>='A' && msg[i]<='Z')
     586:	f8 01       	movw	r30, r16
     588:	ec 0f       	add	r30, r28
     58a:	f1 1d       	adc	r31, r1
     58c:	80 81       	ld	r24, Z
     58e:	9f eb       	ldi	r25, 0xBF	; 191
     590:	98 0f       	add	r25, r24
     592:	9a 31       	cpi	r25, 0x1A	; 26
     594:	f0 f4       	brcc	.+60     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							{
								GPS_Data->LONdir = msg[i];
     596:	f7 01       	movw	r30, r14
     598:	81 87       	std	Z+9, r24	; 0x09
     59a:	1b c0       	rjmp	.+54     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
     59c:	f8 01       	movw	r30, r16
     59e:	ec 0f       	add	r30, r28
     5a0:	f1 1d       	adc	r31, r1
     5a2:	80 81       	ld	r24, Z
     5a4:	80 53       	subi	r24, 0x30	; 48
     5a6:	86 30       	cpi	r24, 0x06	; 6
     5a8:	a0 f4       	brcc	.+40     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							{
								GPS_Data->quality = msg[i] - 48;
     5aa:	f7 01       	movw	r30, r14
     5ac:	82 87       	std	Z+10, r24	; 0x0a
     5ae:	11 c0       	rjmp	.+34     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
							break;
						}
						//////////////////////////////////////////////////
						case 13:
						{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
     5b0:	f8 01       	movw	r30, r16
     5b2:	ec 0f       	add	r30, r28
     5b4:	f1 1d       	adc	r31, r1
     5b6:	90 81       	ld	r25, Z
     5b8:	90 53       	subi	r25, 0x30	; 48
     5ba:	f7 01       	movw	r30, r14
     5bc:	83 85       	ldd	r24, Z+11	; 0x0b
     5be:	9d 9d       	mul	r25, r13
     5c0:	80 0d       	add	r24, r0
     5c2:	11 24       	eor	r1, r1
     5c4:	83 87       	std	Z+11, r24	; 0x0b
							age /= 10;
     5c6:	dc 9c       	mul	r13, r12
     5c8:	d1 2c       	mov	r13, r1
     5ca:	11 24       	eor	r1, r1
     5cc:	d6 94       	lsr	r13
     5ce:	d6 94       	lsr	r13
     5d0:	d6 94       	lsr	r13
							break;
						}
					}
					///////////COMMA SWITCH END!////////////////////////
					i++;
     5d2:	cf 5f       	subi	r28, 0xFF	; 255
				uint8_t CommaCounter=0;	//Comma counter
				float Lat_divider = 1000;	//Digit number
				float Lon_divider = 10000;
				uint8_t age = 10;
				
				while(msg[i] != '*')
     5d4:	f8 01       	movw	r30, r16
     5d6:	ec 0f       	add	r30, r28
     5d8:	f1 1d       	adc	r31, r1
     5da:	80 81       	ld	r24, Z
     5dc:	8a 32       	cpi	r24, 0x2A	; 42
     5de:	09 f0       	breq	.+2      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
     5e0:	4e cf       	rjmp	.-356    	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		return 1;
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	05 c0       	rjmp	.+10     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
     5e8:	81 e0       	ldi	r24, 0x01	; 1
     5ea:	90 e0       	ldi	r25, 0x00	; 0
     5ec:	02 c0       	rjmp	.+4      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	90 e0       	ldi	r25, 0x00	; 0
	}
	else
	{
		return 0;
	}
     5f2:	df 91       	pop	r29
     5f4:	cf 91       	pop	r28
     5f6:	1f 91       	pop	r17
     5f8:	0f 91       	pop	r16
     5fa:	ff 90       	pop	r15
     5fc:	ef 90       	pop	r14
     5fe:	df 90       	pop	r13
     600:	cf 90       	pop	r12
     602:	bf 90       	pop	r11
     604:	af 90       	pop	r10
     606:	9f 90       	pop	r9
     608:	8f 90       	pop	r8
     60a:	7f 90       	pop	r7
     60c:	6f 90       	pop	r6
     60e:	5f 90       	pop	r5
     610:	4f 90       	pop	r4
     612:	08 95       	ret

00000614 <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     614:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     616:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     618:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     61a:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
     61c:	0e 94 35 03 	call	0x66a	; 0x66a <USART_0_init>
     620:	08 95       	ret

00000622 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR = (1 << PRSPI) | (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI) | (1 << PRUSART0) | (1 << PRADC);
     622:	8f ee       	ldi	r24, 0xEF	; 239
     624:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     628:	84 b1       	in	r24, 0x04	; 4
     62a:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     62c:	85 b1       	in	r24, 0x05	; 5
     62e:	9f ef       	ldi	r25, 0xFF	; 255
     630:	95 b9       	out	0x05, r25	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     632:	87 b1       	in	r24, 0x07	; 7
     634:	80 78       	andi	r24, 0x80	; 128
     636:	87 b9       	out	0x07, r24	; 7

		PORTC |= mask;
     638:	88 b1       	in	r24, 0x08	; 8
     63a:	8f 67       	ori	r24, 0x7F	; 127
     63c:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     63e:	8a b1       	in	r24, 0x0a	; 10
     640:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     642:	8b b1       	in	r24, 0x0b	; 11
     644:	9b b9       	out	0x0b, r25	; 11
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     646:	40 e0       	ldi	r20, 0x00	; 0
     648:	60 e8       	ldi	r22, 0x80	; 128
     64a:	81 e6       	ldi	r24, 0x61	; 97
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0e 94 2e 03 	call	0x65c	; 0x65c <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     652:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     654:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	USART_0_initialization();
     656:	0e 94 0a 03 	call	0x614	; 0x614 <USART_0_initialization>
     65a:	08 95       	ret

0000065c <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     65c:	2f b7       	in	r18, 0x3f	; 63
	cli
     65e:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     660:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     662:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     664:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     666:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     668:	08 95       	ret

0000066a <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
     66a:	e4 e6       	ldi	r30, 0x64	; 100
     66c:	f0 e0       	ldi	r31, 0x00	; 0
     66e:	80 81       	ld	r24, Z
     670:	8d 7f       	andi	r24, 0xFD	; 253
     672:	80 83       	st	Z, r24
     674:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     678:	83 e3       	ldi	r24, 0x33	; 51
     67a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     67e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     682:	88 e9       	ldi	r24, 0x98	; 152
     684:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     688:	80 e5       	ldi	r24, 0x50	; 80
     68a:	91 e0       	ldi	r25, 0x01	; 1
     68c:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <__data_end+0x3>
     690:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__data_end+0x2>
     694:	80 e0       	ldi	r24, 0x00	; 0
     696:	08 95       	ret

00000698 <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
     698:	e0 ec       	ldi	r30, 0xC0	; 192
     69a:	f0 e0       	ldi	r31, 0x00	; 0
     69c:	90 81       	ld	r25, Z
     69e:	95 ff       	sbrs	r25, 5
     6a0:	fd cf       	rjmp	.-6      	; 0x69c <USART_0_write+0x4>
		;
	UDR0 = data;
     6a2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     6a6:	08 95       	ret

000006a8 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
     6a8:	0e 94 4c 03 	call	0x698	; 0x698 <USART_0_write>
	return 0;
}
     6ac:	80 e0       	ldi	r24, 0x00	; 0
     6ae:	90 e0       	ldi	r25, 0x00	; 0
     6b0:	08 95       	ret

000006b2 <__subsf3>:
     6b2:	50 58       	subi	r21, 0x80	; 128

000006b4 <__addsf3>:
     6b4:	bb 27       	eor	r27, r27
     6b6:	aa 27       	eor	r26, r26
     6b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__addsf3x>
     6bc:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_round>
     6c0:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_pscA>
     6c4:	38 f0       	brcs	.+14     	; 0x6d4 <__addsf3+0x20>
     6c6:	0e 94 85 04 	call	0x90a	; 0x90a <__fp_pscB>
     6ca:	20 f0       	brcs	.+8      	; 0x6d4 <__addsf3+0x20>
     6cc:	39 f4       	brne	.+14     	; 0x6dc <__addsf3+0x28>
     6ce:	9f 3f       	cpi	r25, 0xFF	; 255
     6d0:	19 f4       	brne	.+6      	; 0x6d8 <__addsf3+0x24>
     6d2:	26 f4       	brtc	.+8      	; 0x6dc <__addsf3+0x28>
     6d4:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_nan>
     6d8:	0e f4       	brtc	.+2      	; 0x6dc <__addsf3+0x28>
     6da:	e0 95       	com	r30
     6dc:	e7 fb       	bst	r30, 7
     6de:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_inf>

000006e2 <__addsf3x>:
     6e2:	e9 2f       	mov	r30, r25
     6e4:	0e 94 9d 04 	call	0x93a	; 0x93a <__fp_split3>
     6e8:	58 f3       	brcs	.-42     	; 0x6c0 <__addsf3+0xc>
     6ea:	ba 17       	cp	r27, r26
     6ec:	62 07       	cpc	r22, r18
     6ee:	73 07       	cpc	r23, r19
     6f0:	84 07       	cpc	r24, r20
     6f2:	95 07       	cpc	r25, r21
     6f4:	20 f0       	brcs	.+8      	; 0x6fe <__addsf3x+0x1c>
     6f6:	79 f4       	brne	.+30     	; 0x716 <__addsf3x+0x34>
     6f8:	a6 f5       	brtc	.+104    	; 0x762 <__addsf3x+0x80>
     6fa:	0c 94 bf 04 	jmp	0x97e	; 0x97e <__fp_zero>
     6fe:	0e f4       	brtc	.+2      	; 0x702 <__addsf3x+0x20>
     700:	e0 95       	com	r30
     702:	0b 2e       	mov	r0, r27
     704:	ba 2f       	mov	r27, r26
     706:	a0 2d       	mov	r26, r0
     708:	0b 01       	movw	r0, r22
     70a:	b9 01       	movw	r22, r18
     70c:	90 01       	movw	r18, r0
     70e:	0c 01       	movw	r0, r24
     710:	ca 01       	movw	r24, r20
     712:	a0 01       	movw	r20, r0
     714:	11 24       	eor	r1, r1
     716:	ff 27       	eor	r31, r31
     718:	59 1b       	sub	r21, r25
     71a:	99 f0       	breq	.+38     	; 0x742 <__addsf3x+0x60>
     71c:	59 3f       	cpi	r21, 0xF9	; 249
     71e:	50 f4       	brcc	.+20     	; 0x734 <__addsf3x+0x52>
     720:	50 3e       	cpi	r21, 0xE0	; 224
     722:	68 f1       	brcs	.+90     	; 0x77e <__addsf3x+0x9c>
     724:	1a 16       	cp	r1, r26
     726:	f0 40       	sbci	r31, 0x00	; 0
     728:	a2 2f       	mov	r26, r18
     72a:	23 2f       	mov	r18, r19
     72c:	34 2f       	mov	r19, r20
     72e:	44 27       	eor	r20, r20
     730:	58 5f       	subi	r21, 0xF8	; 248
     732:	f3 cf       	rjmp	.-26     	; 0x71a <__addsf3x+0x38>
     734:	46 95       	lsr	r20
     736:	37 95       	ror	r19
     738:	27 95       	ror	r18
     73a:	a7 95       	ror	r26
     73c:	f0 40       	sbci	r31, 0x00	; 0
     73e:	53 95       	inc	r21
     740:	c9 f7       	brne	.-14     	; 0x734 <__addsf3x+0x52>
     742:	7e f4       	brtc	.+30     	; 0x762 <__addsf3x+0x80>
     744:	1f 16       	cp	r1, r31
     746:	ba 0b       	sbc	r27, r26
     748:	62 0b       	sbc	r22, r18
     74a:	73 0b       	sbc	r23, r19
     74c:	84 0b       	sbc	r24, r20
     74e:	ba f0       	brmi	.+46     	; 0x77e <__addsf3x+0x9c>
     750:	91 50       	subi	r25, 0x01	; 1
     752:	a1 f0       	breq	.+40     	; 0x77c <__addsf3x+0x9a>
     754:	ff 0f       	add	r31, r31
     756:	bb 1f       	adc	r27, r27
     758:	66 1f       	adc	r22, r22
     75a:	77 1f       	adc	r23, r23
     75c:	88 1f       	adc	r24, r24
     75e:	c2 f7       	brpl	.-16     	; 0x750 <__addsf3x+0x6e>
     760:	0e c0       	rjmp	.+28     	; 0x77e <__addsf3x+0x9c>
     762:	ba 0f       	add	r27, r26
     764:	62 1f       	adc	r22, r18
     766:	73 1f       	adc	r23, r19
     768:	84 1f       	adc	r24, r20
     76a:	48 f4       	brcc	.+18     	; 0x77e <__addsf3x+0x9c>
     76c:	87 95       	ror	r24
     76e:	77 95       	ror	r23
     770:	67 95       	ror	r22
     772:	b7 95       	ror	r27
     774:	f7 95       	ror	r31
     776:	9e 3f       	cpi	r25, 0xFE	; 254
     778:	08 f0       	brcs	.+2      	; 0x77c <__addsf3x+0x9a>
     77a:	b0 cf       	rjmp	.-160    	; 0x6dc <__addsf3+0x28>
     77c:	93 95       	inc	r25
     77e:	88 0f       	add	r24, r24
     780:	08 f0       	brcs	.+2      	; 0x784 <__addsf3x+0xa2>
     782:	99 27       	eor	r25, r25
     784:	ee 0f       	add	r30, r30
     786:	97 95       	ror	r25
     788:	87 95       	ror	r24
     78a:	08 95       	ret

0000078c <__divsf3>:
     78c:	0e 94 da 03 	call	0x7b4	; 0x7b4 <__divsf3x>
     790:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_round>
     794:	0e 94 85 04 	call	0x90a	; 0x90a <__fp_pscB>
     798:	58 f0       	brcs	.+22     	; 0x7b0 <__divsf3+0x24>
     79a:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_pscA>
     79e:	40 f0       	brcs	.+16     	; 0x7b0 <__divsf3+0x24>
     7a0:	29 f4       	brne	.+10     	; 0x7ac <__divsf3+0x20>
     7a2:	5f 3f       	cpi	r21, 0xFF	; 255
     7a4:	29 f0       	breq	.+10     	; 0x7b0 <__divsf3+0x24>
     7a6:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_inf>
     7aa:	51 11       	cpse	r21, r1
     7ac:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>
     7b0:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_nan>

000007b4 <__divsf3x>:
     7b4:	0e 94 9d 04 	call	0x93a	; 0x93a <__fp_split3>
     7b8:	68 f3       	brcs	.-38     	; 0x794 <__divsf3+0x8>

000007ba <__divsf3_pse>:
     7ba:	99 23       	and	r25, r25
     7bc:	b1 f3       	breq	.-20     	; 0x7aa <__divsf3+0x1e>
     7be:	55 23       	and	r21, r21
     7c0:	91 f3       	breq	.-28     	; 0x7a6 <__divsf3+0x1a>
     7c2:	95 1b       	sub	r25, r21
     7c4:	55 0b       	sbc	r21, r21
     7c6:	bb 27       	eor	r27, r27
     7c8:	aa 27       	eor	r26, r26
     7ca:	62 17       	cp	r22, r18
     7cc:	73 07       	cpc	r23, r19
     7ce:	84 07       	cpc	r24, r20
     7d0:	38 f0       	brcs	.+14     	; 0x7e0 <__divsf3_pse+0x26>
     7d2:	9f 5f       	subi	r25, 0xFF	; 255
     7d4:	5f 4f       	sbci	r21, 0xFF	; 255
     7d6:	22 0f       	add	r18, r18
     7d8:	33 1f       	adc	r19, r19
     7da:	44 1f       	adc	r20, r20
     7dc:	aa 1f       	adc	r26, r26
     7de:	a9 f3       	breq	.-22     	; 0x7ca <__divsf3_pse+0x10>
     7e0:	35 d0       	rcall	.+106    	; 0x84c <__divsf3_pse+0x92>
     7e2:	0e 2e       	mov	r0, r30
     7e4:	3a f0       	brmi	.+14     	; 0x7f4 <__divsf3_pse+0x3a>
     7e6:	e0 e8       	ldi	r30, 0x80	; 128
     7e8:	32 d0       	rcall	.+100    	; 0x84e <__divsf3_pse+0x94>
     7ea:	91 50       	subi	r25, 0x01	; 1
     7ec:	50 40       	sbci	r21, 0x00	; 0
     7ee:	e6 95       	lsr	r30
     7f0:	00 1c       	adc	r0, r0
     7f2:	ca f7       	brpl	.-14     	; 0x7e6 <__divsf3_pse+0x2c>
     7f4:	2b d0       	rcall	.+86     	; 0x84c <__divsf3_pse+0x92>
     7f6:	fe 2f       	mov	r31, r30
     7f8:	29 d0       	rcall	.+82     	; 0x84c <__divsf3_pse+0x92>
     7fa:	66 0f       	add	r22, r22
     7fc:	77 1f       	adc	r23, r23
     7fe:	88 1f       	adc	r24, r24
     800:	bb 1f       	adc	r27, r27
     802:	26 17       	cp	r18, r22
     804:	37 07       	cpc	r19, r23
     806:	48 07       	cpc	r20, r24
     808:	ab 07       	cpc	r26, r27
     80a:	b0 e8       	ldi	r27, 0x80	; 128
     80c:	09 f0       	breq	.+2      	; 0x810 <__divsf3_pse+0x56>
     80e:	bb 0b       	sbc	r27, r27
     810:	80 2d       	mov	r24, r0
     812:	bf 01       	movw	r22, r30
     814:	ff 27       	eor	r31, r31
     816:	93 58       	subi	r25, 0x83	; 131
     818:	5f 4f       	sbci	r21, 0xFF	; 255
     81a:	3a f0       	brmi	.+14     	; 0x82a <__divsf3_pse+0x70>
     81c:	9e 3f       	cpi	r25, 0xFE	; 254
     81e:	51 05       	cpc	r21, r1
     820:	78 f0       	brcs	.+30     	; 0x840 <__divsf3_pse+0x86>
     822:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_inf>
     826:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>
     82a:	5f 3f       	cpi	r21, 0xFF	; 255
     82c:	e4 f3       	brlt	.-8      	; 0x826 <__divsf3_pse+0x6c>
     82e:	98 3e       	cpi	r25, 0xE8	; 232
     830:	d4 f3       	brlt	.-12     	; 0x826 <__divsf3_pse+0x6c>
     832:	86 95       	lsr	r24
     834:	77 95       	ror	r23
     836:	67 95       	ror	r22
     838:	b7 95       	ror	r27
     83a:	f7 95       	ror	r31
     83c:	9f 5f       	subi	r25, 0xFF	; 255
     83e:	c9 f7       	brne	.-14     	; 0x832 <__divsf3_pse+0x78>
     840:	88 0f       	add	r24, r24
     842:	91 1d       	adc	r25, r1
     844:	96 95       	lsr	r25
     846:	87 95       	ror	r24
     848:	97 f9       	bld	r25, 7
     84a:	08 95       	ret
     84c:	e1 e0       	ldi	r30, 0x01	; 1
     84e:	66 0f       	add	r22, r22
     850:	77 1f       	adc	r23, r23
     852:	88 1f       	adc	r24, r24
     854:	bb 1f       	adc	r27, r27
     856:	62 17       	cp	r22, r18
     858:	73 07       	cpc	r23, r19
     85a:	84 07       	cpc	r24, r20
     85c:	ba 07       	cpc	r27, r26
     85e:	20 f0       	brcs	.+8      	; 0x868 <__divsf3_pse+0xae>
     860:	62 1b       	sub	r22, r18
     862:	73 0b       	sbc	r23, r19
     864:	84 0b       	sbc	r24, r20
     866:	ba 0b       	sbc	r27, r26
     868:	ee 1f       	adc	r30, r30
     86a:	88 f7       	brcc	.-30     	; 0x84e <__divsf3_pse+0x94>
     86c:	e0 95       	com	r30
     86e:	08 95       	ret

00000870 <__floatunsisf>:
     870:	e8 94       	clt
     872:	09 c0       	rjmp	.+18     	; 0x886 <__floatsisf+0x12>

00000874 <__floatsisf>:
     874:	97 fb       	bst	r25, 7
     876:	3e f4       	brtc	.+14     	; 0x886 <__floatsisf+0x12>
     878:	90 95       	com	r25
     87a:	80 95       	com	r24
     87c:	70 95       	com	r23
     87e:	61 95       	neg	r22
     880:	7f 4f       	sbci	r23, 0xFF	; 255
     882:	8f 4f       	sbci	r24, 0xFF	; 255
     884:	9f 4f       	sbci	r25, 0xFF	; 255
     886:	99 23       	and	r25, r25
     888:	a9 f0       	breq	.+42     	; 0x8b4 <__floatsisf+0x40>
     88a:	f9 2f       	mov	r31, r25
     88c:	96 e9       	ldi	r25, 0x96	; 150
     88e:	bb 27       	eor	r27, r27
     890:	93 95       	inc	r25
     892:	f6 95       	lsr	r31
     894:	87 95       	ror	r24
     896:	77 95       	ror	r23
     898:	67 95       	ror	r22
     89a:	b7 95       	ror	r27
     89c:	f1 11       	cpse	r31, r1
     89e:	f8 cf       	rjmp	.-16     	; 0x890 <__floatsisf+0x1c>
     8a0:	fa f4       	brpl	.+62     	; 0x8e0 <__floatsisf+0x6c>
     8a2:	bb 0f       	add	r27, r27
     8a4:	11 f4       	brne	.+4      	; 0x8aa <__floatsisf+0x36>
     8a6:	60 ff       	sbrs	r22, 0
     8a8:	1b c0       	rjmp	.+54     	; 0x8e0 <__floatsisf+0x6c>
     8aa:	6f 5f       	subi	r22, 0xFF	; 255
     8ac:	7f 4f       	sbci	r23, 0xFF	; 255
     8ae:	8f 4f       	sbci	r24, 0xFF	; 255
     8b0:	9f 4f       	sbci	r25, 0xFF	; 255
     8b2:	16 c0       	rjmp	.+44     	; 0x8e0 <__floatsisf+0x6c>
     8b4:	88 23       	and	r24, r24
     8b6:	11 f0       	breq	.+4      	; 0x8bc <__floatsisf+0x48>
     8b8:	96 e9       	ldi	r25, 0x96	; 150
     8ba:	11 c0       	rjmp	.+34     	; 0x8de <__floatsisf+0x6a>
     8bc:	77 23       	and	r23, r23
     8be:	21 f0       	breq	.+8      	; 0x8c8 <__floatsisf+0x54>
     8c0:	9e e8       	ldi	r25, 0x8E	; 142
     8c2:	87 2f       	mov	r24, r23
     8c4:	76 2f       	mov	r23, r22
     8c6:	05 c0       	rjmp	.+10     	; 0x8d2 <__floatsisf+0x5e>
     8c8:	66 23       	and	r22, r22
     8ca:	71 f0       	breq	.+28     	; 0x8e8 <__floatsisf+0x74>
     8cc:	96 e8       	ldi	r25, 0x86	; 134
     8ce:	86 2f       	mov	r24, r22
     8d0:	70 e0       	ldi	r23, 0x00	; 0
     8d2:	60 e0       	ldi	r22, 0x00	; 0
     8d4:	2a f0       	brmi	.+10     	; 0x8e0 <__floatsisf+0x6c>
     8d6:	9a 95       	dec	r25
     8d8:	66 0f       	add	r22, r22
     8da:	77 1f       	adc	r23, r23
     8dc:	88 1f       	adc	r24, r24
     8de:	da f7       	brpl	.-10     	; 0x8d6 <__floatsisf+0x62>
     8e0:	88 0f       	add	r24, r24
     8e2:	96 95       	lsr	r25
     8e4:	87 95       	ror	r24
     8e6:	97 f9       	bld	r25, 7
     8e8:	08 95       	ret

000008ea <__fp_inf>:
     8ea:	97 f9       	bld	r25, 7
     8ec:	9f 67       	ori	r25, 0x7F	; 127
     8ee:	80 e8       	ldi	r24, 0x80	; 128
     8f0:	70 e0       	ldi	r23, 0x00	; 0
     8f2:	60 e0       	ldi	r22, 0x00	; 0
     8f4:	08 95       	ret

000008f6 <__fp_nan>:
     8f6:	9f ef       	ldi	r25, 0xFF	; 255
     8f8:	80 ec       	ldi	r24, 0xC0	; 192
     8fa:	08 95       	ret

000008fc <__fp_pscA>:
     8fc:	00 24       	eor	r0, r0
     8fe:	0a 94       	dec	r0
     900:	16 16       	cp	r1, r22
     902:	17 06       	cpc	r1, r23
     904:	18 06       	cpc	r1, r24
     906:	09 06       	cpc	r0, r25
     908:	08 95       	ret

0000090a <__fp_pscB>:
     90a:	00 24       	eor	r0, r0
     90c:	0a 94       	dec	r0
     90e:	12 16       	cp	r1, r18
     910:	13 06       	cpc	r1, r19
     912:	14 06       	cpc	r1, r20
     914:	05 06       	cpc	r0, r21
     916:	08 95       	ret

00000918 <__fp_round>:
     918:	09 2e       	mov	r0, r25
     91a:	03 94       	inc	r0
     91c:	00 0c       	add	r0, r0
     91e:	11 f4       	brne	.+4      	; 0x924 <__fp_round+0xc>
     920:	88 23       	and	r24, r24
     922:	52 f0       	brmi	.+20     	; 0x938 <__fp_round+0x20>
     924:	bb 0f       	add	r27, r27
     926:	40 f4       	brcc	.+16     	; 0x938 <__fp_round+0x20>
     928:	bf 2b       	or	r27, r31
     92a:	11 f4       	brne	.+4      	; 0x930 <__fp_round+0x18>
     92c:	60 ff       	sbrs	r22, 0
     92e:	04 c0       	rjmp	.+8      	; 0x938 <__fp_round+0x20>
     930:	6f 5f       	subi	r22, 0xFF	; 255
     932:	7f 4f       	sbci	r23, 0xFF	; 255
     934:	8f 4f       	sbci	r24, 0xFF	; 255
     936:	9f 4f       	sbci	r25, 0xFF	; 255
     938:	08 95       	ret

0000093a <__fp_split3>:
     93a:	57 fd       	sbrc	r21, 7
     93c:	90 58       	subi	r25, 0x80	; 128
     93e:	44 0f       	add	r20, r20
     940:	55 1f       	adc	r21, r21
     942:	59 f0       	breq	.+22     	; 0x95a <__fp_splitA+0x10>
     944:	5f 3f       	cpi	r21, 0xFF	; 255
     946:	71 f0       	breq	.+28     	; 0x964 <__fp_splitA+0x1a>
     948:	47 95       	ror	r20

0000094a <__fp_splitA>:
     94a:	88 0f       	add	r24, r24
     94c:	97 fb       	bst	r25, 7
     94e:	99 1f       	adc	r25, r25
     950:	61 f0       	breq	.+24     	; 0x96a <__fp_splitA+0x20>
     952:	9f 3f       	cpi	r25, 0xFF	; 255
     954:	79 f0       	breq	.+30     	; 0x974 <__fp_splitA+0x2a>
     956:	87 95       	ror	r24
     958:	08 95       	ret
     95a:	12 16       	cp	r1, r18
     95c:	13 06       	cpc	r1, r19
     95e:	14 06       	cpc	r1, r20
     960:	55 1f       	adc	r21, r21
     962:	f2 cf       	rjmp	.-28     	; 0x948 <__fp_split3+0xe>
     964:	46 95       	lsr	r20
     966:	f1 df       	rcall	.-30     	; 0x94a <__fp_splitA>
     968:	08 c0       	rjmp	.+16     	; 0x97a <__fp_splitA+0x30>
     96a:	16 16       	cp	r1, r22
     96c:	17 06       	cpc	r1, r23
     96e:	18 06       	cpc	r1, r24
     970:	99 1f       	adc	r25, r25
     972:	f1 cf       	rjmp	.-30     	; 0x956 <__fp_splitA+0xc>
     974:	86 95       	lsr	r24
     976:	71 05       	cpc	r23, r1
     978:	61 05       	cpc	r22, r1
     97a:	08 94       	sec
     97c:	08 95       	ret

0000097e <__fp_zero>:
     97e:	e8 94       	clt

00000980 <__fp_szero>:
     980:	bb 27       	eor	r27, r27
     982:	66 27       	eor	r22, r22
     984:	77 27       	eor	r23, r23
     986:	cb 01       	movw	r24, r22
     988:	97 f9       	bld	r25, 7
     98a:	08 95       	ret

0000098c <__mulsf3>:
     98c:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__mulsf3x>
     990:	0c 94 8c 04 	jmp	0x918	; 0x918 <__fp_round>
     994:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_pscA>
     998:	38 f0       	brcs	.+14     	; 0x9a8 <__mulsf3+0x1c>
     99a:	0e 94 85 04 	call	0x90a	; 0x90a <__fp_pscB>
     99e:	20 f0       	brcs	.+8      	; 0x9a8 <__mulsf3+0x1c>
     9a0:	95 23       	and	r25, r21
     9a2:	11 f0       	breq	.+4      	; 0x9a8 <__mulsf3+0x1c>
     9a4:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_inf>
     9a8:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__fp_nan>
     9ac:	11 24       	eor	r1, r1
     9ae:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>

000009b2 <__mulsf3x>:
     9b2:	0e 94 9d 04 	call	0x93a	; 0x93a <__fp_split3>
     9b6:	70 f3       	brcs	.-36     	; 0x994 <__mulsf3+0x8>

000009b8 <__mulsf3_pse>:
     9b8:	95 9f       	mul	r25, r21
     9ba:	c1 f3       	breq	.-16     	; 0x9ac <__mulsf3+0x20>
     9bc:	95 0f       	add	r25, r21
     9be:	50 e0       	ldi	r21, 0x00	; 0
     9c0:	55 1f       	adc	r21, r21
     9c2:	62 9f       	mul	r22, r18
     9c4:	f0 01       	movw	r30, r0
     9c6:	72 9f       	mul	r23, r18
     9c8:	bb 27       	eor	r27, r27
     9ca:	f0 0d       	add	r31, r0
     9cc:	b1 1d       	adc	r27, r1
     9ce:	63 9f       	mul	r22, r19
     9d0:	aa 27       	eor	r26, r26
     9d2:	f0 0d       	add	r31, r0
     9d4:	b1 1d       	adc	r27, r1
     9d6:	aa 1f       	adc	r26, r26
     9d8:	64 9f       	mul	r22, r20
     9da:	66 27       	eor	r22, r22
     9dc:	b0 0d       	add	r27, r0
     9de:	a1 1d       	adc	r26, r1
     9e0:	66 1f       	adc	r22, r22
     9e2:	82 9f       	mul	r24, r18
     9e4:	22 27       	eor	r18, r18
     9e6:	b0 0d       	add	r27, r0
     9e8:	a1 1d       	adc	r26, r1
     9ea:	62 1f       	adc	r22, r18
     9ec:	73 9f       	mul	r23, r19
     9ee:	b0 0d       	add	r27, r0
     9f0:	a1 1d       	adc	r26, r1
     9f2:	62 1f       	adc	r22, r18
     9f4:	83 9f       	mul	r24, r19
     9f6:	a0 0d       	add	r26, r0
     9f8:	61 1d       	adc	r22, r1
     9fa:	22 1f       	adc	r18, r18
     9fc:	74 9f       	mul	r23, r20
     9fe:	33 27       	eor	r19, r19
     a00:	a0 0d       	add	r26, r0
     a02:	61 1d       	adc	r22, r1
     a04:	23 1f       	adc	r18, r19
     a06:	84 9f       	mul	r24, r20
     a08:	60 0d       	add	r22, r0
     a0a:	21 1d       	adc	r18, r1
     a0c:	82 2f       	mov	r24, r18
     a0e:	76 2f       	mov	r23, r22
     a10:	6a 2f       	mov	r22, r26
     a12:	11 24       	eor	r1, r1
     a14:	9f 57       	subi	r25, 0x7F	; 127
     a16:	50 40       	sbci	r21, 0x00	; 0
     a18:	9a f0       	brmi	.+38     	; 0xa40 <__mulsf3_pse+0x88>
     a1a:	f1 f0       	breq	.+60     	; 0xa58 <__mulsf3_pse+0xa0>
     a1c:	88 23       	and	r24, r24
     a1e:	4a f0       	brmi	.+18     	; 0xa32 <__mulsf3_pse+0x7a>
     a20:	ee 0f       	add	r30, r30
     a22:	ff 1f       	adc	r31, r31
     a24:	bb 1f       	adc	r27, r27
     a26:	66 1f       	adc	r22, r22
     a28:	77 1f       	adc	r23, r23
     a2a:	88 1f       	adc	r24, r24
     a2c:	91 50       	subi	r25, 0x01	; 1
     a2e:	50 40       	sbci	r21, 0x00	; 0
     a30:	a9 f7       	brne	.-22     	; 0xa1c <__mulsf3_pse+0x64>
     a32:	9e 3f       	cpi	r25, 0xFE	; 254
     a34:	51 05       	cpc	r21, r1
     a36:	80 f0       	brcs	.+32     	; 0xa58 <__mulsf3_pse+0xa0>
     a38:	0c 94 75 04 	jmp	0x8ea	; 0x8ea <__fp_inf>
     a3c:	0c 94 c0 04 	jmp	0x980	; 0x980 <__fp_szero>
     a40:	5f 3f       	cpi	r21, 0xFF	; 255
     a42:	e4 f3       	brlt	.-8      	; 0xa3c <__mulsf3_pse+0x84>
     a44:	98 3e       	cpi	r25, 0xE8	; 232
     a46:	d4 f3       	brlt	.-12     	; 0xa3c <__mulsf3_pse+0x84>
     a48:	86 95       	lsr	r24
     a4a:	77 95       	ror	r23
     a4c:	67 95       	ror	r22
     a4e:	b7 95       	ror	r27
     a50:	f7 95       	ror	r31
     a52:	e7 95       	ror	r30
     a54:	9f 5f       	subi	r25, 0xFF	; 255
     a56:	c1 f7       	brne	.-16     	; 0xa48 <__mulsf3_pse+0x90>
     a58:	fe 2b       	or	r31, r30
     a5a:	88 0f       	add	r24, r24
     a5c:	91 1d       	adc	r25, r1
     a5e:	96 95       	lsr	r25
     a60:	87 95       	ror	r24
     a62:	97 f9       	bld	r25, 7
     a64:	08 95       	ret

00000a66 <vfprintf>:
     a66:	a0 e1       	ldi	r26, 0x10	; 16
     a68:	b0 e0       	ldi	r27, 0x00	; 0
     a6a:	e9 e3       	ldi	r30, 0x39	; 57
     a6c:	f5 e0       	ldi	r31, 0x05	; 5
     a6e:	0c 94 b0 08 	jmp	0x1160	; 0x1160 <__prologue_saves__>
     a72:	7c 01       	movw	r14, r24
     a74:	1b 01       	movw	r2, r22
     a76:	6a 01       	movw	r12, r20
     a78:	fc 01       	movw	r30, r24
     a7a:	17 82       	std	Z+7, r1	; 0x07
     a7c:	16 82       	std	Z+6, r1	; 0x06
     a7e:	83 81       	ldd	r24, Z+3	; 0x03
     a80:	81 ff       	sbrs	r24, 1
     a82:	44 c3       	rjmp	.+1672   	; 0x110c <vfprintf+0x6a6>
     a84:	9e 01       	movw	r18, r28
     a86:	2f 5f       	subi	r18, 0xFF	; 255
     a88:	3f 4f       	sbci	r19, 0xFF	; 255
     a8a:	39 01       	movw	r6, r18
     a8c:	f7 01       	movw	r30, r14
     a8e:	93 81       	ldd	r25, Z+3	; 0x03
     a90:	f1 01       	movw	r30, r2
     a92:	93 fd       	sbrc	r25, 3
     a94:	85 91       	lpm	r24, Z+
     a96:	93 ff       	sbrs	r25, 3
     a98:	81 91       	ld	r24, Z+
     a9a:	1f 01       	movw	r2, r30
     a9c:	88 23       	and	r24, r24
     a9e:	09 f4       	brne	.+2      	; 0xaa2 <vfprintf+0x3c>
     aa0:	31 c3       	rjmp	.+1634   	; 0x1104 <vfprintf+0x69e>
     aa2:	85 32       	cpi	r24, 0x25	; 37
     aa4:	39 f4       	brne	.+14     	; 0xab4 <vfprintf+0x4e>
     aa6:	93 fd       	sbrc	r25, 3
     aa8:	85 91       	lpm	r24, Z+
     aaa:	93 ff       	sbrs	r25, 3
     aac:	81 91       	ld	r24, Z+
     aae:	1f 01       	movw	r2, r30
     ab0:	85 32       	cpi	r24, 0x25	; 37
     ab2:	39 f4       	brne	.+14     	; 0xac2 <vfprintf+0x5c>
     ab4:	b7 01       	movw	r22, r14
     ab6:	90 e0       	ldi	r25, 0x00	; 0
     ab8:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     abc:	56 01       	movw	r10, r12
     abe:	65 01       	movw	r12, r10
     ac0:	e5 cf       	rjmp	.-54     	; 0xa8c <vfprintf+0x26>
     ac2:	10 e0       	ldi	r17, 0x00	; 0
     ac4:	51 2c       	mov	r5, r1
     ac6:	91 2c       	mov	r9, r1
     ac8:	ff e1       	ldi	r31, 0x1F	; 31
     aca:	f9 15       	cp	r31, r9
     acc:	d8 f0       	brcs	.+54     	; 0xb04 <vfprintf+0x9e>
     ace:	8b 32       	cpi	r24, 0x2B	; 43
     ad0:	79 f0       	breq	.+30     	; 0xaf0 <vfprintf+0x8a>
     ad2:	38 f4       	brcc	.+14     	; 0xae2 <vfprintf+0x7c>
     ad4:	80 32       	cpi	r24, 0x20	; 32
     ad6:	79 f0       	breq	.+30     	; 0xaf6 <vfprintf+0x90>
     ad8:	83 32       	cpi	r24, 0x23	; 35
     ada:	a1 f4       	brne	.+40     	; 0xb04 <vfprintf+0x9e>
     adc:	f9 2d       	mov	r31, r9
     ade:	f0 61       	ori	r31, 0x10	; 16
     ae0:	2e c0       	rjmp	.+92     	; 0xb3e <vfprintf+0xd8>
     ae2:	8d 32       	cpi	r24, 0x2D	; 45
     ae4:	61 f0       	breq	.+24     	; 0xafe <vfprintf+0x98>
     ae6:	80 33       	cpi	r24, 0x30	; 48
     ae8:	69 f4       	brne	.+26     	; 0xb04 <vfprintf+0x9e>
     aea:	29 2d       	mov	r18, r9
     aec:	21 60       	ori	r18, 0x01	; 1
     aee:	2d c0       	rjmp	.+90     	; 0xb4a <vfprintf+0xe4>
     af0:	39 2d       	mov	r19, r9
     af2:	32 60       	ori	r19, 0x02	; 2
     af4:	93 2e       	mov	r9, r19
     af6:	89 2d       	mov	r24, r9
     af8:	84 60       	ori	r24, 0x04	; 4
     afa:	98 2e       	mov	r9, r24
     afc:	2a c0       	rjmp	.+84     	; 0xb52 <vfprintf+0xec>
     afe:	e9 2d       	mov	r30, r9
     b00:	e8 60       	ori	r30, 0x08	; 8
     b02:	15 c0       	rjmp	.+42     	; 0xb2e <vfprintf+0xc8>
     b04:	97 fc       	sbrc	r9, 7
     b06:	2d c0       	rjmp	.+90     	; 0xb62 <vfprintf+0xfc>
     b08:	20 ed       	ldi	r18, 0xD0	; 208
     b0a:	28 0f       	add	r18, r24
     b0c:	2a 30       	cpi	r18, 0x0A	; 10
     b0e:	88 f4       	brcc	.+34     	; 0xb32 <vfprintf+0xcc>
     b10:	96 fe       	sbrs	r9, 6
     b12:	06 c0       	rjmp	.+12     	; 0xb20 <vfprintf+0xba>
     b14:	3a e0       	ldi	r19, 0x0A	; 10
     b16:	13 9f       	mul	r17, r19
     b18:	20 0d       	add	r18, r0
     b1a:	11 24       	eor	r1, r1
     b1c:	12 2f       	mov	r17, r18
     b1e:	19 c0       	rjmp	.+50     	; 0xb52 <vfprintf+0xec>
     b20:	8a e0       	ldi	r24, 0x0A	; 10
     b22:	58 9e       	mul	r5, r24
     b24:	20 0d       	add	r18, r0
     b26:	11 24       	eor	r1, r1
     b28:	52 2e       	mov	r5, r18
     b2a:	e9 2d       	mov	r30, r9
     b2c:	e0 62       	ori	r30, 0x20	; 32
     b2e:	9e 2e       	mov	r9, r30
     b30:	10 c0       	rjmp	.+32     	; 0xb52 <vfprintf+0xec>
     b32:	8e 32       	cpi	r24, 0x2E	; 46
     b34:	31 f4       	brne	.+12     	; 0xb42 <vfprintf+0xdc>
     b36:	96 fc       	sbrc	r9, 6
     b38:	e5 c2       	rjmp	.+1482   	; 0x1104 <vfprintf+0x69e>
     b3a:	f9 2d       	mov	r31, r9
     b3c:	f0 64       	ori	r31, 0x40	; 64
     b3e:	9f 2e       	mov	r9, r31
     b40:	08 c0       	rjmp	.+16     	; 0xb52 <vfprintf+0xec>
     b42:	8c 36       	cpi	r24, 0x6C	; 108
     b44:	21 f4       	brne	.+8      	; 0xb4e <vfprintf+0xe8>
     b46:	29 2d       	mov	r18, r9
     b48:	20 68       	ori	r18, 0x80	; 128
     b4a:	92 2e       	mov	r9, r18
     b4c:	02 c0       	rjmp	.+4      	; 0xb52 <vfprintf+0xec>
     b4e:	88 36       	cpi	r24, 0x68	; 104
     b50:	41 f4       	brne	.+16     	; 0xb62 <vfprintf+0xfc>
     b52:	f1 01       	movw	r30, r2
     b54:	93 fd       	sbrc	r25, 3
     b56:	85 91       	lpm	r24, Z+
     b58:	93 ff       	sbrs	r25, 3
     b5a:	81 91       	ld	r24, Z+
     b5c:	1f 01       	movw	r2, r30
     b5e:	81 11       	cpse	r24, r1
     b60:	b3 cf       	rjmp	.-154    	; 0xac8 <vfprintf+0x62>
     b62:	9b eb       	ldi	r25, 0xBB	; 187
     b64:	98 0f       	add	r25, r24
     b66:	93 30       	cpi	r25, 0x03	; 3
     b68:	20 f4       	brcc	.+8      	; 0xb72 <vfprintf+0x10c>
     b6a:	99 2d       	mov	r25, r9
     b6c:	90 61       	ori	r25, 0x10	; 16
     b6e:	80 5e       	subi	r24, 0xE0	; 224
     b70:	07 c0       	rjmp	.+14     	; 0xb80 <vfprintf+0x11a>
     b72:	9b e9       	ldi	r25, 0x9B	; 155
     b74:	98 0f       	add	r25, r24
     b76:	93 30       	cpi	r25, 0x03	; 3
     b78:	08 f0       	brcs	.+2      	; 0xb7c <vfprintf+0x116>
     b7a:	66 c1       	rjmp	.+716    	; 0xe48 <vfprintf+0x3e2>
     b7c:	99 2d       	mov	r25, r9
     b7e:	9f 7e       	andi	r25, 0xEF	; 239
     b80:	96 ff       	sbrs	r25, 6
     b82:	16 e0       	ldi	r17, 0x06	; 6
     b84:	9f 73       	andi	r25, 0x3F	; 63
     b86:	99 2e       	mov	r9, r25
     b88:	85 36       	cpi	r24, 0x65	; 101
     b8a:	19 f4       	brne	.+6      	; 0xb92 <vfprintf+0x12c>
     b8c:	90 64       	ori	r25, 0x40	; 64
     b8e:	99 2e       	mov	r9, r25
     b90:	08 c0       	rjmp	.+16     	; 0xba2 <vfprintf+0x13c>
     b92:	86 36       	cpi	r24, 0x66	; 102
     b94:	21 f4       	brne	.+8      	; 0xb9e <vfprintf+0x138>
     b96:	39 2f       	mov	r19, r25
     b98:	30 68       	ori	r19, 0x80	; 128
     b9a:	93 2e       	mov	r9, r19
     b9c:	02 c0       	rjmp	.+4      	; 0xba2 <vfprintf+0x13c>
     b9e:	11 11       	cpse	r17, r1
     ba0:	11 50       	subi	r17, 0x01	; 1
     ba2:	97 fe       	sbrs	r9, 7
     ba4:	07 c0       	rjmp	.+14     	; 0xbb4 <vfprintf+0x14e>
     ba6:	1c 33       	cpi	r17, 0x3C	; 60
     ba8:	50 f4       	brcc	.+20     	; 0xbbe <vfprintf+0x158>
     baa:	44 24       	eor	r4, r4
     bac:	43 94       	inc	r4
     bae:	41 0e       	add	r4, r17
     bb0:	27 e0       	ldi	r18, 0x07	; 7
     bb2:	0b c0       	rjmp	.+22     	; 0xbca <vfprintf+0x164>
     bb4:	18 30       	cpi	r17, 0x08	; 8
     bb6:	38 f0       	brcs	.+14     	; 0xbc6 <vfprintf+0x160>
     bb8:	27 e0       	ldi	r18, 0x07	; 7
     bba:	17 e0       	ldi	r17, 0x07	; 7
     bbc:	05 c0       	rjmp	.+10     	; 0xbc8 <vfprintf+0x162>
     bbe:	27 e0       	ldi	r18, 0x07	; 7
     bc0:	9c e3       	ldi	r25, 0x3C	; 60
     bc2:	49 2e       	mov	r4, r25
     bc4:	02 c0       	rjmp	.+4      	; 0xbca <vfprintf+0x164>
     bc6:	21 2f       	mov	r18, r17
     bc8:	41 2c       	mov	r4, r1
     bca:	56 01       	movw	r10, r12
     bcc:	84 e0       	ldi	r24, 0x04	; 4
     bce:	a8 0e       	add	r10, r24
     bd0:	b1 1c       	adc	r11, r1
     bd2:	f6 01       	movw	r30, r12
     bd4:	60 81       	ld	r22, Z
     bd6:	71 81       	ldd	r23, Z+1	; 0x01
     bd8:	82 81       	ldd	r24, Z+2	; 0x02
     bda:	93 81       	ldd	r25, Z+3	; 0x03
     bdc:	04 2d       	mov	r16, r4
     bde:	a3 01       	movw	r20, r6
     be0:	0e 94 e7 08 	call	0x11ce	; 0x11ce <__ftoa_engine>
     be4:	6c 01       	movw	r12, r24
     be6:	f9 81       	ldd	r31, Y+1	; 0x01
     be8:	fc 87       	std	Y+12, r31	; 0x0c
     bea:	f0 ff       	sbrs	r31, 0
     bec:	02 c0       	rjmp	.+4      	; 0xbf2 <vfprintf+0x18c>
     bee:	f3 ff       	sbrs	r31, 3
     bf0:	06 c0       	rjmp	.+12     	; 0xbfe <vfprintf+0x198>
     bf2:	91 fc       	sbrc	r9, 1
     bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0x19c>
     bf6:	92 fe       	sbrs	r9, 2
     bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0x1a0>
     bfa:	00 e2       	ldi	r16, 0x20	; 32
     bfc:	05 c0       	rjmp	.+10     	; 0xc08 <vfprintf+0x1a2>
     bfe:	0d e2       	ldi	r16, 0x2D	; 45
     c00:	03 c0       	rjmp	.+6      	; 0xc08 <vfprintf+0x1a2>
     c02:	0b e2       	ldi	r16, 0x2B	; 43
     c04:	01 c0       	rjmp	.+2      	; 0xc08 <vfprintf+0x1a2>
     c06:	00 e0       	ldi	r16, 0x00	; 0
     c08:	8c 85       	ldd	r24, Y+12	; 0x0c
     c0a:	8c 70       	andi	r24, 0x0C	; 12
     c0c:	19 f0       	breq	.+6      	; 0xc14 <vfprintf+0x1ae>
     c0e:	01 11       	cpse	r16, r1
     c10:	5a c2       	rjmp	.+1204   	; 0x10c6 <vfprintf+0x660>
     c12:	9b c2       	rjmp	.+1334   	; 0x114a <vfprintf+0x6e4>
     c14:	97 fe       	sbrs	r9, 7
     c16:	10 c0       	rjmp	.+32     	; 0xc38 <vfprintf+0x1d2>
     c18:	4c 0c       	add	r4, r12
     c1a:	fc 85       	ldd	r31, Y+12	; 0x0c
     c1c:	f4 ff       	sbrs	r31, 4
     c1e:	04 c0       	rjmp	.+8      	; 0xc28 <vfprintf+0x1c2>
     c20:	8a 81       	ldd	r24, Y+2	; 0x02
     c22:	81 33       	cpi	r24, 0x31	; 49
     c24:	09 f4       	brne	.+2      	; 0xc28 <vfprintf+0x1c2>
     c26:	4a 94       	dec	r4
     c28:	14 14       	cp	r1, r4
     c2a:	74 f5       	brge	.+92     	; 0xc88 <vfprintf+0x222>
     c2c:	28 e0       	ldi	r18, 0x08	; 8
     c2e:	24 15       	cp	r18, r4
     c30:	78 f5       	brcc	.+94     	; 0xc90 <vfprintf+0x22a>
     c32:	88 e0       	ldi	r24, 0x08	; 8
     c34:	48 2e       	mov	r4, r24
     c36:	2c c0       	rjmp	.+88     	; 0xc90 <vfprintf+0x22a>
     c38:	96 fc       	sbrc	r9, 6
     c3a:	2a c0       	rjmp	.+84     	; 0xc90 <vfprintf+0x22a>
     c3c:	81 2f       	mov	r24, r17
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	8c 15       	cp	r24, r12
     c42:	9d 05       	cpc	r25, r13
     c44:	9c f0       	brlt	.+38     	; 0xc6c <vfprintf+0x206>
     c46:	3c ef       	ldi	r19, 0xFC	; 252
     c48:	c3 16       	cp	r12, r19
     c4a:	3f ef       	ldi	r19, 0xFF	; 255
     c4c:	d3 06       	cpc	r13, r19
     c4e:	74 f0       	brlt	.+28     	; 0xc6c <vfprintf+0x206>
     c50:	89 2d       	mov	r24, r9
     c52:	80 68       	ori	r24, 0x80	; 128
     c54:	98 2e       	mov	r9, r24
     c56:	0a c0       	rjmp	.+20     	; 0xc6c <vfprintf+0x206>
     c58:	e2 e0       	ldi	r30, 0x02	; 2
     c5a:	f0 e0       	ldi	r31, 0x00	; 0
     c5c:	ec 0f       	add	r30, r28
     c5e:	fd 1f       	adc	r31, r29
     c60:	e1 0f       	add	r30, r17
     c62:	f1 1d       	adc	r31, r1
     c64:	80 81       	ld	r24, Z
     c66:	80 33       	cpi	r24, 0x30	; 48
     c68:	19 f4       	brne	.+6      	; 0xc70 <vfprintf+0x20a>
     c6a:	11 50       	subi	r17, 0x01	; 1
     c6c:	11 11       	cpse	r17, r1
     c6e:	f4 cf       	rjmp	.-24     	; 0xc58 <vfprintf+0x1f2>
     c70:	97 fe       	sbrs	r9, 7
     c72:	0e c0       	rjmp	.+28     	; 0xc90 <vfprintf+0x22a>
     c74:	44 24       	eor	r4, r4
     c76:	43 94       	inc	r4
     c78:	41 0e       	add	r4, r17
     c7a:	81 2f       	mov	r24, r17
     c7c:	90 e0       	ldi	r25, 0x00	; 0
     c7e:	c8 16       	cp	r12, r24
     c80:	d9 06       	cpc	r13, r25
     c82:	2c f4       	brge	.+10     	; 0xc8e <vfprintf+0x228>
     c84:	1c 19       	sub	r17, r12
     c86:	04 c0       	rjmp	.+8      	; 0xc90 <vfprintf+0x22a>
     c88:	44 24       	eor	r4, r4
     c8a:	43 94       	inc	r4
     c8c:	01 c0       	rjmp	.+2      	; 0xc90 <vfprintf+0x22a>
     c8e:	10 e0       	ldi	r17, 0x00	; 0
     c90:	97 fe       	sbrs	r9, 7
     c92:	06 c0       	rjmp	.+12     	; 0xca0 <vfprintf+0x23a>
     c94:	1c 14       	cp	r1, r12
     c96:	1d 04       	cpc	r1, r13
     c98:	34 f4       	brge	.+12     	; 0xca6 <vfprintf+0x240>
     c9a:	c6 01       	movw	r24, r12
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	05 c0       	rjmp	.+10     	; 0xcaa <vfprintf+0x244>
     ca0:	85 e0       	ldi	r24, 0x05	; 5
     ca2:	90 e0       	ldi	r25, 0x00	; 0
     ca4:	02 c0       	rjmp	.+4      	; 0xcaa <vfprintf+0x244>
     ca6:	81 e0       	ldi	r24, 0x01	; 1
     ca8:	90 e0       	ldi	r25, 0x00	; 0
     caa:	01 11       	cpse	r16, r1
     cac:	01 96       	adiw	r24, 0x01	; 1
     cae:	11 23       	and	r17, r17
     cb0:	31 f0       	breq	.+12     	; 0xcbe <vfprintf+0x258>
     cb2:	21 2f       	mov	r18, r17
     cb4:	30 e0       	ldi	r19, 0x00	; 0
     cb6:	2f 5f       	subi	r18, 0xFF	; 255
     cb8:	3f 4f       	sbci	r19, 0xFF	; 255
     cba:	82 0f       	add	r24, r18
     cbc:	93 1f       	adc	r25, r19
     cbe:	25 2d       	mov	r18, r5
     cc0:	30 e0       	ldi	r19, 0x00	; 0
     cc2:	82 17       	cp	r24, r18
     cc4:	93 07       	cpc	r25, r19
     cc6:	14 f4       	brge	.+4      	; 0xccc <vfprintf+0x266>
     cc8:	58 1a       	sub	r5, r24
     cca:	01 c0       	rjmp	.+2      	; 0xcce <vfprintf+0x268>
     ccc:	51 2c       	mov	r5, r1
     cce:	89 2d       	mov	r24, r9
     cd0:	89 70       	andi	r24, 0x09	; 9
     cd2:	49 f4       	brne	.+18     	; 0xce6 <vfprintf+0x280>
     cd4:	55 20       	and	r5, r5
     cd6:	39 f0       	breq	.+14     	; 0xce6 <vfprintf+0x280>
     cd8:	b7 01       	movw	r22, r14
     cda:	80 e2       	ldi	r24, 0x20	; 32
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     ce2:	5a 94       	dec	r5
     ce4:	f7 cf       	rjmp	.-18     	; 0xcd4 <vfprintf+0x26e>
     ce6:	00 23       	and	r16, r16
     ce8:	29 f0       	breq	.+10     	; 0xcf4 <vfprintf+0x28e>
     cea:	b7 01       	movw	r22, r14
     cec:	80 2f       	mov	r24, r16
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     cf4:	93 fc       	sbrc	r9, 3
     cf6:	09 c0       	rjmp	.+18     	; 0xd0a <vfprintf+0x2a4>
     cf8:	55 20       	and	r5, r5
     cfa:	39 f0       	breq	.+14     	; 0xd0a <vfprintf+0x2a4>
     cfc:	b7 01       	movw	r22, r14
     cfe:	80 e3       	ldi	r24, 0x30	; 48
     d00:	90 e0       	ldi	r25, 0x00	; 0
     d02:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     d06:	5a 94       	dec	r5
     d08:	f7 cf       	rjmp	.-18     	; 0xcf8 <vfprintf+0x292>
     d0a:	97 fe       	sbrs	r9, 7
     d0c:	4c c0       	rjmp	.+152    	; 0xda6 <vfprintf+0x340>
     d0e:	46 01       	movw	r8, r12
     d10:	d7 fe       	sbrs	r13, 7
     d12:	02 c0       	rjmp	.+4      	; 0xd18 <vfprintf+0x2b2>
     d14:	81 2c       	mov	r8, r1
     d16:	91 2c       	mov	r9, r1
     d18:	c6 01       	movw	r24, r12
     d1a:	88 19       	sub	r24, r8
     d1c:	99 09       	sbc	r25, r9
     d1e:	f3 01       	movw	r30, r6
     d20:	e8 0f       	add	r30, r24
     d22:	f9 1f       	adc	r31, r25
     d24:	fe 87       	std	Y+14, r31	; 0x0e
     d26:	ed 87       	std	Y+13, r30	; 0x0d
     d28:	96 01       	movw	r18, r12
     d2a:	24 19       	sub	r18, r4
     d2c:	31 09       	sbc	r19, r1
     d2e:	38 8b       	std	Y+16, r19	; 0x10
     d30:	2f 87       	std	Y+15, r18	; 0x0f
     d32:	01 2f       	mov	r16, r17
     d34:	10 e0       	ldi	r17, 0x00	; 0
     d36:	11 95       	neg	r17
     d38:	01 95       	neg	r16
     d3a:	11 09       	sbc	r17, r1
     d3c:	3f ef       	ldi	r19, 0xFF	; 255
     d3e:	83 16       	cp	r8, r19
     d40:	93 06       	cpc	r9, r19
     d42:	29 f4       	brne	.+10     	; 0xd4e <vfprintf+0x2e8>
     d44:	b7 01       	movw	r22, r14
     d46:	8e e2       	ldi	r24, 0x2E	; 46
     d48:	90 e0       	ldi	r25, 0x00	; 0
     d4a:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     d4e:	c8 14       	cp	r12, r8
     d50:	d9 04       	cpc	r13, r9
     d52:	4c f0       	brlt	.+18     	; 0xd66 <vfprintf+0x300>
     d54:	8f 85       	ldd	r24, Y+15	; 0x0f
     d56:	98 89       	ldd	r25, Y+16	; 0x10
     d58:	88 15       	cp	r24, r8
     d5a:	99 05       	cpc	r25, r9
     d5c:	24 f4       	brge	.+8      	; 0xd66 <vfprintf+0x300>
     d5e:	ed 85       	ldd	r30, Y+13	; 0x0d
     d60:	fe 85       	ldd	r31, Y+14	; 0x0e
     d62:	81 81       	ldd	r24, Z+1	; 0x01
     d64:	01 c0       	rjmp	.+2      	; 0xd68 <vfprintf+0x302>
     d66:	80 e3       	ldi	r24, 0x30	; 48
     d68:	f1 e0       	ldi	r31, 0x01	; 1
     d6a:	8f 1a       	sub	r8, r31
     d6c:	91 08       	sbc	r9, r1
     d6e:	2d 85       	ldd	r18, Y+13	; 0x0d
     d70:	3e 85       	ldd	r19, Y+14	; 0x0e
     d72:	2f 5f       	subi	r18, 0xFF	; 255
     d74:	3f 4f       	sbci	r19, 0xFF	; 255
     d76:	3e 87       	std	Y+14, r19	; 0x0e
     d78:	2d 87       	std	Y+13, r18	; 0x0d
     d7a:	80 16       	cp	r8, r16
     d7c:	91 06       	cpc	r9, r17
     d7e:	2c f0       	brlt	.+10     	; 0xd8a <vfprintf+0x324>
     d80:	b7 01       	movw	r22, r14
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     d88:	d9 cf       	rjmp	.-78     	; 0xd3c <vfprintf+0x2d6>
     d8a:	c8 14       	cp	r12, r8
     d8c:	d9 04       	cpc	r13, r9
     d8e:	41 f4       	brne	.+16     	; 0xda0 <vfprintf+0x33a>
     d90:	9a 81       	ldd	r25, Y+2	; 0x02
     d92:	96 33       	cpi	r25, 0x36	; 54
     d94:	20 f4       	brcc	.+8      	; 0xd9e <vfprintf+0x338>
     d96:	95 33       	cpi	r25, 0x35	; 53
     d98:	19 f4       	brne	.+6      	; 0xda0 <vfprintf+0x33a>
     d9a:	3c 85       	ldd	r19, Y+12	; 0x0c
     d9c:	34 ff       	sbrs	r19, 4
     d9e:	81 e3       	ldi	r24, 0x31	; 49
     da0:	b7 01       	movw	r22, r14
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	4e c0       	rjmp	.+156    	; 0xe42 <vfprintf+0x3dc>
     da6:	8a 81       	ldd	r24, Y+2	; 0x02
     da8:	81 33       	cpi	r24, 0x31	; 49
     daa:	19 f0       	breq	.+6      	; 0xdb2 <vfprintf+0x34c>
     dac:	9c 85       	ldd	r25, Y+12	; 0x0c
     dae:	9f 7e       	andi	r25, 0xEF	; 239
     db0:	9c 87       	std	Y+12, r25	; 0x0c
     db2:	b7 01       	movw	r22, r14
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     dba:	11 11       	cpse	r17, r1
     dbc:	05 c0       	rjmp	.+10     	; 0xdc8 <vfprintf+0x362>
     dbe:	94 fc       	sbrc	r9, 4
     dc0:	18 c0       	rjmp	.+48     	; 0xdf2 <vfprintf+0x38c>
     dc2:	85 e6       	ldi	r24, 0x65	; 101
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	17 c0       	rjmp	.+46     	; 0xdf6 <vfprintf+0x390>
     dc8:	b7 01       	movw	r22, r14
     dca:	8e e2       	ldi	r24, 0x2E	; 46
     dcc:	90 e0       	ldi	r25, 0x00	; 0
     dce:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     dd2:	1e 5f       	subi	r17, 0xFE	; 254
     dd4:	82 e0       	ldi	r24, 0x02	; 2
     dd6:	01 e0       	ldi	r16, 0x01	; 1
     dd8:	08 0f       	add	r16, r24
     dda:	f3 01       	movw	r30, r6
     ddc:	e8 0f       	add	r30, r24
     dde:	f1 1d       	adc	r31, r1
     de0:	80 81       	ld	r24, Z
     de2:	b7 01       	movw	r22, r14
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     dea:	80 2f       	mov	r24, r16
     dec:	01 13       	cpse	r16, r17
     dee:	f3 cf       	rjmp	.-26     	; 0xdd6 <vfprintf+0x370>
     df0:	e6 cf       	rjmp	.-52     	; 0xdbe <vfprintf+0x358>
     df2:	85 e4       	ldi	r24, 0x45	; 69
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	b7 01       	movw	r22, r14
     df8:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     dfc:	d7 fc       	sbrc	r13, 7
     dfe:	06 c0       	rjmp	.+12     	; 0xe0c <vfprintf+0x3a6>
     e00:	c1 14       	cp	r12, r1
     e02:	d1 04       	cpc	r13, r1
     e04:	41 f4       	brne	.+16     	; 0xe16 <vfprintf+0x3b0>
     e06:	ec 85       	ldd	r30, Y+12	; 0x0c
     e08:	e4 ff       	sbrs	r30, 4
     e0a:	05 c0       	rjmp	.+10     	; 0xe16 <vfprintf+0x3b0>
     e0c:	d1 94       	neg	r13
     e0e:	c1 94       	neg	r12
     e10:	d1 08       	sbc	r13, r1
     e12:	8d e2       	ldi	r24, 0x2D	; 45
     e14:	01 c0       	rjmp	.+2      	; 0xe18 <vfprintf+0x3b2>
     e16:	8b e2       	ldi	r24, 0x2B	; 43
     e18:	b7 01       	movw	r22, r14
     e1a:	90 e0       	ldi	r25, 0x00	; 0
     e1c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     e20:	80 e3       	ldi	r24, 0x30	; 48
     e22:	2a e0       	ldi	r18, 0x0A	; 10
     e24:	c2 16       	cp	r12, r18
     e26:	d1 04       	cpc	r13, r1
     e28:	2c f0       	brlt	.+10     	; 0xe34 <vfprintf+0x3ce>
     e2a:	8f 5f       	subi	r24, 0xFF	; 255
     e2c:	fa e0       	ldi	r31, 0x0A	; 10
     e2e:	cf 1a       	sub	r12, r31
     e30:	d1 08       	sbc	r13, r1
     e32:	f7 cf       	rjmp	.-18     	; 0xe22 <vfprintf+0x3bc>
     e34:	b7 01       	movw	r22, r14
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     e3c:	b7 01       	movw	r22, r14
     e3e:	c6 01       	movw	r24, r12
     e40:	c0 96       	adiw	r24, 0x30	; 48
     e42:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     e46:	54 c1       	rjmp	.+680    	; 0x10f0 <vfprintf+0x68a>
     e48:	83 36       	cpi	r24, 0x63	; 99
     e4a:	31 f0       	breq	.+12     	; 0xe58 <vfprintf+0x3f2>
     e4c:	83 37       	cpi	r24, 0x73	; 115
     e4e:	79 f0       	breq	.+30     	; 0xe6e <vfprintf+0x408>
     e50:	83 35       	cpi	r24, 0x53	; 83
     e52:	09 f0       	breq	.+2      	; 0xe56 <vfprintf+0x3f0>
     e54:	56 c0       	rjmp	.+172    	; 0xf02 <vfprintf+0x49c>
     e56:	20 c0       	rjmp	.+64     	; 0xe98 <vfprintf+0x432>
     e58:	56 01       	movw	r10, r12
     e5a:	32 e0       	ldi	r19, 0x02	; 2
     e5c:	a3 0e       	add	r10, r19
     e5e:	b1 1c       	adc	r11, r1
     e60:	f6 01       	movw	r30, r12
     e62:	80 81       	ld	r24, Z
     e64:	89 83       	std	Y+1, r24	; 0x01
     e66:	01 e0       	ldi	r16, 0x01	; 1
     e68:	10 e0       	ldi	r17, 0x00	; 0
     e6a:	63 01       	movw	r12, r6
     e6c:	12 c0       	rjmp	.+36     	; 0xe92 <vfprintf+0x42c>
     e6e:	56 01       	movw	r10, r12
     e70:	f2 e0       	ldi	r31, 0x02	; 2
     e72:	af 0e       	add	r10, r31
     e74:	b1 1c       	adc	r11, r1
     e76:	f6 01       	movw	r30, r12
     e78:	c0 80       	ld	r12, Z
     e7a:	d1 80       	ldd	r13, Z+1	; 0x01
     e7c:	96 fe       	sbrs	r9, 6
     e7e:	03 c0       	rjmp	.+6      	; 0xe86 <vfprintf+0x420>
     e80:	61 2f       	mov	r22, r17
     e82:	70 e0       	ldi	r23, 0x00	; 0
     e84:	02 c0       	rjmp	.+4      	; 0xe8a <vfprintf+0x424>
     e86:	6f ef       	ldi	r22, 0xFF	; 255
     e88:	7f ef       	ldi	r23, 0xFF	; 255
     e8a:	c6 01       	movw	r24, r12
     e8c:	0e 94 d8 09 	call	0x13b0	; 0x13b0 <strnlen>
     e90:	8c 01       	movw	r16, r24
     e92:	f9 2d       	mov	r31, r9
     e94:	ff 77       	andi	r31, 0x7F	; 127
     e96:	14 c0       	rjmp	.+40     	; 0xec0 <vfprintf+0x45a>
     e98:	56 01       	movw	r10, r12
     e9a:	22 e0       	ldi	r18, 0x02	; 2
     e9c:	a2 0e       	add	r10, r18
     e9e:	b1 1c       	adc	r11, r1
     ea0:	f6 01       	movw	r30, r12
     ea2:	c0 80       	ld	r12, Z
     ea4:	d1 80       	ldd	r13, Z+1	; 0x01
     ea6:	96 fe       	sbrs	r9, 6
     ea8:	03 c0       	rjmp	.+6      	; 0xeb0 <vfprintf+0x44a>
     eaa:	61 2f       	mov	r22, r17
     eac:	70 e0       	ldi	r23, 0x00	; 0
     eae:	02 c0       	rjmp	.+4      	; 0xeb4 <vfprintf+0x44e>
     eb0:	6f ef       	ldi	r22, 0xFF	; 255
     eb2:	7f ef       	ldi	r23, 0xFF	; 255
     eb4:	c6 01       	movw	r24, r12
     eb6:	0e 94 bf 09 	call	0x137e	; 0x137e <strnlen_P>
     eba:	8c 01       	movw	r16, r24
     ebc:	f9 2d       	mov	r31, r9
     ebe:	f0 68       	ori	r31, 0x80	; 128
     ec0:	9f 2e       	mov	r9, r31
     ec2:	f3 fd       	sbrc	r31, 3
     ec4:	1a c0       	rjmp	.+52     	; 0xefa <vfprintf+0x494>
     ec6:	85 2d       	mov	r24, r5
     ec8:	90 e0       	ldi	r25, 0x00	; 0
     eca:	08 17       	cp	r16, r24
     ecc:	19 07       	cpc	r17, r25
     ece:	a8 f4       	brcc	.+42     	; 0xefa <vfprintf+0x494>
     ed0:	b7 01       	movw	r22, r14
     ed2:	80 e2       	ldi	r24, 0x20	; 32
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     eda:	5a 94       	dec	r5
     edc:	f4 cf       	rjmp	.-24     	; 0xec6 <vfprintf+0x460>
     ede:	f6 01       	movw	r30, r12
     ee0:	97 fc       	sbrc	r9, 7
     ee2:	85 91       	lpm	r24, Z+
     ee4:	97 fe       	sbrs	r9, 7
     ee6:	81 91       	ld	r24, Z+
     ee8:	6f 01       	movw	r12, r30
     eea:	b7 01       	movw	r22, r14
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
     ef2:	51 10       	cpse	r5, r1
     ef4:	5a 94       	dec	r5
     ef6:	01 50       	subi	r16, 0x01	; 1
     ef8:	11 09       	sbc	r17, r1
     efa:	01 15       	cp	r16, r1
     efc:	11 05       	cpc	r17, r1
     efe:	79 f7       	brne	.-34     	; 0xede <vfprintf+0x478>
     f00:	f7 c0       	rjmp	.+494    	; 0x10f0 <vfprintf+0x68a>
     f02:	84 36       	cpi	r24, 0x64	; 100
     f04:	11 f0       	breq	.+4      	; 0xf0a <vfprintf+0x4a4>
     f06:	89 36       	cpi	r24, 0x69	; 105
     f08:	61 f5       	brne	.+88     	; 0xf62 <vfprintf+0x4fc>
     f0a:	56 01       	movw	r10, r12
     f0c:	97 fe       	sbrs	r9, 7
     f0e:	09 c0       	rjmp	.+18     	; 0xf22 <vfprintf+0x4bc>
     f10:	24 e0       	ldi	r18, 0x04	; 4
     f12:	a2 0e       	add	r10, r18
     f14:	b1 1c       	adc	r11, r1
     f16:	f6 01       	movw	r30, r12
     f18:	60 81       	ld	r22, Z
     f1a:	71 81       	ldd	r23, Z+1	; 0x01
     f1c:	82 81       	ldd	r24, Z+2	; 0x02
     f1e:	93 81       	ldd	r25, Z+3	; 0x03
     f20:	0a c0       	rjmp	.+20     	; 0xf36 <vfprintf+0x4d0>
     f22:	f2 e0       	ldi	r31, 0x02	; 2
     f24:	af 0e       	add	r10, r31
     f26:	b1 1c       	adc	r11, r1
     f28:	f6 01       	movw	r30, r12
     f2a:	60 81       	ld	r22, Z
     f2c:	71 81       	ldd	r23, Z+1	; 0x01
     f2e:	07 2e       	mov	r0, r23
     f30:	00 0c       	add	r0, r0
     f32:	88 0b       	sbc	r24, r24
     f34:	99 0b       	sbc	r25, r25
     f36:	f9 2d       	mov	r31, r9
     f38:	ff 76       	andi	r31, 0x6F	; 111
     f3a:	9f 2e       	mov	r9, r31
     f3c:	97 ff       	sbrs	r25, 7
     f3e:	09 c0       	rjmp	.+18     	; 0xf52 <vfprintf+0x4ec>
     f40:	90 95       	com	r25
     f42:	80 95       	com	r24
     f44:	70 95       	com	r23
     f46:	61 95       	neg	r22
     f48:	7f 4f       	sbci	r23, 0xFF	; 255
     f4a:	8f 4f       	sbci	r24, 0xFF	; 255
     f4c:	9f 4f       	sbci	r25, 0xFF	; 255
     f4e:	f0 68       	ori	r31, 0x80	; 128
     f50:	9f 2e       	mov	r9, r31
     f52:	2a e0       	ldi	r18, 0x0A	; 10
     f54:	30 e0       	ldi	r19, 0x00	; 0
     f56:	a3 01       	movw	r20, r6
     f58:	0e 94 35 0a 	call	0x146a	; 0x146a <__ultoa_invert>
     f5c:	c8 2e       	mov	r12, r24
     f5e:	c6 18       	sub	r12, r6
     f60:	3f c0       	rjmp	.+126    	; 0xfe0 <vfprintf+0x57a>
     f62:	09 2d       	mov	r16, r9
     f64:	85 37       	cpi	r24, 0x75	; 117
     f66:	21 f4       	brne	.+8      	; 0xf70 <vfprintf+0x50a>
     f68:	0f 7e       	andi	r16, 0xEF	; 239
     f6a:	2a e0       	ldi	r18, 0x0A	; 10
     f6c:	30 e0       	ldi	r19, 0x00	; 0
     f6e:	1d c0       	rjmp	.+58     	; 0xfaa <vfprintf+0x544>
     f70:	09 7f       	andi	r16, 0xF9	; 249
     f72:	8f 36       	cpi	r24, 0x6F	; 111
     f74:	91 f0       	breq	.+36     	; 0xf9a <vfprintf+0x534>
     f76:	18 f4       	brcc	.+6      	; 0xf7e <vfprintf+0x518>
     f78:	88 35       	cpi	r24, 0x58	; 88
     f7a:	59 f0       	breq	.+22     	; 0xf92 <vfprintf+0x52c>
     f7c:	c3 c0       	rjmp	.+390    	; 0x1104 <vfprintf+0x69e>
     f7e:	80 37       	cpi	r24, 0x70	; 112
     f80:	19 f0       	breq	.+6      	; 0xf88 <vfprintf+0x522>
     f82:	88 37       	cpi	r24, 0x78	; 120
     f84:	11 f0       	breq	.+4      	; 0xf8a <vfprintf+0x524>
     f86:	be c0       	rjmp	.+380    	; 0x1104 <vfprintf+0x69e>
     f88:	00 61       	ori	r16, 0x10	; 16
     f8a:	04 ff       	sbrs	r16, 4
     f8c:	09 c0       	rjmp	.+18     	; 0xfa0 <vfprintf+0x53a>
     f8e:	04 60       	ori	r16, 0x04	; 4
     f90:	07 c0       	rjmp	.+14     	; 0xfa0 <vfprintf+0x53a>
     f92:	94 fe       	sbrs	r9, 4
     f94:	08 c0       	rjmp	.+16     	; 0xfa6 <vfprintf+0x540>
     f96:	06 60       	ori	r16, 0x06	; 6
     f98:	06 c0       	rjmp	.+12     	; 0xfa6 <vfprintf+0x540>
     f9a:	28 e0       	ldi	r18, 0x08	; 8
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	05 c0       	rjmp	.+10     	; 0xfaa <vfprintf+0x544>
     fa0:	20 e1       	ldi	r18, 0x10	; 16
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <vfprintf+0x544>
     fa6:	20 e1       	ldi	r18, 0x10	; 16
     fa8:	32 e0       	ldi	r19, 0x02	; 2
     faa:	56 01       	movw	r10, r12
     fac:	07 ff       	sbrs	r16, 7
     fae:	09 c0       	rjmp	.+18     	; 0xfc2 <vfprintf+0x55c>
     fb0:	84 e0       	ldi	r24, 0x04	; 4
     fb2:	a8 0e       	add	r10, r24
     fb4:	b1 1c       	adc	r11, r1
     fb6:	f6 01       	movw	r30, r12
     fb8:	60 81       	ld	r22, Z
     fba:	71 81       	ldd	r23, Z+1	; 0x01
     fbc:	82 81       	ldd	r24, Z+2	; 0x02
     fbe:	93 81       	ldd	r25, Z+3	; 0x03
     fc0:	08 c0       	rjmp	.+16     	; 0xfd2 <vfprintf+0x56c>
     fc2:	f2 e0       	ldi	r31, 0x02	; 2
     fc4:	af 0e       	add	r10, r31
     fc6:	b1 1c       	adc	r11, r1
     fc8:	f6 01       	movw	r30, r12
     fca:	60 81       	ld	r22, Z
     fcc:	71 81       	ldd	r23, Z+1	; 0x01
     fce:	80 e0       	ldi	r24, 0x00	; 0
     fd0:	90 e0       	ldi	r25, 0x00	; 0
     fd2:	a3 01       	movw	r20, r6
     fd4:	0e 94 35 0a 	call	0x146a	; 0x146a <__ultoa_invert>
     fd8:	c8 2e       	mov	r12, r24
     fda:	c6 18       	sub	r12, r6
     fdc:	0f 77       	andi	r16, 0x7F	; 127
     fde:	90 2e       	mov	r9, r16
     fe0:	96 fe       	sbrs	r9, 6
     fe2:	0b c0       	rjmp	.+22     	; 0xffa <vfprintf+0x594>
     fe4:	09 2d       	mov	r16, r9
     fe6:	0e 7f       	andi	r16, 0xFE	; 254
     fe8:	c1 16       	cp	r12, r17
     fea:	50 f4       	brcc	.+20     	; 0x1000 <vfprintf+0x59a>
     fec:	94 fe       	sbrs	r9, 4
     fee:	0a c0       	rjmp	.+20     	; 0x1004 <vfprintf+0x59e>
     ff0:	92 fc       	sbrc	r9, 2
     ff2:	08 c0       	rjmp	.+16     	; 0x1004 <vfprintf+0x59e>
     ff4:	09 2d       	mov	r16, r9
     ff6:	0e 7e       	andi	r16, 0xEE	; 238
     ff8:	05 c0       	rjmp	.+10     	; 0x1004 <vfprintf+0x59e>
     ffa:	dc 2c       	mov	r13, r12
     ffc:	09 2d       	mov	r16, r9
     ffe:	03 c0       	rjmp	.+6      	; 0x1006 <vfprintf+0x5a0>
    1000:	dc 2c       	mov	r13, r12
    1002:	01 c0       	rjmp	.+2      	; 0x1006 <vfprintf+0x5a0>
    1004:	d1 2e       	mov	r13, r17
    1006:	04 ff       	sbrs	r16, 4
    1008:	0d c0       	rjmp	.+26     	; 0x1024 <vfprintf+0x5be>
    100a:	fe 01       	movw	r30, r28
    100c:	ec 0d       	add	r30, r12
    100e:	f1 1d       	adc	r31, r1
    1010:	80 81       	ld	r24, Z
    1012:	80 33       	cpi	r24, 0x30	; 48
    1014:	11 f4       	brne	.+4      	; 0x101a <vfprintf+0x5b4>
    1016:	09 7e       	andi	r16, 0xE9	; 233
    1018:	09 c0       	rjmp	.+18     	; 0x102c <vfprintf+0x5c6>
    101a:	02 ff       	sbrs	r16, 2
    101c:	06 c0       	rjmp	.+12     	; 0x102a <vfprintf+0x5c4>
    101e:	d3 94       	inc	r13
    1020:	d3 94       	inc	r13
    1022:	04 c0       	rjmp	.+8      	; 0x102c <vfprintf+0x5c6>
    1024:	80 2f       	mov	r24, r16
    1026:	86 78       	andi	r24, 0x86	; 134
    1028:	09 f0       	breq	.+2      	; 0x102c <vfprintf+0x5c6>
    102a:	d3 94       	inc	r13
    102c:	03 fd       	sbrc	r16, 3
    102e:	11 c0       	rjmp	.+34     	; 0x1052 <vfprintf+0x5ec>
    1030:	00 ff       	sbrs	r16, 0
    1032:	06 c0       	rjmp	.+12     	; 0x1040 <vfprintf+0x5da>
    1034:	1c 2d       	mov	r17, r12
    1036:	d5 14       	cp	r13, r5
    1038:	80 f4       	brcc	.+32     	; 0x105a <vfprintf+0x5f4>
    103a:	15 0d       	add	r17, r5
    103c:	1d 19       	sub	r17, r13
    103e:	0d c0       	rjmp	.+26     	; 0x105a <vfprintf+0x5f4>
    1040:	d5 14       	cp	r13, r5
    1042:	58 f4       	brcc	.+22     	; 0x105a <vfprintf+0x5f4>
    1044:	b7 01       	movw	r22, r14
    1046:	80 e2       	ldi	r24, 0x20	; 32
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    104e:	d3 94       	inc	r13
    1050:	f7 cf       	rjmp	.-18     	; 0x1040 <vfprintf+0x5da>
    1052:	d5 14       	cp	r13, r5
    1054:	10 f4       	brcc	.+4      	; 0x105a <vfprintf+0x5f4>
    1056:	5d 18       	sub	r5, r13
    1058:	01 c0       	rjmp	.+2      	; 0x105c <vfprintf+0x5f6>
    105a:	51 2c       	mov	r5, r1
    105c:	04 ff       	sbrs	r16, 4
    105e:	10 c0       	rjmp	.+32     	; 0x1080 <vfprintf+0x61a>
    1060:	b7 01       	movw	r22, r14
    1062:	80 e3       	ldi	r24, 0x30	; 48
    1064:	90 e0       	ldi	r25, 0x00	; 0
    1066:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    106a:	02 ff       	sbrs	r16, 2
    106c:	17 c0       	rjmp	.+46     	; 0x109c <vfprintf+0x636>
    106e:	01 fd       	sbrc	r16, 1
    1070:	03 c0       	rjmp	.+6      	; 0x1078 <vfprintf+0x612>
    1072:	88 e7       	ldi	r24, 0x78	; 120
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	02 c0       	rjmp	.+4      	; 0x107c <vfprintf+0x616>
    1078:	88 e5       	ldi	r24, 0x58	; 88
    107a:	90 e0       	ldi	r25, 0x00	; 0
    107c:	b7 01       	movw	r22, r14
    107e:	0c c0       	rjmp	.+24     	; 0x1098 <vfprintf+0x632>
    1080:	80 2f       	mov	r24, r16
    1082:	86 78       	andi	r24, 0x86	; 134
    1084:	59 f0       	breq	.+22     	; 0x109c <vfprintf+0x636>
    1086:	01 ff       	sbrs	r16, 1
    1088:	02 c0       	rjmp	.+4      	; 0x108e <vfprintf+0x628>
    108a:	8b e2       	ldi	r24, 0x2B	; 43
    108c:	01 c0       	rjmp	.+2      	; 0x1090 <vfprintf+0x62a>
    108e:	80 e2       	ldi	r24, 0x20	; 32
    1090:	07 fd       	sbrc	r16, 7
    1092:	8d e2       	ldi	r24, 0x2D	; 45
    1094:	b7 01       	movw	r22, r14
    1096:	90 e0       	ldi	r25, 0x00	; 0
    1098:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    109c:	c1 16       	cp	r12, r17
    109e:	38 f4       	brcc	.+14     	; 0x10ae <vfprintf+0x648>
    10a0:	b7 01       	movw	r22, r14
    10a2:	80 e3       	ldi	r24, 0x30	; 48
    10a4:	90 e0       	ldi	r25, 0x00	; 0
    10a6:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    10aa:	11 50       	subi	r17, 0x01	; 1
    10ac:	f7 cf       	rjmp	.-18     	; 0x109c <vfprintf+0x636>
    10ae:	ca 94       	dec	r12
    10b0:	f3 01       	movw	r30, r6
    10b2:	ec 0d       	add	r30, r12
    10b4:	f1 1d       	adc	r31, r1
    10b6:	80 81       	ld	r24, Z
    10b8:	b7 01       	movw	r22, r14
    10ba:	90 e0       	ldi	r25, 0x00	; 0
    10bc:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    10c0:	c1 10       	cpse	r12, r1
    10c2:	f5 cf       	rjmp	.-22     	; 0x10ae <vfprintf+0x648>
    10c4:	15 c0       	rjmp	.+42     	; 0x10f0 <vfprintf+0x68a>
    10c6:	f4 e0       	ldi	r31, 0x04	; 4
    10c8:	f5 15       	cp	r31, r5
    10ca:	60 f5       	brcc	.+88     	; 0x1124 <vfprintf+0x6be>
    10cc:	84 e0       	ldi	r24, 0x04	; 4
    10ce:	58 1a       	sub	r5, r24
    10d0:	93 fe       	sbrs	r9, 3
    10d2:	1f c0       	rjmp	.+62     	; 0x1112 <vfprintf+0x6ac>
    10d4:	01 11       	cpse	r16, r1
    10d6:	27 c0       	rjmp	.+78     	; 0x1126 <vfprintf+0x6c0>
    10d8:	2c 85       	ldd	r18, Y+12	; 0x0c
    10da:	23 ff       	sbrs	r18, 3
    10dc:	2a c0       	rjmp	.+84     	; 0x1132 <vfprintf+0x6cc>
    10de:	08 e6       	ldi	r16, 0x68	; 104
    10e0:	10 e0       	ldi	r17, 0x00	; 0
    10e2:	39 2d       	mov	r19, r9
    10e4:	30 71       	andi	r19, 0x10	; 16
    10e6:	93 2e       	mov	r9, r19
    10e8:	f8 01       	movw	r30, r16
    10ea:	84 91       	lpm	r24, Z
    10ec:	81 11       	cpse	r24, r1
    10ee:	24 c0       	rjmp	.+72     	; 0x1138 <vfprintf+0x6d2>
    10f0:	55 20       	and	r5, r5
    10f2:	09 f4       	brne	.+2      	; 0x10f6 <vfprintf+0x690>
    10f4:	e4 cc       	rjmp	.-1592   	; 0xabe <vfprintf+0x58>
    10f6:	b7 01       	movw	r22, r14
    10f8:	80 e2       	ldi	r24, 0x20	; 32
    10fa:	90 e0       	ldi	r25, 0x00	; 0
    10fc:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    1100:	5a 94       	dec	r5
    1102:	f6 cf       	rjmp	.-20     	; 0x10f0 <vfprintf+0x68a>
    1104:	f7 01       	movw	r30, r14
    1106:	86 81       	ldd	r24, Z+6	; 0x06
    1108:	97 81       	ldd	r25, Z+7	; 0x07
    110a:	26 c0       	rjmp	.+76     	; 0x1158 <vfprintf+0x6f2>
    110c:	8f ef       	ldi	r24, 0xFF	; 255
    110e:	9f ef       	ldi	r25, 0xFF	; 255
    1110:	23 c0       	rjmp	.+70     	; 0x1158 <vfprintf+0x6f2>
    1112:	b7 01       	movw	r22, r14
    1114:	80 e2       	ldi	r24, 0x20	; 32
    1116:	90 e0       	ldi	r25, 0x00	; 0
    1118:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    111c:	5a 94       	dec	r5
    111e:	51 10       	cpse	r5, r1
    1120:	f8 cf       	rjmp	.-16     	; 0x1112 <vfprintf+0x6ac>
    1122:	d8 cf       	rjmp	.-80     	; 0x10d4 <vfprintf+0x66e>
    1124:	51 2c       	mov	r5, r1
    1126:	b7 01       	movw	r22, r14
    1128:	80 2f       	mov	r24, r16
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    1130:	d3 cf       	rjmp	.-90     	; 0x10d8 <vfprintf+0x672>
    1132:	0c e6       	ldi	r16, 0x6C	; 108
    1134:	10 e0       	ldi	r17, 0x00	; 0
    1136:	d5 cf       	rjmp	.-86     	; 0x10e2 <vfprintf+0x67c>
    1138:	91 10       	cpse	r9, r1
    113a:	80 52       	subi	r24, 0x20	; 32
    113c:	b7 01       	movw	r22, r14
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 e3 09 	call	0x13c6	; 0x13c6 <fputc>
    1144:	0f 5f       	subi	r16, 0xFF	; 255
    1146:	1f 4f       	sbci	r17, 0xFF	; 255
    1148:	cf cf       	rjmp	.-98     	; 0x10e8 <vfprintf+0x682>
    114a:	23 e0       	ldi	r18, 0x03	; 3
    114c:	25 15       	cp	r18, r5
    114e:	10 f4       	brcc	.+4      	; 0x1154 <vfprintf+0x6ee>
    1150:	83 e0       	ldi	r24, 0x03	; 3
    1152:	bd cf       	rjmp	.-134    	; 0x10ce <vfprintf+0x668>
    1154:	51 2c       	mov	r5, r1
    1156:	c0 cf       	rjmp	.-128    	; 0x10d8 <vfprintf+0x672>
    1158:	60 96       	adiw	r28, 0x10	; 16
    115a:	e2 e1       	ldi	r30, 0x12	; 18
    115c:	0c 94 cc 08 	jmp	0x1198	; 0x1198 <__epilogue_restores__>

00001160 <__prologue_saves__>:
    1160:	2f 92       	push	r2
    1162:	3f 92       	push	r3
    1164:	4f 92       	push	r4
    1166:	5f 92       	push	r5
    1168:	6f 92       	push	r6
    116a:	7f 92       	push	r7
    116c:	8f 92       	push	r8
    116e:	9f 92       	push	r9
    1170:	af 92       	push	r10
    1172:	bf 92       	push	r11
    1174:	cf 92       	push	r12
    1176:	df 92       	push	r13
    1178:	ef 92       	push	r14
    117a:	ff 92       	push	r15
    117c:	0f 93       	push	r16
    117e:	1f 93       	push	r17
    1180:	cf 93       	push	r28
    1182:	df 93       	push	r29
    1184:	cd b7       	in	r28, 0x3d	; 61
    1186:	de b7       	in	r29, 0x3e	; 62
    1188:	ca 1b       	sub	r28, r26
    118a:	db 0b       	sbc	r29, r27
    118c:	0f b6       	in	r0, 0x3f	; 63
    118e:	f8 94       	cli
    1190:	de bf       	out	0x3e, r29	; 62
    1192:	0f be       	out	0x3f, r0	; 63
    1194:	cd bf       	out	0x3d, r28	; 61
    1196:	09 94       	ijmp

00001198 <__epilogue_restores__>:
    1198:	2a 88       	ldd	r2, Y+18	; 0x12
    119a:	39 88       	ldd	r3, Y+17	; 0x11
    119c:	48 88       	ldd	r4, Y+16	; 0x10
    119e:	5f 84       	ldd	r5, Y+15	; 0x0f
    11a0:	6e 84       	ldd	r6, Y+14	; 0x0e
    11a2:	7d 84       	ldd	r7, Y+13	; 0x0d
    11a4:	8c 84       	ldd	r8, Y+12	; 0x0c
    11a6:	9b 84       	ldd	r9, Y+11	; 0x0b
    11a8:	aa 84       	ldd	r10, Y+10	; 0x0a
    11aa:	b9 84       	ldd	r11, Y+9	; 0x09
    11ac:	c8 84       	ldd	r12, Y+8	; 0x08
    11ae:	df 80       	ldd	r13, Y+7	; 0x07
    11b0:	ee 80       	ldd	r14, Y+6	; 0x06
    11b2:	fd 80       	ldd	r15, Y+5	; 0x05
    11b4:	0c 81       	ldd	r16, Y+4	; 0x04
    11b6:	1b 81       	ldd	r17, Y+3	; 0x03
    11b8:	aa 81       	ldd	r26, Y+2	; 0x02
    11ba:	b9 81       	ldd	r27, Y+1	; 0x01
    11bc:	ce 0f       	add	r28, r30
    11be:	d1 1d       	adc	r29, r1
    11c0:	0f b6       	in	r0, 0x3f	; 63
    11c2:	f8 94       	cli
    11c4:	de bf       	out	0x3e, r29	; 62
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	cd bf       	out	0x3d, r28	; 61
    11ca:	ed 01       	movw	r28, r26
    11cc:	08 95       	ret

000011ce <__ftoa_engine>:
    11ce:	28 30       	cpi	r18, 0x08	; 8
    11d0:	08 f0       	brcs	.+2      	; 0x11d4 <__ftoa_engine+0x6>
    11d2:	27 e0       	ldi	r18, 0x07	; 7
    11d4:	33 27       	eor	r19, r19
    11d6:	da 01       	movw	r26, r20
    11d8:	99 0f       	add	r25, r25
    11da:	31 1d       	adc	r19, r1
    11dc:	87 fd       	sbrc	r24, 7
    11de:	91 60       	ori	r25, 0x01	; 1
    11e0:	00 96       	adiw	r24, 0x00	; 0
    11e2:	61 05       	cpc	r22, r1
    11e4:	71 05       	cpc	r23, r1
    11e6:	39 f4       	brne	.+14     	; 0x11f6 <__ftoa_engine+0x28>
    11e8:	32 60       	ori	r19, 0x02	; 2
    11ea:	2e 5f       	subi	r18, 0xFE	; 254
    11ec:	3d 93       	st	X+, r19
    11ee:	30 e3       	ldi	r19, 0x30	; 48
    11f0:	2a 95       	dec	r18
    11f2:	e1 f7       	brne	.-8      	; 0x11ec <__ftoa_engine+0x1e>
    11f4:	08 95       	ret
    11f6:	9f 3f       	cpi	r25, 0xFF	; 255
    11f8:	30 f0       	brcs	.+12     	; 0x1206 <__ftoa_engine+0x38>
    11fa:	80 38       	cpi	r24, 0x80	; 128
    11fc:	71 05       	cpc	r23, r1
    11fe:	61 05       	cpc	r22, r1
    1200:	09 f0       	breq	.+2      	; 0x1204 <__ftoa_engine+0x36>
    1202:	3c 5f       	subi	r19, 0xFC	; 252
    1204:	3c 5f       	subi	r19, 0xFC	; 252
    1206:	3d 93       	st	X+, r19
    1208:	91 30       	cpi	r25, 0x01	; 1
    120a:	08 f0       	brcs	.+2      	; 0x120e <__ftoa_engine+0x40>
    120c:	80 68       	ori	r24, 0x80	; 128
    120e:	91 1d       	adc	r25, r1
    1210:	df 93       	push	r29
    1212:	cf 93       	push	r28
    1214:	1f 93       	push	r17
    1216:	0f 93       	push	r16
    1218:	ff 92       	push	r15
    121a:	ef 92       	push	r14
    121c:	19 2f       	mov	r17, r25
    121e:	98 7f       	andi	r25, 0xF8	; 248
    1220:	96 95       	lsr	r25
    1222:	e9 2f       	mov	r30, r25
    1224:	96 95       	lsr	r25
    1226:	96 95       	lsr	r25
    1228:	e9 0f       	add	r30, r25
    122a:	ff 27       	eor	r31, r31
    122c:	e6 53       	subi	r30, 0x36	; 54
    122e:	ff 4f       	sbci	r31, 0xFF	; 255
    1230:	99 27       	eor	r25, r25
    1232:	33 27       	eor	r19, r19
    1234:	ee 24       	eor	r14, r14
    1236:	ff 24       	eor	r15, r15
    1238:	a7 01       	movw	r20, r14
    123a:	e7 01       	movw	r28, r14
    123c:	05 90       	lpm	r0, Z+
    123e:	08 94       	sec
    1240:	07 94       	ror	r0
    1242:	28 f4       	brcc	.+10     	; 0x124e <__ftoa_engine+0x80>
    1244:	36 0f       	add	r19, r22
    1246:	e7 1e       	adc	r14, r23
    1248:	f8 1e       	adc	r15, r24
    124a:	49 1f       	adc	r20, r25
    124c:	51 1d       	adc	r21, r1
    124e:	66 0f       	add	r22, r22
    1250:	77 1f       	adc	r23, r23
    1252:	88 1f       	adc	r24, r24
    1254:	99 1f       	adc	r25, r25
    1256:	06 94       	lsr	r0
    1258:	a1 f7       	brne	.-24     	; 0x1242 <__ftoa_engine+0x74>
    125a:	05 90       	lpm	r0, Z+
    125c:	07 94       	ror	r0
    125e:	28 f4       	brcc	.+10     	; 0x126a <__ftoa_engine+0x9c>
    1260:	e7 0e       	add	r14, r23
    1262:	f8 1e       	adc	r15, r24
    1264:	49 1f       	adc	r20, r25
    1266:	56 1f       	adc	r21, r22
    1268:	c1 1d       	adc	r28, r1
    126a:	77 0f       	add	r23, r23
    126c:	88 1f       	adc	r24, r24
    126e:	99 1f       	adc	r25, r25
    1270:	66 1f       	adc	r22, r22
    1272:	06 94       	lsr	r0
    1274:	a1 f7       	brne	.-24     	; 0x125e <__ftoa_engine+0x90>
    1276:	05 90       	lpm	r0, Z+
    1278:	07 94       	ror	r0
    127a:	28 f4       	brcc	.+10     	; 0x1286 <__ftoa_engine+0xb8>
    127c:	f8 0e       	add	r15, r24
    127e:	49 1f       	adc	r20, r25
    1280:	56 1f       	adc	r21, r22
    1282:	c7 1f       	adc	r28, r23
    1284:	d1 1d       	adc	r29, r1
    1286:	88 0f       	add	r24, r24
    1288:	99 1f       	adc	r25, r25
    128a:	66 1f       	adc	r22, r22
    128c:	77 1f       	adc	r23, r23
    128e:	06 94       	lsr	r0
    1290:	a1 f7       	brne	.-24     	; 0x127a <__ftoa_engine+0xac>
    1292:	05 90       	lpm	r0, Z+
    1294:	07 94       	ror	r0
    1296:	20 f4       	brcc	.+8      	; 0x12a0 <__ftoa_engine+0xd2>
    1298:	49 0f       	add	r20, r25
    129a:	56 1f       	adc	r21, r22
    129c:	c7 1f       	adc	r28, r23
    129e:	d8 1f       	adc	r29, r24
    12a0:	99 0f       	add	r25, r25
    12a2:	66 1f       	adc	r22, r22
    12a4:	77 1f       	adc	r23, r23
    12a6:	88 1f       	adc	r24, r24
    12a8:	06 94       	lsr	r0
    12aa:	a9 f7       	brne	.-22     	; 0x1296 <__ftoa_engine+0xc8>
    12ac:	84 91       	lpm	r24, Z
    12ae:	10 95       	com	r17
    12b0:	17 70       	andi	r17, 0x07	; 7
    12b2:	41 f0       	breq	.+16     	; 0x12c4 <__ftoa_engine+0xf6>
    12b4:	d6 95       	lsr	r29
    12b6:	c7 95       	ror	r28
    12b8:	57 95       	ror	r21
    12ba:	47 95       	ror	r20
    12bc:	f7 94       	ror	r15
    12be:	e7 94       	ror	r14
    12c0:	1a 95       	dec	r17
    12c2:	c1 f7       	brne	.-16     	; 0x12b4 <__ftoa_engine+0xe6>
    12c4:	e0 e7       	ldi	r30, 0x70	; 112
    12c6:	f0 e0       	ldi	r31, 0x00	; 0
    12c8:	68 94       	set
    12ca:	15 90       	lpm	r1, Z+
    12cc:	15 91       	lpm	r17, Z+
    12ce:	35 91       	lpm	r19, Z+
    12d0:	65 91       	lpm	r22, Z+
    12d2:	95 91       	lpm	r25, Z+
    12d4:	05 90       	lpm	r0, Z+
    12d6:	7f e2       	ldi	r23, 0x2F	; 47
    12d8:	73 95       	inc	r23
    12da:	e1 18       	sub	r14, r1
    12dc:	f1 0a       	sbc	r15, r17
    12de:	43 0b       	sbc	r20, r19
    12e0:	56 0b       	sbc	r21, r22
    12e2:	c9 0b       	sbc	r28, r25
    12e4:	d0 09       	sbc	r29, r0
    12e6:	c0 f7       	brcc	.-16     	; 0x12d8 <__ftoa_engine+0x10a>
    12e8:	e1 0c       	add	r14, r1
    12ea:	f1 1e       	adc	r15, r17
    12ec:	43 1f       	adc	r20, r19
    12ee:	56 1f       	adc	r21, r22
    12f0:	c9 1f       	adc	r28, r25
    12f2:	d0 1d       	adc	r29, r0
    12f4:	7e f4       	brtc	.+30     	; 0x1314 <__ftoa_engine+0x146>
    12f6:	70 33       	cpi	r23, 0x30	; 48
    12f8:	11 f4       	brne	.+4      	; 0x12fe <__ftoa_engine+0x130>
    12fa:	8a 95       	dec	r24
    12fc:	e6 cf       	rjmp	.-52     	; 0x12ca <__ftoa_engine+0xfc>
    12fe:	e8 94       	clt
    1300:	01 50       	subi	r16, 0x01	; 1
    1302:	30 f0       	brcs	.+12     	; 0x1310 <__ftoa_engine+0x142>
    1304:	08 0f       	add	r16, r24
    1306:	0a f4       	brpl	.+2      	; 0x130a <__ftoa_engine+0x13c>
    1308:	00 27       	eor	r16, r16
    130a:	02 17       	cp	r16, r18
    130c:	08 f4       	brcc	.+2      	; 0x1310 <__ftoa_engine+0x142>
    130e:	20 2f       	mov	r18, r16
    1310:	23 95       	inc	r18
    1312:	02 2f       	mov	r16, r18
    1314:	7a 33       	cpi	r23, 0x3A	; 58
    1316:	28 f0       	brcs	.+10     	; 0x1322 <__ftoa_engine+0x154>
    1318:	79 e3       	ldi	r23, 0x39	; 57
    131a:	7d 93       	st	X+, r23
    131c:	2a 95       	dec	r18
    131e:	e9 f7       	brne	.-6      	; 0x131a <__ftoa_engine+0x14c>
    1320:	10 c0       	rjmp	.+32     	; 0x1342 <__ftoa_engine+0x174>
    1322:	7d 93       	st	X+, r23
    1324:	2a 95       	dec	r18
    1326:	89 f6       	brne	.-94     	; 0x12ca <__ftoa_engine+0xfc>
    1328:	06 94       	lsr	r0
    132a:	97 95       	ror	r25
    132c:	67 95       	ror	r22
    132e:	37 95       	ror	r19
    1330:	17 95       	ror	r17
    1332:	17 94       	ror	r1
    1334:	e1 18       	sub	r14, r1
    1336:	f1 0a       	sbc	r15, r17
    1338:	43 0b       	sbc	r20, r19
    133a:	56 0b       	sbc	r21, r22
    133c:	c9 0b       	sbc	r28, r25
    133e:	d0 09       	sbc	r29, r0
    1340:	98 f0       	brcs	.+38     	; 0x1368 <__ftoa_engine+0x19a>
    1342:	23 95       	inc	r18
    1344:	7e 91       	ld	r23, -X
    1346:	73 95       	inc	r23
    1348:	7a 33       	cpi	r23, 0x3A	; 58
    134a:	08 f0       	brcs	.+2      	; 0x134e <__ftoa_engine+0x180>
    134c:	70 e3       	ldi	r23, 0x30	; 48
    134e:	7c 93       	st	X, r23
    1350:	20 13       	cpse	r18, r16
    1352:	b8 f7       	brcc	.-18     	; 0x1342 <__ftoa_engine+0x174>
    1354:	7e 91       	ld	r23, -X
    1356:	70 61       	ori	r23, 0x10	; 16
    1358:	7d 93       	st	X+, r23
    135a:	30 f0       	brcs	.+12     	; 0x1368 <__ftoa_engine+0x19a>
    135c:	83 95       	inc	r24
    135e:	71 e3       	ldi	r23, 0x31	; 49
    1360:	7d 93       	st	X+, r23
    1362:	70 e3       	ldi	r23, 0x30	; 48
    1364:	2a 95       	dec	r18
    1366:	e1 f7       	brne	.-8      	; 0x1360 <__ftoa_engine+0x192>
    1368:	11 24       	eor	r1, r1
    136a:	ef 90       	pop	r14
    136c:	ff 90       	pop	r15
    136e:	0f 91       	pop	r16
    1370:	1f 91       	pop	r17
    1372:	cf 91       	pop	r28
    1374:	df 91       	pop	r29
    1376:	99 27       	eor	r25, r25
    1378:	87 fd       	sbrc	r24, 7
    137a:	90 95       	com	r25
    137c:	08 95       	ret

0000137e <strnlen_P>:
    137e:	fc 01       	movw	r30, r24
    1380:	05 90       	lpm	r0, Z+
    1382:	61 50       	subi	r22, 0x01	; 1
    1384:	70 40       	sbci	r23, 0x00	; 0
    1386:	01 10       	cpse	r0, r1
    1388:	d8 f7       	brcc	.-10     	; 0x1380 <strnlen_P+0x2>
    138a:	80 95       	com	r24
    138c:	90 95       	com	r25
    138e:	8e 0f       	add	r24, r30
    1390:	9f 1f       	adc	r25, r31
    1392:	08 95       	ret

00001394 <strncmp>:
    1394:	fb 01       	movw	r30, r22
    1396:	dc 01       	movw	r26, r24
    1398:	41 50       	subi	r20, 0x01	; 1
    139a:	50 40       	sbci	r21, 0x00	; 0
    139c:	30 f0       	brcs	.+12     	; 0x13aa <strncmp+0x16>
    139e:	8d 91       	ld	r24, X+
    13a0:	01 90       	ld	r0, Z+
    13a2:	80 19       	sub	r24, r0
    13a4:	19 f4       	brne	.+6      	; 0x13ac <strncmp+0x18>
    13a6:	00 20       	and	r0, r0
    13a8:	b9 f7       	brne	.-18     	; 0x1398 <strncmp+0x4>
    13aa:	88 1b       	sub	r24, r24
    13ac:	99 0b       	sbc	r25, r25
    13ae:	08 95       	ret

000013b0 <strnlen>:
    13b0:	fc 01       	movw	r30, r24
    13b2:	61 50       	subi	r22, 0x01	; 1
    13b4:	70 40       	sbci	r23, 0x00	; 0
    13b6:	01 90       	ld	r0, Z+
    13b8:	01 10       	cpse	r0, r1
    13ba:	d8 f7       	brcc	.-10     	; 0x13b2 <strnlen+0x2>
    13bc:	80 95       	com	r24
    13be:	90 95       	com	r25
    13c0:	8e 0f       	add	r24, r30
    13c2:	9f 1f       	adc	r25, r31
    13c4:	08 95       	ret

000013c6 <fputc>:
    13c6:	0f 93       	push	r16
    13c8:	1f 93       	push	r17
    13ca:	cf 93       	push	r28
    13cc:	df 93       	push	r29
    13ce:	fb 01       	movw	r30, r22
    13d0:	23 81       	ldd	r18, Z+3	; 0x03
    13d2:	21 fd       	sbrc	r18, 1
    13d4:	03 c0       	rjmp	.+6      	; 0x13dc <fputc+0x16>
    13d6:	8f ef       	ldi	r24, 0xFF	; 255
    13d8:	9f ef       	ldi	r25, 0xFF	; 255
    13da:	2c c0       	rjmp	.+88     	; 0x1434 <fputc+0x6e>
    13dc:	22 ff       	sbrs	r18, 2
    13de:	16 c0       	rjmp	.+44     	; 0x140c <fputc+0x46>
    13e0:	46 81       	ldd	r20, Z+6	; 0x06
    13e2:	57 81       	ldd	r21, Z+7	; 0x07
    13e4:	24 81       	ldd	r18, Z+4	; 0x04
    13e6:	35 81       	ldd	r19, Z+5	; 0x05
    13e8:	42 17       	cp	r20, r18
    13ea:	53 07       	cpc	r21, r19
    13ec:	44 f4       	brge	.+16     	; 0x13fe <fputc+0x38>
    13ee:	a0 81       	ld	r26, Z
    13f0:	b1 81       	ldd	r27, Z+1	; 0x01
    13f2:	9d 01       	movw	r18, r26
    13f4:	2f 5f       	subi	r18, 0xFF	; 255
    13f6:	3f 4f       	sbci	r19, 0xFF	; 255
    13f8:	31 83       	std	Z+1, r19	; 0x01
    13fa:	20 83       	st	Z, r18
    13fc:	8c 93       	st	X, r24
    13fe:	26 81       	ldd	r18, Z+6	; 0x06
    1400:	37 81       	ldd	r19, Z+7	; 0x07
    1402:	2f 5f       	subi	r18, 0xFF	; 255
    1404:	3f 4f       	sbci	r19, 0xFF	; 255
    1406:	37 83       	std	Z+7, r19	; 0x07
    1408:	26 83       	std	Z+6, r18	; 0x06
    140a:	14 c0       	rjmp	.+40     	; 0x1434 <fputc+0x6e>
    140c:	8b 01       	movw	r16, r22
    140e:	ec 01       	movw	r28, r24
    1410:	fb 01       	movw	r30, r22
    1412:	00 84       	ldd	r0, Z+8	; 0x08
    1414:	f1 85       	ldd	r31, Z+9	; 0x09
    1416:	e0 2d       	mov	r30, r0
    1418:	09 95       	icall
    141a:	89 2b       	or	r24, r25
    141c:	e1 f6       	brne	.-72     	; 0x13d6 <fputc+0x10>
    141e:	d8 01       	movw	r26, r16
    1420:	16 96       	adiw	r26, 0x06	; 6
    1422:	8d 91       	ld	r24, X+
    1424:	9c 91       	ld	r25, X
    1426:	17 97       	sbiw	r26, 0x07	; 7
    1428:	01 96       	adiw	r24, 0x01	; 1
    142a:	17 96       	adiw	r26, 0x07	; 7
    142c:	9c 93       	st	X, r25
    142e:	8e 93       	st	-X, r24
    1430:	16 97       	sbiw	r26, 0x06	; 6
    1432:	ce 01       	movw	r24, r28
    1434:	df 91       	pop	r29
    1436:	cf 91       	pop	r28
    1438:	1f 91       	pop	r17
    143a:	0f 91       	pop	r16
    143c:	08 95       	ret

0000143e <printf>:
    143e:	a0 e0       	ldi	r26, 0x00	; 0
    1440:	b0 e0       	ldi	r27, 0x00	; 0
    1442:	e5 e2       	ldi	r30, 0x25	; 37
    1444:	fa e0       	ldi	r31, 0x0A	; 10
    1446:	0c 94 c0 08 	jmp	0x1180	; 0x1180 <__prologue_saves__+0x20>
    144a:	ae 01       	movw	r20, r28
    144c:	4b 5f       	subi	r20, 0xFB	; 251
    144e:	5f 4f       	sbci	r21, 0xFF	; 255
    1450:	fa 01       	movw	r30, r20
    1452:	61 91       	ld	r22, Z+
    1454:	71 91       	ld	r23, Z+
    1456:	af 01       	movw	r20, r30
    1458:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__data_end+0x2>
    145c:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <__data_end+0x3>
    1460:	0e 94 33 05 	call	0xa66	; 0xa66 <vfprintf>
    1464:	e2 e0       	ldi	r30, 0x02	; 2
    1466:	0c 94 dc 08 	jmp	0x11b8	; 0x11b8 <__epilogue_restores__+0x20>

0000146a <__ultoa_invert>:
    146a:	fa 01       	movw	r30, r20
    146c:	aa 27       	eor	r26, r26
    146e:	28 30       	cpi	r18, 0x08	; 8
    1470:	51 f1       	breq	.+84     	; 0x14c6 <__ultoa_invert+0x5c>
    1472:	20 31       	cpi	r18, 0x10	; 16
    1474:	81 f1       	breq	.+96     	; 0x14d6 <__ultoa_invert+0x6c>
    1476:	e8 94       	clt
    1478:	6f 93       	push	r22
    147a:	6e 7f       	andi	r22, 0xFE	; 254
    147c:	6e 5f       	subi	r22, 0xFE	; 254
    147e:	7f 4f       	sbci	r23, 0xFF	; 255
    1480:	8f 4f       	sbci	r24, 0xFF	; 255
    1482:	9f 4f       	sbci	r25, 0xFF	; 255
    1484:	af 4f       	sbci	r26, 0xFF	; 255
    1486:	b1 e0       	ldi	r27, 0x01	; 1
    1488:	3e d0       	rcall	.+124    	; 0x1506 <__ultoa_invert+0x9c>
    148a:	b4 e0       	ldi	r27, 0x04	; 4
    148c:	3c d0       	rcall	.+120    	; 0x1506 <__ultoa_invert+0x9c>
    148e:	67 0f       	add	r22, r23
    1490:	78 1f       	adc	r23, r24
    1492:	89 1f       	adc	r24, r25
    1494:	9a 1f       	adc	r25, r26
    1496:	a1 1d       	adc	r26, r1
    1498:	68 0f       	add	r22, r24
    149a:	79 1f       	adc	r23, r25
    149c:	8a 1f       	adc	r24, r26
    149e:	91 1d       	adc	r25, r1
    14a0:	a1 1d       	adc	r26, r1
    14a2:	6a 0f       	add	r22, r26
    14a4:	71 1d       	adc	r23, r1
    14a6:	81 1d       	adc	r24, r1
    14a8:	91 1d       	adc	r25, r1
    14aa:	a1 1d       	adc	r26, r1
    14ac:	20 d0       	rcall	.+64     	; 0x14ee <__ultoa_invert+0x84>
    14ae:	09 f4       	brne	.+2      	; 0x14b2 <__ultoa_invert+0x48>
    14b0:	68 94       	set
    14b2:	3f 91       	pop	r19
    14b4:	2a e0       	ldi	r18, 0x0A	; 10
    14b6:	26 9f       	mul	r18, r22
    14b8:	11 24       	eor	r1, r1
    14ba:	30 19       	sub	r19, r0
    14bc:	30 5d       	subi	r19, 0xD0	; 208
    14be:	31 93       	st	Z+, r19
    14c0:	de f6       	brtc	.-74     	; 0x1478 <__ultoa_invert+0xe>
    14c2:	cf 01       	movw	r24, r30
    14c4:	08 95       	ret
    14c6:	46 2f       	mov	r20, r22
    14c8:	47 70       	andi	r20, 0x07	; 7
    14ca:	40 5d       	subi	r20, 0xD0	; 208
    14cc:	41 93       	st	Z+, r20
    14ce:	b3 e0       	ldi	r27, 0x03	; 3
    14d0:	0f d0       	rcall	.+30     	; 0x14f0 <__ultoa_invert+0x86>
    14d2:	c9 f7       	brne	.-14     	; 0x14c6 <__ultoa_invert+0x5c>
    14d4:	f6 cf       	rjmp	.-20     	; 0x14c2 <__ultoa_invert+0x58>
    14d6:	46 2f       	mov	r20, r22
    14d8:	4f 70       	andi	r20, 0x0F	; 15
    14da:	40 5d       	subi	r20, 0xD0	; 208
    14dc:	4a 33       	cpi	r20, 0x3A	; 58
    14de:	18 f0       	brcs	.+6      	; 0x14e6 <__ultoa_invert+0x7c>
    14e0:	49 5d       	subi	r20, 0xD9	; 217
    14e2:	31 fd       	sbrc	r19, 1
    14e4:	40 52       	subi	r20, 0x20	; 32
    14e6:	41 93       	st	Z+, r20
    14e8:	02 d0       	rcall	.+4      	; 0x14ee <__ultoa_invert+0x84>
    14ea:	a9 f7       	brne	.-22     	; 0x14d6 <__ultoa_invert+0x6c>
    14ec:	ea cf       	rjmp	.-44     	; 0x14c2 <__ultoa_invert+0x58>
    14ee:	b4 e0       	ldi	r27, 0x04	; 4
    14f0:	a6 95       	lsr	r26
    14f2:	97 95       	ror	r25
    14f4:	87 95       	ror	r24
    14f6:	77 95       	ror	r23
    14f8:	67 95       	ror	r22
    14fa:	ba 95       	dec	r27
    14fc:	c9 f7       	brne	.-14     	; 0x14f0 <__ultoa_invert+0x86>
    14fe:	00 97       	sbiw	r24, 0x00	; 0
    1500:	61 05       	cpc	r22, r1
    1502:	71 05       	cpc	r23, r1
    1504:	08 95       	ret
    1506:	9b 01       	movw	r18, r22
    1508:	ac 01       	movw	r20, r24
    150a:	0a 2e       	mov	r0, r26
    150c:	06 94       	lsr	r0
    150e:	57 95       	ror	r21
    1510:	47 95       	ror	r20
    1512:	37 95       	ror	r19
    1514:	27 95       	ror	r18
    1516:	ba 95       	dec	r27
    1518:	c9 f7       	brne	.-14     	; 0x150c <__ultoa_invert+0xa2>
    151a:	62 0f       	add	r22, r18
    151c:	73 1f       	adc	r23, r19
    151e:	84 1f       	adc	r24, r20
    1520:	95 1f       	adc	r25, r21
    1522:	a0 1d       	adc	r26, r0
    1524:	08 95       	ret

00001526 <_exit>:
    1526:	f8 94       	cli

00001528 <__stop_program>:
    1528:	ff cf       	rjmp	.-2      	; 0x1528 <__stop_program>
