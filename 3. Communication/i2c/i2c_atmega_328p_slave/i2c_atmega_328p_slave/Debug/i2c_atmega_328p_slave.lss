
i2c_atmega_328p_slave.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000005a  00800100  0000088e  00000922  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000088e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  0080015a  0080015a  0000097c  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  0000097c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a08  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000a0  00000000  00000000  00000a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c78  00000000  00000000  00000ae8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000991  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005ed  00000000  00000000  000020f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000014c  00000000  00000000  000026e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000554  00000000  00000000  0000282c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002b2  00000000  00000000  00002d80  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00003032  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__vector_24>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e8       	ldi	r30, 0x8E	; 142
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 35       	cpi	r26, 0x5A	; 90
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e5       	ldi	r26, 0x5A	; 90
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 36       	cpi	r26, 0x62	; 98
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
  9e:	0c 94 45 04 	jmp	0x88a	; 0x88a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <I2C_recieve>:
		sei();
}

void i2c_transmit_data(int data)
{		
	TWDR = data;
  a6:	80 93 5b 01 	sts	0x015B, r24	; 0x80015b <data>
  aa:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <data>
  ae:	8e 5f       	subi	r24, 0xFE	; 254
  b0:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <__data_end>
  b4:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <data>
  b8:	1f 92       	push	r1
  ba:	8f 93       	push	r24
  bc:	8c e1       	ldi	r24, 0x1C	; 28
  be:	91 e0       	ldi	r25, 0x01	; 1
  c0:	9f 93       	push	r25
  c2:	8f 93       	push	r24
  c4:	0e 94 37 01 	call	0x26e	; 0x26e <printf>
  c8:	0f 90       	pop	r0
  ca:	0f 90       	pop	r0
  cc:	0f 90       	pop	r0
  ce:	0f 90       	pop	r0
  d0:	08 95       	ret

000000d2 <I2C_data_request>:
  d2:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <__data_end>
  d6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
  da:	08 95       	ret

000000dc <i2c_init>:
  dc:	f8 94       	cli
  de:	88 0f       	add	r24, r24
  e0:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__DATA_REGION_ORIGIN__+0x5a>
  e4:	85 ec       	ldi	r24, 0xC5	; 197
  e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  ea:	78 94       	sei
  ec:	08 95       	ret

000000ee <i2c_disable>:
  ee:	f8 94       	cli
  f0:	10 92 bc 00 	sts	0x00BC, r1	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
  f4:	10 92 ba 00 	sts	0x00BA, r1	; 0x8000ba <__DATA_REGION_ORIGIN__+0x5a>
  f8:	78 94       	sei
  fa:	08 95       	ret

000000fc <__vector_24>:
}
 
ISR(TWI_vect)
{
  fc:	1f 92       	push	r1
  fe:	0f 92       	push	r0
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	0f 92       	push	r0
 104:	11 24       	eor	r1, r1
 106:	2f 93       	push	r18
 108:	3f 93       	push	r19
 10a:	4f 93       	push	r20
 10c:	5f 93       	push	r21
 10e:	6f 93       	push	r22
 110:	7f 93       	push	r23
 112:	8f 93       	push	r24
 114:	9f 93       	push	r25
 116:	af 93       	push	r26
 118:	bf 93       	push	r27
 11a:	ef 93       	push	r30
 11c:	ff 93       	push	r31
	switch(TW_STATUS)
 11e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
 122:	88 7f       	andi	r24, 0xF8	; 248
 124:	80 38       	cpi	r24, 0x80	; 128
 126:	49 f0       	breq	.+18     	; 0x13a <__vector_24+0x3e>
 128:	18 f4       	brcc	.+6      	; 0x130 <__vector_24+0x34>
 12a:	88 23       	and	r24, r24
 12c:	31 f1       	breq	.+76     	; 0x17a <__vector_24+0x7e>
 12e:	2b c0       	rjmp	.+86     	; 0x186 <__vector_24+0x8a>
 130:	88 3a       	cpi	r24, 0xA8	; 168
 132:	79 f0       	breq	.+30     	; 0x152 <__vector_24+0x56>
 134:	88 3b       	cpi	r24, 0xB8	; 184
 136:	b9 f0       	breq	.+46     	; 0x166 <__vector_24+0x6a>
 138:	26 c0       	rjmp	.+76     	; 0x186 <__vector_24+0x8a>
	{
		case TW_SR_DATA_ACK:
		printf("TW_SR_DATA_ACK\n");
 13a:	8d e2       	ldi	r24, 0x2D	; 45
 13c:	91 e0       	ldi	r25, 0x01	; 1
 13e:	0e 94 4d 01 	call	0x29a	; 0x29a <puts>
		// received data from master, call the receive callback
		I2C_recieve(TWDR);
 142:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
 146:	0e 94 53 00 	call	0xa6	; 0xa6 <I2C_recieve>
		
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 14a:	85 ec       	ldi	r24, 0xC5	; 197
 14c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
		break;
 150:	1d c0       	rjmp	.+58     	; 0x18c <__vector_24+0x90>
		
		case TW_ST_SLA_ACK:
		// master is requesting data, call the request callback
		printf("TW_ST_SLA_ACK\n");
 152:	8c e3       	ldi	r24, 0x3C	; 60
 154:	91 e0       	ldi	r25, 0x01	; 1
 156:	0e 94 4d 01 	call	0x29a	; 0x29a <puts>
		I2C_data_request();
 15a:	0e 94 69 00 	call	0xd2	; 0xd2 <I2C_data_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 15e:	85 ec       	ldi	r24, 0xC5	; 197
 160:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
		break;
 164:	13 c0       	rjmp	.+38     	; 0x18c <__vector_24+0x90>
		
		case TW_ST_DATA_ACK:
		// master is requesting data, call the request callback
		printf("TW_ST_DATA_ACK\n");
 166:	8a e4       	ldi	r24, 0x4A	; 74
 168:	91 e0       	ldi	r25, 0x01	; 1
 16a:	0e 94 4d 01 	call	0x29a	; 0x29a <puts>
		I2C_data_request();
 16e:	0e 94 69 00 	call	0xd2	; 0xd2 <I2C_data_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 172:	85 ec       	ldi	r24, 0xC5	; 197
 174:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
		break;
 178:	09 c0       	rjmp	.+18     	; 0x18c <__vector_24+0x90>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
 17a:	ec eb       	ldi	r30, 0xBC	; 188
 17c:	f0 e0       	ldi	r31, 0x00	; 0
 17e:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 180:	85 ec       	ldi	r24, 0xC5	; 197
 182:	80 83       	st	Z, r24
		break;
 184:	03 c0       	rjmp	.+6      	; 0x18c <__vector_24+0x90>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
 186:	85 ec       	ldi	r24, 0xC5	; 197
 188:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
		break;
	}
}
 18c:	ff 91       	pop	r31
 18e:	ef 91       	pop	r30
 190:	bf 91       	pop	r27
 192:	af 91       	pop	r26
 194:	9f 91       	pop	r25
 196:	8f 91       	pop	r24
 198:	7f 91       	pop	r23
 19a:	6f 91       	pop	r22
 19c:	5f 91       	pop	r21
 19e:	4f 91       	pop	r20
 1a0:	3f 91       	pop	r19
 1a2:	2f 91       	pop	r18
 1a4:	0f 90       	pop	r0
 1a6:	0f be       	out	0x3f, r0	; 63
 1a8:	0f 90       	pop	r0
 1aa:	1f 90       	pop	r1
 1ac:	18 95       	reti

000001ae <main>:

int main()
{
	 

uart_init();
 1ae:	0e 94 1b 01 	call	0x236	; 0x236 <uart_init>
io_redirect();	
 1b2:	0e 94 2c 01 	call	0x258	; 0x258 <io_redirect>
i2c_disable();
 1b6:	0e 94 77 00 	call	0xee	; 0xee <i2c_disable>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ba:	2f ef       	ldi	r18, 0xFF	; 255
 1bc:	83 e2       	ldi	r24, 0x23	; 35
 1be:	94 ef       	ldi	r25, 0xF4	; 244
 1c0:	21 50       	subi	r18, 0x01	; 1
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	90 40       	sbci	r25, 0x00	; 0
 1c6:	e1 f7       	brne	.-8      	; 0x1c0 <main+0x12>
 1c8:	00 c0       	rjmp	.+0      	; 0x1ca <main+0x1c>
 1ca:	00 00       	nop
_delay_ms(5000);

	while(1)
	{
		
		i2c_init(I2C_ADDR);
 1cc:	80 e4       	ldi	r24, 0x40	; 64
 1ce:	0e 94 6e 00 	call	0xdc	; 0xdc <i2c_init>
 1d2:	2f ef       	ldi	r18, 0xFF	; 255
 1d4:	8f ed       	ldi	r24, 0xDF	; 223
 1d6:	9e e2       	ldi	r25, 0x2E	; 46
 1d8:	21 50       	subi	r18, 0x01	; 1
 1da:	80 40       	sbci	r24, 0x00	; 0
 1dc:	90 40       	sbci	r25, 0x00	; 0
 1de:	e1 f7       	brne	.-8      	; 0x1d8 <main+0x2a>
 1e0:	00 c0       	rjmp	.+0      	; 0x1e2 <main+0x34>
 1e2:	00 00       	nop

		_delay_ms(960);
		
		//i2c_init(I2C_ADDR);
		i2c_disable();
 1e4:	0e 94 77 00 	call	0xee	; 0xee <i2c_disable>
 1e8:	2f ef       	ldi	r18, 0xFF	; 255
 1ea:	83 ef       	ldi	r24, 0xF3	; 243
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	21 50       	subi	r18, 0x01	; 1
 1f0:	80 40       	sbci	r24, 0x00	; 0
 1f2:	90 40       	sbci	r25, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <main+0x40>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x4a>
 1f8:	00 00       	nop
		
		_delay_ms(40);
		
		
		data2++;
 1fa:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <__data_end>
 1fe:	8f 5f       	subi	r24, 0xFF	; 255
 200:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <__data_end>
 204:	e3 cf       	rjmp	.-58     	; 0x1cc <main+0x1e>

00000206 <uart_putchar>:
 206:	cf 93       	push	r28
 208:	c8 2f       	mov	r28, r24
 20a:	8a 30       	cpi	r24, 0x0A	; 10
 20c:	19 f4       	brne	.+6      	; 0x214 <uart_putchar+0xe>
 20e:	8d e0       	ldi	r24, 0x0D	; 13
 210:	0e 94 03 01 	call	0x206	; 0x206 <uart_putchar>
 214:	e0 ec       	ldi	r30, 0xC0	; 192
 216:	f0 e0       	ldi	r31, 0x00	; 0
 218:	80 81       	ld	r24, Z
 21a:	85 ff       	sbrs	r24, 5
 21c:	fd cf       	rjmp	.-6      	; 0x218 <uart_putchar+0x12>
 21e:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 222:	cf 91       	pop	r28
 224:	08 95       	ret

00000226 <uart_getchar>:
 226:	e0 ec       	ldi	r30, 0xC0	; 192
 228:	f0 e0       	ldi	r31, 0x00	; 0
 22a:	80 81       	ld	r24, Z
 22c:	88 23       	and	r24, r24
 22e:	ec f7       	brge	.-6      	; 0x22a <uart_getchar+0x4>
 230:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 234:	08 95       	ret

00000236 <uart_init>:
 236:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 23a:	87 e6       	ldi	r24, 0x67	; 103
 23c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
 240:	e0 ec       	ldi	r30, 0xC0	; 192
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	80 81       	ld	r24, Z
 246:	8d 7f       	andi	r24, 0xFD	; 253
 248:	80 83       	st	Z, r24
 24a:	86 e0       	ldi	r24, 0x06	; 6
 24c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 250:	88 e1       	ldi	r24, 0x18	; 24
 252:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
 256:	08 95       	ret

00000258 <io_redirect>:
 258:	ec e5       	ldi	r30, 0x5C	; 92
 25a:	f1 e0       	ldi	r31, 0x01	; 1
 25c:	8e e0       	ldi	r24, 0x0E	; 14
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	93 83       	std	Z+3, r25	; 0x03
 262:	82 83       	std	Z+2, r24	; 0x02
 264:	80 e0       	ldi	r24, 0x00	; 0
 266:	91 e0       	ldi	r25, 0x01	; 1
 268:	91 83       	std	Z+1, r25	; 0x01
 26a:	80 83       	st	Z, r24
 26c:	08 95       	ret

0000026e <printf>:
 26e:	a0 e0       	ldi	r26, 0x00	; 0
 270:	b0 e0       	ldi	r27, 0x00	; 0
 272:	ed e3       	ldi	r30, 0x3D	; 61
 274:	f1 e0       	ldi	r31, 0x01	; 1
 276:	0c 94 1e 04 	jmp	0x83c	; 0x83c <__prologue_saves__+0x20>
 27a:	ae 01       	movw	r20, r28
 27c:	4b 5f       	subi	r20, 0xFB	; 251
 27e:	5f 4f       	sbci	r21, 0xFF	; 255
 280:	fa 01       	movw	r30, r20
 282:	61 91       	ld	r22, Z+
 284:	71 91       	ld	r23, Z+
 286:	af 01       	movw	r20, r30
 288:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <__iob+0x2>
 28c:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <__iob+0x3>
 290:	0e 94 7d 01 	call	0x2fa	; 0x2fa <vfprintf>
 294:	e2 e0       	ldi	r30, 0x02	; 2
 296:	0c 94 3a 04 	jmp	0x874	; 0x874 <__epilogue_restores__+0x20>

0000029a <puts>:
 29a:	0f 93       	push	r16
 29c:	1f 93       	push	r17
 29e:	cf 93       	push	r28
 2a0:	df 93       	push	r29
 2a2:	e0 91 5e 01 	lds	r30, 0x015E	; 0x80015e <__iob+0x2>
 2a6:	f0 91 5f 01 	lds	r31, 0x015F	; 0x80015f <__iob+0x3>
 2aa:	23 81       	ldd	r18, Z+3	; 0x03
 2ac:	21 ff       	sbrs	r18, 1
 2ae:	1b c0       	rjmp	.+54     	; 0x2e6 <puts+0x4c>
 2b0:	8c 01       	movw	r16, r24
 2b2:	d0 e0       	ldi	r29, 0x00	; 0
 2b4:	c0 e0       	ldi	r28, 0x00	; 0
 2b6:	f8 01       	movw	r30, r16
 2b8:	81 91       	ld	r24, Z+
 2ba:	8f 01       	movw	r16, r30
 2bc:	60 91 5e 01 	lds	r22, 0x015E	; 0x80015e <__iob+0x2>
 2c0:	70 91 5f 01 	lds	r23, 0x015F	; 0x80015f <__iob+0x3>
 2c4:	db 01       	movw	r26, r22
 2c6:	18 96       	adiw	r26, 0x08	; 8
 2c8:	ed 91       	ld	r30, X+
 2ca:	fc 91       	ld	r31, X
 2cc:	19 97       	sbiw	r26, 0x09	; 9
 2ce:	88 23       	and	r24, r24
 2d0:	31 f0       	breq	.+12     	; 0x2de <puts+0x44>
 2d2:	09 95       	icall
 2d4:	89 2b       	or	r24, r25
 2d6:	79 f3       	breq	.-34     	; 0x2b6 <puts+0x1c>
 2d8:	df ef       	ldi	r29, 0xFF	; 255
 2da:	cf ef       	ldi	r28, 0xFF	; 255
 2dc:	ec cf       	rjmp	.-40     	; 0x2b6 <puts+0x1c>
 2de:	8a e0       	ldi	r24, 0x0A	; 10
 2e0:	09 95       	icall
 2e2:	89 2b       	or	r24, r25
 2e4:	19 f0       	breq	.+6      	; 0x2ec <puts+0x52>
 2e6:	8f ef       	ldi	r24, 0xFF	; 255
 2e8:	9f ef       	ldi	r25, 0xFF	; 255
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <puts+0x56>
 2ec:	8d 2f       	mov	r24, r29
 2ee:	9c 2f       	mov	r25, r28
 2f0:	df 91       	pop	r29
 2f2:	cf 91       	pop	r28
 2f4:	1f 91       	pop	r17
 2f6:	0f 91       	pop	r16
 2f8:	08 95       	ret

000002fa <vfprintf>:
 2fa:	ab e0       	ldi	r26, 0x0B	; 11
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	e3 e8       	ldi	r30, 0x83	; 131
 300:	f1 e0       	ldi	r31, 0x01	; 1
 302:	0c 94 0e 04 	jmp	0x81c	; 0x81c <__prologue_saves__>
 306:	6c 01       	movw	r12, r24
 308:	7b 01       	movw	r14, r22
 30a:	8a 01       	movw	r16, r20
 30c:	fc 01       	movw	r30, r24
 30e:	17 82       	std	Z+7, r1	; 0x07
 310:	16 82       	std	Z+6, r1	; 0x06
 312:	83 81       	ldd	r24, Z+3	; 0x03
 314:	81 ff       	sbrs	r24, 1
 316:	cc c1       	rjmp	.+920    	; 0x6b0 <__LOCK_REGION_LENGTH__+0x2b0>
 318:	ce 01       	movw	r24, r28
 31a:	01 96       	adiw	r24, 0x01	; 1
 31c:	3c 01       	movw	r6, r24
 31e:	f6 01       	movw	r30, r12
 320:	93 81       	ldd	r25, Z+3	; 0x03
 322:	f7 01       	movw	r30, r14
 324:	93 fd       	sbrc	r25, 3
 326:	85 91       	lpm	r24, Z+
 328:	93 ff       	sbrs	r25, 3
 32a:	81 91       	ld	r24, Z+
 32c:	7f 01       	movw	r14, r30
 32e:	88 23       	and	r24, r24
 330:	09 f4       	brne	.+2      	; 0x334 <vfprintf+0x3a>
 332:	ba c1       	rjmp	.+884    	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 334:	85 32       	cpi	r24, 0x25	; 37
 336:	39 f4       	brne	.+14     	; 0x346 <vfprintf+0x4c>
 338:	93 fd       	sbrc	r25, 3
 33a:	85 91       	lpm	r24, Z+
 33c:	93 ff       	sbrs	r25, 3
 33e:	81 91       	ld	r24, Z+
 340:	7f 01       	movw	r14, r30
 342:	85 32       	cpi	r24, 0x25	; 37
 344:	29 f4       	brne	.+10     	; 0x350 <vfprintf+0x56>
 346:	b6 01       	movw	r22, r12
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 34e:	e7 cf       	rjmp	.-50     	; 0x31e <vfprintf+0x24>
 350:	91 2c       	mov	r9, r1
 352:	21 2c       	mov	r2, r1
 354:	31 2c       	mov	r3, r1
 356:	ff e1       	ldi	r31, 0x1F	; 31
 358:	f3 15       	cp	r31, r3
 35a:	d8 f0       	brcs	.+54     	; 0x392 <vfprintf+0x98>
 35c:	8b 32       	cpi	r24, 0x2B	; 43
 35e:	79 f0       	breq	.+30     	; 0x37e <vfprintf+0x84>
 360:	38 f4       	brcc	.+14     	; 0x370 <vfprintf+0x76>
 362:	80 32       	cpi	r24, 0x20	; 32
 364:	79 f0       	breq	.+30     	; 0x384 <vfprintf+0x8a>
 366:	83 32       	cpi	r24, 0x23	; 35
 368:	a1 f4       	brne	.+40     	; 0x392 <vfprintf+0x98>
 36a:	23 2d       	mov	r18, r3
 36c:	20 61       	ori	r18, 0x10	; 16
 36e:	1d c0       	rjmp	.+58     	; 0x3aa <vfprintf+0xb0>
 370:	8d 32       	cpi	r24, 0x2D	; 45
 372:	61 f0       	breq	.+24     	; 0x38c <vfprintf+0x92>
 374:	80 33       	cpi	r24, 0x30	; 48
 376:	69 f4       	brne	.+26     	; 0x392 <vfprintf+0x98>
 378:	23 2d       	mov	r18, r3
 37a:	21 60       	ori	r18, 0x01	; 1
 37c:	16 c0       	rjmp	.+44     	; 0x3aa <vfprintf+0xb0>
 37e:	83 2d       	mov	r24, r3
 380:	82 60       	ori	r24, 0x02	; 2
 382:	38 2e       	mov	r3, r24
 384:	e3 2d       	mov	r30, r3
 386:	e4 60       	ori	r30, 0x04	; 4
 388:	3e 2e       	mov	r3, r30
 38a:	2a c0       	rjmp	.+84     	; 0x3e0 <vfprintf+0xe6>
 38c:	f3 2d       	mov	r31, r3
 38e:	f8 60       	ori	r31, 0x08	; 8
 390:	1d c0       	rjmp	.+58     	; 0x3cc <vfprintf+0xd2>
 392:	37 fc       	sbrc	r3, 7
 394:	2d c0       	rjmp	.+90     	; 0x3f0 <vfprintf+0xf6>
 396:	20 ed       	ldi	r18, 0xD0	; 208
 398:	28 0f       	add	r18, r24
 39a:	2a 30       	cpi	r18, 0x0A	; 10
 39c:	40 f0       	brcs	.+16     	; 0x3ae <vfprintf+0xb4>
 39e:	8e 32       	cpi	r24, 0x2E	; 46
 3a0:	b9 f4       	brne	.+46     	; 0x3d0 <vfprintf+0xd6>
 3a2:	36 fc       	sbrc	r3, 6
 3a4:	81 c1       	rjmp	.+770    	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 3a6:	23 2d       	mov	r18, r3
 3a8:	20 64       	ori	r18, 0x40	; 64
 3aa:	32 2e       	mov	r3, r18
 3ac:	19 c0       	rjmp	.+50     	; 0x3e0 <vfprintf+0xe6>
 3ae:	36 fe       	sbrs	r3, 6
 3b0:	06 c0       	rjmp	.+12     	; 0x3be <vfprintf+0xc4>
 3b2:	8a e0       	ldi	r24, 0x0A	; 10
 3b4:	98 9e       	mul	r9, r24
 3b6:	20 0d       	add	r18, r0
 3b8:	11 24       	eor	r1, r1
 3ba:	92 2e       	mov	r9, r18
 3bc:	11 c0       	rjmp	.+34     	; 0x3e0 <vfprintf+0xe6>
 3be:	ea e0       	ldi	r30, 0x0A	; 10
 3c0:	2e 9e       	mul	r2, r30
 3c2:	20 0d       	add	r18, r0
 3c4:	11 24       	eor	r1, r1
 3c6:	22 2e       	mov	r2, r18
 3c8:	f3 2d       	mov	r31, r3
 3ca:	f0 62       	ori	r31, 0x20	; 32
 3cc:	3f 2e       	mov	r3, r31
 3ce:	08 c0       	rjmp	.+16     	; 0x3e0 <vfprintf+0xe6>
 3d0:	8c 36       	cpi	r24, 0x6C	; 108
 3d2:	21 f4       	brne	.+8      	; 0x3dc <vfprintf+0xe2>
 3d4:	83 2d       	mov	r24, r3
 3d6:	80 68       	ori	r24, 0x80	; 128
 3d8:	38 2e       	mov	r3, r24
 3da:	02 c0       	rjmp	.+4      	; 0x3e0 <vfprintf+0xe6>
 3dc:	88 36       	cpi	r24, 0x68	; 104
 3de:	41 f4       	brne	.+16     	; 0x3f0 <vfprintf+0xf6>
 3e0:	f7 01       	movw	r30, r14
 3e2:	93 fd       	sbrc	r25, 3
 3e4:	85 91       	lpm	r24, Z+
 3e6:	93 ff       	sbrs	r25, 3
 3e8:	81 91       	ld	r24, Z+
 3ea:	7f 01       	movw	r14, r30
 3ec:	81 11       	cpse	r24, r1
 3ee:	b3 cf       	rjmp	.-154    	; 0x356 <vfprintf+0x5c>
 3f0:	98 2f       	mov	r25, r24
 3f2:	9f 7d       	andi	r25, 0xDF	; 223
 3f4:	95 54       	subi	r25, 0x45	; 69
 3f6:	93 30       	cpi	r25, 0x03	; 3
 3f8:	28 f4       	brcc	.+10     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 3fa:	0c 5f       	subi	r16, 0xFC	; 252
 3fc:	1f 4f       	sbci	r17, 0xFF	; 255
 3fe:	9f e3       	ldi	r25, 0x3F	; 63
 400:	99 83       	std	Y+1, r25	; 0x01
 402:	0d c0       	rjmp	.+26     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 404:	83 36       	cpi	r24, 0x63	; 99
 406:	31 f0       	breq	.+12     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 408:	83 37       	cpi	r24, 0x73	; 115
 40a:	71 f0       	breq	.+28     	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
 40c:	83 35       	cpi	r24, 0x53	; 83
 40e:	09 f0       	breq	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 410:	59 c0       	rjmp	.+178    	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 412:	21 c0       	rjmp	.+66     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 414:	f8 01       	movw	r30, r16
 416:	80 81       	ld	r24, Z
 418:	89 83       	std	Y+1, r24	; 0x01
 41a:	0e 5f       	subi	r16, 0xFE	; 254
 41c:	1f 4f       	sbci	r17, 0xFF	; 255
 41e:	88 24       	eor	r8, r8
 420:	83 94       	inc	r8
 422:	91 2c       	mov	r9, r1
 424:	53 01       	movw	r10, r6
 426:	13 c0       	rjmp	.+38     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 428:	28 01       	movw	r4, r16
 42a:	f2 e0       	ldi	r31, 0x02	; 2
 42c:	4f 0e       	add	r4, r31
 42e:	51 1c       	adc	r5, r1
 430:	f8 01       	movw	r30, r16
 432:	a0 80       	ld	r10, Z
 434:	b1 80       	ldd	r11, Z+1	; 0x01
 436:	36 fe       	sbrs	r3, 6
 438:	03 c0       	rjmp	.+6      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
 43a:	69 2d       	mov	r22, r9
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	02 c0       	rjmp	.+4      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 440:	6f ef       	ldi	r22, 0xFF	; 255
 442:	7f ef       	ldi	r23, 0xFF	; 255
 444:	c5 01       	movw	r24, r10
 446:	0e 94 69 03 	call	0x6d2	; 0x6d2 <strnlen>
 44a:	4c 01       	movw	r8, r24
 44c:	82 01       	movw	r16, r4
 44e:	f3 2d       	mov	r31, r3
 450:	ff 77       	andi	r31, 0x7F	; 127
 452:	3f 2e       	mov	r3, r31
 454:	16 c0       	rjmp	.+44     	; 0x482 <__LOCK_REGION_LENGTH__+0x82>
 456:	28 01       	movw	r4, r16
 458:	22 e0       	ldi	r18, 0x02	; 2
 45a:	42 0e       	add	r4, r18
 45c:	51 1c       	adc	r5, r1
 45e:	f8 01       	movw	r30, r16
 460:	a0 80       	ld	r10, Z
 462:	b1 80       	ldd	r11, Z+1	; 0x01
 464:	36 fe       	sbrs	r3, 6
 466:	03 c0       	rjmp	.+6      	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 468:	69 2d       	mov	r22, r9
 46a:	70 e0       	ldi	r23, 0x00	; 0
 46c:	02 c0       	rjmp	.+4      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46e:	6f ef       	ldi	r22, 0xFF	; 255
 470:	7f ef       	ldi	r23, 0xFF	; 255
 472:	c5 01       	movw	r24, r10
 474:	0e 94 5e 03 	call	0x6bc	; 0x6bc <strnlen_P>
 478:	4c 01       	movw	r8, r24
 47a:	f3 2d       	mov	r31, r3
 47c:	f0 68       	ori	r31, 0x80	; 128
 47e:	3f 2e       	mov	r3, r31
 480:	82 01       	movw	r16, r4
 482:	33 fc       	sbrc	r3, 3
 484:	1b c0       	rjmp	.+54     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 486:	82 2d       	mov	r24, r2
 488:	90 e0       	ldi	r25, 0x00	; 0
 48a:	88 16       	cp	r8, r24
 48c:	99 06       	cpc	r9, r25
 48e:	b0 f4       	brcc	.+44     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 490:	b6 01       	movw	r22, r12
 492:	80 e2       	ldi	r24, 0x20	; 32
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 49a:	2a 94       	dec	r2
 49c:	f4 cf       	rjmp	.-24     	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 49e:	f5 01       	movw	r30, r10
 4a0:	37 fc       	sbrc	r3, 7
 4a2:	85 91       	lpm	r24, Z+
 4a4:	37 fe       	sbrs	r3, 7
 4a6:	81 91       	ld	r24, Z+
 4a8:	5f 01       	movw	r10, r30
 4aa:	b6 01       	movw	r22, r12
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 4b2:	21 10       	cpse	r2, r1
 4b4:	2a 94       	dec	r2
 4b6:	21 e0       	ldi	r18, 0x01	; 1
 4b8:	82 1a       	sub	r8, r18
 4ba:	91 08       	sbc	r9, r1
 4bc:	81 14       	cp	r8, r1
 4be:	91 04       	cpc	r9, r1
 4c0:	71 f7       	brne	.-36     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 4c2:	e8 c0       	rjmp	.+464    	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 4c4:	84 36       	cpi	r24, 0x64	; 100
 4c6:	11 f0       	breq	.+4      	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4c8:	89 36       	cpi	r24, 0x69	; 105
 4ca:	41 f5       	brne	.+80     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 4cc:	f8 01       	movw	r30, r16
 4ce:	37 fe       	sbrs	r3, 7
 4d0:	07 c0       	rjmp	.+14     	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 4d2:	60 81       	ld	r22, Z
 4d4:	71 81       	ldd	r23, Z+1	; 0x01
 4d6:	82 81       	ldd	r24, Z+2	; 0x02
 4d8:	93 81       	ldd	r25, Z+3	; 0x03
 4da:	0c 5f       	subi	r16, 0xFC	; 252
 4dc:	1f 4f       	sbci	r17, 0xFF	; 255
 4de:	08 c0       	rjmp	.+16     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
 4e0:	60 81       	ld	r22, Z
 4e2:	71 81       	ldd	r23, Z+1	; 0x01
 4e4:	07 2e       	mov	r0, r23
 4e6:	00 0c       	add	r0, r0
 4e8:	88 0b       	sbc	r24, r24
 4ea:	99 0b       	sbc	r25, r25
 4ec:	0e 5f       	subi	r16, 0xFE	; 254
 4ee:	1f 4f       	sbci	r17, 0xFF	; 255
 4f0:	f3 2d       	mov	r31, r3
 4f2:	ff 76       	andi	r31, 0x6F	; 111
 4f4:	3f 2e       	mov	r3, r31
 4f6:	97 ff       	sbrs	r25, 7
 4f8:	09 c0       	rjmp	.+18     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 4fa:	90 95       	com	r25
 4fc:	80 95       	com	r24
 4fe:	70 95       	com	r23
 500:	61 95       	neg	r22
 502:	7f 4f       	sbci	r23, 0xFF	; 255
 504:	8f 4f       	sbci	r24, 0xFF	; 255
 506:	9f 4f       	sbci	r25, 0xFF	; 255
 508:	f0 68       	ori	r31, 0x80	; 128
 50a:	3f 2e       	mov	r3, r31
 50c:	2a e0       	ldi	r18, 0x0A	; 10
 50e:	30 e0       	ldi	r19, 0x00	; 0
 510:	a3 01       	movw	r20, r6
 512:	0e 94 b0 03 	call	0x760	; 0x760 <__ultoa_invert>
 516:	88 2e       	mov	r8, r24
 518:	86 18       	sub	r8, r6
 51a:	45 c0       	rjmp	.+138    	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 51c:	85 37       	cpi	r24, 0x75	; 117
 51e:	31 f4       	brne	.+12     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 520:	23 2d       	mov	r18, r3
 522:	2f 7e       	andi	r18, 0xEF	; 239
 524:	b2 2e       	mov	r11, r18
 526:	2a e0       	ldi	r18, 0x0A	; 10
 528:	30 e0       	ldi	r19, 0x00	; 0
 52a:	25 c0       	rjmp	.+74     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 52c:	93 2d       	mov	r25, r3
 52e:	99 7f       	andi	r25, 0xF9	; 249
 530:	b9 2e       	mov	r11, r25
 532:	8f 36       	cpi	r24, 0x6F	; 111
 534:	c1 f0       	breq	.+48     	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
 536:	18 f4       	brcc	.+6      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 538:	88 35       	cpi	r24, 0x58	; 88
 53a:	79 f0       	breq	.+30     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
 53c:	b5 c0       	rjmp	.+362    	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 53e:	80 37       	cpi	r24, 0x70	; 112
 540:	19 f0       	breq	.+6      	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 542:	88 37       	cpi	r24, 0x78	; 120
 544:	21 f0       	breq	.+8      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 546:	b0 c0       	rjmp	.+352    	; 0x6a8 <__LOCK_REGION_LENGTH__+0x2a8>
 548:	e9 2f       	mov	r30, r25
 54a:	e0 61       	ori	r30, 0x10	; 16
 54c:	be 2e       	mov	r11, r30
 54e:	b4 fe       	sbrs	r11, 4
 550:	0d c0       	rjmp	.+26     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 552:	fb 2d       	mov	r31, r11
 554:	f4 60       	ori	r31, 0x04	; 4
 556:	bf 2e       	mov	r11, r31
 558:	09 c0       	rjmp	.+18     	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 55a:	34 fe       	sbrs	r3, 4
 55c:	0a c0       	rjmp	.+20     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 55e:	29 2f       	mov	r18, r25
 560:	26 60       	ori	r18, 0x06	; 6
 562:	b2 2e       	mov	r11, r18
 564:	06 c0       	rjmp	.+12     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 566:	28 e0       	ldi	r18, 0x08	; 8
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	05 c0       	rjmp	.+10     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 56c:	20 e1       	ldi	r18, 0x10	; 16
 56e:	30 e0       	ldi	r19, 0x00	; 0
 570:	02 c0       	rjmp	.+4      	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 572:	20 e1       	ldi	r18, 0x10	; 16
 574:	32 e0       	ldi	r19, 0x02	; 2
 576:	f8 01       	movw	r30, r16
 578:	b7 fe       	sbrs	r11, 7
 57a:	07 c0       	rjmp	.+14     	; 0x58a <__LOCK_REGION_LENGTH__+0x18a>
 57c:	60 81       	ld	r22, Z
 57e:	71 81       	ldd	r23, Z+1	; 0x01
 580:	82 81       	ldd	r24, Z+2	; 0x02
 582:	93 81       	ldd	r25, Z+3	; 0x03
 584:	0c 5f       	subi	r16, 0xFC	; 252
 586:	1f 4f       	sbci	r17, 0xFF	; 255
 588:	06 c0       	rjmp	.+12     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 58a:	60 81       	ld	r22, Z
 58c:	71 81       	ldd	r23, Z+1	; 0x01
 58e:	80 e0       	ldi	r24, 0x00	; 0
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	0e 5f       	subi	r16, 0xFE	; 254
 594:	1f 4f       	sbci	r17, 0xFF	; 255
 596:	a3 01       	movw	r20, r6
 598:	0e 94 b0 03 	call	0x760	; 0x760 <__ultoa_invert>
 59c:	88 2e       	mov	r8, r24
 59e:	86 18       	sub	r8, r6
 5a0:	fb 2d       	mov	r31, r11
 5a2:	ff 77       	andi	r31, 0x7F	; 127
 5a4:	3f 2e       	mov	r3, r31
 5a6:	36 fe       	sbrs	r3, 6
 5a8:	0d c0       	rjmp	.+26     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5aa:	23 2d       	mov	r18, r3
 5ac:	2e 7f       	andi	r18, 0xFE	; 254
 5ae:	a2 2e       	mov	r10, r18
 5b0:	89 14       	cp	r8, r9
 5b2:	58 f4       	brcc	.+22     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5b4:	34 fe       	sbrs	r3, 4
 5b6:	0b c0       	rjmp	.+22     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5b8:	32 fc       	sbrc	r3, 2
 5ba:	09 c0       	rjmp	.+18     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5bc:	83 2d       	mov	r24, r3
 5be:	8e 7e       	andi	r24, 0xEE	; 238
 5c0:	a8 2e       	mov	r10, r24
 5c2:	05 c0       	rjmp	.+10     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5c4:	b8 2c       	mov	r11, r8
 5c6:	a3 2c       	mov	r10, r3
 5c8:	03 c0       	rjmp	.+6      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5ca:	b8 2c       	mov	r11, r8
 5cc:	01 c0       	rjmp	.+2      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5ce:	b9 2c       	mov	r11, r9
 5d0:	a4 fe       	sbrs	r10, 4
 5d2:	0f c0       	rjmp	.+30     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d4:	fe 01       	movw	r30, r28
 5d6:	e8 0d       	add	r30, r8
 5d8:	f1 1d       	adc	r31, r1
 5da:	80 81       	ld	r24, Z
 5dc:	80 33       	cpi	r24, 0x30	; 48
 5de:	21 f4       	brne	.+8      	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
 5e0:	9a 2d       	mov	r25, r10
 5e2:	99 7e       	andi	r25, 0xE9	; 233
 5e4:	a9 2e       	mov	r10, r25
 5e6:	09 c0       	rjmp	.+18     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5e8:	a2 fe       	sbrs	r10, 2
 5ea:	06 c0       	rjmp	.+12     	; 0x5f8 <__LOCK_REGION_LENGTH__+0x1f8>
 5ec:	b3 94       	inc	r11
 5ee:	b3 94       	inc	r11
 5f0:	04 c0       	rjmp	.+8      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f2:	8a 2d       	mov	r24, r10
 5f4:	86 78       	andi	r24, 0x86	; 134
 5f6:	09 f0       	breq	.+2      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f8:	b3 94       	inc	r11
 5fa:	a3 fc       	sbrc	r10, 3
 5fc:	11 c0       	rjmp	.+34     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 5fe:	a0 fe       	sbrs	r10, 0
 600:	06 c0       	rjmp	.+12     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 602:	b2 14       	cp	r11, r2
 604:	88 f4       	brcc	.+34     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 606:	28 0c       	add	r2, r8
 608:	92 2c       	mov	r9, r2
 60a:	9b 18       	sub	r9, r11
 60c:	0e c0       	rjmp	.+28     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 60e:	b2 14       	cp	r11, r2
 610:	60 f4       	brcc	.+24     	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 612:	b6 01       	movw	r22, r12
 614:	80 e2       	ldi	r24, 0x20	; 32
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 61c:	b3 94       	inc	r11
 61e:	f7 cf       	rjmp	.-18     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 620:	b2 14       	cp	r11, r2
 622:	18 f4       	brcc	.+6      	; 0x62a <__LOCK_REGION_LENGTH__+0x22a>
 624:	2b 18       	sub	r2, r11
 626:	02 c0       	rjmp	.+4      	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 628:	98 2c       	mov	r9, r8
 62a:	21 2c       	mov	r2, r1
 62c:	a4 fe       	sbrs	r10, 4
 62e:	10 c0       	rjmp	.+32     	; 0x650 <__LOCK_REGION_LENGTH__+0x250>
 630:	b6 01       	movw	r22, r12
 632:	80 e3       	ldi	r24, 0x30	; 48
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 63a:	a2 fe       	sbrs	r10, 2
 63c:	17 c0       	rjmp	.+46     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 63e:	a1 fc       	sbrc	r10, 1
 640:	03 c0       	rjmp	.+6      	; 0x648 <__LOCK_REGION_LENGTH__+0x248>
 642:	88 e7       	ldi	r24, 0x78	; 120
 644:	90 e0       	ldi	r25, 0x00	; 0
 646:	02 c0       	rjmp	.+4      	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 648:	88 e5       	ldi	r24, 0x58	; 88
 64a:	90 e0       	ldi	r25, 0x00	; 0
 64c:	b6 01       	movw	r22, r12
 64e:	0c c0       	rjmp	.+24     	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 650:	8a 2d       	mov	r24, r10
 652:	86 78       	andi	r24, 0x86	; 134
 654:	59 f0       	breq	.+22     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 656:	a1 fe       	sbrs	r10, 1
 658:	02 c0       	rjmp	.+4      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 65a:	8b e2       	ldi	r24, 0x2B	; 43
 65c:	01 c0       	rjmp	.+2      	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 65e:	80 e2       	ldi	r24, 0x20	; 32
 660:	a7 fc       	sbrc	r10, 7
 662:	8d e2       	ldi	r24, 0x2D	; 45
 664:	b6 01       	movw	r22, r12
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 66c:	89 14       	cp	r8, r9
 66e:	38 f4       	brcc	.+14     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 670:	b6 01       	movw	r22, r12
 672:	80 e3       	ldi	r24, 0x30	; 48
 674:	90 e0       	ldi	r25, 0x00	; 0
 676:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 67a:	9a 94       	dec	r9
 67c:	f7 cf       	rjmp	.-18     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 67e:	8a 94       	dec	r8
 680:	f3 01       	movw	r30, r6
 682:	e8 0d       	add	r30, r8
 684:	f1 1d       	adc	r31, r1
 686:	80 81       	ld	r24, Z
 688:	b6 01       	movw	r22, r12
 68a:	90 e0       	ldi	r25, 0x00	; 0
 68c:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 690:	81 10       	cpse	r8, r1
 692:	f5 cf       	rjmp	.-22     	; 0x67e <__LOCK_REGION_LENGTH__+0x27e>
 694:	22 20       	and	r2, r2
 696:	09 f4       	brne	.+2      	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 698:	42 ce       	rjmp	.-892    	; 0x31e <vfprintf+0x24>
 69a:	b6 01       	movw	r22, r12
 69c:	80 e2       	ldi	r24, 0x20	; 32
 69e:	90 e0       	ldi	r25, 0x00	; 0
 6a0:	0e 94 74 03 	call	0x6e8	; 0x6e8 <fputc>
 6a4:	2a 94       	dec	r2
 6a6:	f6 cf       	rjmp	.-20     	; 0x694 <__LOCK_REGION_LENGTH__+0x294>
 6a8:	f6 01       	movw	r30, r12
 6aa:	86 81       	ldd	r24, Z+6	; 0x06
 6ac:	97 81       	ldd	r25, Z+7	; 0x07
 6ae:	02 c0       	rjmp	.+4      	; 0x6b4 <__LOCK_REGION_LENGTH__+0x2b4>
 6b0:	8f ef       	ldi	r24, 0xFF	; 255
 6b2:	9f ef       	ldi	r25, 0xFF	; 255
 6b4:	2b 96       	adiw	r28, 0x0b	; 11
 6b6:	e2 e1       	ldi	r30, 0x12	; 18
 6b8:	0c 94 2a 04 	jmp	0x854	; 0x854 <__epilogue_restores__>

000006bc <strnlen_P>:
 6bc:	fc 01       	movw	r30, r24
 6be:	05 90       	lpm	r0, Z+
 6c0:	61 50       	subi	r22, 0x01	; 1
 6c2:	70 40       	sbci	r23, 0x00	; 0
 6c4:	01 10       	cpse	r0, r1
 6c6:	d8 f7       	brcc	.-10     	; 0x6be <strnlen_P+0x2>
 6c8:	80 95       	com	r24
 6ca:	90 95       	com	r25
 6cc:	8e 0f       	add	r24, r30
 6ce:	9f 1f       	adc	r25, r31
 6d0:	08 95       	ret

000006d2 <strnlen>:
 6d2:	fc 01       	movw	r30, r24
 6d4:	61 50       	subi	r22, 0x01	; 1
 6d6:	70 40       	sbci	r23, 0x00	; 0
 6d8:	01 90       	ld	r0, Z+
 6da:	01 10       	cpse	r0, r1
 6dc:	d8 f7       	brcc	.-10     	; 0x6d4 <strnlen+0x2>
 6de:	80 95       	com	r24
 6e0:	90 95       	com	r25
 6e2:	8e 0f       	add	r24, r30
 6e4:	9f 1f       	adc	r25, r31
 6e6:	08 95       	ret

000006e8 <fputc>:
 6e8:	0f 93       	push	r16
 6ea:	1f 93       	push	r17
 6ec:	cf 93       	push	r28
 6ee:	df 93       	push	r29
 6f0:	fb 01       	movw	r30, r22
 6f2:	23 81       	ldd	r18, Z+3	; 0x03
 6f4:	21 fd       	sbrc	r18, 1
 6f6:	03 c0       	rjmp	.+6      	; 0x6fe <fputc+0x16>
 6f8:	8f ef       	ldi	r24, 0xFF	; 255
 6fa:	9f ef       	ldi	r25, 0xFF	; 255
 6fc:	2c c0       	rjmp	.+88     	; 0x756 <fputc+0x6e>
 6fe:	22 ff       	sbrs	r18, 2
 700:	16 c0       	rjmp	.+44     	; 0x72e <fputc+0x46>
 702:	46 81       	ldd	r20, Z+6	; 0x06
 704:	57 81       	ldd	r21, Z+7	; 0x07
 706:	24 81       	ldd	r18, Z+4	; 0x04
 708:	35 81       	ldd	r19, Z+5	; 0x05
 70a:	42 17       	cp	r20, r18
 70c:	53 07       	cpc	r21, r19
 70e:	44 f4       	brge	.+16     	; 0x720 <fputc+0x38>
 710:	a0 81       	ld	r26, Z
 712:	b1 81       	ldd	r27, Z+1	; 0x01
 714:	9d 01       	movw	r18, r26
 716:	2f 5f       	subi	r18, 0xFF	; 255
 718:	3f 4f       	sbci	r19, 0xFF	; 255
 71a:	31 83       	std	Z+1, r19	; 0x01
 71c:	20 83       	st	Z, r18
 71e:	8c 93       	st	X, r24
 720:	26 81       	ldd	r18, Z+6	; 0x06
 722:	37 81       	ldd	r19, Z+7	; 0x07
 724:	2f 5f       	subi	r18, 0xFF	; 255
 726:	3f 4f       	sbci	r19, 0xFF	; 255
 728:	37 83       	std	Z+7, r19	; 0x07
 72a:	26 83       	std	Z+6, r18	; 0x06
 72c:	14 c0       	rjmp	.+40     	; 0x756 <fputc+0x6e>
 72e:	8b 01       	movw	r16, r22
 730:	ec 01       	movw	r28, r24
 732:	fb 01       	movw	r30, r22
 734:	00 84       	ldd	r0, Z+8	; 0x08
 736:	f1 85       	ldd	r31, Z+9	; 0x09
 738:	e0 2d       	mov	r30, r0
 73a:	09 95       	icall
 73c:	89 2b       	or	r24, r25
 73e:	e1 f6       	brne	.-72     	; 0x6f8 <fputc+0x10>
 740:	d8 01       	movw	r26, r16
 742:	16 96       	adiw	r26, 0x06	; 6
 744:	8d 91       	ld	r24, X+
 746:	9c 91       	ld	r25, X
 748:	17 97       	sbiw	r26, 0x07	; 7
 74a:	01 96       	adiw	r24, 0x01	; 1
 74c:	17 96       	adiw	r26, 0x07	; 7
 74e:	9c 93       	st	X, r25
 750:	8e 93       	st	-X, r24
 752:	16 97       	sbiw	r26, 0x06	; 6
 754:	ce 01       	movw	r24, r28
 756:	df 91       	pop	r29
 758:	cf 91       	pop	r28
 75a:	1f 91       	pop	r17
 75c:	0f 91       	pop	r16
 75e:	08 95       	ret

00000760 <__ultoa_invert>:
 760:	fa 01       	movw	r30, r20
 762:	aa 27       	eor	r26, r26
 764:	28 30       	cpi	r18, 0x08	; 8
 766:	51 f1       	breq	.+84     	; 0x7bc <__ultoa_invert+0x5c>
 768:	20 31       	cpi	r18, 0x10	; 16
 76a:	81 f1       	breq	.+96     	; 0x7cc <__ultoa_invert+0x6c>
 76c:	e8 94       	clt
 76e:	6f 93       	push	r22
 770:	6e 7f       	andi	r22, 0xFE	; 254
 772:	6e 5f       	subi	r22, 0xFE	; 254
 774:	7f 4f       	sbci	r23, 0xFF	; 255
 776:	8f 4f       	sbci	r24, 0xFF	; 255
 778:	9f 4f       	sbci	r25, 0xFF	; 255
 77a:	af 4f       	sbci	r26, 0xFF	; 255
 77c:	b1 e0       	ldi	r27, 0x01	; 1
 77e:	3e d0       	rcall	.+124    	; 0x7fc <__ultoa_invert+0x9c>
 780:	b4 e0       	ldi	r27, 0x04	; 4
 782:	3c d0       	rcall	.+120    	; 0x7fc <__ultoa_invert+0x9c>
 784:	67 0f       	add	r22, r23
 786:	78 1f       	adc	r23, r24
 788:	89 1f       	adc	r24, r25
 78a:	9a 1f       	adc	r25, r26
 78c:	a1 1d       	adc	r26, r1
 78e:	68 0f       	add	r22, r24
 790:	79 1f       	adc	r23, r25
 792:	8a 1f       	adc	r24, r26
 794:	91 1d       	adc	r25, r1
 796:	a1 1d       	adc	r26, r1
 798:	6a 0f       	add	r22, r26
 79a:	71 1d       	adc	r23, r1
 79c:	81 1d       	adc	r24, r1
 79e:	91 1d       	adc	r25, r1
 7a0:	a1 1d       	adc	r26, r1
 7a2:	20 d0       	rcall	.+64     	; 0x7e4 <__ultoa_invert+0x84>
 7a4:	09 f4       	brne	.+2      	; 0x7a8 <__ultoa_invert+0x48>
 7a6:	68 94       	set
 7a8:	3f 91       	pop	r19
 7aa:	2a e0       	ldi	r18, 0x0A	; 10
 7ac:	26 9f       	mul	r18, r22
 7ae:	11 24       	eor	r1, r1
 7b0:	30 19       	sub	r19, r0
 7b2:	30 5d       	subi	r19, 0xD0	; 208
 7b4:	31 93       	st	Z+, r19
 7b6:	de f6       	brtc	.-74     	; 0x76e <__ultoa_invert+0xe>
 7b8:	cf 01       	movw	r24, r30
 7ba:	08 95       	ret
 7bc:	46 2f       	mov	r20, r22
 7be:	47 70       	andi	r20, 0x07	; 7
 7c0:	40 5d       	subi	r20, 0xD0	; 208
 7c2:	41 93       	st	Z+, r20
 7c4:	b3 e0       	ldi	r27, 0x03	; 3
 7c6:	0f d0       	rcall	.+30     	; 0x7e6 <__ultoa_invert+0x86>
 7c8:	c9 f7       	brne	.-14     	; 0x7bc <__ultoa_invert+0x5c>
 7ca:	f6 cf       	rjmp	.-20     	; 0x7b8 <__ultoa_invert+0x58>
 7cc:	46 2f       	mov	r20, r22
 7ce:	4f 70       	andi	r20, 0x0F	; 15
 7d0:	40 5d       	subi	r20, 0xD0	; 208
 7d2:	4a 33       	cpi	r20, 0x3A	; 58
 7d4:	18 f0       	brcs	.+6      	; 0x7dc <__ultoa_invert+0x7c>
 7d6:	49 5d       	subi	r20, 0xD9	; 217
 7d8:	31 fd       	sbrc	r19, 1
 7da:	40 52       	subi	r20, 0x20	; 32
 7dc:	41 93       	st	Z+, r20
 7de:	02 d0       	rcall	.+4      	; 0x7e4 <__ultoa_invert+0x84>
 7e0:	a9 f7       	brne	.-22     	; 0x7cc <__ultoa_invert+0x6c>
 7e2:	ea cf       	rjmp	.-44     	; 0x7b8 <__ultoa_invert+0x58>
 7e4:	b4 e0       	ldi	r27, 0x04	; 4
 7e6:	a6 95       	lsr	r26
 7e8:	97 95       	ror	r25
 7ea:	87 95       	ror	r24
 7ec:	77 95       	ror	r23
 7ee:	67 95       	ror	r22
 7f0:	ba 95       	dec	r27
 7f2:	c9 f7       	brne	.-14     	; 0x7e6 <__ultoa_invert+0x86>
 7f4:	00 97       	sbiw	r24, 0x00	; 0
 7f6:	61 05       	cpc	r22, r1
 7f8:	71 05       	cpc	r23, r1
 7fa:	08 95       	ret
 7fc:	9b 01       	movw	r18, r22
 7fe:	ac 01       	movw	r20, r24
 800:	0a 2e       	mov	r0, r26
 802:	06 94       	lsr	r0
 804:	57 95       	ror	r21
 806:	47 95       	ror	r20
 808:	37 95       	ror	r19
 80a:	27 95       	ror	r18
 80c:	ba 95       	dec	r27
 80e:	c9 f7       	brne	.-14     	; 0x802 <__ultoa_invert+0xa2>
 810:	62 0f       	add	r22, r18
 812:	73 1f       	adc	r23, r19
 814:	84 1f       	adc	r24, r20
 816:	95 1f       	adc	r25, r21
 818:	a0 1d       	adc	r26, r0
 81a:	08 95       	ret

0000081c <__prologue_saves__>:
 81c:	2f 92       	push	r2
 81e:	3f 92       	push	r3
 820:	4f 92       	push	r4
 822:	5f 92       	push	r5
 824:	6f 92       	push	r6
 826:	7f 92       	push	r7
 828:	8f 92       	push	r8
 82a:	9f 92       	push	r9
 82c:	af 92       	push	r10
 82e:	bf 92       	push	r11
 830:	cf 92       	push	r12
 832:	df 92       	push	r13
 834:	ef 92       	push	r14
 836:	ff 92       	push	r15
 838:	0f 93       	push	r16
 83a:	1f 93       	push	r17
 83c:	cf 93       	push	r28
 83e:	df 93       	push	r29
 840:	cd b7       	in	r28, 0x3d	; 61
 842:	de b7       	in	r29, 0x3e	; 62
 844:	ca 1b       	sub	r28, r26
 846:	db 0b       	sbc	r29, r27
 848:	0f b6       	in	r0, 0x3f	; 63
 84a:	f8 94       	cli
 84c:	de bf       	out	0x3e, r29	; 62
 84e:	0f be       	out	0x3f, r0	; 63
 850:	cd bf       	out	0x3d, r28	; 61
 852:	09 94       	ijmp

00000854 <__epilogue_restores__>:
 854:	2a 88       	ldd	r2, Y+18	; 0x12
 856:	39 88       	ldd	r3, Y+17	; 0x11
 858:	48 88       	ldd	r4, Y+16	; 0x10
 85a:	5f 84       	ldd	r5, Y+15	; 0x0f
 85c:	6e 84       	ldd	r6, Y+14	; 0x0e
 85e:	7d 84       	ldd	r7, Y+13	; 0x0d
 860:	8c 84       	ldd	r8, Y+12	; 0x0c
 862:	9b 84       	ldd	r9, Y+11	; 0x0b
 864:	aa 84       	ldd	r10, Y+10	; 0x0a
 866:	b9 84       	ldd	r11, Y+9	; 0x09
 868:	c8 84       	ldd	r12, Y+8	; 0x08
 86a:	df 80       	ldd	r13, Y+7	; 0x07
 86c:	ee 80       	ldd	r14, Y+6	; 0x06
 86e:	fd 80       	ldd	r15, Y+5	; 0x05
 870:	0c 81       	ldd	r16, Y+4	; 0x04
 872:	1b 81       	ldd	r17, Y+3	; 0x03
 874:	aa 81       	ldd	r26, Y+2	; 0x02
 876:	b9 81       	ldd	r27, Y+1	; 0x01
 878:	ce 0f       	add	r28, r30
 87a:	d1 1d       	adc	r29, r1
 87c:	0f b6       	in	r0, 0x3f	; 63
 87e:	f8 94       	cli
 880:	de bf       	out	0x3e, r29	; 62
 882:	0f be       	out	0x3f, r0	; 63
 884:	cd bf       	out	0x3d, r28	; 61
 886:	ed 01       	movw	r28, r26
 888:	08 95       	ret

0000088a <_exit>:
 88a:	f8 94       	cli

0000088c <__stop_program>:
 88c:	ff cf       	rjmp	.-2      	; 0x88c <__stop_program>
