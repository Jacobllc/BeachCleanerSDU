
Final_implem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004a  00800100  00001428  000014bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001428  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000034  0080014a  0080014a  00001506  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001506  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001564  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001f0  00000000  00000000  000015a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001712  00000000  00000000  00001794  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ced  00000000  00000000  00002ea6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fa0  00000000  00000000  00003b93  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000448  00000000  00000000  00004b34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b4  00000000  00000000  00004f7c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006c9  00000000  00000000  00005730  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00005df9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 3a 04 	jmp	0x874	; 0x874 <__vector_11>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 30 01 	jmp	0x260	; 0x260 <__vector_24>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e2       	ldi	r30, 0x28	; 40
      7c:	f4 e1       	ldi	r31, 0x14	; 20
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 34       	cpi	r26, 0x4A	; 74
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	aa e4       	ldi	r26, 0x4A	; 74
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ae 37       	cpi	r26, 0x7E	; 126
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 86 01 	call	0x30c	; 0x30c <main>
      9e:	0c 94 12 0a 	jmp	0x1424	; 0x1424 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Enable_ADC>:
#include <stdio.h>
#include "ADC_Setup.h"

void Enable_ADC(void)
{	
	ADMUX = (1<<REFS0); // Select Vref = AVcc
      a6:	80 e4       	ldi	r24, 0x40	; 64
      a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADEN);	
      ac:	87 e8       	ldi	r24, 0x87	; 135
      ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
      b2:	08 95       	ret

000000b4 <adc_read>:
}

uint16_t adc_read(uint8_t adc_channel){
	//printf("Reset ADC\n");
	ADMUX &= 0xf0; // clear any prev used channael but keep internal reference
      b4:	ec e7       	ldi	r30, 0x7C	; 124
      b6:	f0 e0       	ldi	r31, 0x00	; 0
      b8:	90 81       	ld	r25, Z
      ba:	90 7f       	andi	r25, 0xF0	; 240
      bc:	90 83       	st	Z, r25
	//printf("Set Channel\n");
	ADMUX |= adc_channel; // set the desired channel
      be:	90 81       	ld	r25, Z
      c0:	89 2b       	or	r24, r25
      c2:	80 83       	st	Z, r24
	//printf("Start Conversion\n");
	ADCSRA |= (1<<ADSC);
      c4:	ea e7       	ldi	r30, 0x7A	; 122
      c6:	f0 e0       	ldi	r31, 0x00	; 0
      c8:	80 81       	ld	r24, Z
      ca:	80 64       	ori	r24, 0x40	; 64
      cc:	80 83       	st	Z, r24
	// now wait for the convresion
	
	ADC_Channel++;       //go trough the channels
      ce:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <ADC_Channel>
      d2:	8f 5f       	subi	r24, 0xFF	; 255
	if(ADC_Channel >3)
      d4:	84 30       	cpi	r24, 0x04	; 4
      d6:	18 f4       	brcc	.+6      	; 0xde <adc_read+0x2a>
	ADMUX |= adc_channel; // set the desired channel
	//printf("Start Conversion\n");
	ADCSRA |= (1<<ADSC);
	// now wait for the convresion
	
	ADC_Channel++;       //go trough the channels
      d8:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <ADC_Channel>
      dc:	02 c0       	rjmp	.+4      	; 0xe2 <adc_read+0x2e>
	if(ADC_Channel >3)
	ADC_Channel = 0;   // start over everytime is called
      de:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <ADC_Channel>

	
	while( (ADCSRA & (1<<ADSC)));	
      e2:	ea e7       	ldi	r30, 0x7A	; 122
      e4:	f0 e0       	ldi	r31, 0x00	; 0
      e6:	80 81       	ld	r24, Z
      e8:	86 fd       	sbrc	r24, 6
      ea:	fd cf       	rjmp	.-6      	; 0xe6 <adc_read+0x32>
	// now we have result so return it to the calling function
	return ADC;
      ec:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
      f0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
      f4:	08 95       	ret

000000f6 <Calculate_ADC>:

void Calculate_ADC(void)
{
      f6:	cf 92       	push	r12
      f8:	df 92       	push	r13
      fa:	ef 92       	push	r14
      fc:	ff 92       	push	r15
      fe:	cf 93       	push	r28
     100:	df 93       	push	r29
		adc_result = adc_read(ADC_Channel);
     102:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <ADC_Channel>
     106:	0e 94 5a 00 	call	0xb4	; 0xb4 <adc_read>
     10a:	bc 01       	movw	r22, r24
     10c:	80 e0       	ldi	r24, 0x00	; 0
     10e:	90 e0       	ldi	r25, 0x00	; 0
     110:	0e 94 ed 05 	call	0xbda	; 0xbda <__floatunsisf>
     114:	6b 01       	movw	r12, r22
     116:	7c 01       	movw	r14, r24
     118:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <adc_result>
     11c:	70 93 5d 01 	sts	0x015D, r23	; 0x80015d <adc_result+0x1>
     120:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <adc_result+0x2>
     124:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <adc_result+0x3>
		
		if (adc_result==0)
     128:	20 e0       	ldi	r18, 0x00	; 0
     12a:	30 e0       	ldi	r19, 0x00	; 0
     12c:	a9 01       	movw	r20, r18
     12e:	0e 94 40 05 	call	0xa80	; 0xa80 <__cmpsf2>
     132:	81 11       	cpse	r24, r1
     134:	09 c0       	rjmp	.+18     	; 0x148 <Calculate_ADC+0x52>
		{
			adcc1=0;
     136:	10 92 52 01 	sts	0x0152, r1	; 0x800152 <adcc1>
     13a:	10 92 53 01 	sts	0x0153, r1	; 0x800153 <adcc1+0x1>
     13e:	10 92 54 01 	sts	0x0154, r1	; 0x800154 <adcc1+0x2>
     142:	10 92 55 01 	sts	0x0155, r1	; 0x800155 <adcc1+0x3>
     146:	35 c0       	rjmp	.+106    	; 0x1b2 <Calculate_ADC+0xbc>
		}
		else
		{
			adcv1= (adc_result/1023)*5000;
     148:	20 e0       	ldi	r18, 0x00	; 0
     14a:	30 ec       	ldi	r19, 0xC0	; 192
     14c:	4f e7       	ldi	r20, 0x7F	; 127
     14e:	54 e4       	ldi	r21, 0x44	; 68
     150:	c7 01       	movw	r24, r14
     152:	b6 01       	movw	r22, r12
     154:	0e 94 45 05 	call	0xa8a	; 0xa8a <__divsf3>
     158:	20 e0       	ldi	r18, 0x00	; 0
     15a:	30 e4       	ldi	r19, 0x40	; 64
     15c:	4c e9       	ldi	r20, 0x9C	; 156
     15e:	55 e4       	ldi	r21, 0x45	; 69
     160:	0e 94 9f 06 	call	0xd3e	; 0xd3e <__mulsf3>
     164:	60 93 58 01 	sts	0x0158, r22	; 0x800158 <adcv1>
     168:	70 93 59 01 	sts	0x0159, r23	; 0x800159 <adcv1+0x1>
     16c:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <adcv1+0x2>
     170:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <adcv1+0x3>
			adcc1 = ((adcv1-2500)/100);
     174:	20 e0       	ldi	r18, 0x00	; 0
     176:	30 e4       	ldi	r19, 0x40	; 64
     178:	4c e1       	ldi	r20, 0x1C	; 28
     17a:	55 e4       	ldi	r21, 0x45	; 69
     17c:	0e 94 d3 04 	call	0x9a6	; 0x9a6 <__subsf3>
     180:	20 e0       	ldi	r18, 0x00	; 0
     182:	30 e0       	ldi	r19, 0x00	; 0
     184:	48 ec       	ldi	r20, 0xC8	; 200
     186:	52 e4       	ldi	r21, 0x42	; 66
     188:	0e 94 45 05 	call	0xa8a	; 0xa8a <__divsf3>
     18c:	60 93 52 01 	sts	0x0152, r22	; 0x800152 <adcc1>
     190:	70 93 53 01 	sts	0x0153, r23	; 0x800153 <adcc1+0x1>
     194:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <adcc1+0x2>
     198:	90 93 55 01 	sts	0x0155, r25	; 0x800155 <adcc1+0x3>
			mes [ADC_Channel] = adcc1;
     19c:	c0 91 56 01 	lds	r28, 0x0156	; 0x800156 <ADC_Channel>
     1a0:	d0 e0       	ldi	r29, 0x00	; 0
     1a2:	cc 0f       	add	r28, r28
     1a4:	dd 1f       	adc	r29, r29
     1a6:	c0 5a       	subi	r28, 0xA0	; 160
     1a8:	de 4f       	sbci	r29, 0xFE	; 254
     1aa:	0e 94 b7 05 	call	0xb6e	; 0xb6e <__fixsfsi>
     1ae:	79 83       	std	Y+1, r23	; 0x01
     1b0:	68 83       	st	Y, r22
		}
		
		printf("Channel: %d \t ADC value: %.1f \t Result:  %d \n",ADMUX, adc_result, mes[ADC_Channel]);
     1b2:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     1b6:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <ADC_Channel>
     1ba:	f0 e0       	ldi	r31, 0x00	; 0
     1bc:	ee 0f       	add	r30, r30
     1be:	ff 1f       	adc	r31, r31
     1c0:	e0 5a       	subi	r30, 0xA0	; 160
     1c2:	fe 4f       	sbci	r31, 0xFE	; 254
     1c4:	91 81       	ldd	r25, Z+1	; 0x01
     1c6:	9f 93       	push	r25
     1c8:	90 81       	ld	r25, Z
     1ca:	9f 93       	push	r25
     1cc:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <adc_result+0x3>
     1d0:	9f 93       	push	r25
     1d2:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <adc_result+0x2>
     1d6:	9f 93       	push	r25
     1d8:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <adc_result+0x1>
     1dc:	9f 93       	push	r25
     1de:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <adc_result>
     1e2:	9f 93       	push	r25
     1e4:	1f 92       	push	r1
     1e6:	8f 93       	push	r24
     1e8:	8c e1       	ldi	r24, 0x1C	; 28
     1ea:	91 e0       	ldi	r25, 0x01	; 1
     1ec:	9f 93       	push	r25
     1ee:	8f 93       	push	r24
     1f0:	0e 94 34 07 	call	0xe68	; 0xe68 <printf>
     1f4:	8d b7       	in	r24, 0x3d	; 61
     1f6:	9e b7       	in	r25, 0x3e	; 62
     1f8:	0a 96       	adiw	r24, 0x0a	; 10
     1fa:	0f b6       	in	r0, 0x3f	; 63
     1fc:	f8 94       	cli
     1fe:	9e bf       	out	0x3e, r25	; 62
     200:	0f be       	out	0x3f, r0	; 63
     202:	8d bf       	out	0x3d, r24	; 61
     204:	df 91       	pop	r29
     206:	cf 91       	pop	r28
     208:	ff 90       	pop	r15
     20a:	ef 90       	pop	r14
     20c:	df 90       	pop	r13
     20e:	cf 90       	pop	r12
     210:	08 95       	ret

00000212 <I2C_recieve>:
		sei();
}

void i2c_transmit_data(uint8_t data)
{		
	TWDR = data;
     212:	cf 93       	push	r28
     214:	c8 2f       	mov	r28, r24
     216:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <bytes>
     21a:	81 11       	cpse	r24, r1
     21c:	06 c0       	rjmp	.+12     	; 0x22a <I2C_recieve+0x18>
     21e:	c0 93 6c 01 	sts	0x016C, r28	; 0x80016c <opcode>
     222:	81 e0       	ldi	r24, 0x01	; 1
     224:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <bytes>
     228:	04 c0       	rjmp	.+8      	; 0x232 <I2C_recieve+0x20>
     22a:	c0 93 69 01 	sts	0x0169, r28	; 0x800169 <data>
     22e:	0e 94 45 02 	call	0x48a	; 0x48a <i2c_service>
     232:	c0 93 69 01 	sts	0x0169, r28	; 0x800169 <data>
     236:	cf 91       	pop	r28
     238:	08 95       	ret

0000023a <I2C_data_NACK_request>:
     23a:	0e 94 45 02 	call	0x48a	; 0x48a <i2c_service>
     23e:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <data>
     242:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     246:	08 95       	ret

00000248 <i2c_init>:
     248:	f8 94       	cli
     24a:	88 0f       	add	r24, r24
     24c:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
     250:	85 ec       	ldi	r24, 0xC5	; 197
     252:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     256:	78 94       	sei
     258:	08 95       	ret

0000025a <set_data>:
}

void set_data(uint8_t value)
{
	data = value;
     25a:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <data>
     25e:	08 95       	ret

00000260 <__vector_24>:
}


 
ISR(TWI_vect)
{
     260:	1f 92       	push	r1
     262:	0f 92       	push	r0
     264:	0f b6       	in	r0, 0x3f	; 63
     266:	0f 92       	push	r0
     268:	11 24       	eor	r1, r1
     26a:	2f 93       	push	r18
     26c:	3f 93       	push	r19
     26e:	4f 93       	push	r20
     270:	5f 93       	push	r21
     272:	6f 93       	push	r22
     274:	7f 93       	push	r23
     276:	8f 93       	push	r24
     278:	9f 93       	push	r25
     27a:	af 93       	push	r26
     27c:	bf 93       	push	r27
     27e:	ef 93       	push	r30
     280:	ff 93       	push	r31
	switch(TW_STATUS)
     282:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     286:	88 7f       	andi	r24, 0xF8	; 248
     288:	80 38       	cpi	r24, 0x80	; 128
     28a:	49 f0       	breq	.+18     	; 0x29e <__vector_24+0x3e>
     28c:	18 f4       	brcc	.+6      	; 0x294 <__vector_24+0x34>
     28e:	88 23       	and	r24, r24
     290:	d1 f0       	breq	.+52     	; 0x2c6 <__vector_24+0x66>
     292:	1f c0       	rjmp	.+62     	; 0x2d2 <__vector_24+0x72>
     294:	88 3a       	cpi	r24, 0xA8	; 168
     296:	59 f0       	breq	.+22     	; 0x2ae <__vector_24+0x4e>
     298:	88 3b       	cpi	r24, 0xB8	; 184
     29a:	79 f0       	breq	.+30     	; 0x2ba <__vector_24+0x5a>
     29c:	1a c0       	rjmp	.+52     	; 0x2d2 <__vector_24+0x72>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     29e:	85 ec       	ldi	r24, 0xC5	; 197
     2a0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		I2C_recieve(TWDR);
     2a4:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     2a8:	0e 94 09 01 	call	0x212	; 0x212 <I2C_recieve>
		break;
     2ac:	15 c0       	rjmp	.+42     	; 0x2d8 <__vector_24+0x78>
		
		case TW_ST_SLA_ACK:
		// master is requesting data using NACK,master expects only one additional byte. call the request callback
		I2C_data_NACK_request();
     2ae:	0e 94 1d 01 	call	0x23a	; 0x23a <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2b2:	85 ec       	ldi	r24, 0xC5	; 197
     2b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		
		break;
     2b8:	0f c0       	rjmp	.+30     	; 0x2d8 <__vector_24+0x78>
		
		case TW_ST_DATA_ACK:
		// master is requesting data using ACK, master expects multiple bytes. call the request callback
		I2C_data_NACK_request();
     2ba:	0e 94 1d 01 	call	0x23a	; 0x23a <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2be:	85 ec       	ldi	r24, 0xC5	; 197
     2c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     2c4:	09 c0       	rjmp	.+18     	; 0x2d8 <__vector_24+0x78>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     2c6:	ec eb       	ldi	r30, 0xBC	; 188
     2c8:	f0 e0       	ldi	r31, 0x00	; 0
     2ca:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2cc:	85 ec       	ldi	r24, 0xC5	; 197
     2ce:	80 83       	st	Z, r24
		break;
     2d0:	03 c0       	rjmp	.+6      	; 0x2d8 <__vector_24+0x78>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2d2:	85 ec       	ldi	r24, 0xC5	; 197
     2d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
	}
}
     2d8:	ff 91       	pop	r31
     2da:	ef 91       	pop	r30
     2dc:	bf 91       	pop	r27
     2de:	af 91       	pop	r26
     2e0:	9f 91       	pop	r25
     2e2:	8f 91       	pop	r24
     2e4:	7f 91       	pop	r23
     2e6:	6f 91       	pop	r22
     2e8:	5f 91       	pop	r21
     2ea:	4f 91       	pop	r20
     2ec:	3f 91       	pop	r19
     2ee:	2f 91       	pop	r18
     2f0:	0f 90       	pop	r0
     2f2:	0f be       	out	0x3f, r0	; 63
     2f4:	0f 90       	pop	r0
     2f6:	1f 90       	pop	r1
     2f8:	18 95       	reti

000002fa <IO_init>:


void IO_init(void){	///////////////////////// Initial Pin Setup
	
	// bit order 7 6 5 4 3 2 1 0
	DDRB  = 0b00001011;
     2fa:	8b e0       	ldi	r24, 0x0B	; 11
     2fc:	84 b9       	out	0x04, r24	; 4
	PORTB = 0b00000000;
     2fe:	15 b8       	out	0x05, r1	; 5
	
	DDRC  = 0b00000000;
     300:	17 b8       	out	0x07, r1	; 7
	PORTC = 0b00000000;
     302:	18 b8       	out	0x08, r1	; 8
	
	DDRD  = 0b11101000;
     304:	88 ee       	ldi	r24, 0xE8	; 232
     306:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00000000;
     308:	1b b8       	out	0x0b, r1	; 11
     30a:	08 95       	ret

0000030c <main>:
//						Global Variables


int main(void)
{
	new_data = 0;
     30c:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <new_data>
	status = 0;
     310:	10 92 6d 01 	sts	0x016D, r1	; 0x80016d <status>
	zone = 0;	
     314:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <zone>
		
	uart_init();   // open the communication to the microcontroller
     318:	0e 94 b7 04 	call	0x96e	; 0x96e <uart_init>
	io_redirect(); // redirect input and output to the uart	
     31c:	0e 94 c8 04 	call	0x990	; 0x990 <io_redirect>
	IO_init();	   //
     320:	0e 94 7d 01 	call	0x2fa	; 0x2fa <IO_init>
	TimersInit();
     324:	0e 94 91 02 	call	0x522	; 0x522 <TimersInit>
	Motor_init();
     328:	0e 94 98 02 	call	0x530	; 0x530 <Motor_init>
	Enable_ADC();
     32c:	0e 94 53 00 	call	0xa6	; 0xa6 <Enable_ADC>
	i2c_init(I2C_ADDR);	
     330:	81 e4       	ldi	r24, 0x41	; 65
     332:	0e 94 24 01 	call	0x248	; 0x248 <i2c_init>
	sei();
     336:	78 94       	sei
		
    while(1) 
    {	
		
		if (new_data==1)
     338:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <new_data>
     33c:	81 30       	cpi	r24, 0x01	; 1
     33e:	21 f4       	brne	.+8      	; 0x348 <main+0x3c>
		{
			motor_handler();
     340:	0e 94 01 04 	call	0x802	; 0x802 <motor_handler>
			new_data = 0;	
     344:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <new_data>
		}
		
		Calculate_ADC();  //Call the ADC function
     348:	0e 94 7b 00 	call	0xf6	; 0xf6 <Calculate_ADC>
		  
	}
     34c:	f5 cf       	rjmp	.-22     	; 0x338 <main+0x2c>

0000034e <cal_checksum>:


int new_error=0;
char new_zone=0;
int cal_checksum(int value, char length)
{
     34e:	fc 01       	movw	r30, r24
	char array[length];
     350:	70 e0       	ldi	r23, 0x00	; 0
     352:	9b 01       	movw	r18, r22
     354:	21 50       	subi	r18, 0x01	; 1
     356:	31 09       	sbc	r19, r1
	char Checksum=0;
	for (int i=0; i<length; i++)
     358:	16 16       	cp	r1, r22
     35a:	17 06       	cpc	r1, r23
     35c:	74 f4       	brge	.+28     	; 0x37a <cal_checksum+0x2c>
     35e:	80 e0       	ldi	r24, 0x00	; 0
	{   array[i] = 0;
		array[i]= (value>>((length-1)-i)) & 1;
		Checksum^=array[i];
     360:	af 01       	movw	r20, r30
     362:	02 2e       	mov	r0, r18
     364:	02 c0       	rjmp	.+4      	; 0x36a <cal_checksum+0x1c>
     366:	55 95       	asr	r21
     368:	47 95       	ror	r20
     36a:	0a 94       	dec	r0
     36c:	e2 f7       	brpl	.-8      	; 0x366 <cal_checksum+0x18>
     36e:	41 70       	andi	r20, 0x01	; 1
     370:	84 27       	eor	r24, r20
     372:	21 50       	subi	r18, 0x01	; 1
     374:	31 09       	sbc	r19, r1
     376:	a0 f7       	brcc	.-24     	; 0x360 <cal_checksum+0x12>
     378:	01 c0       	rjmp	.+2      	; 0x37c <cal_checksum+0x2e>
int new_error=0;
char new_zone=0;
int cal_checksum(int value, char length)
{
	char array[length];
	char Checksum=0;
     37a:	80 e0       	ldi	r24, 0x00	; 0
	{   array[i] = 0;
		array[i]= (value>>((length-1)-i)) & 1;
		Checksum^=array[i];
	}
	return Checksum;
}
     37c:	90 e0       	ldi	r25, 0x00	; 0
     37e:	08 95       	ret

00000380 <Motor_Send_Status>:



void Motor_Send_Status(void)
{
	if (bytes==2)
     380:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <bytes>
     384:	82 30       	cpi	r24, 0x02	; 2
     386:	59 f4       	brne	.+22     	; 0x39e <Motor_Send_Status+0x1e>
	{
		int checksum;
		
		checksum = cal_checksum(status, 8);
     388:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <status>
     38c:	68 e0       	ldi	r22, 0x08	; 8
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 a7 01 	call	0x34e	; 0x34e <cal_checksum>
		set_data(checksum);
     394:	0e 94 2d 01 	call	0x25a	; 0x25a <set_data>
		bytes=0;
     398:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <bytes>
     39c:	08 95       	ret
	}
	else
	{
		set_data(status);
     39e:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <status>
     3a2:	0e 94 2d 01 	call	0x25a	; 0x25a <set_data>
		bytes++;
     3a6:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <bytes>
     3aa:	8f 5f       	subi	r24, 0xFF	; 255
     3ac:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <bytes>
     3b0:	08 95       	ret

000003b2 <Motor_Send_error>:
	}
}

void Motor_Send_error(void)
{
     3b2:	0f 93       	push	r16
     3b4:	1f 93       	push	r17
     3b6:	cf 93       	push	r28
	
	char received_checksum;
	if (bytes==3)
     3b8:	20 91 68 01 	lds	r18, 0x0168	; 0x800168 <bytes>
     3bc:	23 30       	cpi	r18, 0x03	; 3
     3be:	e9 f4       	brne	.+58     	; 0x3fa <Motor_Send_error+0x48>
	{
		received_checksum = data;
     3c0:	c0 91 69 01 	lds	r28, 0x0169	; 0x800169 <data>
		int checksum = cal_checksum(new_error, 16);
     3c4:	00 91 4b 01 	lds	r16, 0x014B	; 0x80014b <new_error>
     3c8:	10 91 4c 01 	lds	r17, 0x014C	; 0x80014c <new_error+0x1>
     3cc:	60 e1       	ldi	r22, 0x10	; 16
     3ce:	c8 01       	movw	r24, r16
     3d0:	0e 94 a7 01 	call	0x34e	; 0x34e <cal_checksum>
		
		if (checksum==received_checksum)
     3d4:	2c 2f       	mov	r18, r28
     3d6:	30 e0       	ldi	r19, 0x00	; 0
     3d8:	82 17       	cp	r24, r18
     3da:	93 07       	cpc	r25, r19
     3dc:	39 f4       	brne	.+14     	; 0x3ec <Motor_Send_error+0x3a>
		{
			error = new_error;
     3de:	10 93 6b 01 	sts	0x016B, r17	; 0x80016b <error+0x1>
     3e2:	00 93 6a 01 	sts	0x016A, r16	; 0x80016a <error>
			new_data=1;
     3e6:	81 e0       	ldi	r24, 0x01	; 1
     3e8:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <new_data>
		}

		new_error=0;
     3ec:	10 92 4c 01 	sts	0x014C, r1	; 0x80014c <new_error+0x1>
     3f0:	10 92 4b 01 	sts	0x014B, r1	; 0x80014b <new_error>
		bytes=0;
     3f4:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <bytes>
     3f8:	1f c0       	rjmp	.+62     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
		
	}
	else
	{
		new_error= new_error + (data << (8*(bytes-1)));
     3fa:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <data>
     3fe:	90 e0       	ldi	r25, 0x00	; 0
     400:	42 2f       	mov	r20, r18
     402:	50 e0       	ldi	r21, 0x00	; 0
     404:	41 50       	subi	r20, 0x01	; 1
     406:	51 09       	sbc	r21, r1
     408:	44 0f       	add	r20, r20
     40a:	55 1f       	adc	r21, r21
     40c:	44 0f       	add	r20, r20
     40e:	55 1f       	adc	r21, r21
     410:	44 0f       	add	r20, r20
     412:	55 1f       	adc	r21, r21
     414:	02 c0       	rjmp	.+4      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     416:	88 0f       	add	r24, r24
     418:	99 1f       	adc	r25, r25
     41a:	4a 95       	dec	r20
     41c:	e2 f7       	brpl	.-8      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     41e:	40 91 4b 01 	lds	r20, 0x014B	; 0x80014b <new_error>
     422:	50 91 4c 01 	lds	r21, 0x014C	; 0x80014c <new_error+0x1>
     426:	84 0f       	add	r24, r20
     428:	95 1f       	adc	r25, r21
     42a:	90 93 4c 01 	sts	0x014C, r25	; 0x80014c <new_error+0x1>
     42e:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <new_error>
		bytes++;
     432:	2f 5f       	subi	r18, 0xFF	; 255
     434:	20 93 68 01 	sts	0x0168, r18	; 0x800168 <bytes>
	}
}
     438:	cf 91       	pop	r28
     43a:	1f 91       	pop	r17
     43c:	0f 91       	pop	r16
     43e:	08 95       	ret

00000440 <Motor_Send_zone>:

void Motor_Send_zone(void)
{
     440:	cf 93       	push	r28
     442:	df 93       	push	r29
	
		char received_checksum;
		if (bytes==2)
     444:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <bytes>
     448:	82 30       	cpi	r24, 0x02	; 2
     44a:	a9 f4       	brne	.+42     	; 0x476 <Motor_Send_zone+0x36>
		{
			received_checksum = data;
     44c:	c0 91 69 01 	lds	r28, 0x0169	; 0x800169 <data>
			int checksum = cal_checksum(new_zone, 8);
     450:	d0 91 4a 01 	lds	r29, 0x014A	; 0x80014a <__data_end>
     454:	68 e0       	ldi	r22, 0x08	; 8
     456:	8d 2f       	mov	r24, r29
     458:	90 e0       	ldi	r25, 0x00	; 0
     45a:	0e 94 a7 01 	call	0x34e	; 0x34e <cal_checksum>
			
			if (checksum==received_checksum)
     45e:	2c 2f       	mov	r18, r28
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	82 17       	cp	r24, r18
     464:	93 07       	cpc	r25, r19
     466:	21 f4       	brne	.+8      	; 0x470 <Motor_Send_zone+0x30>
			{
				zone = new_zone;
     468:	d0 93 67 01 	sts	0x0167, r29	; 0x800167 <zone>
				new_zone=0;
     46c:	10 92 4a 01 	sts	0x014A, r1	; 0x80014a <__data_end>
				
			}

			bytes=0;
     470:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <bytes>
     474:	07 c0       	rjmp	.+14     	; 0x484 <Motor_Send_zone+0x44>
			
		}
		else
		{
			new_zone = data;
     476:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <data>
     47a:	90 93 4a 01 	sts	0x014A, r25	; 0x80014a <__data_end>
			bytes++;
     47e:	8f 5f       	subi	r24, 0xFF	; 255
     480:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <bytes>
		}
	
     484:	df 91       	pop	r29
     486:	cf 91       	pop	r28
     488:	08 95       	ret

0000048a <i2c_service>:
}


void i2c_service(void)
{
	switch(opcode)
     48a:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <opcode>
     48e:	81 30       	cpi	r24, 0x01	; 1
     490:	39 f0       	breq	.+14     	; 0x4a0 <i2c_service+0x16>
     492:	18 f0       	brcs	.+6      	; 0x49a <i2c_service+0x10>
     494:	82 30       	cpi	r24, 0x02	; 2
     496:	39 f0       	breq	.+14     	; 0x4a6 <i2c_service+0x1c>
     498:	08 95       	ret
	{
		case 0:
		{
			Motor_Send_Status();
     49a:	0e 94 c0 01 	call	0x380	; 0x380 <Motor_Send_Status>
			break;
     49e:	08 95       	ret
		}
		
		case 1:
		{
			Motor_Send_error();
     4a0:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <Motor_Send_error>
			break;
     4a4:	08 95       	ret
		}
		
		case 2:
		{
			Motor_Send_zone();
     4a6:	0e 94 20 02 	call	0x440	; 0x440 <Motor_Send_zone>
     4aa:	08 95       	ret

000004ac <T0_init>:


void print_pwm(void)
{
	printf("PWM m1 %d  PWM m2 %d  PWM m3 %d   PWM m4 %d\n",Motor_pwm.desired_pwm_m1, Motor_pwm.desired_pwm_m2,Motor_pwm.desired_pwm_m3, Motor_pwm.desired_pwm_m4);	
}
     4ac:	84 b5       	in	r24, 0x24	; 36
     4ae:	80 68       	ori	r24, 0x80	; 128
     4b0:	84 bd       	out	0x24, r24	; 36
     4b2:	84 b5       	in	r24, 0x24	; 36
     4b4:	80 62       	ori	r24, 0x20	; 32
     4b6:	84 bd       	out	0x24, r24	; 36
     4b8:	84 b5       	in	r24, 0x24	; 36
     4ba:	8b 60       	ori	r24, 0x0B	; 11
     4bc:	84 bd       	out	0x24, r24	; 36
     4be:	17 bc       	out	0x27, r1	; 39
     4c0:	18 bc       	out	0x28, r1	; 40
     4c2:	85 b5       	in	r24, 0x25	; 37
     4c4:	82 60       	ori	r24, 0x02	; 2
     4c6:	85 bd       	out	0x25, r24	; 37
     4c8:	08 95       	ret

000004ca <T1_init>:
     4ca:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
     4ce:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     4d2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     4d6:	8f e9       	ldi	r24, 0x9F	; 159
     4d8:	9f e0       	ldi	r25, 0x0F	; 15
     4da:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     4de:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     4e2:	e1 e8       	ldi	r30, 0x81	; 129
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	80 81       	ld	r24, Z
     4e8:	89 60       	ori	r24, 0x09	; 9
     4ea:	80 83       	st	Z, r24
     4ec:	ef e6       	ldi	r30, 0x6F	; 111
     4ee:	f0 e0       	ldi	r31, 0x00	; 0
     4f0:	80 81       	ld	r24, Z
     4f2:	82 60       	ori	r24, 0x02	; 2
     4f4:	80 83       	st	Z, r24
     4f6:	08 95       	ret

000004f8 <T2_init>:
     4f8:	e0 eb       	ldi	r30, 0xB0	; 176
     4fa:	f0 e0       	ldi	r31, 0x00	; 0
     4fc:	80 81       	ld	r24, Z
     4fe:	80 68       	ori	r24, 0x80	; 128
     500:	80 83       	st	Z, r24
     502:	80 81       	ld	r24, Z
     504:	80 62       	ori	r24, 0x20	; 32
     506:	80 83       	st	Z, r24
     508:	80 81       	ld	r24, Z
     50a:	8b 60       	ori	r24, 0x0B	; 11
     50c:	80 83       	st	Z, r24
     50e:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     512:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     516:	e1 eb       	ldi	r30, 0xB1	; 177
     518:	f0 e0       	ldi	r31, 0x00	; 0
     51a:	80 81       	ld	r24, Z
     51c:	82 60       	ori	r24, 0x02	; 2
     51e:	80 83       	st	Z, r24
     520:	08 95       	ret

00000522 <TimersInit>:
     522:	0e 94 56 02 	call	0x4ac	; 0x4ac <T0_init>
     526:	0e 94 65 02 	call	0x4ca	; 0x4ca <T1_init>
     52a:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <T2_init>
     52e:	08 95       	ret

00000530 <Motor_init>:
     530:	ee e6       	ldi	r30, 0x6E	; 110
     532:	f1 e0       	ldi	r31, 0x01	; 1
     534:	11 82       	std	Z+1, r1	; 0x01
     536:	10 82       	st	Z, r1
     538:	13 82       	std	Z+3, r1	; 0x03
     53a:	12 82       	std	Z+2, r1	; 0x02
     53c:	15 82       	std	Z+5, r1	; 0x05
     53e:	14 82       	std	Z+4, r1	; 0x04
     540:	17 82       	std	Z+7, r1	; 0x07
     542:	16 82       	std	Z+6, r1	; 0x06
     544:	5c 98       	cbi	0x0b, 4	; 11
     546:	08 95       	ret

00000548 <change_pwm_sort>:
     548:	87 b5       	in	r24, 0x27	; 39
     54a:	90 e0       	ldi	r25, 0x00	; 0
     54c:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <Motor_pwm>
     550:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <Motor_pwm+0x1>
     554:	82 17       	cp	r24, r18
     556:	93 07       	cpc	r25, r19
     558:	4c f4       	brge	.+18     	; 0x56c <change_pwm_sort+0x24>
     55a:	87 b5       	in	r24, 0x27	; 39
     55c:	8d 32       	cpi	r24, 0x2D	; 45
     55e:	18 f4       	brcc	.+6      	; 0x566 <change_pwm_sort+0x1e>
     560:	8d e2       	ldi	r24, 0x2D	; 45
     562:	87 bd       	out	0x27, r24	; 39
     564:	03 c0       	rjmp	.+6      	; 0x56c <change_pwm_sort+0x24>
     566:	87 b5       	in	r24, 0x27	; 39
     568:	8f 5f       	subi	r24, 0xFF	; 255
     56a:	87 bd       	out	0x27, r24	; 39
     56c:	87 b5       	in	r24, 0x27	; 39
     56e:	90 e0       	ldi	r25, 0x00	; 0
     570:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <Motor_pwm>
     574:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <Motor_pwm+0x1>
     578:	28 17       	cp	r18, r24
     57a:	39 07       	cpc	r19, r25
     57c:	44 f4       	brge	.+16     	; 0x58e <change_pwm_sort+0x46>
     57e:	87 b5       	in	r24, 0x27	; 39
     580:	8e 32       	cpi	r24, 0x2E	; 46
     582:	20 f0       	brcs	.+8      	; 0x58c <change_pwm_sort+0x44>
     584:	87 b5       	in	r24, 0x27	; 39
     586:	81 50       	subi	r24, 0x01	; 1
     588:	87 bd       	out	0x27, r24	; 39
     58a:	01 c0       	rjmp	.+2      	; 0x58e <change_pwm_sort+0x46>
     58c:	17 bc       	out	0x27, r1	; 39
     58e:	88 b5       	in	r24, 0x28	; 40
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <Motor_pwm+0x2>
     596:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <Motor_pwm+0x3>
     59a:	82 17       	cp	r24, r18
     59c:	93 07       	cpc	r25, r19
     59e:	4c f4       	brge	.+18     	; 0x5b2 <change_pwm_sort+0x6a>
     5a0:	88 b5       	in	r24, 0x28	; 40
     5a2:	8d 32       	cpi	r24, 0x2D	; 45
     5a4:	18 f4       	brcc	.+6      	; 0x5ac <change_pwm_sort+0x64>
     5a6:	8d e2       	ldi	r24, 0x2D	; 45
     5a8:	88 bd       	out	0x28, r24	; 40
     5aa:	03 c0       	rjmp	.+6      	; 0x5b2 <change_pwm_sort+0x6a>
     5ac:	88 b5       	in	r24, 0x28	; 40
     5ae:	8f 5f       	subi	r24, 0xFF	; 255
     5b0:	88 bd       	out	0x28, r24	; 40
     5b2:	88 b5       	in	r24, 0x28	; 40
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <Motor_pwm+0x2>
     5ba:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <Motor_pwm+0x3>
     5be:	28 17       	cp	r18, r24
     5c0:	39 07       	cpc	r19, r25
     5c2:	44 f4       	brge	.+16     	; 0x5d4 <change_pwm_sort+0x8c>
     5c4:	88 b5       	in	r24, 0x28	; 40
     5c6:	8e 32       	cpi	r24, 0x2E	; 46
     5c8:	20 f0       	brcs	.+8      	; 0x5d2 <change_pwm_sort+0x8a>
     5ca:	88 b5       	in	r24, 0x28	; 40
     5cc:	81 50       	subi	r24, 0x01	; 1
     5ce:	88 bd       	out	0x28, r24	; 40
     5d0:	08 95       	ret
     5d2:	18 bc       	out	0x28, r1	; 40
     5d4:	08 95       	ret

000005d6 <change_pwm_drive>:
     5d6:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <Motor_pwm+0x4>
     5e0:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <Motor_pwm+0x5>
     5e4:	82 17       	cp	r24, r18
     5e6:	93 07       	cpc	r25, r19
     5e8:	6c f4       	brge	.+26     	; 0x604 <change_pwm_drive+0x2e>
     5ea:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     5ee:	8d 32       	cpi	r24, 0x2D	; 45
     5f0:	20 f4       	brcc	.+8      	; 0x5fa <change_pwm_drive+0x24>
     5f2:	8d e2       	ldi	r24, 0x2D	; 45
     5f4:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     5f8:	05 c0       	rjmp	.+10     	; 0x604 <change_pwm_drive+0x2e>
     5fa:	e3 eb       	ldi	r30, 0xB3	; 179
     5fc:	f0 e0       	ldi	r31, 0x00	; 0
     5fe:	80 81       	ld	r24, Z
     600:	8f 5f       	subi	r24, 0xFF	; 255
     602:	80 83       	st	Z, r24
     604:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	20 91 72 01 	lds	r18, 0x0172	; 0x800172 <Motor_pwm+0x4>
     60e:	30 91 73 01 	lds	r19, 0x0173	; 0x800173 <Motor_pwm+0x5>
     612:	28 17       	cp	r18, r24
     614:	39 07       	cpc	r19, r25
     616:	64 f4       	brge	.+24     	; 0x630 <change_pwm_drive+0x5a>
     618:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     61c:	8e 32       	cpi	r24, 0x2E	; 46
     61e:	30 f0       	brcs	.+12     	; 0x62c <change_pwm_drive+0x56>
     620:	e3 eb       	ldi	r30, 0xB3	; 179
     622:	f0 e0       	ldi	r31, 0x00	; 0
     624:	80 81       	ld	r24, Z
     626:	81 50       	subi	r24, 0x01	; 1
     628:	80 83       	st	Z, r24
     62a:	02 c0       	rjmp	.+4      	; 0x630 <change_pwm_drive+0x5a>
     62c:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     630:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <Motor_pwm+0x6>
     63a:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <Motor_pwm+0x7>
     63e:	82 17       	cp	r24, r18
     640:	93 07       	cpc	r25, r19
     642:	6c f4       	brge	.+26     	; 0x65e <change_pwm_drive+0x88>
     644:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     648:	8d 32       	cpi	r24, 0x2D	; 45
     64a:	20 f4       	brcc	.+8      	; 0x654 <change_pwm_drive+0x7e>
     64c:	8d e2       	ldi	r24, 0x2D	; 45
     64e:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     652:	05 c0       	rjmp	.+10     	; 0x65e <change_pwm_drive+0x88>
     654:	e4 eb       	ldi	r30, 0xB4	; 180
     656:	f0 e0       	ldi	r31, 0x00	; 0
     658:	80 81       	ld	r24, Z
     65a:	8f 5f       	subi	r24, 0xFF	; 255
     65c:	80 83       	st	Z, r24
     65e:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <Motor_pwm+0x6>
     668:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <Motor_pwm+0x7>
     66c:	28 17       	cp	r18, r24
     66e:	39 07       	cpc	r19, r25
     670:	64 f4       	brge	.+24     	; 0x68a <change_pwm_drive+0xb4>
     672:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     676:	8e 32       	cpi	r24, 0x2E	; 46
     678:	30 f0       	brcs	.+12     	; 0x686 <change_pwm_drive+0xb0>
     67a:	e4 eb       	ldi	r30, 0xB4	; 180
     67c:	f0 e0       	ldi	r31, 0x00	; 0
     67e:	80 81       	ld	r24, Z
     680:	81 50       	subi	r24, 0x01	; 1
     682:	80 83       	st	Z, r24
     684:	08 95       	ret
     686:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     68a:	08 95       	ret

0000068c <startup_sort>:
     68c:	5c 9a       	sbi	0x0b, 4	; 11
     68e:	ee e6       	ldi	r30, 0x6E	; 110
     690:	f1 e0       	ldi	r31, 0x01	; 1
     692:	8f ef       	ldi	r24, 0xFF	; 255
     694:	90 e0       	ldi	r25, 0x00	; 0
     696:	91 83       	std	Z+1, r25	; 0x01
     698:	80 83       	st	Z, r24
     69a:	93 83       	std	Z+3, r25	; 0x03
     69c:	82 83       	std	Z+2, r24	; 0x02
     69e:	08 95       	ret

000006a0 <stop_sort>:
     6a0:	ee e6       	ldi	r30, 0x6E	; 110
     6a2:	f1 e0       	ldi	r31, 0x01	; 1
     6a4:	11 82       	std	Z+1, r1	; 0x01
     6a6:	10 82       	st	Z, r1
     6a8:	13 82       	std	Z+3, r1	; 0x03
     6aa:	12 82       	std	Z+2, r1	; 0x02
     6ac:	5c 98       	cbi	0x0b, 4	; 11
     6ae:	08 95       	ret

000006b0 <StopDrive>:
     6b0:	ee e6       	ldi	r30, 0x6E	; 110
     6b2:	f1 e0       	ldi	r31, 0x01	; 1
     6b4:	15 82       	std	Z+5, r1	; 0x05
     6b6:	14 82       	std	Z+4, r1	; 0x04
     6b8:	17 82       	std	Z+7, r1	; 0x07
     6ba:	16 82       	std	Z+6, r1	; 0x06
     6bc:	08 95       	ret

000006be <turn_right>:
     6be:	4f 99       	sbic	0x09, 7	; 9
     6c0:	02 c0       	rjmp	.+4      	; 0x6c6 <turn_right+0x8>
     6c2:	18 9b       	sbis	0x03, 0	; 3
     6c4:	0e c0       	rjmp	.+28     	; 0x6e2 <turn_right+0x24>
     6c6:	0e 94 58 03 	call	0x6b0	; 0x6b0 <StopDrive>
     6ca:	e3 eb       	ldi	r30, 0xB3	; 179
     6cc:	f0 e0       	ldi	r31, 0x00	; 0
     6ce:	a4 eb       	ldi	r26, 0xB4	; 180
     6d0:	b0 e0       	ldi	r27, 0x00	; 0
     6d2:	80 81       	ld	r24, Z
     6d4:	88 23       	and	r24, r24
     6d6:	19 f0       	breq	.+6      	; 0x6de <turn_right+0x20>
     6d8:	8c 91       	ld	r24, X
     6da:	81 11       	cpse	r24, r1
     6dc:	fa cf       	rjmp	.-12     	; 0x6d2 <turn_right+0x14>
     6de:	5f 98       	cbi	0x0b, 7	; 11
     6e0:	28 98       	cbi	0x05, 0	; 5
     6e2:	ee e6       	ldi	r30, 0x6E	; 110
     6e4:	f1 e0       	ldi	r31, 0x01	; 1
     6e6:	8f ef       	ldi	r24, 0xFF	; 255
     6e8:	90 e0       	ldi	r25, 0x00	; 0
     6ea:	95 83       	std	Z+5, r25	; 0x05
     6ec:	84 83       	std	Z+4, r24	; 0x04
     6ee:	97 83       	std	Z+7, r25	; 0x07
     6f0:	86 83       	std	Z+6, r24	; 0x06
     6f2:	08 95       	ret

000006f4 <turn_left>:
     6f4:	4f 9b       	sbis	0x09, 7	; 9
     6f6:	02 c0       	rjmp	.+4      	; 0x6fc <turn_left+0x8>
     6f8:	18 99       	sbic	0x03, 0	; 3
     6fa:	0e c0       	rjmp	.+28     	; 0x718 <turn_left+0x24>
     6fc:	0e 94 58 03 	call	0x6b0	; 0x6b0 <StopDrive>
     700:	e3 eb       	ldi	r30, 0xB3	; 179
     702:	f0 e0       	ldi	r31, 0x00	; 0
     704:	a4 eb       	ldi	r26, 0xB4	; 180
     706:	b0 e0       	ldi	r27, 0x00	; 0
     708:	80 81       	ld	r24, Z
     70a:	88 23       	and	r24, r24
     70c:	19 f0       	breq	.+6      	; 0x714 <turn_left+0x20>
     70e:	8c 91       	ld	r24, X
     710:	81 11       	cpse	r24, r1
     712:	fa cf       	rjmp	.-12     	; 0x708 <turn_left+0x14>
     714:	5f 9a       	sbi	0x0b, 7	; 11
     716:	28 9a       	sbi	0x05, 0	; 5
     718:	ee e6       	ldi	r30, 0x6E	; 110
     71a:	f1 e0       	ldi	r31, 0x01	; 1
     71c:	8f ef       	ldi	r24, 0xFF	; 255
     71e:	90 e0       	ldi	r25, 0x00	; 0
     720:	95 83       	std	Z+5, r25	; 0x05
     722:	84 83       	std	Z+4, r24	; 0x04
     724:	97 83       	std	Z+7, r25	; 0x07
     726:	86 83       	std	Z+6, r24	; 0x06
     728:	08 95       	ret

0000072a <CalculatePwm>:
     72a:	cf 93       	push	r28
     72c:	df 93       	push	r29
     72e:	ec 01       	movw	r28, r24
     730:	0f 96       	adiw	r24, 0x0f	; 15
     732:	4f 97       	sbiw	r24, 0x1f	; 31
     734:	08 f0       	brcs	.+2      	; 0x738 <CalculatePwm+0xe>
     736:	58 c0       	rjmp	.+176    	; 0x7e8 <CalculatePwm+0xbe>
     738:	4f 9b       	sbis	0x09, 7	; 9
     73a:	02 c0       	rjmp	.+4      	; 0x740 <CalculatePwm+0x16>
     73c:	18 9b       	sbis	0x03, 0	; 3
     73e:	0e c0       	rjmp	.+28     	; 0x75c <CalculatePwm+0x32>
     740:	0e 94 58 03 	call	0x6b0	; 0x6b0 <StopDrive>
     744:	e3 eb       	ldi	r30, 0xB3	; 179
     746:	f0 e0       	ldi	r31, 0x00	; 0
     748:	a4 eb       	ldi	r26, 0xB4	; 180
     74a:	b0 e0       	ldi	r27, 0x00	; 0
     74c:	80 81       	ld	r24, Z
     74e:	88 23       	and	r24, r24
     750:	19 f0       	breq	.+6      	; 0x758 <CalculatePwm+0x2e>
     752:	8c 91       	ld	r24, X
     754:	81 11       	cpse	r24, r1
     756:	fa cf       	rjmp	.-12     	; 0x74c <CalculatePwm+0x22>
     758:	5f 9a       	sbi	0x0b, 7	; 11
     75a:	28 98       	cbi	0x05, 0	; 5
     75c:	dd 23       	and	r29, r29
     75e:	1c f1       	brlt	.+70     	; 0x7a6 <CalculatePwm+0x7c>
     760:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <PWM_MAX>
     764:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <PWM_MAX+0x1>
     768:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <PWM_MAX>
     76c:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <PWM_MAX+0x1>
     770:	ee e6       	ldi	r30, 0x6E	; 110
     772:	f1 e0       	ldi	r31, 0x01	; 1
     774:	8d 97       	sbiw	r24, 0x2d	; 45
     776:	6f e0       	ldi	r22, 0x0F	; 15
     778:	70 e0       	ldi	r23, 0x00	; 0
     77a:	0e 94 0c 07 	call	0xe18	; 0xe18 <__divmodhi4>
     77e:	6c 9f       	mul	r22, r28
     780:	c0 01       	movw	r24, r0
     782:	6d 9f       	mul	r22, r29
     784:	90 0d       	add	r25, r0
     786:	7c 9f       	mul	r23, r28
     788:	90 0d       	add	r25, r0
     78a:	11 24       	eor	r1, r1
     78c:	28 1b       	sub	r18, r24
     78e:	39 0b       	sbc	r19, r25
     790:	35 83       	std	Z+5, r19	; 0x05
     792:	24 83       	std	Z+4, r18	; 0x04
     794:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <PWM_MAX>
     798:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <PWM_MAX+0x1>
     79c:	97 83       	std	Z+7, r25	; 0x07
     79e:	86 83       	std	Z+6, r24	; 0x06
     7a0:	1c 16       	cp	r1, r28
     7a2:	1d 06       	cpc	r1, r29
     7a4:	5c f1       	brlt	.+86     	; 0x7fc <CalculatePwm+0xd2>
     7a6:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <PWM_MAX>
     7aa:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <PWM_MAX+0x1>
     7ae:	20 91 76 01 	lds	r18, 0x0176	; 0x800176 <PWM_MAX>
     7b2:	30 91 77 01 	lds	r19, 0x0177	; 0x800177 <PWM_MAX+0x1>
     7b6:	ee e6       	ldi	r30, 0x6E	; 110
     7b8:	f1 e0       	ldi	r31, 0x01	; 1
     7ba:	8d 97       	sbiw	r24, 0x2d	; 45
     7bc:	6f e0       	ldi	r22, 0x0F	; 15
     7be:	70 e0       	ldi	r23, 0x00	; 0
     7c0:	0e 94 0c 07 	call	0xe18	; 0xe18 <__divmodhi4>
     7c4:	6c 9f       	mul	r22, r28
     7c6:	c0 01       	movw	r24, r0
     7c8:	6d 9f       	mul	r22, r29
     7ca:	90 0d       	add	r25, r0
     7cc:	7c 9f       	mul	r23, r28
     7ce:	90 0d       	add	r25, r0
     7d0:	11 24       	eor	r1, r1
     7d2:	28 0f       	add	r18, r24
     7d4:	39 1f       	adc	r19, r25
     7d6:	37 83       	std	Z+7, r19	; 0x07
     7d8:	26 83       	std	Z+6, r18	; 0x06
     7da:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <PWM_MAX>
     7de:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <PWM_MAX+0x1>
     7e2:	95 83       	std	Z+5, r25	; 0x05
     7e4:	84 83       	std	Z+4, r24	; 0x04
     7e6:	0a c0       	rjmp	.+20     	; 0x7fc <CalculatePwm+0xd2>
     7e8:	c0 31       	cpi	r28, 0x10	; 16
     7ea:	d1 05       	cpc	r29, r1
     7ec:	14 f0       	brlt	.+4      	; 0x7f2 <CalculatePwm+0xc8>
     7ee:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <turn_left>
     7f2:	c1 3f       	cpi	r28, 0xF1	; 241
     7f4:	df 4f       	sbci	r29, 0xFF	; 255
     7f6:	14 f4       	brge	.+4      	; 0x7fc <CalculatePwm+0xd2>
     7f8:	0e 94 5f 03 	call	0x6be	; 0x6be <turn_right>
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	08 95       	ret

00000802 <motor_handler>:
     802:	8f ef       	ldi	r24, 0xFF	; 255
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <PWM_MAX+0x1>
     80a:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <PWM_MAX>
     80e:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <zone>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	c9 f0       	breq	.+50     	; 0x848 <motor_handler+0x46>
     816:	28 f4       	brcc	.+10     	; 0x822 <motor_handler+0x20>
     818:	88 23       	and	r24, r24
     81a:	41 f0       	breq	.+16     	; 0x82c <motor_handler+0x2a>
     81c:	81 30       	cpi	r24, 0x01	; 1
     81e:	71 f0       	breq	.+28     	; 0x83c <motor_handler+0x3a>
     820:	08 95       	ret
     822:	83 30       	cpi	r24, 0x03	; 3
     824:	b9 f0       	breq	.+46     	; 0x854 <motor_handler+0x52>
     826:	84 30       	cpi	r24, 0x04	; 4
     828:	11 f1       	breq	.+68     	; 0x86e <motor_handler+0x6c>
     82a:	08 95       	ret
     82c:	81 e0       	ldi	r24, 0x01	; 1
     82e:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <Hardstop>
     832:	0e 94 58 03 	call	0x6b0	; 0x6b0 <StopDrive>
     836:	0e 94 50 03 	call	0x6a0	; 0x6a0 <stop_sort>
     83a:	08 95       	ret
     83c:	81 e0       	ldi	r24, 0x01	; 1
     83e:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <Hardstop>
     842:	0e 94 58 03 	call	0x6b0	; 0x6b0 <StopDrive>
     846:	08 95       	ret
     848:	82 eb       	ldi	r24, 0xB2	; 178
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <PWM_MAX+0x1>
     850:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <PWM_MAX>
     854:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <Hardstop>
     858:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <error>
     85c:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <error+0x1>
     860:	0e 94 95 03 	call	0x72a	; 0x72a <CalculatePwm>
     864:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <counter_safety+0x1>
     868:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <counter_safety>
     86c:	08 95       	ret
     86e:	0e 94 46 03 	call	0x68c	; 0x68c <startup_sort>
     872:	08 95       	ret

00000874 <__vector_11>:



ISR(TIMER1_COMPA_vect)
{
     874:	1f 92       	push	r1
     876:	0f 92       	push	r0
     878:	0f b6       	in	r0, 0x3f	; 63
     87a:	0f 92       	push	r0
     87c:	11 24       	eor	r1, r1
     87e:	2f 93       	push	r18
     880:	3f 93       	push	r19
     882:	4f 93       	push	r20
     884:	5f 93       	push	r21
     886:	6f 93       	push	r22
     888:	7f 93       	push	r23
     88a:	8f 93       	push	r24
     88c:	9f 93       	push	r25
     88e:	af 93       	push	r26
     890:	bf 93       	push	r27
     892:	ef 93       	push	r30
     894:	ff 93       	push	r31
	counter_rampslow++;
     896:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <counter_rampslow>
     89a:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <counter_rampslow+0x1>
     89e:	01 96       	adiw	r24, 0x01	; 1
     8a0:	90 93 50 01 	sts	0x0150, r25	; 0x800150 <counter_rampslow+0x1>
     8a4:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <counter_rampslow>
	
	if (zone>1)
     8a8:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <zone>
     8ac:	82 30       	cpi	r24, 0x02	; 2
     8ae:	48 f0       	brcs	.+18     	; 0x8c2 <__vector_11+0x4e>
	{
		counter_safety++;
     8b0:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <counter_safety>
     8b4:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <counter_safety+0x1>
     8b8:	01 96       	adiw	r24, 0x01	; 1
     8ba:	90 93 4e 01 	sts	0x014E, r25	; 0x80014e <counter_safety+0x1>
     8be:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <counter_safety>
	}
	
	Toggle(pd2);
     8c2:	9b b1       	in	r25, 0x0b	; 11
     8c4:	84 e0       	ldi	r24, 0x04	; 4
     8c6:	89 27       	eor	r24, r25
     8c8:	8b b9       	out	0x0b, r24	; 11
	
	
	if (Hardstop==1)
     8ca:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <Hardstop>
     8ce:	81 30       	cpi	r24, 0x01	; 1
     8d0:	21 f4       	brne	.+8      	; 0x8da <__vector_11+0x66>
	{
		change_pwm_drive();
     8d2:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <change_pwm_drive>
		change_pwm_sort();
     8d6:	0e 94 a4 02 	call	0x548	; 0x548 <change_pwm_sort>
	}
	
	
	if (counter_rampslow>rampslow_scale)
     8da:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <counter_rampslow>
     8de:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <counter_rampslow+0x1>
     8e2:	85 36       	cpi	r24, 0x65	; 101
     8e4:	91 05       	cpc	r25, r1
     8e6:	44 f0       	brlt	.+16     	; 0x8f8 <__vector_11+0x84>
	{
		change_pwm_sort();
     8e8:	0e 94 a4 02 	call	0x548	; 0x548 <change_pwm_sort>
		change_pwm_drive();
     8ec:	0e 94 eb 02 	call	0x5d6	; 0x5d6 <change_pwm_drive>
		counter_rampslow=0;
     8f0:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <counter_rampslow+0x1>
     8f4:	10 92 4f 01 	sts	0x014F, r1	; 0x80014f <counter_rampslow>
	}
	

	if (counter_safety>safty_scale)
     8f8:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <counter_safety>
     8fc:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <counter_safety+0x1>
     900:	81 3d       	cpi	r24, 0xD1	; 209
     902:	97 40       	sbci	r25, 0x07	; 7
     904:	5c f0       	brlt	.+22     	; 0x91c <__stack+0x1d>
	{
		Hardstop=1;
     906:	81 e0       	ldi	r24, 0x01	; 1
     908:	80 93 51 01 	sts	0x0151, r24	; 0x800151 <Hardstop>
		StopDrive();
     90c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <StopDrive>
		stop_sort();
     910:	0e 94 50 03 	call	0x6a0	; 0x6a0 <stop_sort>
		counter_safety=0;	
     914:	10 92 4e 01 	sts	0x014E, r1	; 0x80014e <counter_safety+0x1>
     918:	10 92 4d 01 	sts	0x014D, r1	; 0x80014d <counter_safety>
	}
	
}
     91c:	ff 91       	pop	r31
     91e:	ef 91       	pop	r30
     920:	bf 91       	pop	r27
     922:	af 91       	pop	r26
     924:	9f 91       	pop	r25
     926:	8f 91       	pop	r24
     928:	7f 91       	pop	r23
     92a:	6f 91       	pop	r22
     92c:	5f 91       	pop	r21
     92e:	4f 91       	pop	r20
     930:	3f 91       	pop	r19
     932:	2f 91       	pop	r18
     934:	0f 90       	pop	r0
     936:	0f be       	out	0x3f, r0	; 63
     938:	0f 90       	pop	r0
     93a:	1f 90       	pop	r1
     93c:	18 95       	reti

0000093e <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
     93e:	cf 93       	push	r28
     940:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     942:	8a 30       	cpi	r24, 0x0A	; 10
     944:	19 f4       	brne	.+6      	; 0x94c <uart_putchar+0xe>
		uart_putchar('\r', stream);
     946:	8d e0       	ldi	r24, 0x0D	; 13
     948:	0e 94 9f 04 	call	0x93e	; 0x93e <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     94c:	e0 ec       	ldi	r30, 0xC0	; 192
     94e:	f0 e0       	ldi	r31, 0x00	; 0
     950:	80 81       	ld	r24, Z
     952:	85 ff       	sbrs	r24, 5
     954:	fd cf       	rjmp	.-6      	; 0x950 <uart_putchar+0x12>
	UDR0 = c;
     956:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     95a:	cf 91       	pop	r28
     95c:	08 95       	ret

0000095e <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     95e:	e0 ec       	ldi	r30, 0xC0	; 192
     960:	f0 e0       	ldi	r31, 0x00	; 0
     962:	80 81       	ld	r24, Z
     964:	88 23       	and	r24, r24
     966:	ec f7       	brge	.-6      	; 0x962 <uart_getchar+0x4>
	return UDR0;
     968:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     96c:	08 95       	ret

0000096e <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     96e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
     972:	87 e6       	ldi	r24, 0x67	; 103
     974:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     978:	e0 ec       	ldi	r30, 0xC0	; 192
     97a:	f0 e0       	ldi	r31, 0x00	; 0
     97c:	80 81       	ld	r24, Z
     97e:	8d 7f       	andi	r24, 0xFD	; 253
     980:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     982:	86 e0       	ldi	r24, 0x06	; 6
     984:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     988:	88 e1       	ldi	r24, 0x18	; 24
     98a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     98e:	08 95       	ret

00000990 <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
     990:	e8 e7       	ldi	r30, 0x78	; 120
     992:	f1 e0       	ldi	r31, 0x01	; 1
     994:	8e e0       	ldi	r24, 0x0E	; 14
     996:	91 e0       	ldi	r25, 0x01	; 1
     998:	93 83       	std	Z+3, r25	; 0x03
     99a:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
     99c:	80 e0       	ldi	r24, 0x00	; 0
     99e:	91 e0       	ldi	r25, 0x01	; 1
     9a0:	91 83       	std	Z+1, r25	; 0x01
     9a2:	80 83       	st	Z, r24
     9a4:	08 95       	ret

000009a6 <__subsf3>:
     9a6:	50 58       	subi	r21, 0x80	; 128

000009a8 <__addsf3>:
     9a8:	bb 27       	eor	r27, r27
     9aa:	aa 27       	eor	r26, r26
     9ac:	0e 94 eb 04 	call	0x9d6	; 0x9d6 <__addsf3x>
     9b0:	0c 94 65 06 	jmp	0xcca	; 0xcca <__fp_round>
     9b4:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_pscA>
     9b8:	38 f0       	brcs	.+14     	; 0x9c8 <__addsf3+0x20>
     9ba:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fp_pscB>
     9be:	20 f0       	brcs	.+8      	; 0x9c8 <__addsf3+0x20>
     9c0:	39 f4       	brne	.+14     	; 0x9d0 <__addsf3+0x28>
     9c2:	9f 3f       	cpi	r25, 0xFF	; 255
     9c4:	19 f4       	brne	.+6      	; 0x9cc <__addsf3+0x24>
     9c6:	26 f4       	brtc	.+8      	; 0x9d0 <__addsf3+0x28>
     9c8:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__fp_nan>
     9cc:	0e f4       	brtc	.+2      	; 0x9d0 <__addsf3+0x28>
     9ce:	e0 95       	com	r30
     9d0:	e7 fb       	bst	r30, 7
     9d2:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>

000009d6 <__addsf3x>:
     9d6:	e9 2f       	mov	r30, r25
     9d8:	0e 94 76 06 	call	0xcec	; 0xcec <__fp_split3>
     9dc:	58 f3       	brcs	.-42     	; 0x9b4 <__addsf3+0xc>
     9de:	ba 17       	cp	r27, r26
     9e0:	62 07       	cpc	r22, r18
     9e2:	73 07       	cpc	r23, r19
     9e4:	84 07       	cpc	r24, r20
     9e6:	95 07       	cpc	r25, r21
     9e8:	20 f0       	brcs	.+8      	; 0x9f2 <__addsf3x+0x1c>
     9ea:	79 f4       	brne	.+30     	; 0xa0a <__addsf3x+0x34>
     9ec:	a6 f5       	brtc	.+104    	; 0xa56 <__addsf3x+0x80>
     9ee:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__fp_zero>
     9f2:	0e f4       	brtc	.+2      	; 0x9f6 <__addsf3x+0x20>
     9f4:	e0 95       	com	r30
     9f6:	0b 2e       	mov	r0, r27
     9f8:	ba 2f       	mov	r27, r26
     9fa:	a0 2d       	mov	r26, r0
     9fc:	0b 01       	movw	r0, r22
     9fe:	b9 01       	movw	r22, r18
     a00:	90 01       	movw	r18, r0
     a02:	0c 01       	movw	r0, r24
     a04:	ca 01       	movw	r24, r20
     a06:	a0 01       	movw	r20, r0
     a08:	11 24       	eor	r1, r1
     a0a:	ff 27       	eor	r31, r31
     a0c:	59 1b       	sub	r21, r25
     a0e:	99 f0       	breq	.+38     	; 0xa36 <__addsf3x+0x60>
     a10:	59 3f       	cpi	r21, 0xF9	; 249
     a12:	50 f4       	brcc	.+20     	; 0xa28 <__addsf3x+0x52>
     a14:	50 3e       	cpi	r21, 0xE0	; 224
     a16:	68 f1       	brcs	.+90     	; 0xa72 <__addsf3x+0x9c>
     a18:	1a 16       	cp	r1, r26
     a1a:	f0 40       	sbci	r31, 0x00	; 0
     a1c:	a2 2f       	mov	r26, r18
     a1e:	23 2f       	mov	r18, r19
     a20:	34 2f       	mov	r19, r20
     a22:	44 27       	eor	r20, r20
     a24:	58 5f       	subi	r21, 0xF8	; 248
     a26:	f3 cf       	rjmp	.-26     	; 0xa0e <__addsf3x+0x38>
     a28:	46 95       	lsr	r20
     a2a:	37 95       	ror	r19
     a2c:	27 95       	ror	r18
     a2e:	a7 95       	ror	r26
     a30:	f0 40       	sbci	r31, 0x00	; 0
     a32:	53 95       	inc	r21
     a34:	c9 f7       	brne	.-14     	; 0xa28 <__addsf3x+0x52>
     a36:	7e f4       	brtc	.+30     	; 0xa56 <__addsf3x+0x80>
     a38:	1f 16       	cp	r1, r31
     a3a:	ba 0b       	sbc	r27, r26
     a3c:	62 0b       	sbc	r22, r18
     a3e:	73 0b       	sbc	r23, r19
     a40:	84 0b       	sbc	r24, r20
     a42:	ba f0       	brmi	.+46     	; 0xa72 <__addsf3x+0x9c>
     a44:	91 50       	subi	r25, 0x01	; 1
     a46:	a1 f0       	breq	.+40     	; 0xa70 <__addsf3x+0x9a>
     a48:	ff 0f       	add	r31, r31
     a4a:	bb 1f       	adc	r27, r27
     a4c:	66 1f       	adc	r22, r22
     a4e:	77 1f       	adc	r23, r23
     a50:	88 1f       	adc	r24, r24
     a52:	c2 f7       	brpl	.-16     	; 0xa44 <__addsf3x+0x6e>
     a54:	0e c0       	rjmp	.+28     	; 0xa72 <__addsf3x+0x9c>
     a56:	ba 0f       	add	r27, r26
     a58:	62 1f       	adc	r22, r18
     a5a:	73 1f       	adc	r23, r19
     a5c:	84 1f       	adc	r24, r20
     a5e:	48 f4       	brcc	.+18     	; 0xa72 <__addsf3x+0x9c>
     a60:	87 95       	ror	r24
     a62:	77 95       	ror	r23
     a64:	67 95       	ror	r22
     a66:	b7 95       	ror	r27
     a68:	f7 95       	ror	r31
     a6a:	9e 3f       	cpi	r25, 0xFE	; 254
     a6c:	08 f0       	brcs	.+2      	; 0xa70 <__addsf3x+0x9a>
     a6e:	b0 cf       	rjmp	.-160    	; 0x9d0 <__addsf3+0x28>
     a70:	93 95       	inc	r25
     a72:	88 0f       	add	r24, r24
     a74:	08 f0       	brcs	.+2      	; 0xa78 <__addsf3x+0xa2>
     a76:	99 27       	eor	r25, r25
     a78:	ee 0f       	add	r30, r30
     a7a:	97 95       	ror	r25
     a7c:	87 95       	ror	r24
     a7e:	08 95       	ret

00000a80 <__cmpsf2>:
     a80:	0e 94 2a 06 	call	0xc54	; 0xc54 <__fp_cmp>
     a84:	08 f4       	brcc	.+2      	; 0xa88 <__cmpsf2+0x8>
     a86:	81 e0       	ldi	r24, 0x01	; 1
     a88:	08 95       	ret

00000a8a <__divsf3>:
     a8a:	0e 94 59 05 	call	0xab2	; 0xab2 <__divsf3x>
     a8e:	0c 94 65 06 	jmp	0xcca	; 0xcca <__fp_round>
     a92:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fp_pscB>
     a96:	58 f0       	brcs	.+22     	; 0xaae <__divsf3+0x24>
     a98:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_pscA>
     a9c:	40 f0       	brcs	.+16     	; 0xaae <__divsf3+0x24>
     a9e:	29 f4       	brne	.+10     	; 0xaaa <__divsf3+0x20>
     aa0:	5f 3f       	cpi	r21, 0xFF	; 255
     aa2:	29 f0       	breq	.+10     	; 0xaae <__divsf3+0x24>
     aa4:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>
     aa8:	51 11       	cpse	r21, r1
     aaa:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>
     aae:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__fp_nan>

00000ab2 <__divsf3x>:
     ab2:	0e 94 76 06 	call	0xcec	; 0xcec <__fp_split3>
     ab6:	68 f3       	brcs	.-38     	; 0xa92 <__divsf3+0x8>

00000ab8 <__divsf3_pse>:
     ab8:	99 23       	and	r25, r25
     aba:	b1 f3       	breq	.-20     	; 0xaa8 <__divsf3+0x1e>
     abc:	55 23       	and	r21, r21
     abe:	91 f3       	breq	.-28     	; 0xaa4 <__divsf3+0x1a>
     ac0:	95 1b       	sub	r25, r21
     ac2:	55 0b       	sbc	r21, r21
     ac4:	bb 27       	eor	r27, r27
     ac6:	aa 27       	eor	r26, r26
     ac8:	62 17       	cp	r22, r18
     aca:	73 07       	cpc	r23, r19
     acc:	84 07       	cpc	r24, r20
     ace:	38 f0       	brcs	.+14     	; 0xade <__divsf3_pse+0x26>
     ad0:	9f 5f       	subi	r25, 0xFF	; 255
     ad2:	5f 4f       	sbci	r21, 0xFF	; 255
     ad4:	22 0f       	add	r18, r18
     ad6:	33 1f       	adc	r19, r19
     ad8:	44 1f       	adc	r20, r20
     ada:	aa 1f       	adc	r26, r26
     adc:	a9 f3       	breq	.-22     	; 0xac8 <__divsf3_pse+0x10>
     ade:	35 d0       	rcall	.+106    	; 0xb4a <__divsf3_pse+0x92>
     ae0:	0e 2e       	mov	r0, r30
     ae2:	3a f0       	brmi	.+14     	; 0xaf2 <__divsf3_pse+0x3a>
     ae4:	e0 e8       	ldi	r30, 0x80	; 128
     ae6:	32 d0       	rcall	.+100    	; 0xb4c <__divsf3_pse+0x94>
     ae8:	91 50       	subi	r25, 0x01	; 1
     aea:	50 40       	sbci	r21, 0x00	; 0
     aec:	e6 95       	lsr	r30
     aee:	00 1c       	adc	r0, r0
     af0:	ca f7       	brpl	.-14     	; 0xae4 <__divsf3_pse+0x2c>
     af2:	2b d0       	rcall	.+86     	; 0xb4a <__divsf3_pse+0x92>
     af4:	fe 2f       	mov	r31, r30
     af6:	29 d0       	rcall	.+82     	; 0xb4a <__divsf3_pse+0x92>
     af8:	66 0f       	add	r22, r22
     afa:	77 1f       	adc	r23, r23
     afc:	88 1f       	adc	r24, r24
     afe:	bb 1f       	adc	r27, r27
     b00:	26 17       	cp	r18, r22
     b02:	37 07       	cpc	r19, r23
     b04:	48 07       	cpc	r20, r24
     b06:	ab 07       	cpc	r26, r27
     b08:	b0 e8       	ldi	r27, 0x80	; 128
     b0a:	09 f0       	breq	.+2      	; 0xb0e <__divsf3_pse+0x56>
     b0c:	bb 0b       	sbc	r27, r27
     b0e:	80 2d       	mov	r24, r0
     b10:	bf 01       	movw	r22, r30
     b12:	ff 27       	eor	r31, r31
     b14:	93 58       	subi	r25, 0x83	; 131
     b16:	5f 4f       	sbci	r21, 0xFF	; 255
     b18:	3a f0       	brmi	.+14     	; 0xb28 <__divsf3_pse+0x70>
     b1a:	9e 3f       	cpi	r25, 0xFE	; 254
     b1c:	51 05       	cpc	r21, r1
     b1e:	78 f0       	brcs	.+30     	; 0xb3e <__divsf3_pse+0x86>
     b20:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>
     b24:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>
     b28:	5f 3f       	cpi	r21, 0xFF	; 255
     b2a:	e4 f3       	brlt	.-8      	; 0xb24 <__divsf3_pse+0x6c>
     b2c:	98 3e       	cpi	r25, 0xE8	; 232
     b2e:	d4 f3       	brlt	.-12     	; 0xb24 <__divsf3_pse+0x6c>
     b30:	86 95       	lsr	r24
     b32:	77 95       	ror	r23
     b34:	67 95       	ror	r22
     b36:	b7 95       	ror	r27
     b38:	f7 95       	ror	r31
     b3a:	9f 5f       	subi	r25, 0xFF	; 255
     b3c:	c9 f7       	brne	.-14     	; 0xb30 <__divsf3_pse+0x78>
     b3e:	88 0f       	add	r24, r24
     b40:	91 1d       	adc	r25, r1
     b42:	96 95       	lsr	r25
     b44:	87 95       	ror	r24
     b46:	97 f9       	bld	r25, 7
     b48:	08 95       	ret
     b4a:	e1 e0       	ldi	r30, 0x01	; 1
     b4c:	66 0f       	add	r22, r22
     b4e:	77 1f       	adc	r23, r23
     b50:	88 1f       	adc	r24, r24
     b52:	bb 1f       	adc	r27, r27
     b54:	62 17       	cp	r22, r18
     b56:	73 07       	cpc	r23, r19
     b58:	84 07       	cpc	r24, r20
     b5a:	ba 07       	cpc	r27, r26
     b5c:	20 f0       	brcs	.+8      	; 0xb66 <__divsf3_pse+0xae>
     b5e:	62 1b       	sub	r22, r18
     b60:	73 0b       	sbc	r23, r19
     b62:	84 0b       	sbc	r24, r20
     b64:	ba 0b       	sbc	r27, r26
     b66:	ee 1f       	adc	r30, r30
     b68:	88 f7       	brcc	.-30     	; 0xb4c <__divsf3_pse+0x94>
     b6a:	e0 95       	com	r30
     b6c:	08 95       	ret

00000b6e <__fixsfsi>:
     b6e:	0e 94 be 05 	call	0xb7c	; 0xb7c <__fixunssfsi>
     b72:	68 94       	set
     b74:	b1 11       	cpse	r27, r1
     b76:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>
     b7a:	08 95       	ret

00000b7c <__fixunssfsi>:
     b7c:	0e 94 7e 06 	call	0xcfc	; 0xcfc <__fp_splitA>
     b80:	88 f0       	brcs	.+34     	; 0xba4 <__fixunssfsi+0x28>
     b82:	9f 57       	subi	r25, 0x7F	; 127
     b84:	98 f0       	brcs	.+38     	; 0xbac <__fixunssfsi+0x30>
     b86:	b9 2f       	mov	r27, r25
     b88:	99 27       	eor	r25, r25
     b8a:	b7 51       	subi	r27, 0x17	; 23
     b8c:	b0 f0       	brcs	.+44     	; 0xbba <__fixunssfsi+0x3e>
     b8e:	e1 f0       	breq	.+56     	; 0xbc8 <__fixunssfsi+0x4c>
     b90:	66 0f       	add	r22, r22
     b92:	77 1f       	adc	r23, r23
     b94:	88 1f       	adc	r24, r24
     b96:	99 1f       	adc	r25, r25
     b98:	1a f0       	brmi	.+6      	; 0xba0 <__fixunssfsi+0x24>
     b9a:	ba 95       	dec	r27
     b9c:	c9 f7       	brne	.-14     	; 0xb90 <__fixunssfsi+0x14>
     b9e:	14 c0       	rjmp	.+40     	; 0xbc8 <__fixunssfsi+0x4c>
     ba0:	b1 30       	cpi	r27, 0x01	; 1
     ba2:	91 f0       	breq	.+36     	; 0xbc8 <__fixunssfsi+0x4c>
     ba4:	0e 94 98 06 	call	0xd30	; 0xd30 <__fp_zero>
     ba8:	b1 e0       	ldi	r27, 0x01	; 1
     baa:	08 95       	ret
     bac:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__fp_zero>
     bb0:	67 2f       	mov	r22, r23
     bb2:	78 2f       	mov	r23, r24
     bb4:	88 27       	eor	r24, r24
     bb6:	b8 5f       	subi	r27, 0xF8	; 248
     bb8:	39 f0       	breq	.+14     	; 0xbc8 <__fixunssfsi+0x4c>
     bba:	b9 3f       	cpi	r27, 0xF9	; 249
     bbc:	cc f3       	brlt	.-14     	; 0xbb0 <__fixunssfsi+0x34>
     bbe:	86 95       	lsr	r24
     bc0:	77 95       	ror	r23
     bc2:	67 95       	ror	r22
     bc4:	b3 95       	inc	r27
     bc6:	d9 f7       	brne	.-10     	; 0xbbe <__fixunssfsi+0x42>
     bc8:	3e f4       	brtc	.+14     	; 0xbd8 <__fixunssfsi+0x5c>
     bca:	90 95       	com	r25
     bcc:	80 95       	com	r24
     bce:	70 95       	com	r23
     bd0:	61 95       	neg	r22
     bd2:	7f 4f       	sbci	r23, 0xFF	; 255
     bd4:	8f 4f       	sbci	r24, 0xFF	; 255
     bd6:	9f 4f       	sbci	r25, 0xFF	; 255
     bd8:	08 95       	ret

00000bda <__floatunsisf>:
     bda:	e8 94       	clt
     bdc:	09 c0       	rjmp	.+18     	; 0xbf0 <__floatsisf+0x12>

00000bde <__floatsisf>:
     bde:	97 fb       	bst	r25, 7
     be0:	3e f4       	brtc	.+14     	; 0xbf0 <__floatsisf+0x12>
     be2:	90 95       	com	r25
     be4:	80 95       	com	r24
     be6:	70 95       	com	r23
     be8:	61 95       	neg	r22
     bea:	7f 4f       	sbci	r23, 0xFF	; 255
     bec:	8f 4f       	sbci	r24, 0xFF	; 255
     bee:	9f 4f       	sbci	r25, 0xFF	; 255
     bf0:	99 23       	and	r25, r25
     bf2:	a9 f0       	breq	.+42     	; 0xc1e <__floatsisf+0x40>
     bf4:	f9 2f       	mov	r31, r25
     bf6:	96 e9       	ldi	r25, 0x96	; 150
     bf8:	bb 27       	eor	r27, r27
     bfa:	93 95       	inc	r25
     bfc:	f6 95       	lsr	r31
     bfe:	87 95       	ror	r24
     c00:	77 95       	ror	r23
     c02:	67 95       	ror	r22
     c04:	b7 95       	ror	r27
     c06:	f1 11       	cpse	r31, r1
     c08:	f8 cf       	rjmp	.-16     	; 0xbfa <__floatsisf+0x1c>
     c0a:	fa f4       	brpl	.+62     	; 0xc4a <__floatsisf+0x6c>
     c0c:	bb 0f       	add	r27, r27
     c0e:	11 f4       	brne	.+4      	; 0xc14 <__floatsisf+0x36>
     c10:	60 ff       	sbrs	r22, 0
     c12:	1b c0       	rjmp	.+54     	; 0xc4a <__floatsisf+0x6c>
     c14:	6f 5f       	subi	r22, 0xFF	; 255
     c16:	7f 4f       	sbci	r23, 0xFF	; 255
     c18:	8f 4f       	sbci	r24, 0xFF	; 255
     c1a:	9f 4f       	sbci	r25, 0xFF	; 255
     c1c:	16 c0       	rjmp	.+44     	; 0xc4a <__floatsisf+0x6c>
     c1e:	88 23       	and	r24, r24
     c20:	11 f0       	breq	.+4      	; 0xc26 <__floatsisf+0x48>
     c22:	96 e9       	ldi	r25, 0x96	; 150
     c24:	11 c0       	rjmp	.+34     	; 0xc48 <__floatsisf+0x6a>
     c26:	77 23       	and	r23, r23
     c28:	21 f0       	breq	.+8      	; 0xc32 <__floatsisf+0x54>
     c2a:	9e e8       	ldi	r25, 0x8E	; 142
     c2c:	87 2f       	mov	r24, r23
     c2e:	76 2f       	mov	r23, r22
     c30:	05 c0       	rjmp	.+10     	; 0xc3c <__floatsisf+0x5e>
     c32:	66 23       	and	r22, r22
     c34:	71 f0       	breq	.+28     	; 0xc52 <__floatsisf+0x74>
     c36:	96 e8       	ldi	r25, 0x86	; 134
     c38:	86 2f       	mov	r24, r22
     c3a:	70 e0       	ldi	r23, 0x00	; 0
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	2a f0       	brmi	.+10     	; 0xc4a <__floatsisf+0x6c>
     c40:	9a 95       	dec	r25
     c42:	66 0f       	add	r22, r22
     c44:	77 1f       	adc	r23, r23
     c46:	88 1f       	adc	r24, r24
     c48:	da f7       	brpl	.-10     	; 0xc40 <__floatsisf+0x62>
     c4a:	88 0f       	add	r24, r24
     c4c:	96 95       	lsr	r25
     c4e:	87 95       	ror	r24
     c50:	97 f9       	bld	r25, 7
     c52:	08 95       	ret

00000c54 <__fp_cmp>:
     c54:	99 0f       	add	r25, r25
     c56:	00 08       	sbc	r0, r0
     c58:	55 0f       	add	r21, r21
     c5a:	aa 0b       	sbc	r26, r26
     c5c:	e0 e8       	ldi	r30, 0x80	; 128
     c5e:	fe ef       	ldi	r31, 0xFE	; 254
     c60:	16 16       	cp	r1, r22
     c62:	17 06       	cpc	r1, r23
     c64:	e8 07       	cpc	r30, r24
     c66:	f9 07       	cpc	r31, r25
     c68:	c0 f0       	brcs	.+48     	; 0xc9a <__fp_cmp+0x46>
     c6a:	12 16       	cp	r1, r18
     c6c:	13 06       	cpc	r1, r19
     c6e:	e4 07       	cpc	r30, r20
     c70:	f5 07       	cpc	r31, r21
     c72:	98 f0       	brcs	.+38     	; 0xc9a <__fp_cmp+0x46>
     c74:	62 1b       	sub	r22, r18
     c76:	73 0b       	sbc	r23, r19
     c78:	84 0b       	sbc	r24, r20
     c7a:	95 0b       	sbc	r25, r21
     c7c:	39 f4       	brne	.+14     	; 0xc8c <__fp_cmp+0x38>
     c7e:	0a 26       	eor	r0, r26
     c80:	61 f0       	breq	.+24     	; 0xc9a <__fp_cmp+0x46>
     c82:	23 2b       	or	r18, r19
     c84:	24 2b       	or	r18, r20
     c86:	25 2b       	or	r18, r21
     c88:	21 f4       	brne	.+8      	; 0xc92 <__fp_cmp+0x3e>
     c8a:	08 95       	ret
     c8c:	0a 26       	eor	r0, r26
     c8e:	09 f4       	brne	.+2      	; 0xc92 <__fp_cmp+0x3e>
     c90:	a1 40       	sbci	r26, 0x01	; 1
     c92:	a6 95       	lsr	r26
     c94:	8f ef       	ldi	r24, 0xFF	; 255
     c96:	81 1d       	adc	r24, r1
     c98:	81 1d       	adc	r24, r1
     c9a:	08 95       	ret

00000c9c <__fp_inf>:
     c9c:	97 f9       	bld	r25, 7
     c9e:	9f 67       	ori	r25, 0x7F	; 127
     ca0:	80 e8       	ldi	r24, 0x80	; 128
     ca2:	70 e0       	ldi	r23, 0x00	; 0
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	08 95       	ret

00000ca8 <__fp_nan>:
     ca8:	9f ef       	ldi	r25, 0xFF	; 255
     caa:	80 ec       	ldi	r24, 0xC0	; 192
     cac:	08 95       	ret

00000cae <__fp_pscA>:
     cae:	00 24       	eor	r0, r0
     cb0:	0a 94       	dec	r0
     cb2:	16 16       	cp	r1, r22
     cb4:	17 06       	cpc	r1, r23
     cb6:	18 06       	cpc	r1, r24
     cb8:	09 06       	cpc	r0, r25
     cba:	08 95       	ret

00000cbc <__fp_pscB>:
     cbc:	00 24       	eor	r0, r0
     cbe:	0a 94       	dec	r0
     cc0:	12 16       	cp	r1, r18
     cc2:	13 06       	cpc	r1, r19
     cc4:	14 06       	cpc	r1, r20
     cc6:	05 06       	cpc	r0, r21
     cc8:	08 95       	ret

00000cca <__fp_round>:
     cca:	09 2e       	mov	r0, r25
     ccc:	03 94       	inc	r0
     cce:	00 0c       	add	r0, r0
     cd0:	11 f4       	brne	.+4      	; 0xcd6 <__fp_round+0xc>
     cd2:	88 23       	and	r24, r24
     cd4:	52 f0       	brmi	.+20     	; 0xcea <__fp_round+0x20>
     cd6:	bb 0f       	add	r27, r27
     cd8:	40 f4       	brcc	.+16     	; 0xcea <__fp_round+0x20>
     cda:	bf 2b       	or	r27, r31
     cdc:	11 f4       	brne	.+4      	; 0xce2 <__fp_round+0x18>
     cde:	60 ff       	sbrs	r22, 0
     ce0:	04 c0       	rjmp	.+8      	; 0xcea <__fp_round+0x20>
     ce2:	6f 5f       	subi	r22, 0xFF	; 255
     ce4:	7f 4f       	sbci	r23, 0xFF	; 255
     ce6:	8f 4f       	sbci	r24, 0xFF	; 255
     ce8:	9f 4f       	sbci	r25, 0xFF	; 255
     cea:	08 95       	ret

00000cec <__fp_split3>:
     cec:	57 fd       	sbrc	r21, 7
     cee:	90 58       	subi	r25, 0x80	; 128
     cf0:	44 0f       	add	r20, r20
     cf2:	55 1f       	adc	r21, r21
     cf4:	59 f0       	breq	.+22     	; 0xd0c <__fp_splitA+0x10>
     cf6:	5f 3f       	cpi	r21, 0xFF	; 255
     cf8:	71 f0       	breq	.+28     	; 0xd16 <__fp_splitA+0x1a>
     cfa:	47 95       	ror	r20

00000cfc <__fp_splitA>:
     cfc:	88 0f       	add	r24, r24
     cfe:	97 fb       	bst	r25, 7
     d00:	99 1f       	adc	r25, r25
     d02:	61 f0       	breq	.+24     	; 0xd1c <__fp_splitA+0x20>
     d04:	9f 3f       	cpi	r25, 0xFF	; 255
     d06:	79 f0       	breq	.+30     	; 0xd26 <__fp_splitA+0x2a>
     d08:	87 95       	ror	r24
     d0a:	08 95       	ret
     d0c:	12 16       	cp	r1, r18
     d0e:	13 06       	cpc	r1, r19
     d10:	14 06       	cpc	r1, r20
     d12:	55 1f       	adc	r21, r21
     d14:	f2 cf       	rjmp	.-28     	; 0xcfa <__fp_split3+0xe>
     d16:	46 95       	lsr	r20
     d18:	f1 df       	rcall	.-30     	; 0xcfc <__fp_splitA>
     d1a:	08 c0       	rjmp	.+16     	; 0xd2c <__fp_splitA+0x30>
     d1c:	16 16       	cp	r1, r22
     d1e:	17 06       	cpc	r1, r23
     d20:	18 06       	cpc	r1, r24
     d22:	99 1f       	adc	r25, r25
     d24:	f1 cf       	rjmp	.-30     	; 0xd08 <__fp_splitA+0xc>
     d26:	86 95       	lsr	r24
     d28:	71 05       	cpc	r23, r1
     d2a:	61 05       	cpc	r22, r1
     d2c:	08 94       	sec
     d2e:	08 95       	ret

00000d30 <__fp_zero>:
     d30:	e8 94       	clt

00000d32 <__fp_szero>:
     d32:	bb 27       	eor	r27, r27
     d34:	66 27       	eor	r22, r22
     d36:	77 27       	eor	r23, r23
     d38:	cb 01       	movw	r24, r22
     d3a:	97 f9       	bld	r25, 7
     d3c:	08 95       	ret

00000d3e <__mulsf3>:
     d3e:	0e 94 b2 06 	call	0xd64	; 0xd64 <__mulsf3x>
     d42:	0c 94 65 06 	jmp	0xcca	; 0xcca <__fp_round>
     d46:	0e 94 57 06 	call	0xcae	; 0xcae <__fp_pscA>
     d4a:	38 f0       	brcs	.+14     	; 0xd5a <__mulsf3+0x1c>
     d4c:	0e 94 5e 06 	call	0xcbc	; 0xcbc <__fp_pscB>
     d50:	20 f0       	brcs	.+8      	; 0xd5a <__mulsf3+0x1c>
     d52:	95 23       	and	r25, r21
     d54:	11 f0       	breq	.+4      	; 0xd5a <__mulsf3+0x1c>
     d56:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>
     d5a:	0c 94 54 06 	jmp	0xca8	; 0xca8 <__fp_nan>
     d5e:	11 24       	eor	r1, r1
     d60:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>

00000d64 <__mulsf3x>:
     d64:	0e 94 76 06 	call	0xcec	; 0xcec <__fp_split3>
     d68:	70 f3       	brcs	.-36     	; 0xd46 <__mulsf3+0x8>

00000d6a <__mulsf3_pse>:
     d6a:	95 9f       	mul	r25, r21
     d6c:	c1 f3       	breq	.-16     	; 0xd5e <__mulsf3+0x20>
     d6e:	95 0f       	add	r25, r21
     d70:	50 e0       	ldi	r21, 0x00	; 0
     d72:	55 1f       	adc	r21, r21
     d74:	62 9f       	mul	r22, r18
     d76:	f0 01       	movw	r30, r0
     d78:	72 9f       	mul	r23, r18
     d7a:	bb 27       	eor	r27, r27
     d7c:	f0 0d       	add	r31, r0
     d7e:	b1 1d       	adc	r27, r1
     d80:	63 9f       	mul	r22, r19
     d82:	aa 27       	eor	r26, r26
     d84:	f0 0d       	add	r31, r0
     d86:	b1 1d       	adc	r27, r1
     d88:	aa 1f       	adc	r26, r26
     d8a:	64 9f       	mul	r22, r20
     d8c:	66 27       	eor	r22, r22
     d8e:	b0 0d       	add	r27, r0
     d90:	a1 1d       	adc	r26, r1
     d92:	66 1f       	adc	r22, r22
     d94:	82 9f       	mul	r24, r18
     d96:	22 27       	eor	r18, r18
     d98:	b0 0d       	add	r27, r0
     d9a:	a1 1d       	adc	r26, r1
     d9c:	62 1f       	adc	r22, r18
     d9e:	73 9f       	mul	r23, r19
     da0:	b0 0d       	add	r27, r0
     da2:	a1 1d       	adc	r26, r1
     da4:	62 1f       	adc	r22, r18
     da6:	83 9f       	mul	r24, r19
     da8:	a0 0d       	add	r26, r0
     daa:	61 1d       	adc	r22, r1
     dac:	22 1f       	adc	r18, r18
     dae:	74 9f       	mul	r23, r20
     db0:	33 27       	eor	r19, r19
     db2:	a0 0d       	add	r26, r0
     db4:	61 1d       	adc	r22, r1
     db6:	23 1f       	adc	r18, r19
     db8:	84 9f       	mul	r24, r20
     dba:	60 0d       	add	r22, r0
     dbc:	21 1d       	adc	r18, r1
     dbe:	82 2f       	mov	r24, r18
     dc0:	76 2f       	mov	r23, r22
     dc2:	6a 2f       	mov	r22, r26
     dc4:	11 24       	eor	r1, r1
     dc6:	9f 57       	subi	r25, 0x7F	; 127
     dc8:	50 40       	sbci	r21, 0x00	; 0
     dca:	9a f0       	brmi	.+38     	; 0xdf2 <__mulsf3_pse+0x88>
     dcc:	f1 f0       	breq	.+60     	; 0xe0a <__mulsf3_pse+0xa0>
     dce:	88 23       	and	r24, r24
     dd0:	4a f0       	brmi	.+18     	; 0xde4 <__mulsf3_pse+0x7a>
     dd2:	ee 0f       	add	r30, r30
     dd4:	ff 1f       	adc	r31, r31
     dd6:	bb 1f       	adc	r27, r27
     dd8:	66 1f       	adc	r22, r22
     dda:	77 1f       	adc	r23, r23
     ddc:	88 1f       	adc	r24, r24
     dde:	91 50       	subi	r25, 0x01	; 1
     de0:	50 40       	sbci	r21, 0x00	; 0
     de2:	a9 f7       	brne	.-22     	; 0xdce <__mulsf3_pse+0x64>
     de4:	9e 3f       	cpi	r25, 0xFE	; 254
     de6:	51 05       	cpc	r21, r1
     de8:	80 f0       	brcs	.+32     	; 0xe0a <__mulsf3_pse+0xa0>
     dea:	0c 94 4e 06 	jmp	0xc9c	; 0xc9c <__fp_inf>
     dee:	0c 94 99 06 	jmp	0xd32	; 0xd32 <__fp_szero>
     df2:	5f 3f       	cpi	r21, 0xFF	; 255
     df4:	e4 f3       	brlt	.-8      	; 0xdee <__mulsf3_pse+0x84>
     df6:	98 3e       	cpi	r25, 0xE8	; 232
     df8:	d4 f3       	brlt	.-12     	; 0xdee <__mulsf3_pse+0x84>
     dfa:	86 95       	lsr	r24
     dfc:	77 95       	ror	r23
     dfe:	67 95       	ror	r22
     e00:	b7 95       	ror	r27
     e02:	f7 95       	ror	r31
     e04:	e7 95       	ror	r30
     e06:	9f 5f       	subi	r25, 0xFF	; 255
     e08:	c1 f7       	brne	.-16     	; 0xdfa <__mulsf3_pse+0x90>
     e0a:	fe 2b       	or	r31, r30
     e0c:	88 0f       	add	r24, r24
     e0e:	91 1d       	adc	r25, r1
     e10:	96 95       	lsr	r25
     e12:	87 95       	ror	r24
     e14:	97 f9       	bld	r25, 7
     e16:	08 95       	ret

00000e18 <__divmodhi4>:
     e18:	97 fb       	bst	r25, 7
     e1a:	07 2e       	mov	r0, r23
     e1c:	16 f4       	brtc	.+4      	; 0xe22 <__divmodhi4+0xa>
     e1e:	00 94       	com	r0
     e20:	07 d0       	rcall	.+14     	; 0xe30 <__divmodhi4_neg1>
     e22:	77 fd       	sbrc	r23, 7
     e24:	09 d0       	rcall	.+18     	; 0xe38 <__divmodhi4_neg2>
     e26:	0e 94 20 07 	call	0xe40	; 0xe40 <__udivmodhi4>
     e2a:	07 fc       	sbrc	r0, 7
     e2c:	05 d0       	rcall	.+10     	; 0xe38 <__divmodhi4_neg2>
     e2e:	3e f4       	brtc	.+14     	; 0xe3e <__divmodhi4_exit>

00000e30 <__divmodhi4_neg1>:
     e30:	90 95       	com	r25
     e32:	81 95       	neg	r24
     e34:	9f 4f       	sbci	r25, 0xFF	; 255
     e36:	08 95       	ret

00000e38 <__divmodhi4_neg2>:
     e38:	70 95       	com	r23
     e3a:	61 95       	neg	r22
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255

00000e3e <__divmodhi4_exit>:
     e3e:	08 95       	ret

00000e40 <__udivmodhi4>:
     e40:	aa 1b       	sub	r26, r26
     e42:	bb 1b       	sub	r27, r27
     e44:	51 e1       	ldi	r21, 0x11	; 17
     e46:	07 c0       	rjmp	.+14     	; 0xe56 <__udivmodhi4_ep>

00000e48 <__udivmodhi4_loop>:
     e48:	aa 1f       	adc	r26, r26
     e4a:	bb 1f       	adc	r27, r27
     e4c:	a6 17       	cp	r26, r22
     e4e:	b7 07       	cpc	r27, r23
     e50:	10 f0       	brcs	.+4      	; 0xe56 <__udivmodhi4_ep>
     e52:	a6 1b       	sub	r26, r22
     e54:	b7 0b       	sbc	r27, r23

00000e56 <__udivmodhi4_ep>:
     e56:	88 1f       	adc	r24, r24
     e58:	99 1f       	adc	r25, r25
     e5a:	5a 95       	dec	r21
     e5c:	a9 f7       	brne	.-22     	; 0xe48 <__udivmodhi4_loop>
     e5e:	80 95       	com	r24
     e60:	90 95       	com	r25
     e62:	bc 01       	movw	r22, r24
     e64:	cd 01       	movw	r24, r26
     e66:	08 95       	ret

00000e68 <printf>:
     e68:	a0 e0       	ldi	r26, 0x00	; 0
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	ea e3       	ldi	r30, 0x3A	; 58
     e6e:	f7 e0       	ldi	r31, 0x07	; 7
     e70:	0c 94 eb 09 	jmp	0x13d6	; 0x13d6 <__prologue_saves__+0x20>
     e74:	ae 01       	movw	r20, r28
     e76:	4b 5f       	subi	r20, 0xFB	; 251
     e78:	5f 4f       	sbci	r21, 0xFF	; 255
     e7a:	fa 01       	movw	r30, r20
     e7c:	61 91       	ld	r22, Z+
     e7e:	71 91       	ld	r23, Z+
     e80:	af 01       	movw	r20, r30
     e82:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__iob+0x2>
     e86:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__iob+0x3>
     e8a:	0e 94 4a 07 	call	0xe94	; 0xe94 <vfprintf>
     e8e:	e2 e0       	ldi	r30, 0x02	; 2
     e90:	0c 94 07 0a 	jmp	0x140e	; 0x140e <__epilogue_restores__+0x20>

00000e94 <vfprintf>:
     e94:	ab e0       	ldi	r26, 0x0B	; 11
     e96:	b0 e0       	ldi	r27, 0x00	; 0
     e98:	e0 e5       	ldi	r30, 0x50	; 80
     e9a:	f7 e0       	ldi	r31, 0x07	; 7
     e9c:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__prologue_saves__>
     ea0:	6c 01       	movw	r12, r24
     ea2:	7b 01       	movw	r14, r22
     ea4:	8a 01       	movw	r16, r20
     ea6:	fc 01       	movw	r30, r24
     ea8:	17 82       	std	Z+7, r1	; 0x07
     eaa:	16 82       	std	Z+6, r1	; 0x06
     eac:	83 81       	ldd	r24, Z+3	; 0x03
     eae:	81 ff       	sbrs	r24, 1
     eb0:	cc c1       	rjmp	.+920    	; 0x124a <vfprintf+0x3b6>
     eb2:	ce 01       	movw	r24, r28
     eb4:	01 96       	adiw	r24, 0x01	; 1
     eb6:	3c 01       	movw	r6, r24
     eb8:	f6 01       	movw	r30, r12
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	f7 01       	movw	r30, r14
     ebe:	93 fd       	sbrc	r25, 3
     ec0:	85 91       	lpm	r24, Z+
     ec2:	93 ff       	sbrs	r25, 3
     ec4:	81 91       	ld	r24, Z+
     ec6:	7f 01       	movw	r14, r30
     ec8:	88 23       	and	r24, r24
     eca:	09 f4       	brne	.+2      	; 0xece <vfprintf+0x3a>
     ecc:	ba c1       	rjmp	.+884    	; 0x1242 <vfprintf+0x3ae>
     ece:	85 32       	cpi	r24, 0x25	; 37
     ed0:	39 f4       	brne	.+14     	; 0xee0 <vfprintf+0x4c>
     ed2:	93 fd       	sbrc	r25, 3
     ed4:	85 91       	lpm	r24, Z+
     ed6:	93 ff       	sbrs	r25, 3
     ed8:	81 91       	ld	r24, Z+
     eda:	7f 01       	movw	r14, r30
     edc:	85 32       	cpi	r24, 0x25	; 37
     ede:	29 f4       	brne	.+10     	; 0xeea <vfprintf+0x56>
     ee0:	b6 01       	movw	r22, r12
     ee2:	90 e0       	ldi	r25, 0x00	; 0
     ee4:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
     ee8:	e7 cf       	rjmp	.-50     	; 0xeb8 <vfprintf+0x24>
     eea:	91 2c       	mov	r9, r1
     eec:	21 2c       	mov	r2, r1
     eee:	31 2c       	mov	r3, r1
     ef0:	ff e1       	ldi	r31, 0x1F	; 31
     ef2:	f3 15       	cp	r31, r3
     ef4:	d8 f0       	brcs	.+54     	; 0xf2c <vfprintf+0x98>
     ef6:	8b 32       	cpi	r24, 0x2B	; 43
     ef8:	79 f0       	breq	.+30     	; 0xf18 <vfprintf+0x84>
     efa:	38 f4       	brcc	.+14     	; 0xf0a <vfprintf+0x76>
     efc:	80 32       	cpi	r24, 0x20	; 32
     efe:	79 f0       	breq	.+30     	; 0xf1e <vfprintf+0x8a>
     f00:	83 32       	cpi	r24, 0x23	; 35
     f02:	a1 f4       	brne	.+40     	; 0xf2c <vfprintf+0x98>
     f04:	23 2d       	mov	r18, r3
     f06:	20 61       	ori	r18, 0x10	; 16
     f08:	1d c0       	rjmp	.+58     	; 0xf44 <vfprintf+0xb0>
     f0a:	8d 32       	cpi	r24, 0x2D	; 45
     f0c:	61 f0       	breq	.+24     	; 0xf26 <vfprintf+0x92>
     f0e:	80 33       	cpi	r24, 0x30	; 48
     f10:	69 f4       	brne	.+26     	; 0xf2c <vfprintf+0x98>
     f12:	23 2d       	mov	r18, r3
     f14:	21 60       	ori	r18, 0x01	; 1
     f16:	16 c0       	rjmp	.+44     	; 0xf44 <vfprintf+0xb0>
     f18:	83 2d       	mov	r24, r3
     f1a:	82 60       	ori	r24, 0x02	; 2
     f1c:	38 2e       	mov	r3, r24
     f1e:	e3 2d       	mov	r30, r3
     f20:	e4 60       	ori	r30, 0x04	; 4
     f22:	3e 2e       	mov	r3, r30
     f24:	2a c0       	rjmp	.+84     	; 0xf7a <vfprintf+0xe6>
     f26:	f3 2d       	mov	r31, r3
     f28:	f8 60       	ori	r31, 0x08	; 8
     f2a:	1d c0       	rjmp	.+58     	; 0xf66 <vfprintf+0xd2>
     f2c:	37 fc       	sbrc	r3, 7
     f2e:	2d c0       	rjmp	.+90     	; 0xf8a <vfprintf+0xf6>
     f30:	20 ed       	ldi	r18, 0xD0	; 208
     f32:	28 0f       	add	r18, r24
     f34:	2a 30       	cpi	r18, 0x0A	; 10
     f36:	40 f0       	brcs	.+16     	; 0xf48 <vfprintf+0xb4>
     f38:	8e 32       	cpi	r24, 0x2E	; 46
     f3a:	b9 f4       	brne	.+46     	; 0xf6a <vfprintf+0xd6>
     f3c:	36 fc       	sbrc	r3, 6
     f3e:	81 c1       	rjmp	.+770    	; 0x1242 <vfprintf+0x3ae>
     f40:	23 2d       	mov	r18, r3
     f42:	20 64       	ori	r18, 0x40	; 64
     f44:	32 2e       	mov	r3, r18
     f46:	19 c0       	rjmp	.+50     	; 0xf7a <vfprintf+0xe6>
     f48:	36 fe       	sbrs	r3, 6
     f4a:	06 c0       	rjmp	.+12     	; 0xf58 <vfprintf+0xc4>
     f4c:	8a e0       	ldi	r24, 0x0A	; 10
     f4e:	98 9e       	mul	r9, r24
     f50:	20 0d       	add	r18, r0
     f52:	11 24       	eor	r1, r1
     f54:	92 2e       	mov	r9, r18
     f56:	11 c0       	rjmp	.+34     	; 0xf7a <vfprintf+0xe6>
     f58:	ea e0       	ldi	r30, 0x0A	; 10
     f5a:	2e 9e       	mul	r2, r30
     f5c:	20 0d       	add	r18, r0
     f5e:	11 24       	eor	r1, r1
     f60:	22 2e       	mov	r2, r18
     f62:	f3 2d       	mov	r31, r3
     f64:	f0 62       	ori	r31, 0x20	; 32
     f66:	3f 2e       	mov	r3, r31
     f68:	08 c0       	rjmp	.+16     	; 0xf7a <vfprintf+0xe6>
     f6a:	8c 36       	cpi	r24, 0x6C	; 108
     f6c:	21 f4       	brne	.+8      	; 0xf76 <vfprintf+0xe2>
     f6e:	83 2d       	mov	r24, r3
     f70:	80 68       	ori	r24, 0x80	; 128
     f72:	38 2e       	mov	r3, r24
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <vfprintf+0xe6>
     f76:	88 36       	cpi	r24, 0x68	; 104
     f78:	41 f4       	brne	.+16     	; 0xf8a <vfprintf+0xf6>
     f7a:	f7 01       	movw	r30, r14
     f7c:	93 fd       	sbrc	r25, 3
     f7e:	85 91       	lpm	r24, Z+
     f80:	93 ff       	sbrs	r25, 3
     f82:	81 91       	ld	r24, Z+
     f84:	7f 01       	movw	r14, r30
     f86:	81 11       	cpse	r24, r1
     f88:	b3 cf       	rjmp	.-154    	; 0xef0 <vfprintf+0x5c>
     f8a:	98 2f       	mov	r25, r24
     f8c:	9f 7d       	andi	r25, 0xDF	; 223
     f8e:	95 54       	subi	r25, 0x45	; 69
     f90:	93 30       	cpi	r25, 0x03	; 3
     f92:	28 f4       	brcc	.+10     	; 0xf9e <vfprintf+0x10a>
     f94:	0c 5f       	subi	r16, 0xFC	; 252
     f96:	1f 4f       	sbci	r17, 0xFF	; 255
     f98:	9f e3       	ldi	r25, 0x3F	; 63
     f9a:	99 83       	std	Y+1, r25	; 0x01
     f9c:	0d c0       	rjmp	.+26     	; 0xfb8 <vfprintf+0x124>
     f9e:	83 36       	cpi	r24, 0x63	; 99
     fa0:	31 f0       	breq	.+12     	; 0xfae <vfprintf+0x11a>
     fa2:	83 37       	cpi	r24, 0x73	; 115
     fa4:	71 f0       	breq	.+28     	; 0xfc2 <vfprintf+0x12e>
     fa6:	83 35       	cpi	r24, 0x53	; 83
     fa8:	09 f0       	breq	.+2      	; 0xfac <vfprintf+0x118>
     faa:	59 c0       	rjmp	.+178    	; 0x105e <vfprintf+0x1ca>
     fac:	21 c0       	rjmp	.+66     	; 0xff0 <vfprintf+0x15c>
     fae:	f8 01       	movw	r30, r16
     fb0:	80 81       	ld	r24, Z
     fb2:	89 83       	std	Y+1, r24	; 0x01
     fb4:	0e 5f       	subi	r16, 0xFE	; 254
     fb6:	1f 4f       	sbci	r17, 0xFF	; 255
     fb8:	88 24       	eor	r8, r8
     fba:	83 94       	inc	r8
     fbc:	91 2c       	mov	r9, r1
     fbe:	53 01       	movw	r10, r6
     fc0:	13 c0       	rjmp	.+38     	; 0xfe8 <vfprintf+0x154>
     fc2:	28 01       	movw	r4, r16
     fc4:	f2 e0       	ldi	r31, 0x02	; 2
     fc6:	4f 0e       	add	r4, r31
     fc8:	51 1c       	adc	r5, r1
     fca:	f8 01       	movw	r30, r16
     fcc:	a0 80       	ld	r10, Z
     fce:	b1 80       	ldd	r11, Z+1	; 0x01
     fd0:	36 fe       	sbrs	r3, 6
     fd2:	03 c0       	rjmp	.+6      	; 0xfda <vfprintf+0x146>
     fd4:	69 2d       	mov	r22, r9
     fd6:	70 e0       	ldi	r23, 0x00	; 0
     fd8:	02 c0       	rjmp	.+4      	; 0xfde <vfprintf+0x14a>
     fda:	6f ef       	ldi	r22, 0xFF	; 255
     fdc:	7f ef       	ldi	r23, 0xFF	; 255
     fde:	c5 01       	movw	r24, r10
     fe0:	0e 94 36 09 	call	0x126c	; 0x126c <strnlen>
     fe4:	4c 01       	movw	r8, r24
     fe6:	82 01       	movw	r16, r4
     fe8:	f3 2d       	mov	r31, r3
     fea:	ff 77       	andi	r31, 0x7F	; 127
     fec:	3f 2e       	mov	r3, r31
     fee:	16 c0       	rjmp	.+44     	; 0x101c <vfprintf+0x188>
     ff0:	28 01       	movw	r4, r16
     ff2:	22 e0       	ldi	r18, 0x02	; 2
     ff4:	42 0e       	add	r4, r18
     ff6:	51 1c       	adc	r5, r1
     ff8:	f8 01       	movw	r30, r16
     ffa:	a0 80       	ld	r10, Z
     ffc:	b1 80       	ldd	r11, Z+1	; 0x01
     ffe:	36 fe       	sbrs	r3, 6
    1000:	03 c0       	rjmp	.+6      	; 0x1008 <vfprintf+0x174>
    1002:	69 2d       	mov	r22, r9
    1004:	70 e0       	ldi	r23, 0x00	; 0
    1006:	02 c0       	rjmp	.+4      	; 0x100c <vfprintf+0x178>
    1008:	6f ef       	ldi	r22, 0xFF	; 255
    100a:	7f ef       	ldi	r23, 0xFF	; 255
    100c:	c5 01       	movw	r24, r10
    100e:	0e 94 2b 09 	call	0x1256	; 0x1256 <strnlen_P>
    1012:	4c 01       	movw	r8, r24
    1014:	f3 2d       	mov	r31, r3
    1016:	f0 68       	ori	r31, 0x80	; 128
    1018:	3f 2e       	mov	r3, r31
    101a:	82 01       	movw	r16, r4
    101c:	33 fc       	sbrc	r3, 3
    101e:	1b c0       	rjmp	.+54     	; 0x1056 <vfprintf+0x1c2>
    1020:	82 2d       	mov	r24, r2
    1022:	90 e0       	ldi	r25, 0x00	; 0
    1024:	88 16       	cp	r8, r24
    1026:	99 06       	cpc	r9, r25
    1028:	b0 f4       	brcc	.+44     	; 0x1056 <vfprintf+0x1c2>
    102a:	b6 01       	movw	r22, r12
    102c:	80 e2       	ldi	r24, 0x20	; 32
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    1034:	2a 94       	dec	r2
    1036:	f4 cf       	rjmp	.-24     	; 0x1020 <vfprintf+0x18c>
    1038:	f5 01       	movw	r30, r10
    103a:	37 fc       	sbrc	r3, 7
    103c:	85 91       	lpm	r24, Z+
    103e:	37 fe       	sbrs	r3, 7
    1040:	81 91       	ld	r24, Z+
    1042:	5f 01       	movw	r10, r30
    1044:	b6 01       	movw	r22, r12
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    104c:	21 10       	cpse	r2, r1
    104e:	2a 94       	dec	r2
    1050:	21 e0       	ldi	r18, 0x01	; 1
    1052:	82 1a       	sub	r8, r18
    1054:	91 08       	sbc	r9, r1
    1056:	81 14       	cp	r8, r1
    1058:	91 04       	cpc	r9, r1
    105a:	71 f7       	brne	.-36     	; 0x1038 <vfprintf+0x1a4>
    105c:	e8 c0       	rjmp	.+464    	; 0x122e <vfprintf+0x39a>
    105e:	84 36       	cpi	r24, 0x64	; 100
    1060:	11 f0       	breq	.+4      	; 0x1066 <vfprintf+0x1d2>
    1062:	89 36       	cpi	r24, 0x69	; 105
    1064:	41 f5       	brne	.+80     	; 0x10b6 <vfprintf+0x222>
    1066:	f8 01       	movw	r30, r16
    1068:	37 fe       	sbrs	r3, 7
    106a:	07 c0       	rjmp	.+14     	; 0x107a <vfprintf+0x1e6>
    106c:	60 81       	ld	r22, Z
    106e:	71 81       	ldd	r23, Z+1	; 0x01
    1070:	82 81       	ldd	r24, Z+2	; 0x02
    1072:	93 81       	ldd	r25, Z+3	; 0x03
    1074:	0c 5f       	subi	r16, 0xFC	; 252
    1076:	1f 4f       	sbci	r17, 0xFF	; 255
    1078:	08 c0       	rjmp	.+16     	; 0x108a <vfprintf+0x1f6>
    107a:	60 81       	ld	r22, Z
    107c:	71 81       	ldd	r23, Z+1	; 0x01
    107e:	07 2e       	mov	r0, r23
    1080:	00 0c       	add	r0, r0
    1082:	88 0b       	sbc	r24, r24
    1084:	99 0b       	sbc	r25, r25
    1086:	0e 5f       	subi	r16, 0xFE	; 254
    1088:	1f 4f       	sbci	r17, 0xFF	; 255
    108a:	f3 2d       	mov	r31, r3
    108c:	ff 76       	andi	r31, 0x6F	; 111
    108e:	3f 2e       	mov	r3, r31
    1090:	97 ff       	sbrs	r25, 7
    1092:	09 c0       	rjmp	.+18     	; 0x10a6 <vfprintf+0x212>
    1094:	90 95       	com	r25
    1096:	80 95       	com	r24
    1098:	70 95       	com	r23
    109a:	61 95       	neg	r22
    109c:	7f 4f       	sbci	r23, 0xFF	; 255
    109e:	8f 4f       	sbci	r24, 0xFF	; 255
    10a0:	9f 4f       	sbci	r25, 0xFF	; 255
    10a2:	f0 68       	ori	r31, 0x80	; 128
    10a4:	3f 2e       	mov	r3, r31
    10a6:	2a e0       	ldi	r18, 0x0A	; 10
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	a3 01       	movw	r20, r6
    10ac:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__ultoa_invert>
    10b0:	88 2e       	mov	r8, r24
    10b2:	86 18       	sub	r8, r6
    10b4:	45 c0       	rjmp	.+138    	; 0x1140 <vfprintf+0x2ac>
    10b6:	85 37       	cpi	r24, 0x75	; 117
    10b8:	31 f4       	brne	.+12     	; 0x10c6 <vfprintf+0x232>
    10ba:	23 2d       	mov	r18, r3
    10bc:	2f 7e       	andi	r18, 0xEF	; 239
    10be:	b2 2e       	mov	r11, r18
    10c0:	2a e0       	ldi	r18, 0x0A	; 10
    10c2:	30 e0       	ldi	r19, 0x00	; 0
    10c4:	25 c0       	rjmp	.+74     	; 0x1110 <vfprintf+0x27c>
    10c6:	93 2d       	mov	r25, r3
    10c8:	99 7f       	andi	r25, 0xF9	; 249
    10ca:	b9 2e       	mov	r11, r25
    10cc:	8f 36       	cpi	r24, 0x6F	; 111
    10ce:	c1 f0       	breq	.+48     	; 0x1100 <vfprintf+0x26c>
    10d0:	18 f4       	brcc	.+6      	; 0x10d8 <vfprintf+0x244>
    10d2:	88 35       	cpi	r24, 0x58	; 88
    10d4:	79 f0       	breq	.+30     	; 0x10f4 <vfprintf+0x260>
    10d6:	b5 c0       	rjmp	.+362    	; 0x1242 <vfprintf+0x3ae>
    10d8:	80 37       	cpi	r24, 0x70	; 112
    10da:	19 f0       	breq	.+6      	; 0x10e2 <vfprintf+0x24e>
    10dc:	88 37       	cpi	r24, 0x78	; 120
    10de:	21 f0       	breq	.+8      	; 0x10e8 <vfprintf+0x254>
    10e0:	b0 c0       	rjmp	.+352    	; 0x1242 <vfprintf+0x3ae>
    10e2:	e9 2f       	mov	r30, r25
    10e4:	e0 61       	ori	r30, 0x10	; 16
    10e6:	be 2e       	mov	r11, r30
    10e8:	b4 fe       	sbrs	r11, 4
    10ea:	0d c0       	rjmp	.+26     	; 0x1106 <vfprintf+0x272>
    10ec:	fb 2d       	mov	r31, r11
    10ee:	f4 60       	ori	r31, 0x04	; 4
    10f0:	bf 2e       	mov	r11, r31
    10f2:	09 c0       	rjmp	.+18     	; 0x1106 <vfprintf+0x272>
    10f4:	34 fe       	sbrs	r3, 4
    10f6:	0a c0       	rjmp	.+20     	; 0x110c <vfprintf+0x278>
    10f8:	29 2f       	mov	r18, r25
    10fa:	26 60       	ori	r18, 0x06	; 6
    10fc:	b2 2e       	mov	r11, r18
    10fe:	06 c0       	rjmp	.+12     	; 0x110c <vfprintf+0x278>
    1100:	28 e0       	ldi	r18, 0x08	; 8
    1102:	30 e0       	ldi	r19, 0x00	; 0
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <vfprintf+0x27c>
    1106:	20 e1       	ldi	r18, 0x10	; 16
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	02 c0       	rjmp	.+4      	; 0x1110 <vfprintf+0x27c>
    110c:	20 e1       	ldi	r18, 0x10	; 16
    110e:	32 e0       	ldi	r19, 0x02	; 2
    1110:	f8 01       	movw	r30, r16
    1112:	b7 fe       	sbrs	r11, 7
    1114:	07 c0       	rjmp	.+14     	; 0x1124 <vfprintf+0x290>
    1116:	60 81       	ld	r22, Z
    1118:	71 81       	ldd	r23, Z+1	; 0x01
    111a:	82 81       	ldd	r24, Z+2	; 0x02
    111c:	93 81       	ldd	r25, Z+3	; 0x03
    111e:	0c 5f       	subi	r16, 0xFC	; 252
    1120:	1f 4f       	sbci	r17, 0xFF	; 255
    1122:	06 c0       	rjmp	.+12     	; 0x1130 <vfprintf+0x29c>
    1124:	60 81       	ld	r22, Z
    1126:	71 81       	ldd	r23, Z+1	; 0x01
    1128:	80 e0       	ldi	r24, 0x00	; 0
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 5f       	subi	r16, 0xFE	; 254
    112e:	1f 4f       	sbci	r17, 0xFF	; 255
    1130:	a3 01       	movw	r20, r6
    1132:	0e 94 7d 09 	call	0x12fa	; 0x12fa <__ultoa_invert>
    1136:	88 2e       	mov	r8, r24
    1138:	86 18       	sub	r8, r6
    113a:	fb 2d       	mov	r31, r11
    113c:	ff 77       	andi	r31, 0x7F	; 127
    113e:	3f 2e       	mov	r3, r31
    1140:	36 fe       	sbrs	r3, 6
    1142:	0d c0       	rjmp	.+26     	; 0x115e <vfprintf+0x2ca>
    1144:	23 2d       	mov	r18, r3
    1146:	2e 7f       	andi	r18, 0xFE	; 254
    1148:	a2 2e       	mov	r10, r18
    114a:	89 14       	cp	r8, r9
    114c:	58 f4       	brcc	.+22     	; 0x1164 <vfprintf+0x2d0>
    114e:	34 fe       	sbrs	r3, 4
    1150:	0b c0       	rjmp	.+22     	; 0x1168 <vfprintf+0x2d4>
    1152:	32 fc       	sbrc	r3, 2
    1154:	09 c0       	rjmp	.+18     	; 0x1168 <vfprintf+0x2d4>
    1156:	83 2d       	mov	r24, r3
    1158:	8e 7e       	andi	r24, 0xEE	; 238
    115a:	a8 2e       	mov	r10, r24
    115c:	05 c0       	rjmp	.+10     	; 0x1168 <vfprintf+0x2d4>
    115e:	b8 2c       	mov	r11, r8
    1160:	a3 2c       	mov	r10, r3
    1162:	03 c0       	rjmp	.+6      	; 0x116a <vfprintf+0x2d6>
    1164:	b8 2c       	mov	r11, r8
    1166:	01 c0       	rjmp	.+2      	; 0x116a <vfprintf+0x2d6>
    1168:	b9 2c       	mov	r11, r9
    116a:	a4 fe       	sbrs	r10, 4
    116c:	0f c0       	rjmp	.+30     	; 0x118c <vfprintf+0x2f8>
    116e:	fe 01       	movw	r30, r28
    1170:	e8 0d       	add	r30, r8
    1172:	f1 1d       	adc	r31, r1
    1174:	80 81       	ld	r24, Z
    1176:	80 33       	cpi	r24, 0x30	; 48
    1178:	21 f4       	brne	.+8      	; 0x1182 <vfprintf+0x2ee>
    117a:	9a 2d       	mov	r25, r10
    117c:	99 7e       	andi	r25, 0xE9	; 233
    117e:	a9 2e       	mov	r10, r25
    1180:	09 c0       	rjmp	.+18     	; 0x1194 <vfprintf+0x300>
    1182:	a2 fe       	sbrs	r10, 2
    1184:	06 c0       	rjmp	.+12     	; 0x1192 <vfprintf+0x2fe>
    1186:	b3 94       	inc	r11
    1188:	b3 94       	inc	r11
    118a:	04 c0       	rjmp	.+8      	; 0x1194 <vfprintf+0x300>
    118c:	8a 2d       	mov	r24, r10
    118e:	86 78       	andi	r24, 0x86	; 134
    1190:	09 f0       	breq	.+2      	; 0x1194 <vfprintf+0x300>
    1192:	b3 94       	inc	r11
    1194:	a3 fc       	sbrc	r10, 3
    1196:	11 c0       	rjmp	.+34     	; 0x11ba <vfprintf+0x326>
    1198:	a0 fe       	sbrs	r10, 0
    119a:	06 c0       	rjmp	.+12     	; 0x11a8 <vfprintf+0x314>
    119c:	b2 14       	cp	r11, r2
    119e:	88 f4       	brcc	.+34     	; 0x11c2 <vfprintf+0x32e>
    11a0:	28 0c       	add	r2, r8
    11a2:	92 2c       	mov	r9, r2
    11a4:	9b 18       	sub	r9, r11
    11a6:	0e c0       	rjmp	.+28     	; 0x11c4 <vfprintf+0x330>
    11a8:	b2 14       	cp	r11, r2
    11aa:	60 f4       	brcc	.+24     	; 0x11c4 <vfprintf+0x330>
    11ac:	b6 01       	movw	r22, r12
    11ae:	80 e2       	ldi	r24, 0x20	; 32
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    11b6:	b3 94       	inc	r11
    11b8:	f7 cf       	rjmp	.-18     	; 0x11a8 <vfprintf+0x314>
    11ba:	b2 14       	cp	r11, r2
    11bc:	18 f4       	brcc	.+6      	; 0x11c4 <vfprintf+0x330>
    11be:	2b 18       	sub	r2, r11
    11c0:	02 c0       	rjmp	.+4      	; 0x11c6 <vfprintf+0x332>
    11c2:	98 2c       	mov	r9, r8
    11c4:	21 2c       	mov	r2, r1
    11c6:	a4 fe       	sbrs	r10, 4
    11c8:	10 c0       	rjmp	.+32     	; 0x11ea <vfprintf+0x356>
    11ca:	b6 01       	movw	r22, r12
    11cc:	80 e3       	ldi	r24, 0x30	; 48
    11ce:	90 e0       	ldi	r25, 0x00	; 0
    11d0:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    11d4:	a2 fe       	sbrs	r10, 2
    11d6:	17 c0       	rjmp	.+46     	; 0x1206 <vfprintf+0x372>
    11d8:	a1 fc       	sbrc	r10, 1
    11da:	03 c0       	rjmp	.+6      	; 0x11e2 <vfprintf+0x34e>
    11dc:	88 e7       	ldi	r24, 0x78	; 120
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <vfprintf+0x352>
    11e2:	88 e5       	ldi	r24, 0x58	; 88
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	b6 01       	movw	r22, r12
    11e8:	0c c0       	rjmp	.+24     	; 0x1202 <vfprintf+0x36e>
    11ea:	8a 2d       	mov	r24, r10
    11ec:	86 78       	andi	r24, 0x86	; 134
    11ee:	59 f0       	breq	.+22     	; 0x1206 <vfprintf+0x372>
    11f0:	a1 fe       	sbrs	r10, 1
    11f2:	02 c0       	rjmp	.+4      	; 0x11f8 <vfprintf+0x364>
    11f4:	8b e2       	ldi	r24, 0x2B	; 43
    11f6:	01 c0       	rjmp	.+2      	; 0x11fa <vfprintf+0x366>
    11f8:	80 e2       	ldi	r24, 0x20	; 32
    11fa:	a7 fc       	sbrc	r10, 7
    11fc:	8d e2       	ldi	r24, 0x2D	; 45
    11fe:	b6 01       	movw	r22, r12
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    1206:	89 14       	cp	r8, r9
    1208:	38 f4       	brcc	.+14     	; 0x1218 <vfprintf+0x384>
    120a:	b6 01       	movw	r22, r12
    120c:	80 e3       	ldi	r24, 0x30	; 48
    120e:	90 e0       	ldi	r25, 0x00	; 0
    1210:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    1214:	9a 94       	dec	r9
    1216:	f7 cf       	rjmp	.-18     	; 0x1206 <vfprintf+0x372>
    1218:	8a 94       	dec	r8
    121a:	f3 01       	movw	r30, r6
    121c:	e8 0d       	add	r30, r8
    121e:	f1 1d       	adc	r31, r1
    1220:	80 81       	ld	r24, Z
    1222:	b6 01       	movw	r22, r12
    1224:	90 e0       	ldi	r25, 0x00	; 0
    1226:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    122a:	81 10       	cpse	r8, r1
    122c:	f5 cf       	rjmp	.-22     	; 0x1218 <vfprintf+0x384>
    122e:	22 20       	and	r2, r2
    1230:	09 f4       	brne	.+2      	; 0x1234 <vfprintf+0x3a0>
    1232:	42 ce       	rjmp	.-892    	; 0xeb8 <vfprintf+0x24>
    1234:	b6 01       	movw	r22, r12
    1236:	80 e2       	ldi	r24, 0x20	; 32
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	0e 94 41 09 	call	0x1282	; 0x1282 <fputc>
    123e:	2a 94       	dec	r2
    1240:	f6 cf       	rjmp	.-20     	; 0x122e <vfprintf+0x39a>
    1242:	f6 01       	movw	r30, r12
    1244:	86 81       	ldd	r24, Z+6	; 0x06
    1246:	97 81       	ldd	r25, Z+7	; 0x07
    1248:	02 c0       	rjmp	.+4      	; 0x124e <vfprintf+0x3ba>
    124a:	8f ef       	ldi	r24, 0xFF	; 255
    124c:	9f ef       	ldi	r25, 0xFF	; 255
    124e:	2b 96       	adiw	r28, 0x0b	; 11
    1250:	e2 e1       	ldi	r30, 0x12	; 18
    1252:	0c 94 f7 09 	jmp	0x13ee	; 0x13ee <__epilogue_restores__>

00001256 <strnlen_P>:
    1256:	fc 01       	movw	r30, r24
    1258:	05 90       	lpm	r0, Z+
    125a:	61 50       	subi	r22, 0x01	; 1
    125c:	70 40       	sbci	r23, 0x00	; 0
    125e:	01 10       	cpse	r0, r1
    1260:	d8 f7       	brcc	.-10     	; 0x1258 <strnlen_P+0x2>
    1262:	80 95       	com	r24
    1264:	90 95       	com	r25
    1266:	8e 0f       	add	r24, r30
    1268:	9f 1f       	adc	r25, r31
    126a:	08 95       	ret

0000126c <strnlen>:
    126c:	fc 01       	movw	r30, r24
    126e:	61 50       	subi	r22, 0x01	; 1
    1270:	70 40       	sbci	r23, 0x00	; 0
    1272:	01 90       	ld	r0, Z+
    1274:	01 10       	cpse	r0, r1
    1276:	d8 f7       	brcc	.-10     	; 0x126e <strnlen+0x2>
    1278:	80 95       	com	r24
    127a:	90 95       	com	r25
    127c:	8e 0f       	add	r24, r30
    127e:	9f 1f       	adc	r25, r31
    1280:	08 95       	ret

00001282 <fputc>:
    1282:	0f 93       	push	r16
    1284:	1f 93       	push	r17
    1286:	cf 93       	push	r28
    1288:	df 93       	push	r29
    128a:	fb 01       	movw	r30, r22
    128c:	23 81       	ldd	r18, Z+3	; 0x03
    128e:	21 fd       	sbrc	r18, 1
    1290:	03 c0       	rjmp	.+6      	; 0x1298 <fputc+0x16>
    1292:	8f ef       	ldi	r24, 0xFF	; 255
    1294:	9f ef       	ldi	r25, 0xFF	; 255
    1296:	2c c0       	rjmp	.+88     	; 0x12f0 <fputc+0x6e>
    1298:	22 ff       	sbrs	r18, 2
    129a:	16 c0       	rjmp	.+44     	; 0x12c8 <fputc+0x46>
    129c:	46 81       	ldd	r20, Z+6	; 0x06
    129e:	57 81       	ldd	r21, Z+7	; 0x07
    12a0:	24 81       	ldd	r18, Z+4	; 0x04
    12a2:	35 81       	ldd	r19, Z+5	; 0x05
    12a4:	42 17       	cp	r20, r18
    12a6:	53 07       	cpc	r21, r19
    12a8:	44 f4       	brge	.+16     	; 0x12ba <fputc+0x38>
    12aa:	a0 81       	ld	r26, Z
    12ac:	b1 81       	ldd	r27, Z+1	; 0x01
    12ae:	9d 01       	movw	r18, r26
    12b0:	2f 5f       	subi	r18, 0xFF	; 255
    12b2:	3f 4f       	sbci	r19, 0xFF	; 255
    12b4:	31 83       	std	Z+1, r19	; 0x01
    12b6:	20 83       	st	Z, r18
    12b8:	8c 93       	st	X, r24
    12ba:	26 81       	ldd	r18, Z+6	; 0x06
    12bc:	37 81       	ldd	r19, Z+7	; 0x07
    12be:	2f 5f       	subi	r18, 0xFF	; 255
    12c0:	3f 4f       	sbci	r19, 0xFF	; 255
    12c2:	37 83       	std	Z+7, r19	; 0x07
    12c4:	26 83       	std	Z+6, r18	; 0x06
    12c6:	14 c0       	rjmp	.+40     	; 0x12f0 <fputc+0x6e>
    12c8:	8b 01       	movw	r16, r22
    12ca:	ec 01       	movw	r28, r24
    12cc:	fb 01       	movw	r30, r22
    12ce:	00 84       	ldd	r0, Z+8	; 0x08
    12d0:	f1 85       	ldd	r31, Z+9	; 0x09
    12d2:	e0 2d       	mov	r30, r0
    12d4:	09 95       	icall
    12d6:	89 2b       	or	r24, r25
    12d8:	e1 f6       	brne	.-72     	; 0x1292 <fputc+0x10>
    12da:	d8 01       	movw	r26, r16
    12dc:	16 96       	adiw	r26, 0x06	; 6
    12de:	8d 91       	ld	r24, X+
    12e0:	9c 91       	ld	r25, X
    12e2:	17 97       	sbiw	r26, 0x07	; 7
    12e4:	01 96       	adiw	r24, 0x01	; 1
    12e6:	17 96       	adiw	r26, 0x07	; 7
    12e8:	9c 93       	st	X, r25
    12ea:	8e 93       	st	-X, r24
    12ec:	16 97       	sbiw	r26, 0x06	; 6
    12ee:	ce 01       	movw	r24, r28
    12f0:	df 91       	pop	r29
    12f2:	cf 91       	pop	r28
    12f4:	1f 91       	pop	r17
    12f6:	0f 91       	pop	r16
    12f8:	08 95       	ret

000012fa <__ultoa_invert>:
    12fa:	fa 01       	movw	r30, r20
    12fc:	aa 27       	eor	r26, r26
    12fe:	28 30       	cpi	r18, 0x08	; 8
    1300:	51 f1       	breq	.+84     	; 0x1356 <__ultoa_invert+0x5c>
    1302:	20 31       	cpi	r18, 0x10	; 16
    1304:	81 f1       	breq	.+96     	; 0x1366 <__ultoa_invert+0x6c>
    1306:	e8 94       	clt
    1308:	6f 93       	push	r22
    130a:	6e 7f       	andi	r22, 0xFE	; 254
    130c:	6e 5f       	subi	r22, 0xFE	; 254
    130e:	7f 4f       	sbci	r23, 0xFF	; 255
    1310:	8f 4f       	sbci	r24, 0xFF	; 255
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	af 4f       	sbci	r26, 0xFF	; 255
    1316:	b1 e0       	ldi	r27, 0x01	; 1
    1318:	3e d0       	rcall	.+124    	; 0x1396 <__ultoa_invert+0x9c>
    131a:	b4 e0       	ldi	r27, 0x04	; 4
    131c:	3c d0       	rcall	.+120    	; 0x1396 <__ultoa_invert+0x9c>
    131e:	67 0f       	add	r22, r23
    1320:	78 1f       	adc	r23, r24
    1322:	89 1f       	adc	r24, r25
    1324:	9a 1f       	adc	r25, r26
    1326:	a1 1d       	adc	r26, r1
    1328:	68 0f       	add	r22, r24
    132a:	79 1f       	adc	r23, r25
    132c:	8a 1f       	adc	r24, r26
    132e:	91 1d       	adc	r25, r1
    1330:	a1 1d       	adc	r26, r1
    1332:	6a 0f       	add	r22, r26
    1334:	71 1d       	adc	r23, r1
    1336:	81 1d       	adc	r24, r1
    1338:	91 1d       	adc	r25, r1
    133a:	a1 1d       	adc	r26, r1
    133c:	20 d0       	rcall	.+64     	; 0x137e <__ultoa_invert+0x84>
    133e:	09 f4       	brne	.+2      	; 0x1342 <__ultoa_invert+0x48>
    1340:	68 94       	set
    1342:	3f 91       	pop	r19
    1344:	2a e0       	ldi	r18, 0x0A	; 10
    1346:	26 9f       	mul	r18, r22
    1348:	11 24       	eor	r1, r1
    134a:	30 19       	sub	r19, r0
    134c:	30 5d       	subi	r19, 0xD0	; 208
    134e:	31 93       	st	Z+, r19
    1350:	de f6       	brtc	.-74     	; 0x1308 <__ultoa_invert+0xe>
    1352:	cf 01       	movw	r24, r30
    1354:	08 95       	ret
    1356:	46 2f       	mov	r20, r22
    1358:	47 70       	andi	r20, 0x07	; 7
    135a:	40 5d       	subi	r20, 0xD0	; 208
    135c:	41 93       	st	Z+, r20
    135e:	b3 e0       	ldi	r27, 0x03	; 3
    1360:	0f d0       	rcall	.+30     	; 0x1380 <__ultoa_invert+0x86>
    1362:	c9 f7       	brne	.-14     	; 0x1356 <__ultoa_invert+0x5c>
    1364:	f6 cf       	rjmp	.-20     	; 0x1352 <__ultoa_invert+0x58>
    1366:	46 2f       	mov	r20, r22
    1368:	4f 70       	andi	r20, 0x0F	; 15
    136a:	40 5d       	subi	r20, 0xD0	; 208
    136c:	4a 33       	cpi	r20, 0x3A	; 58
    136e:	18 f0       	brcs	.+6      	; 0x1376 <__ultoa_invert+0x7c>
    1370:	49 5d       	subi	r20, 0xD9	; 217
    1372:	31 fd       	sbrc	r19, 1
    1374:	40 52       	subi	r20, 0x20	; 32
    1376:	41 93       	st	Z+, r20
    1378:	02 d0       	rcall	.+4      	; 0x137e <__ultoa_invert+0x84>
    137a:	a9 f7       	brne	.-22     	; 0x1366 <__ultoa_invert+0x6c>
    137c:	ea cf       	rjmp	.-44     	; 0x1352 <__ultoa_invert+0x58>
    137e:	b4 e0       	ldi	r27, 0x04	; 4
    1380:	a6 95       	lsr	r26
    1382:	97 95       	ror	r25
    1384:	87 95       	ror	r24
    1386:	77 95       	ror	r23
    1388:	67 95       	ror	r22
    138a:	ba 95       	dec	r27
    138c:	c9 f7       	brne	.-14     	; 0x1380 <__ultoa_invert+0x86>
    138e:	00 97       	sbiw	r24, 0x00	; 0
    1390:	61 05       	cpc	r22, r1
    1392:	71 05       	cpc	r23, r1
    1394:	08 95       	ret
    1396:	9b 01       	movw	r18, r22
    1398:	ac 01       	movw	r20, r24
    139a:	0a 2e       	mov	r0, r26
    139c:	06 94       	lsr	r0
    139e:	57 95       	ror	r21
    13a0:	47 95       	ror	r20
    13a2:	37 95       	ror	r19
    13a4:	27 95       	ror	r18
    13a6:	ba 95       	dec	r27
    13a8:	c9 f7       	brne	.-14     	; 0x139c <__ultoa_invert+0xa2>
    13aa:	62 0f       	add	r22, r18
    13ac:	73 1f       	adc	r23, r19
    13ae:	84 1f       	adc	r24, r20
    13b0:	95 1f       	adc	r25, r21
    13b2:	a0 1d       	adc	r26, r0
    13b4:	08 95       	ret

000013b6 <__prologue_saves__>:
    13b6:	2f 92       	push	r2
    13b8:	3f 92       	push	r3
    13ba:	4f 92       	push	r4
    13bc:	5f 92       	push	r5
    13be:	6f 92       	push	r6
    13c0:	7f 92       	push	r7
    13c2:	8f 92       	push	r8
    13c4:	9f 92       	push	r9
    13c6:	af 92       	push	r10
    13c8:	bf 92       	push	r11
    13ca:	cf 92       	push	r12
    13cc:	df 92       	push	r13
    13ce:	ef 92       	push	r14
    13d0:	ff 92       	push	r15
    13d2:	0f 93       	push	r16
    13d4:	1f 93       	push	r17
    13d6:	cf 93       	push	r28
    13d8:	df 93       	push	r29
    13da:	cd b7       	in	r28, 0x3d	; 61
    13dc:	de b7       	in	r29, 0x3e	; 62
    13de:	ca 1b       	sub	r28, r26
    13e0:	db 0b       	sbc	r29, r27
    13e2:	0f b6       	in	r0, 0x3f	; 63
    13e4:	f8 94       	cli
    13e6:	de bf       	out	0x3e, r29	; 62
    13e8:	0f be       	out	0x3f, r0	; 63
    13ea:	cd bf       	out	0x3d, r28	; 61
    13ec:	09 94       	ijmp

000013ee <__epilogue_restores__>:
    13ee:	2a 88       	ldd	r2, Y+18	; 0x12
    13f0:	39 88       	ldd	r3, Y+17	; 0x11
    13f2:	48 88       	ldd	r4, Y+16	; 0x10
    13f4:	5f 84       	ldd	r5, Y+15	; 0x0f
    13f6:	6e 84       	ldd	r6, Y+14	; 0x0e
    13f8:	7d 84       	ldd	r7, Y+13	; 0x0d
    13fa:	8c 84       	ldd	r8, Y+12	; 0x0c
    13fc:	9b 84       	ldd	r9, Y+11	; 0x0b
    13fe:	aa 84       	ldd	r10, Y+10	; 0x0a
    1400:	b9 84       	ldd	r11, Y+9	; 0x09
    1402:	c8 84       	ldd	r12, Y+8	; 0x08
    1404:	df 80       	ldd	r13, Y+7	; 0x07
    1406:	ee 80       	ldd	r14, Y+6	; 0x06
    1408:	fd 80       	ldd	r15, Y+5	; 0x05
    140a:	0c 81       	ldd	r16, Y+4	; 0x04
    140c:	1b 81       	ldd	r17, Y+3	; 0x03
    140e:	aa 81       	ldd	r26, Y+2	; 0x02
    1410:	b9 81       	ldd	r27, Y+1	; 0x01
    1412:	ce 0f       	add	r28, r30
    1414:	d1 1d       	adc	r29, r1
    1416:	0f b6       	in	r0, 0x3f	; 63
    1418:	f8 94       	cli
    141a:	de bf       	out	0x3e, r29	; 62
    141c:	0f be       	out	0x3f, r0	; 63
    141e:	cd bf       	out	0x3d, r28	; 61
    1420:	ed 01       	movw	r28, r26
    1422:	08 95       	ret

00001424 <_exit>:
    1424:	f8 94       	cli

00001426 <__stop_program>:
    1426:	ff cf       	rjmp	.-2      	; 0x1426 <__stop_program>
