
MotorControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000070  00800100  0000183a  000018ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000183a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000041  00800170  00800170  0000193e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000193e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000199c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  000019dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001522  00000000  00000000  00001b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c97  00000000  00000000  000030be  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d90  00000000  00000000  00003d55  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000404  00000000  00000000  00004ae8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000072a  00000000  00000000  00004eec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000091f  00000000  00000000  00005616  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00005f35  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 47 02 	jmp	0x48e	; 0x48e <__vector_9>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 3d 02 	jmp	0x47a	; 0x47a <__vector_13>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 33 02 	jmp	0x466	; 0x466 <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 29 02 	jmp	0x452	; 0x452 <__vector_21>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 21 01 	jmp	0x242	; 0x242 <__vector_24>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ea e3       	ldi	r30, 0x3A	; 58
     17e:	f8 e1       	ldi	r31, 0x18	; 24
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a0 37       	cpi	r26, 0x70	; 112
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a0 e7       	ldi	r26, 0x70	; 112
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a1 3b       	cpi	r26, 0xB1	; 177
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 77 01 	call	0x2ee	; 0x2ee <main>
     1a0:	0c 94 1b 0c 	jmp	0x1836	; 0x1836 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <Enable_ADC>:
#include <stdio.h>
#include "ADC_Setup.h"

void Enable_ADC(void){
	
	ADMUX = (1<<REFS0); // Select Vref = AVcc
     1a8:	80 e4       	ldi	r24, 0x40	; 64
     1aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0)|(1<<ADIE)|(1<<ADEN);
     1ae:	8f e8       	ldi	r24, 0x8F	; 143
     1b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     1b4:	08 95       	ret

000001b6 <adc_read>:
	
}

uint16_t adc_read(uint8_t adc_channel){
	//printf("Reset ADC\n");
	ADMUX &= 0xf0; // clear any prev used channael but keep internal reference
     1b6:	ec e7       	ldi	r30, 0x7C	; 124
     1b8:	f0 e0       	ldi	r31, 0x00	; 0
     1ba:	90 81       	ld	r25, Z
     1bc:	90 7f       	andi	r25, 0xF0	; 240
     1be:	90 83       	st	Z, r25
	//printf("Set Channel\n");
	ADMUX |= adc_channel; // set the desired channel
     1c0:	90 81       	ld	r25, Z
     1c2:	89 2b       	or	r24, r25
     1c4:	80 83       	st	Z, r24
	//printf("Start Conversion\n");
	ADCSRA |= (1<<ADSC);
     1c6:	ea e7       	ldi	r30, 0x7A	; 122
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	80 81       	ld	r24, Z
     1cc:	80 64       	ori	r24, 0x40	; 64
     1ce:	80 83       	st	Z, r24
	// now wait for the convresion
	
	ADC_Channel++;
     1d0:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <ADC_Channel>
     1d4:	8f 5f       	subi	r24, 0xFF	; 255
	if(ADC_Channel >3)
     1d6:	84 30       	cpi	r24, 0x04	; 4
     1d8:	18 f4       	brcc	.+6      	; 0x1e0 <adc_read+0x2a>
	ADMUX |= adc_channel; // set the desired channel
	//printf("Start Conversion\n");
	ADCSRA |= (1<<ADSC);
	// now wait for the convresion
	
	ADC_Channel++;
     1da:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <ADC_Channel>
     1de:	02 c0       	rjmp	.+4      	; 0x1e4 <adc_read+0x2e>
	if(ADC_Channel >3)
	ADC_Channel = 0;
     1e0:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <ADC_Channel>

	
	while( (ADCSRA & (1<<ADSC) ) ){
     1e4:	ea e7       	ldi	r30, 0x7A	; 122
     1e6:	f0 e0       	ldi	r31, 0x00	; 0
     1e8:	80 81       	ld	r24, Z
     1ea:	86 fd       	sbrc	r24, 6
     1ec:	fd cf       	rjmp	.-6      	; 0x1e8 <adc_read+0x32>
		

	}	
	// now we have result so return it to the calling function
	return ADC;
     1ee:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     1f2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
     1f6:	08 95       	ret

000001f8 <I2C_recieve>:
		sei();
}

void i2c_transmit_data(uint8_t data)
{		
	TWDR = data;
     1f8:	cf 93       	push	r28
     1fa:	c8 2f       	mov	r28, r24
     1fc:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <bytes>
     200:	81 11       	cpse	r24, r1
     202:	06 c0       	rjmp	.+12     	; 0x210 <I2C_recieve+0x18>
     204:	c0 93 7f 01 	sts	0x017F, r28	; 0x80017f <opcode>
     208:	81 e0       	ldi	r24, 0x01	; 1
     20a:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <bytes>
     20e:	04 c0       	rjmp	.+8      	; 0x218 <I2C_recieve+0x20>
     210:	c0 93 7e 01 	sts	0x017E, r28	; 0x80017e <data>
     214:	0e 94 cc 02 	call	0x598	; 0x598 <i2c_service>
     218:	c0 93 7e 01 	sts	0x017E, r28	; 0x80017e <data>
     21c:	cf 91       	pop	r28
     21e:	08 95       	ret

00000220 <I2C_data_ACK_request>:
     220:	0e 94 cc 02 	call	0x598	; 0x598 <i2c_service>
     224:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <data>
     228:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     22c:	08 95       	ret

0000022e <I2C_data_NACK_request>:
     22e:	0e 94 cc 02 	call	0x598	; 0x598 <i2c_service>
     232:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <data>
     236:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     23a:	08 95       	ret

0000023c <set_data>:
}

void set_data(uint8_t value)
{
	data = value;
     23c:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <data>
     240:	08 95       	ret

00000242 <__vector_24>:
}


 
ISR(TWI_vect)
{
     242:	1f 92       	push	r1
     244:	0f 92       	push	r0
     246:	0f b6       	in	r0, 0x3f	; 63
     248:	0f 92       	push	r0
     24a:	11 24       	eor	r1, r1
     24c:	2f 93       	push	r18
     24e:	3f 93       	push	r19
     250:	4f 93       	push	r20
     252:	5f 93       	push	r21
     254:	6f 93       	push	r22
     256:	7f 93       	push	r23
     258:	8f 93       	push	r24
     25a:	9f 93       	push	r25
     25c:	af 93       	push	r26
     25e:	bf 93       	push	r27
     260:	ef 93       	push	r30
     262:	ff 93       	push	r31
	switch(TW_STATUS)
     264:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     268:	88 7f       	andi	r24, 0xF8	; 248
     26a:	80 38       	cpi	r24, 0x80	; 128
     26c:	49 f0       	breq	.+18     	; 0x280 <__vector_24+0x3e>
     26e:	18 f4       	brcc	.+6      	; 0x276 <__vector_24+0x34>
     270:	88 23       	and	r24, r24
     272:	d1 f0       	breq	.+52     	; 0x2a8 <__vector_24+0x66>
     274:	1f c0       	rjmp	.+62     	; 0x2b4 <__vector_24+0x72>
     276:	88 3a       	cpi	r24, 0xA8	; 168
     278:	59 f0       	breq	.+22     	; 0x290 <__vector_24+0x4e>
     27a:	88 3b       	cpi	r24, 0xB8	; 184
     27c:	79 f0       	breq	.+30     	; 0x29c <__vector_24+0x5a>
     27e:	1a c0       	rjmp	.+52     	; 0x2b4 <__vector_24+0x72>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     280:	85 ec       	ldi	r24, 0xC5	; 197
     282:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		I2C_recieve(TWDR);
     286:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     28a:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <I2C_recieve>
		break;
     28e:	15 c0       	rjmp	.+42     	; 0x2ba <__vector_24+0x78>
		
		case TW_ST_SLA_ACK:
		// master is requesting data using NACK,master expects only one additional byte. call the request callback
		I2C_data_NACK_request();
     290:	0e 94 17 01 	call	0x22e	; 0x22e <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     294:	85 ec       	ldi	r24, 0xC5	; 197
     296:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     29a:	0f c0       	rjmp	.+30     	; 0x2ba <__vector_24+0x78>
		
		case TW_ST_DATA_ACK:
		// master is requesting data using ACK, master expects multiple bytes. call the request callback
		I2C_data_ACK_request();
     29c:	0e 94 10 01 	call	0x220	; 0x220 <I2C_data_ACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2a0:	85 ec       	ldi	r24, 0xC5	; 197
     2a2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     2a6:	09 c0       	rjmp	.+18     	; 0x2ba <__vector_24+0x78>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     2a8:	ec eb       	ldi	r30, 0xBC	; 188
     2aa:	f0 e0       	ldi	r31, 0x00	; 0
     2ac:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2ae:	85 ec       	ldi	r24, 0xC5	; 197
     2b0:	80 83       	st	Z, r24
		break;
     2b2:	03 c0       	rjmp	.+6      	; 0x2ba <__vector_24+0x78>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     2b4:	85 ec       	ldi	r24, 0xC5	; 197
     2b6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
	}
}
     2ba:	ff 91       	pop	r31
     2bc:	ef 91       	pop	r30
     2be:	bf 91       	pop	r27
     2c0:	af 91       	pop	r26
     2c2:	9f 91       	pop	r25
     2c4:	8f 91       	pop	r24
     2c6:	7f 91       	pop	r23
     2c8:	6f 91       	pop	r22
     2ca:	5f 91       	pop	r21
     2cc:	4f 91       	pop	r20
     2ce:	3f 91       	pop	r19
     2d0:	2f 91       	pop	r18
     2d2:	0f 90       	pop	r0
     2d4:	0f be       	out	0x3f, r0	; 63
     2d6:	0f 90       	pop	r0
     2d8:	1f 90       	pop	r1
     2da:	18 95       	reti

000002dc <IO_init>:


void IO_init(void){	///////////////////////// Initial Pin Setup
	
	// bit order 7 6 5 4 3 2 1 0
	DDRB  = 0b00001011;
     2dc:	8b e0       	ldi	r24, 0x0B	; 11
     2de:	84 b9       	out	0x04, r24	; 4
	PORTB = 0b00000000;
     2e0:	15 b8       	out	0x05, r1	; 5
	
	DDRC  = 0b00000000; // here the declaration of the adc pins had to be changed, as the directions was limiting the reading as a pull up resistor, acting as a voltage divider
     2e2:	17 b8       	out	0x07, r1	; 7
	PORTC = 0b00000000;
     2e4:	18 b8       	out	0x08, r1	; 8
	
	DDRD  = 0b11101000;
     2e6:	88 ee       	ldi	r24, 0xE8	; 232
     2e8:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b00000000;
     2ea:	1b b8       	out	0x0b, r1	; 11
     2ec:	08 95       	ret

000002ee <main>:
int main(void)
{
	
	
	//i2c_init(I2C_ADDR);														//in this we only print the received data and echo it back when data is requested from master
	uart_init();   // open the communication to the microcontroller
     2ee:	0e 94 74 04 	call	0x8e8	; 0x8e8 <uart_init>
	io_redirect(); // redirect input and output to the uart	
     2f2:	0e 94 85 04 	call	0x90a	; 0x90a <io_redirect>
	IO_init();	   //
     2f6:	0e 94 6e 01 	call	0x2dc	; 0x2dc <IO_init>
	TimersInit();
     2fa:	0e 94 29 03 	call	0x652	; 0x652 <TimersInit>
	Enable_ADC();	
     2fe:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <Enable_ADC>
	sei(); // Enable interrupts
     302:	78 94       	sei
			adcv1= (adc_result/1023)*5000;
			adcc1 = ((adcv1-2500)/100);
			mes [ADC_Channel] = adcc1;
			}
			
			printf("Channel: %d \t ADC value: %.1f \t Result:  %d \n",ADMUX, adc_result, mes[ADC_Channel]);
     304:	0c e7       	ldi	r16, 0x7C	; 124
     306:	10 e0       	ldi	r17, 0x00	; 0
     308:	c5 e2       	ldi	r28, 0x25	; 37
     30a:	d1 e0       	ldi	r29, 0x01	; 1
     30c:	94 c0       	rjmp	.+296    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			//CalculatePwm(error, zone);	
			//StartDrive();
			//Sorting(sortState);
		
			
			adc_result = adc_read(ADC_Channel);
     30e:	80 91 71 01 	lds	r24, 0x0171	; 0x800171 <ADC_Channel>
     312:	0e 94 db 00 	call	0x1b6	; 0x1b6 <adc_read>
     316:	bc 01       	movw	r22, r24
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	90 e0       	ldi	r25, 0x00	; 0
     31c:	0e 94 aa 05 	call	0xb54	; 0xb54 <__floatunsisf>
     320:	6b 01       	movw	r12, r22
     322:	7c 01       	movw	r14, r24
     324:	60 93 73 01 	sts	0x0173, r22	; 0x800173 <adc_result>
     328:	70 93 74 01 	sts	0x0174, r23	; 0x800174 <adc_result+0x1>
     32c:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <adc_result+0x2>
     330:	90 93 76 01 	sts	0x0176, r25	; 0x800176 <adc_result+0x3>
			if (adc_result==0)
     334:	20 e0       	ldi	r18, 0x00	; 0
     336:	30 e0       	ldi	r19, 0x00	; 0
     338:	a9 01       	movw	r20, r18
     33a:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__cmpsf2>
     33e:	81 11       	cpse	r24, r1
     340:	09 c0       	rjmp	.+18     	; 0x354 <main+0x66>
			{
				adcc1=0;
     342:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <adcc1>
     346:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <adcc1+0x1>
     34a:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <adcc1+0x2>
     34e:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <adcc1+0x3>
     352:	4a c0       	rjmp	.+148    	; 0x3e8 <main+0xfa>
			}else{
			adcv1= (adc_result/1023)*5000;
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	30 ec       	ldi	r19, 0xC0	; 192
     358:	4f e7       	ldi	r20, 0x7F	; 127
     35a:	54 e4       	ldi	r21, 0x44	; 68
     35c:	c7 01       	movw	r24, r14
     35e:	b6 01       	movw	r22, r12
     360:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     364:	20 e0       	ldi	r18, 0x00	; 0
     366:	30 e4       	ldi	r19, 0x40	; 64
     368:	4c e9       	ldi	r20, 0x9C	; 156
     36a:	55 e4       	ldi	r21, 0x45	; 69
     36c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     370:	60 93 89 01 	sts	0x0189, r22	; 0x800189 <adcv1>
     374:	70 93 8a 01 	sts	0x018A, r23	; 0x80018a <adcv1+0x1>
     378:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <adcv1+0x2>
     37c:	90 93 8c 01 	sts	0x018C, r25	; 0x80018c <adcv1+0x3>
			adcc1 = ((adcv1-2500)/100);
     380:	60 91 89 01 	lds	r22, 0x0189	; 0x800189 <adcv1>
     384:	70 91 8a 01 	lds	r23, 0x018A	; 0x80018a <adcv1+0x1>
     388:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <adcv1+0x2>
     38c:	90 91 8c 01 	lds	r25, 0x018C	; 0x80018c <adcv1+0x3>
     390:	20 e0       	ldi	r18, 0x00	; 0
     392:	30 e4       	ldi	r19, 0x40	; 64
     394:	4c e1       	ldi	r20, 0x1C	; 28
     396:	55 e4       	ldi	r21, 0x45	; 69
     398:	0e 94 90 04 	call	0x920	; 0x920 <__subsf3>
     39c:	20 e0       	ldi	r18, 0x00	; 0
     39e:	30 e0       	ldi	r19, 0x00	; 0
     3a0:	48 ec       	ldi	r20, 0xC8	; 200
     3a2:	52 e4       	ldi	r21, 0x42	; 66
     3a4:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     3a8:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <adcc1>
     3ac:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <adcc1+0x1>
     3b0:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <adcc1+0x2>
     3b4:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <adcc1+0x3>
			mes [ADC_Channel] = adcc1;
     3b8:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <adcc1>
     3bc:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <adcc1+0x1>
     3c0:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <adcc1+0x2>
     3c4:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <adcc1+0x3>
     3c8:	20 91 71 01 	lds	r18, 0x0171	; 0x800171 <ADC_Channel>
     3cc:	e2 2e       	mov	r14, r18
     3ce:	f1 2c       	mov	r15, r1
     3d0:	97 01       	movw	r18, r14
     3d2:	22 0f       	add	r18, r18
     3d4:	33 1f       	adc	r19, r19
     3d6:	a9 01       	movw	r20, r18
     3d8:	49 58       	subi	r20, 0x89	; 137
     3da:	5e 4f       	sbci	r21, 0xFE	; 254
     3dc:	7a 01       	movw	r14, r20
     3de:	0e 94 74 05 	call	0xae8	; 0xae8 <__fixsfsi>
     3e2:	f7 01       	movw	r30, r14
     3e4:	71 83       	std	Z+1, r23	; 0x01
     3e6:	60 83       	st	Z, r22
			}
			
			printf("Channel: %d \t ADC value: %.1f \t Result:  %d \n",ADMUX, adc_result, mes[ADC_Channel]);
     3e8:	f8 01       	movw	r30, r16
     3ea:	80 81       	ld	r24, Z
     3ec:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <ADC_Channel>
     3f0:	f0 e0       	ldi	r31, 0x00	; 0
     3f2:	ee 0f       	add	r30, r30
     3f4:	ff 1f       	adc	r31, r31
     3f6:	e9 58       	subi	r30, 0x89	; 137
     3f8:	fe 4f       	sbci	r31, 0xFE	; 254
     3fa:	91 81       	ldd	r25, Z+1	; 0x01
     3fc:	9f 93       	push	r25
     3fe:	90 81       	ld	r25, Z
     400:	9f 93       	push	r25
     402:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <adc_result+0x3>
     406:	9f 93       	push	r25
     408:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <adc_result+0x2>
     40c:	9f 93       	push	r25
     40e:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <adc_result+0x1>
     412:	9f 93       	push	r25
     414:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <adc_result>
     418:	9f 93       	push	r25
     41a:	1f 92       	push	r1
     41c:	8f 93       	push	r24
     41e:	df 93       	push	r29
     420:	cf 93       	push	r28
     422:	0e 94 a7 0b 	call	0x174e	; 0x174e <printf>
     426:	8d b7       	in	r24, 0x3d	; 61
     428:	9e b7       	in	r25, 0x3e	; 62
     42a:	0a 96       	adiw	r24, 0x0a	; 10
     42c:	0f b6       	in	r0, 0x3f	; 63
     42e:	f8 94       	cli
     430:	9e bf       	out	0x3e, r25	; 62
     432:	0f be       	out	0x3f, r0	; 63
     434:	8d bf       	out	0x3d, r24	; 61
	sei(); // Enable interrupts
		
    while(1) 
    {	
		
		while(status == 10){
     436:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     43a:	8a 30       	cpi	r24, 0x0A	; 10
     43c:	09 f4       	brne	.+2      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     43e:	67 cf       	rjmp	.-306    	; 0x30e <main+0x20>
			
		}
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 							
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 

		while(status == 20){
     440:	84 31       	cpi	r24, 0x14	; 20
     442:	c9 f7       	brne	.-14     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
			// printf("Not Safe to run!  \n");	
			StopDrive();
     444:	0e 94 34 04 	call	0x868	; 0x868 <StopDrive>
			
		}
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 							
// // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // // 

		while(status == 20){
     448:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     44c:	84 31       	cpi	r24, 0x14	; 20
     44e:	d1 f3       	breq	.-12     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     450:	f2 cf       	rjmp	.-28     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>

00000452 <__vector_21>:

		
	}
}

ISR(ADC_vect){
     452:	1f 92       	push	r1
     454:	0f 92       	push	r0
     456:	0f b6       	in	r0, 0x3f	; 63
     458:	0f 92       	push	r0
     45a:	11 24       	eor	r1, r1
	default:
		printf("Broken!\n");
		break;
	}
	*/
}
     45c:	0f 90       	pop	r0
     45e:	0f be       	out	0x3f, r0	; 63
     460:	0f 90       	pop	r0
     462:	1f 90       	pop	r1
     464:	18 95       	reti

00000466 <__vector_16>:
	
ISR(TIMER0_OVF_vect){}
     466:	1f 92       	push	r1
     468:	0f 92       	push	r0
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	0f 92       	push	r0
     46e:	11 24       	eor	r1, r1
     470:	0f 90       	pop	r0
     472:	0f be       	out	0x3f, r0	; 63
     474:	0f 90       	pop	r0
     476:	1f 90       	pop	r1
     478:	18 95       	reti

0000047a <__vector_13>:
	
ISR(TIMER1_OVF_vect){}
     47a:	1f 92       	push	r1
     47c:	0f 92       	push	r0
     47e:	0f b6       	in	r0, 0x3f	; 63
     480:	0f 92       	push	r0
     482:	11 24       	eor	r1, r1
     484:	0f 90       	pop	r0
     486:	0f be       	out	0x3f, r0	; 63
     488:	0f 90       	pop	r0
     48a:	1f 90       	pop	r1
     48c:	18 95       	reti

0000048e <__vector_9>:
		
ISR(TIMER2_OVF_vect){}
     48e:	1f 92       	push	r1
     490:	0f 92       	push	r0
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	0f 92       	push	r0
     496:	11 24       	eor	r1, r1
     498:	0f 90       	pop	r0
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	0f 90       	pop	r0
     49e:	1f 90       	pop	r1
     4a0:	18 95       	reti

000004a2 <cal_checksum>:
}


void set_opcode(uint8_t value)
{
	opcode = value;
     4a2:	fc 01       	movw	r30, r24
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	9b 01       	movw	r18, r22
     4a8:	21 50       	subi	r18, 0x01	; 1
     4aa:	31 09       	sbc	r19, r1
     4ac:	16 16       	cp	r1, r22
     4ae:	17 06       	cpc	r1, r23
     4b0:	74 f4       	brge	.+28     	; 0x4ce <cal_checksum+0x2c>
     4b2:	80 e0       	ldi	r24, 0x00	; 0
     4b4:	af 01       	movw	r20, r30
     4b6:	02 2e       	mov	r0, r18
     4b8:	02 c0       	rjmp	.+4      	; 0x4be <cal_checksum+0x1c>
     4ba:	55 95       	asr	r21
     4bc:	47 95       	ror	r20
     4be:	0a 94       	dec	r0
     4c0:	e2 f7       	brpl	.-8      	; 0x4ba <cal_checksum+0x18>
     4c2:	41 70       	andi	r20, 0x01	; 1
     4c4:	84 27       	eor	r24, r20
     4c6:	21 50       	subi	r18, 0x01	; 1
     4c8:	31 09       	sbc	r19, r1
     4ca:	a0 f7       	brcc	.-24     	; 0x4b4 <cal_checksum+0x12>
     4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <cal_checksum+0x2e>
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	90 e0       	ldi	r25, 0x00	; 0
     4d2:	08 95       	ret

000004d4 <Motor_Send_Status>:



void Motor_Send_Status(void)
{
	if (bytes==1)
     4d4:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <bytes>
     4d8:	81 30       	cpi	r24, 0x01	; 1
     4da:	59 f4       	brne	.+22     	; 0x4f2 <Motor_Send_Status+0x1e>
	{
		int checksum;
		
		checksum = cal_checksum(status, 8);
     4dc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     4e0:	68 e0       	ldi	r22, 0x08	; 8
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 51 02 	call	0x4a2	; 0x4a2 <cal_checksum>
		set_data(checksum);
     4e8:	0e 94 1e 01 	call	0x23c	; 0x23c <set_data>
		bytes=0;
     4ec:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <bytes>
     4f0:	08 95       	ret
	}
	else
	{
		set_data(status);
     4f2:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     4f6:	0e 94 1e 01 	call	0x23c	; 0x23c <set_data>
		bytes++;
     4fa:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <bytes>
     4fe:	8f 5f       	subi	r24, 0xFF	; 255
     500:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <bytes>
     504:	08 95       	ret

00000506 <Motor_Send_error>:
	}
}
void Motor_Send_error(void)
{
     506:	cf 93       	push	r28
	//printf("Motor Send update \n");
	int new_error=0;
	char received_checksum;
	if (bytes==3)
     508:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <bytes>
     50c:	83 30       	cpi	r24, 0x03	; 3
     50e:	f9 f4       	brne	.+62     	; 0x54e <Motor_Send_error+0x48>
	{
		received_checksum = data;
     510:	c0 91 7e 01 	lds	r28, 0x017E	; 0x80017e <data>
		int checksum = cal_checksum(new_error, 16);
     514:	60 e1       	ldi	r22, 0x10	; 16
     516:	80 e0       	ldi	r24, 0x00	; 0
     518:	90 e0       	ldi	r25, 0x00	; 0
     51a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <cal_checksum>
		
		if (checksum==received_checksum)
     51e:	2c 2f       	mov	r18, r28
     520:	30 e0       	ldi	r19, 0x00	; 0
     522:	82 17       	cp	r24, r18
     524:	93 07       	cpc	r25, r19
     526:	81 f4       	brne	.+32     	; 0x548 <Motor_Send_error+0x42>
		{
			error = new_error;
     528:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <error+0x1>
     52c:	10 92 a3 01 	sts	0x01A3, r1	; 0x8001a3 <error>
			printf("after %d \n",error);
     530:	1f 92       	push	r1
     532:	1f 92       	push	r1
     534:	83 e5       	ldi	r24, 0x53	; 83
     536:	91 e0       	ldi	r25, 0x01	; 1
     538:	9f 93       	push	r25
     53a:	8f 93       	push	r24
     53c:	0e 94 a7 0b 	call	0x174e	; 0x174e <printf>
     540:	0f 90       	pop	r0
     542:	0f 90       	pop	r0
     544:	0f 90       	pop	r0
     546:	0f 90       	pop	r0
		}

		
		bytes=0;
     548:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <bytes>
     54c:	23 c0       	rjmp	.+70     	; 0x594 <Motor_Send_error+0x8e>
		
	}
	else
	{
		new_error=new_error + data << (8*(bytes-1));
     54e:	20 91 7e 01 	lds	r18, 0x017E	; 0x80017e <data>
		printf("error update %d \n",new_error);
     552:	30 e0       	ldi	r19, 0x00	; 0
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	01 97       	sbiw	r24, 0x01	; 1
     558:	88 0f       	add	r24, r24
     55a:	99 1f       	adc	r25, r25
     55c:	88 0f       	add	r24, r24
     55e:	99 1f       	adc	r25, r25
     560:	88 0f       	add	r24, r24
     562:	99 1f       	adc	r25, r25
     564:	a9 01       	movw	r20, r18
     566:	02 c0       	rjmp	.+4      	; 0x56c <Motor_Send_error+0x66>
     568:	44 0f       	add	r20, r20
     56a:	55 1f       	adc	r21, r21
     56c:	8a 95       	dec	r24
     56e:	e2 f7       	brpl	.-8      	; 0x568 <Motor_Send_error+0x62>
     570:	ca 01       	movw	r24, r20
     572:	9f 93       	push	r25
     574:	4f 93       	push	r20
     576:	8e e5       	ldi	r24, 0x5E	; 94
     578:	91 e0       	ldi	r25, 0x01	; 1
     57a:	9f 93       	push	r25
     57c:	8f 93       	push	r24
     57e:	0e 94 a7 0b 	call	0x174e	; 0x174e <printf>
		bytes++;
     582:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <bytes>
     586:	8f 5f       	subi	r24, 0xFF	; 255
     588:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <bytes>
     58c:	0f 90       	pop	r0
     58e:	0f 90       	pop	r0
     590:	0f 90       	pop	r0
     592:	0f 90       	pop	r0
	
	
	
	
	
}
     594:	cf 91       	pop	r28
     596:	08 95       	ret

00000598 <i2c_service>:
}


void i2c_service(void)
{
	switch(opcode)
     598:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <opcode>
     59c:	88 23       	and	r24, r24
     59e:	19 f0       	breq	.+6      	; 0x5a6 <i2c_service+0xe>
     5a0:	81 30       	cpi	r24, 0x01	; 1
     5a2:	21 f0       	breq	.+8      	; 0x5ac <i2c_service+0x14>
     5a4:	08 95       	ret
	{
		case 0:
		{
			Motor_Send_Status();
     5a6:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <Motor_Send_Status>
			break;
     5aa:	08 95       	ret
		}
		
		case 1:
		{
			Motor_Send_error();
     5ac:	0e 94 83 02 	call	0x506	; 0x506 <Motor_Send_error>
     5b0:	08 95       	ret

000005b2 <T0_init>:
		OCR2A =  (M1_DutyCycle/100)*254;			// DubyCycle Motor 1
		OCR2B =  (M2_DutyCycle/100)*254;			// DutyCycle Motor 2
		_delay_us(1);
	
	}
}
     5b2:	84 b5       	in	r24, 0x24	; 36
     5b4:	80 68       	ori	r24, 0x80	; 128
     5b6:	84 bd       	out	0x24, r24	; 36
     5b8:	84 b5       	in	r24, 0x24	; 36
     5ba:	80 62       	ori	r24, 0x20	; 32
     5bc:	84 bd       	out	0x24, r24	; 36
     5be:	84 b5       	in	r24, 0x24	; 36
     5c0:	8b 60       	ori	r24, 0x0B	; 11
     5c2:	84 bd       	out	0x24, r24	; 36
     5c4:	8f ef       	ldi	r24, 0xFF	; 255
     5c6:	87 bd       	out	0x27, r24	; 39
     5c8:	88 bd       	out	0x28, r24	; 40
     5ca:	85 b5       	in	r24, 0x25	; 37
     5cc:	82 60       	ori	r24, 0x02	; 2
     5ce:	85 bd       	out	0x25, r24	; 37
     5d0:	ee e6       	ldi	r30, 0x6E	; 110
     5d2:	f0 e0       	ldi	r31, 0x00	; 0
     5d4:	80 81       	ld	r24, Z
     5d6:	81 60       	ori	r24, 0x01	; 1
     5d8:	80 83       	st	Z, r24
     5da:	08 95       	ret

000005dc <T1_init>:
     5dc:	e0 e8       	ldi	r30, 0x80	; 128
     5de:	f0 e0       	ldi	r31, 0x00	; 0
     5e0:	80 81       	ld	r24, Z
     5e2:	80 68       	ori	r24, 0x80	; 128
     5e4:	80 83       	st	Z, r24
     5e6:	80 81       	ld	r24, Z
     5e8:	80 62       	ori	r24, 0x20	; 32
     5ea:	80 83       	st	Z, r24
     5ec:	80 81       	ld	r24, Z
     5ee:	8b 60       	ori	r24, 0x0B	; 11
     5f0:	80 83       	st	Z, r24
     5f2:	88 ee       	ldi	r24, 0xE8	; 232
     5f4:	93 e0       	ldi	r25, 0x03	; 3
     5f6:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     5fa:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     5fe:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
     602:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
     606:	e1 e8       	ldi	r30, 0x81	; 129
     608:	f0 e0       	ldi	r31, 0x00	; 0
     60a:	80 81       	ld	r24, Z
     60c:	81 60       	ori	r24, 0x01	; 1
     60e:	80 83       	st	Z, r24
     610:	ef e6       	ldi	r30, 0x6F	; 111
     612:	f0 e0       	ldi	r31, 0x00	; 0
     614:	80 81       	ld	r24, Z
     616:	81 60       	ori	r24, 0x01	; 1
     618:	80 83       	st	Z, r24
     61a:	08 95       	ret

0000061c <T2_init>:
     61c:	e0 eb       	ldi	r30, 0xB0	; 176
     61e:	f0 e0       	ldi	r31, 0x00	; 0
     620:	80 81       	ld	r24, Z
     622:	80 68       	ori	r24, 0x80	; 128
     624:	80 83       	st	Z, r24
     626:	80 81       	ld	r24, Z
     628:	80 62       	ori	r24, 0x20	; 32
     62a:	80 83       	st	Z, r24
     62c:	80 81       	ld	r24, Z
     62e:	8b 60       	ori	r24, 0x0B	; 11
     630:	80 83       	st	Z, r24
     632:	80 e8       	ldi	r24, 0x80	; 128
     634:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
     638:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
     63c:	e1 eb       	ldi	r30, 0xB1	; 177
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	80 81       	ld	r24, Z
     642:	82 60       	ori	r24, 0x02	; 2
     644:	80 83       	st	Z, r24
     646:	e0 e7       	ldi	r30, 0x70	; 112
     648:	f0 e0       	ldi	r31, 0x00	; 0
     64a:	80 81       	ld	r24, Z
     64c:	81 60       	ori	r24, 0x01	; 1
     64e:	80 83       	st	Z, r24
     650:	08 95       	ret

00000652 <TimersInit>:
     652:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <T0_init>
     656:	0e 94 ee 02 	call	0x5dc	; 0x5dc <T1_init>
     65a:	0e 94 0e 03 	call	0x61c	; 0x61c <T2_init>
     65e:	08 95       	ret

00000660 <Sorting>:
     660:	81 30       	cpi	r24, 0x01	; 1
     662:	51 f4       	brne	.+20     	; 0x678 <Sorting+0x18>
     664:	8f ef       	ldi	r24, 0xFF	; 255
     666:	87 bd       	out	0x27, r24	; 39
     668:	88 bd       	out	0x28, r24	; 40
     66a:	8f ef       	ldi	r24, 0xFF	; 255
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     672:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     676:	08 95       	ret
     678:	81 11       	cpse	r24, r1
     67a:	06 c0       	rjmp	.+12     	; 0x688 <Sorting+0x28>
     67c:	17 bc       	out	0x27, r1	; 39
     67e:	18 bc       	out	0x28, r1	; 40
     680:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     684:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     688:	08 95       	ret

0000068a <SetDrive>:


void SetDrive(double M1_DutyCycle, double M2_DutyCycle){
     68a:	8f 92       	push	r8
     68c:	9f 92       	push	r9
     68e:	af 92       	push	r10
     690:	bf 92       	push	r11
     692:	cf 92       	push	r12
     694:	df 92       	push	r13
     696:	ef 92       	push	r14
     698:	ff 92       	push	r15
     69a:	6b 01       	movw	r12, r22
     69c:	7c 01       	movw	r14, r24
     69e:	49 01       	movw	r8, r18
     6a0:	5a 01       	movw	r10, r20
		
			if(M1_DutyCycle < MPWM_MIN)
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	40 ea       	ldi	r20, 0xA0	; 160
     6a8:	51 e4       	ldi	r21, 0x41	; 65
     6aa:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__cmpsf2>
     6ae:	88 23       	and	r24, r24
     6b0:	44 f4       	brge	.+16     	; 0x6c2 <SetDrive+0x38>
			{
				M1_DutyCycle = MPWM_MIN;
     6b2:	0f 2e       	mov	r0, r31
     6b4:	c1 2c       	mov	r12, r1
     6b6:	d1 2c       	mov	r13, r1
     6b8:	f0 ea       	ldi	r31, 0xA0	; 160
     6ba:	ef 2e       	mov	r14, r31
     6bc:	f1 e4       	ldi	r31, 0x41	; 65
     6be:	ff 2e       	mov	r15, r31
     6c0:	f0 2d       	mov	r31, r0
			}
			
			if (M2_DutyCycle < MPWM_MIN)
     6c2:	20 e0       	ldi	r18, 0x00	; 0
     6c4:	30 e0       	ldi	r19, 0x00	; 0
     6c6:	40 ea       	ldi	r20, 0xA0	; 160
     6c8:	51 e4       	ldi	r21, 0x41	; 65
     6ca:	c5 01       	movw	r24, r10
     6cc:	b4 01       	movw	r22, r8
     6ce:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__cmpsf2>
     6d2:	88 23       	and	r24, r24
     6d4:	0c f4       	brge	.+2      	; 0x6d8 <SetDrive+0x4e>
     6d6:	a9 c0       	rjmp	.+338    	; 0x82a <SetDrive+0x1a0>
			{
				M2_DutyCycle = MPWM_MIN;
			}
			
						if(M1_DutyCycle < 0)
     6d8:	20 e0       	ldi	r18, 0x00	; 0
     6da:	30 e0       	ldi	r19, 0x00	; 0
     6dc:	a9 01       	movw	r20, r18
     6de:	c7 01       	movw	r24, r14
     6e0:	b6 01       	movw	r22, r12
     6e2:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__cmpsf2>
     6e6:	88 23       	and	r24, r24
     6e8:	1c f4       	brge	.+6      	; 0x6f0 <SetDrive+0x66>
						{
							M1_DutyCycle = 0;
     6ea:	c1 2c       	mov	r12, r1
     6ec:	d1 2c       	mov	r13, r1
     6ee:	76 01       	movw	r14, r12
						}
						
						if (M2_DutyCycle < 0)
     6f0:	20 e0       	ldi	r18, 0x00	; 0
     6f2:	30 e0       	ldi	r19, 0x00	; 0
     6f4:	a9 01       	movw	r20, r18
     6f6:	c5 01       	movw	r24, r10
     6f8:	b4 01       	movw	r22, r8
     6fa:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__cmpsf2>
     6fe:	88 23       	and	r24, r24
     700:	64 f4       	brge	.+24     	; 0x71a <SetDrive+0x90>
						{
							M2_DutyCycle = 0;
     702:	81 2c       	mov	r8, r1
     704:	91 2c       	mov	r9, r1
     706:	54 01       	movw	r10, r8
     708:	08 c0       	rjmp	.+16     	; 0x71a <SetDrive+0x90>
				M1_DutyCycle = MPWM_MIN;
			}
			
			if (M2_DutyCycle < MPWM_MIN)
			{
				M2_DutyCycle = MPWM_MIN;
     70a:	0f 2e       	mov	r0, r31
     70c:	81 2c       	mov	r8, r1
     70e:	91 2c       	mov	r9, r1
     710:	f0 ea       	ldi	r31, 0xA0	; 160
     712:	af 2e       	mov	r10, r31
     714:	f1 e4       	ldi	r31, 0x41	; 65
     716:	bf 2e       	mov	r11, r31
     718:	f0 2d       	mov	r31, r0
						if (M2_DutyCycle < 0)
						{
							M2_DutyCycle = 0;
						}
						
			if((error > 90) || (error < -90)){
     71a:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <error>
     71e:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <error+0x1>
     722:	9c 01       	movw	r18, r24
     724:	26 5a       	subi	r18, 0xA6	; 166
     726:	3f 4f       	sbci	r19, 0xFF	; 255
     728:	25 3b       	cpi	r18, 0xB5	; 181
     72a:	31 05       	cpc	r19, r1
     72c:	08 f4       	brcc	.+2      	; 0x730 <SetDrive+0xa6>
     72e:	56 c0       	rjmp	.+172    	; 0x7dc <SetDrive+0x152>
//								   Turning ... 				
							if(error > 90){
     730:	8b 35       	cpi	r24, 0x5B	; 91
     732:	91 05       	cpc	r25, r1
     734:	34 f1       	brlt	.+76     	; 0x782 <SetDrive+0xf8>
								PinState(pd7, low);							 // H-Bridge Enable pin Motor 1
     736:	5f 98       	cbi	0x0b, 7	; 11
								PinState(pb0, low);							 // H-Bridge Enable pin Motor 2
     738:	28 98       	cbi	0x05, 0	; 5
								OCR2A =  (M1_DutyCycle/100)*254;			// DubyCycle Motor 1
     73a:	20 e0       	ldi	r18, 0x00	; 0
     73c:	30 e0       	ldi	r19, 0x00	; 0
     73e:	48 ec       	ldi	r20, 0xC8	; 200
     740:	52 e4       	ldi	r21, 0x42	; 66
     742:	c7 01       	movw	r24, r14
     744:	b6 01       	movw	r22, r12
     746:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     74a:	20 e0       	ldi	r18, 0x00	; 0
     74c:	30 e0       	ldi	r19, 0x00	; 0
     74e:	4e e7       	ldi	r20, 0x7E	; 126
     750:	53 e4       	ldi	r21, 0x43	; 67
     752:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     756:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     75a:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
								OCR2B =  (M2_DutyCycle/100)*254;			// DutyCycle Motor 2
     75e:	20 e0       	ldi	r18, 0x00	; 0
     760:	30 e0       	ldi	r19, 0x00	; 0
     762:	48 ec       	ldi	r20, 0xC8	; 200
     764:	52 e4       	ldi	r21, 0x42	; 66
     766:	c5 01       	movw	r24, r10
     768:	b4 01       	movw	r22, r8
     76a:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	4e e7       	ldi	r20, 0x7E	; 126
     774:	53 e4       	ldi	r21, 0x43	; 67
     776:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     77a:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     77e:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
							}
//									Turning ... 
									if(error < -90){
     782:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <error>
     786:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <error+0x1>
     78a:	86 3a       	cpi	r24, 0xA6	; 166
     78c:	9f 4f       	sbci	r25, 0xFF	; 255
     78e:	34 f5       	brge	.+76     	; 0x7dc <SetDrive+0x152>
									PinState(pd7, high);							 // H-Bridge Enable pin Motor 1
     790:	5f 9a       	sbi	0x0b, 7	; 11
									PinState(pb0, high);							 // H-Bridge Enable pin Motor 2
     792:	28 9a       	sbi	0x05, 0	; 5
									OCR2A =  (M1_DutyCycle/100)*254;			// DubyCycle Motor 1
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	48 ec       	ldi	r20, 0xC8	; 200
     79a:	52 e4       	ldi	r21, 0x42	; 66
     79c:	c7 01       	movw	r24, r14
     79e:	b6 01       	movw	r22, r12
     7a0:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     7a4:	20 e0       	ldi	r18, 0x00	; 0
     7a6:	30 e0       	ldi	r19, 0x00	; 0
     7a8:	4e e7       	ldi	r20, 0x7E	; 126
     7aa:	53 e4       	ldi	r21, 0x43	; 67
     7ac:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     7b0:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     7b4:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
									OCR2B =  (M2_DutyCycle/100)*254;			// DutyCycle Motor 2
     7b8:	20 e0       	ldi	r18, 0x00	; 0
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	48 ec       	ldi	r20, 0xC8	; 200
     7be:	52 e4       	ldi	r21, 0x42	; 66
     7c0:	c5 01       	movw	r24, r10
     7c2:	b4 01       	movw	r22, r8
     7c4:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     7c8:	20 e0       	ldi	r18, 0x00	; 0
     7ca:	30 e0       	ldi	r19, 0x00	; 0
     7cc:	4e e7       	ldi	r20, 0x7E	; 126
     7ce:	53 e4       	ldi	r21, 0x43	; 67
     7d0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     7d4:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     7d8:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>

			}
			

//									Turning ...
								PinState(pd7, low);							 // H-Bridge Enable pin Motor 1
     7dc:	5f 98       	cbi	0x0b, 7	; 11
								PinState(pb0, low);							 // H-Bridge Enable pin Motor 2
     7de:	28 98       	cbi	0x05, 0	; 5
								OCR2A =  (M1_DutyCycle/100)*254;			// DubyCycle Motor 1
     7e0:	20 e0       	ldi	r18, 0x00	; 0
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	48 ec       	ldi	r20, 0xC8	; 200
     7e6:	52 e4       	ldi	r21, 0x42	; 66
     7e8:	c7 01       	movw	r24, r14
     7ea:	b6 01       	movw	r22, r12
     7ec:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	4e e7       	ldi	r20, 0x7E	; 126
     7f6:	53 e4       	ldi	r21, 0x43	; 67
     7f8:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     7fc:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     800:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
								OCR2B =  (M2_DutyCycle/100)*254;			// DutyCycle Motor 2								
     804:	20 e0       	ldi	r18, 0x00	; 0
     806:	30 e0       	ldi	r19, 0x00	; 0
     808:	48 ec       	ldi	r20, 0xC8	; 200
     80a:	52 e4       	ldi	r21, 0x42	; 66
     80c:	c5 01       	movw	r24, r10
     80e:	b4 01       	movw	r22, r8
     810:	0e 94 02 05 	call	0xa04	; 0xa04 <__divsf3>
     814:	20 e0       	ldi	r18, 0x00	; 0
     816:	30 e0       	ldi	r19, 0x00	; 0
     818:	4e e7       	ldi	r20, 0x7E	; 126
     81a:	53 e4       	ldi	r21, 0x43	; 67
     81c:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__mulsf3>
     820:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     824:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
		PinState(pb4, low);  // L298 in4
				printf("Direc Set \n");
		}
		*/

			}
     828:	16 c0       	rjmp	.+44     	; 0x856 <SetDrive+0x1cc>
			if (M2_DutyCycle < MPWM_MIN)
			{
				M2_DutyCycle = MPWM_MIN;
			}
			
						if(M1_DutyCycle < 0)
     82a:	20 e0       	ldi	r18, 0x00	; 0
     82c:	30 e0       	ldi	r19, 0x00	; 0
     82e:	a9 01       	movw	r20, r18
     830:	c7 01       	movw	r24, r14
     832:	b6 01       	movw	r22, r12
     834:	0e 94 fd 04 	call	0x9fa	; 0x9fa <__cmpsf2>
     838:	88 23       	and	r24, r24
     83a:	0c f0       	brlt	.+2      	; 0x83e <SetDrive+0x1b4>
     83c:	66 cf       	rjmp	.-308    	; 0x70a <SetDrive+0x80>
						{
							M1_DutyCycle = 0;
     83e:	c1 2c       	mov	r12, r1
     840:	d1 2c       	mov	r13, r1
     842:	76 01       	movw	r14, r12
				M1_DutyCycle = MPWM_MIN;
			}
			
			if (M2_DutyCycle < MPWM_MIN)
			{
				M2_DutyCycle = MPWM_MIN;
     844:	0f 2e       	mov	r0, r31
     846:	81 2c       	mov	r8, r1
     848:	91 2c       	mov	r9, r1
     84a:	f0 ea       	ldi	r31, 0xA0	; 160
     84c:	af 2e       	mov	r10, r31
     84e:	f1 e4       	ldi	r31, 0x41	; 65
     850:	bf 2e       	mov	r11, r31
     852:	f0 2d       	mov	r31, r0
     854:	62 cf       	rjmp	.-316    	; 0x71a <SetDrive+0x90>
		PinState(pb4, low);  // L298 in4
				printf("Direc Set \n");
		}
		*/

			}
     856:	ff 90       	pop	r15
     858:	ef 90       	pop	r14
     85a:	df 90       	pop	r13
     85c:	cf 90       	pop	r12
     85e:	bf 90       	pop	r11
     860:	af 90       	pop	r10
     862:	9f 90       	pop	r9
     864:	8f 90       	pop	r8
     866:	08 95       	ret

00000868 <StopDrive>:
		
//////////////////////         Motor functions

void StopDrive(void){
	
	M1_DutyCycle = 0;
     868:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <M1_DutyCycle>
     86c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <M1_DutyCycle+0x1>
     870:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <M1_DutyCycle+0x2>
     874:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <M1_DutyCycle+0x3>
	M2_DutyCycle = 0;
     878:	10 92 01 01 	sts	0x0101, r1	; 0x800101 <M2_DutyCycle>
     87c:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <M2_DutyCycle+0x1>
     880:	10 92 03 01 	sts	0x0103, r1	; 0x800103 <M2_DutyCycle+0x2>
     884:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <M2_DutyCycle+0x3>
	sortState = 0;
     888:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <__data_end>
	Sorting(sortState);
     88c:	80 e0       	ldi	r24, 0x00	; 0
     88e:	0e 94 30 03 	call	0x660	; 0x660 <Sorting>
	SetDrive(M1_DutyCycle, M2_DutyCycle);
     892:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <M2_DutyCycle>
     896:	30 91 02 01 	lds	r19, 0x0102	; 0x800102 <M2_DutyCycle+0x1>
     89a:	40 91 03 01 	lds	r20, 0x0103	; 0x800103 <M2_DutyCycle+0x2>
     89e:	50 91 04 01 	lds	r21, 0x0104	; 0x800104 <M2_DutyCycle+0x3>
     8a2:	60 91 05 01 	lds	r22, 0x0105	; 0x800105 <M1_DutyCycle>
     8a6:	70 91 06 01 	lds	r23, 0x0106	; 0x800106 <M1_DutyCycle+0x1>
     8aa:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <M1_DutyCycle+0x2>
     8ae:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <M1_DutyCycle+0x3>
     8b2:	0e 94 45 03 	call	0x68a	; 0x68a <SetDrive>
     8b6:	08 95       	ret

000008b8 <uart_putchar>:
		stdout = &uart_output;	//redirect standard output to uart
		stdin  = &uart_input;  //redirect standard input to uart
}
	

void uart_putchar(char c, FILE *stream) {
     8b8:	cf 93       	push	r28
     8ba:	c8 2f       	mov	r28, r24
	if (c == '\n') {
     8bc:	8a 30       	cpi	r24, 0x0A	; 10
     8be:	19 f4       	brne	.+6      	; 0x8c6 <uart_putchar+0xe>
		uart_putchar('\r', stream);
     8c0:	8d e0       	ldi	r24, 0x0D	; 13
     8c2:	0e 94 5c 04 	call	0x8b8	; 0x8b8 <uart_putchar>
	}
	loop_until_bit_is_set(UCSR0A, UDRE0);
     8c6:	e0 ec       	ldi	r30, 0xC0	; 192
     8c8:	f0 e0       	ldi	r31, 0x00	; 0
     8ca:	80 81       	ld	r24, Z
     8cc:	85 ff       	sbrs	r24, 5
     8ce:	fd cf       	rjmp	.-6      	; 0x8ca <uart_putchar+0x12>
	UDR0 = c;
     8d0:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
}
     8d4:	cf 91       	pop	r28
     8d6:	08 95       	ret

000008d8 <uart_getchar>:

char uart_getchar(FILE *stream) {
	loop_until_bit_is_set(UCSR0A, RXC0);
     8d8:	e0 ec       	ldi	r30, 0xC0	; 192
     8da:	f0 e0       	ldi	r31, 0x00	; 0
     8dc:	80 81       	ld	r24, Z
     8de:	88 23       	and	r24, r24
     8e0:	ec f7       	brge	.-6      	; 0x8dc <uart_getchar+0x4>
	return UDR0;
     8e2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     8e6:	08 95       	ret

000008e8 <uart_init>:
FILE uart_input = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);


void uart_init(void) {
	
	UBRR0H = UBRRH_VALUE;
     8e8:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
     8ec:	87 e6       	ldi	r24, 0x67	; 103
     8ee:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	#if USE_2X
	UCSR0A |= _BV(U2X0);
	#else
	UCSR0A &= ~(_BV(U2X0));
     8f2:	e0 ec       	ldi	r30, 0xC0	; 192
     8f4:	f0 e0       	ldi	r31, 0x00	; 0
     8f6:	80 81       	ld	r24, Z
     8f8:	8d 7f       	andi	r24, 0xFD	; 253
     8fa:	80 83       	st	Z, r24
	#endif

	UCSR0C = _BV(UCSZ01) | _BV(UCSZ00); /* 8-bit data */
     8fc:	86 e0       	ldi	r24, 0x06	; 6
     8fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
	UCSR0B = _BV(RXEN0) | _BV(TXEN0);   /* Enable RX and TX */
     902:	88 e1       	ldi	r24, 0x18	; 24
     904:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     908:	08 95       	ret

0000090a <io_redirect>:
}

void io_redirect(void ){
		
		
		stdout = &uart_output;	//redirect standard output to uart
     90a:	eb ea       	ldi	r30, 0xAB	; 171
     90c:	f1 e0       	ldi	r31, 0x01	; 1
     90e:	87 e1       	ldi	r24, 0x17	; 23
     910:	91 e0       	ldi	r25, 0x01	; 1
     912:	93 83       	std	Z+3, r25	; 0x03
     914:	82 83       	std	Z+2, r24	; 0x02
		stdin  = &uart_input;  //redirect standard input to uart
     916:	89 e0       	ldi	r24, 0x09	; 9
     918:	91 e0       	ldi	r25, 0x01	; 1
     91a:	91 83       	std	Z+1, r25	; 0x01
     91c:	80 83       	st	Z, r24
     91e:	08 95       	ret

00000920 <__subsf3>:
     920:	50 58       	subi	r21, 0x80	; 128

00000922 <__addsf3>:
     922:	bb 27       	eor	r27, r27
     924:	aa 27       	eor	r26, r26
     926:	0e 94 a8 04 	call	0x950	; 0x950 <__addsf3x>
     92a:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__fp_round>
     92e:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_pscA>
     932:	38 f0       	brcs	.+14     	; 0x942 <__addsf3+0x20>
     934:	0e 94 1b 06 	call	0xc36	; 0xc36 <__fp_pscB>
     938:	20 f0       	brcs	.+8      	; 0x942 <__addsf3+0x20>
     93a:	39 f4       	brne	.+14     	; 0x94a <__addsf3+0x28>
     93c:	9f 3f       	cpi	r25, 0xFF	; 255
     93e:	19 f4       	brne	.+6      	; 0x946 <__addsf3+0x24>
     940:	26 f4       	brtc	.+8      	; 0x94a <__addsf3+0x28>
     942:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_nan>
     946:	0e f4       	brtc	.+2      	; 0x94a <__addsf3+0x28>
     948:	e0 95       	com	r30
     94a:	e7 fb       	bst	r30, 7
     94c:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_inf>

00000950 <__addsf3x>:
     950:	e9 2f       	mov	r30, r25
     952:	0e 94 33 06 	call	0xc66	; 0xc66 <__fp_split3>
     956:	58 f3       	brcs	.-42     	; 0x92e <__addsf3+0xc>
     958:	ba 17       	cp	r27, r26
     95a:	62 07       	cpc	r22, r18
     95c:	73 07       	cpc	r23, r19
     95e:	84 07       	cpc	r24, r20
     960:	95 07       	cpc	r25, r21
     962:	20 f0       	brcs	.+8      	; 0x96c <__addsf3x+0x1c>
     964:	79 f4       	brne	.+30     	; 0x984 <__addsf3x+0x34>
     966:	a6 f5       	brtc	.+104    	; 0x9d0 <__addsf3x+0x80>
     968:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__fp_zero>
     96c:	0e f4       	brtc	.+2      	; 0x970 <__addsf3x+0x20>
     96e:	e0 95       	com	r30
     970:	0b 2e       	mov	r0, r27
     972:	ba 2f       	mov	r27, r26
     974:	a0 2d       	mov	r26, r0
     976:	0b 01       	movw	r0, r22
     978:	b9 01       	movw	r22, r18
     97a:	90 01       	movw	r18, r0
     97c:	0c 01       	movw	r0, r24
     97e:	ca 01       	movw	r24, r20
     980:	a0 01       	movw	r20, r0
     982:	11 24       	eor	r1, r1
     984:	ff 27       	eor	r31, r31
     986:	59 1b       	sub	r21, r25
     988:	99 f0       	breq	.+38     	; 0x9b0 <__addsf3x+0x60>
     98a:	59 3f       	cpi	r21, 0xF9	; 249
     98c:	50 f4       	brcc	.+20     	; 0x9a2 <__addsf3x+0x52>
     98e:	50 3e       	cpi	r21, 0xE0	; 224
     990:	68 f1       	brcs	.+90     	; 0x9ec <__addsf3x+0x9c>
     992:	1a 16       	cp	r1, r26
     994:	f0 40       	sbci	r31, 0x00	; 0
     996:	a2 2f       	mov	r26, r18
     998:	23 2f       	mov	r18, r19
     99a:	34 2f       	mov	r19, r20
     99c:	44 27       	eor	r20, r20
     99e:	58 5f       	subi	r21, 0xF8	; 248
     9a0:	f3 cf       	rjmp	.-26     	; 0x988 <__addsf3x+0x38>
     9a2:	46 95       	lsr	r20
     9a4:	37 95       	ror	r19
     9a6:	27 95       	ror	r18
     9a8:	a7 95       	ror	r26
     9aa:	f0 40       	sbci	r31, 0x00	; 0
     9ac:	53 95       	inc	r21
     9ae:	c9 f7       	brne	.-14     	; 0x9a2 <__addsf3x+0x52>
     9b0:	7e f4       	brtc	.+30     	; 0x9d0 <__addsf3x+0x80>
     9b2:	1f 16       	cp	r1, r31
     9b4:	ba 0b       	sbc	r27, r26
     9b6:	62 0b       	sbc	r22, r18
     9b8:	73 0b       	sbc	r23, r19
     9ba:	84 0b       	sbc	r24, r20
     9bc:	ba f0       	brmi	.+46     	; 0x9ec <__addsf3x+0x9c>
     9be:	91 50       	subi	r25, 0x01	; 1
     9c0:	a1 f0       	breq	.+40     	; 0x9ea <__addsf3x+0x9a>
     9c2:	ff 0f       	add	r31, r31
     9c4:	bb 1f       	adc	r27, r27
     9c6:	66 1f       	adc	r22, r22
     9c8:	77 1f       	adc	r23, r23
     9ca:	88 1f       	adc	r24, r24
     9cc:	c2 f7       	brpl	.-16     	; 0x9be <__addsf3x+0x6e>
     9ce:	0e c0       	rjmp	.+28     	; 0x9ec <__addsf3x+0x9c>
     9d0:	ba 0f       	add	r27, r26
     9d2:	62 1f       	adc	r22, r18
     9d4:	73 1f       	adc	r23, r19
     9d6:	84 1f       	adc	r24, r20
     9d8:	48 f4       	brcc	.+18     	; 0x9ec <__addsf3x+0x9c>
     9da:	87 95       	ror	r24
     9dc:	77 95       	ror	r23
     9de:	67 95       	ror	r22
     9e0:	b7 95       	ror	r27
     9e2:	f7 95       	ror	r31
     9e4:	9e 3f       	cpi	r25, 0xFE	; 254
     9e6:	08 f0       	brcs	.+2      	; 0x9ea <__addsf3x+0x9a>
     9e8:	b0 cf       	rjmp	.-160    	; 0x94a <__addsf3+0x28>
     9ea:	93 95       	inc	r25
     9ec:	88 0f       	add	r24, r24
     9ee:	08 f0       	brcs	.+2      	; 0x9f2 <__addsf3x+0xa2>
     9f0:	99 27       	eor	r25, r25
     9f2:	ee 0f       	add	r30, r30
     9f4:	97 95       	ror	r25
     9f6:	87 95       	ror	r24
     9f8:	08 95       	ret

000009fa <__cmpsf2>:
     9fa:	0e 94 e7 05 	call	0xbce	; 0xbce <__fp_cmp>
     9fe:	08 f4       	brcc	.+2      	; 0xa02 <__cmpsf2+0x8>
     a00:	81 e0       	ldi	r24, 0x01	; 1
     a02:	08 95       	ret

00000a04 <__divsf3>:
     a04:	0e 94 16 05 	call	0xa2c	; 0xa2c <__divsf3x>
     a08:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__fp_round>
     a0c:	0e 94 1b 06 	call	0xc36	; 0xc36 <__fp_pscB>
     a10:	58 f0       	brcs	.+22     	; 0xa28 <__divsf3+0x24>
     a12:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_pscA>
     a16:	40 f0       	brcs	.+16     	; 0xa28 <__divsf3+0x24>
     a18:	29 f4       	brne	.+10     	; 0xa24 <__divsf3+0x20>
     a1a:	5f 3f       	cpi	r21, 0xFF	; 255
     a1c:	29 f0       	breq	.+10     	; 0xa28 <__divsf3+0x24>
     a1e:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_inf>
     a22:	51 11       	cpse	r21, r1
     a24:	0c 94 56 06 	jmp	0xcac	; 0xcac <__fp_szero>
     a28:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_nan>

00000a2c <__divsf3x>:
     a2c:	0e 94 33 06 	call	0xc66	; 0xc66 <__fp_split3>
     a30:	68 f3       	brcs	.-38     	; 0xa0c <__divsf3+0x8>

00000a32 <__divsf3_pse>:
     a32:	99 23       	and	r25, r25
     a34:	b1 f3       	breq	.-20     	; 0xa22 <__divsf3+0x1e>
     a36:	55 23       	and	r21, r21
     a38:	91 f3       	breq	.-28     	; 0xa1e <__divsf3+0x1a>
     a3a:	95 1b       	sub	r25, r21
     a3c:	55 0b       	sbc	r21, r21
     a3e:	bb 27       	eor	r27, r27
     a40:	aa 27       	eor	r26, r26
     a42:	62 17       	cp	r22, r18
     a44:	73 07       	cpc	r23, r19
     a46:	84 07       	cpc	r24, r20
     a48:	38 f0       	brcs	.+14     	; 0xa58 <__divsf3_pse+0x26>
     a4a:	9f 5f       	subi	r25, 0xFF	; 255
     a4c:	5f 4f       	sbci	r21, 0xFF	; 255
     a4e:	22 0f       	add	r18, r18
     a50:	33 1f       	adc	r19, r19
     a52:	44 1f       	adc	r20, r20
     a54:	aa 1f       	adc	r26, r26
     a56:	a9 f3       	breq	.-22     	; 0xa42 <__divsf3_pse+0x10>
     a58:	35 d0       	rcall	.+106    	; 0xac4 <__divsf3_pse+0x92>
     a5a:	0e 2e       	mov	r0, r30
     a5c:	3a f0       	brmi	.+14     	; 0xa6c <__divsf3_pse+0x3a>
     a5e:	e0 e8       	ldi	r30, 0x80	; 128
     a60:	32 d0       	rcall	.+100    	; 0xac6 <__divsf3_pse+0x94>
     a62:	91 50       	subi	r25, 0x01	; 1
     a64:	50 40       	sbci	r21, 0x00	; 0
     a66:	e6 95       	lsr	r30
     a68:	00 1c       	adc	r0, r0
     a6a:	ca f7       	brpl	.-14     	; 0xa5e <__divsf3_pse+0x2c>
     a6c:	2b d0       	rcall	.+86     	; 0xac4 <__divsf3_pse+0x92>
     a6e:	fe 2f       	mov	r31, r30
     a70:	29 d0       	rcall	.+82     	; 0xac4 <__divsf3_pse+0x92>
     a72:	66 0f       	add	r22, r22
     a74:	77 1f       	adc	r23, r23
     a76:	88 1f       	adc	r24, r24
     a78:	bb 1f       	adc	r27, r27
     a7a:	26 17       	cp	r18, r22
     a7c:	37 07       	cpc	r19, r23
     a7e:	48 07       	cpc	r20, r24
     a80:	ab 07       	cpc	r26, r27
     a82:	b0 e8       	ldi	r27, 0x80	; 128
     a84:	09 f0       	breq	.+2      	; 0xa88 <__divsf3_pse+0x56>
     a86:	bb 0b       	sbc	r27, r27
     a88:	80 2d       	mov	r24, r0
     a8a:	bf 01       	movw	r22, r30
     a8c:	ff 27       	eor	r31, r31
     a8e:	93 58       	subi	r25, 0x83	; 131
     a90:	5f 4f       	sbci	r21, 0xFF	; 255
     a92:	3a f0       	brmi	.+14     	; 0xaa2 <__divsf3_pse+0x70>
     a94:	9e 3f       	cpi	r25, 0xFE	; 254
     a96:	51 05       	cpc	r21, r1
     a98:	78 f0       	brcs	.+30     	; 0xab8 <__divsf3_pse+0x86>
     a9a:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_inf>
     a9e:	0c 94 56 06 	jmp	0xcac	; 0xcac <__fp_szero>
     aa2:	5f 3f       	cpi	r21, 0xFF	; 255
     aa4:	e4 f3       	brlt	.-8      	; 0xa9e <__divsf3_pse+0x6c>
     aa6:	98 3e       	cpi	r25, 0xE8	; 232
     aa8:	d4 f3       	brlt	.-12     	; 0xa9e <__divsf3_pse+0x6c>
     aaa:	86 95       	lsr	r24
     aac:	77 95       	ror	r23
     aae:	67 95       	ror	r22
     ab0:	b7 95       	ror	r27
     ab2:	f7 95       	ror	r31
     ab4:	9f 5f       	subi	r25, 0xFF	; 255
     ab6:	c9 f7       	brne	.-14     	; 0xaaa <__divsf3_pse+0x78>
     ab8:	88 0f       	add	r24, r24
     aba:	91 1d       	adc	r25, r1
     abc:	96 95       	lsr	r25
     abe:	87 95       	ror	r24
     ac0:	97 f9       	bld	r25, 7
     ac2:	08 95       	ret
     ac4:	e1 e0       	ldi	r30, 0x01	; 1
     ac6:	66 0f       	add	r22, r22
     ac8:	77 1f       	adc	r23, r23
     aca:	88 1f       	adc	r24, r24
     acc:	bb 1f       	adc	r27, r27
     ace:	62 17       	cp	r22, r18
     ad0:	73 07       	cpc	r23, r19
     ad2:	84 07       	cpc	r24, r20
     ad4:	ba 07       	cpc	r27, r26
     ad6:	20 f0       	brcs	.+8      	; 0xae0 <__divsf3_pse+0xae>
     ad8:	62 1b       	sub	r22, r18
     ada:	73 0b       	sbc	r23, r19
     adc:	84 0b       	sbc	r24, r20
     ade:	ba 0b       	sbc	r27, r26
     ae0:	ee 1f       	adc	r30, r30
     ae2:	88 f7       	brcc	.-30     	; 0xac6 <__divsf3_pse+0x94>
     ae4:	e0 95       	com	r30
     ae6:	08 95       	ret

00000ae8 <__fixsfsi>:
     ae8:	0e 94 7b 05 	call	0xaf6	; 0xaf6 <__fixunssfsi>
     aec:	68 94       	set
     aee:	b1 11       	cpse	r27, r1
     af0:	0c 94 56 06 	jmp	0xcac	; 0xcac <__fp_szero>
     af4:	08 95       	ret

00000af6 <__fixunssfsi>:
     af6:	0e 94 3b 06 	call	0xc76	; 0xc76 <__fp_splitA>
     afa:	88 f0       	brcs	.+34     	; 0xb1e <__fixunssfsi+0x28>
     afc:	9f 57       	subi	r25, 0x7F	; 127
     afe:	98 f0       	brcs	.+38     	; 0xb26 <__fixunssfsi+0x30>
     b00:	b9 2f       	mov	r27, r25
     b02:	99 27       	eor	r25, r25
     b04:	b7 51       	subi	r27, 0x17	; 23
     b06:	b0 f0       	brcs	.+44     	; 0xb34 <__fixunssfsi+0x3e>
     b08:	e1 f0       	breq	.+56     	; 0xb42 <__fixunssfsi+0x4c>
     b0a:	66 0f       	add	r22, r22
     b0c:	77 1f       	adc	r23, r23
     b0e:	88 1f       	adc	r24, r24
     b10:	99 1f       	adc	r25, r25
     b12:	1a f0       	brmi	.+6      	; 0xb1a <__fixunssfsi+0x24>
     b14:	ba 95       	dec	r27
     b16:	c9 f7       	brne	.-14     	; 0xb0a <__fixunssfsi+0x14>
     b18:	14 c0       	rjmp	.+40     	; 0xb42 <__fixunssfsi+0x4c>
     b1a:	b1 30       	cpi	r27, 0x01	; 1
     b1c:	91 f0       	breq	.+36     	; 0xb42 <__fixunssfsi+0x4c>
     b1e:	0e 94 55 06 	call	0xcaa	; 0xcaa <__fp_zero>
     b22:	b1 e0       	ldi	r27, 0x01	; 1
     b24:	08 95       	ret
     b26:	0c 94 55 06 	jmp	0xcaa	; 0xcaa <__fp_zero>
     b2a:	67 2f       	mov	r22, r23
     b2c:	78 2f       	mov	r23, r24
     b2e:	88 27       	eor	r24, r24
     b30:	b8 5f       	subi	r27, 0xF8	; 248
     b32:	39 f0       	breq	.+14     	; 0xb42 <__fixunssfsi+0x4c>
     b34:	b9 3f       	cpi	r27, 0xF9	; 249
     b36:	cc f3       	brlt	.-14     	; 0xb2a <__fixunssfsi+0x34>
     b38:	86 95       	lsr	r24
     b3a:	77 95       	ror	r23
     b3c:	67 95       	ror	r22
     b3e:	b3 95       	inc	r27
     b40:	d9 f7       	brne	.-10     	; 0xb38 <__fixunssfsi+0x42>
     b42:	3e f4       	brtc	.+14     	; 0xb52 <__fixunssfsi+0x5c>
     b44:	90 95       	com	r25
     b46:	80 95       	com	r24
     b48:	70 95       	com	r23
     b4a:	61 95       	neg	r22
     b4c:	7f 4f       	sbci	r23, 0xFF	; 255
     b4e:	8f 4f       	sbci	r24, 0xFF	; 255
     b50:	9f 4f       	sbci	r25, 0xFF	; 255
     b52:	08 95       	ret

00000b54 <__floatunsisf>:
     b54:	e8 94       	clt
     b56:	09 c0       	rjmp	.+18     	; 0xb6a <__floatsisf+0x12>

00000b58 <__floatsisf>:
     b58:	97 fb       	bst	r25, 7
     b5a:	3e f4       	brtc	.+14     	; 0xb6a <__floatsisf+0x12>
     b5c:	90 95       	com	r25
     b5e:	80 95       	com	r24
     b60:	70 95       	com	r23
     b62:	61 95       	neg	r22
     b64:	7f 4f       	sbci	r23, 0xFF	; 255
     b66:	8f 4f       	sbci	r24, 0xFF	; 255
     b68:	9f 4f       	sbci	r25, 0xFF	; 255
     b6a:	99 23       	and	r25, r25
     b6c:	a9 f0       	breq	.+42     	; 0xb98 <__floatsisf+0x40>
     b6e:	f9 2f       	mov	r31, r25
     b70:	96 e9       	ldi	r25, 0x96	; 150
     b72:	bb 27       	eor	r27, r27
     b74:	93 95       	inc	r25
     b76:	f6 95       	lsr	r31
     b78:	87 95       	ror	r24
     b7a:	77 95       	ror	r23
     b7c:	67 95       	ror	r22
     b7e:	b7 95       	ror	r27
     b80:	f1 11       	cpse	r31, r1
     b82:	f8 cf       	rjmp	.-16     	; 0xb74 <__floatsisf+0x1c>
     b84:	fa f4       	brpl	.+62     	; 0xbc4 <__floatsisf+0x6c>
     b86:	bb 0f       	add	r27, r27
     b88:	11 f4       	brne	.+4      	; 0xb8e <__floatsisf+0x36>
     b8a:	60 ff       	sbrs	r22, 0
     b8c:	1b c0       	rjmp	.+54     	; 0xbc4 <__floatsisf+0x6c>
     b8e:	6f 5f       	subi	r22, 0xFF	; 255
     b90:	7f 4f       	sbci	r23, 0xFF	; 255
     b92:	8f 4f       	sbci	r24, 0xFF	; 255
     b94:	9f 4f       	sbci	r25, 0xFF	; 255
     b96:	16 c0       	rjmp	.+44     	; 0xbc4 <__floatsisf+0x6c>
     b98:	88 23       	and	r24, r24
     b9a:	11 f0       	breq	.+4      	; 0xba0 <__floatsisf+0x48>
     b9c:	96 e9       	ldi	r25, 0x96	; 150
     b9e:	11 c0       	rjmp	.+34     	; 0xbc2 <__floatsisf+0x6a>
     ba0:	77 23       	and	r23, r23
     ba2:	21 f0       	breq	.+8      	; 0xbac <__floatsisf+0x54>
     ba4:	9e e8       	ldi	r25, 0x8E	; 142
     ba6:	87 2f       	mov	r24, r23
     ba8:	76 2f       	mov	r23, r22
     baa:	05 c0       	rjmp	.+10     	; 0xbb6 <__floatsisf+0x5e>
     bac:	66 23       	and	r22, r22
     bae:	71 f0       	breq	.+28     	; 0xbcc <__floatsisf+0x74>
     bb0:	96 e8       	ldi	r25, 0x86	; 134
     bb2:	86 2f       	mov	r24, r22
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	60 e0       	ldi	r22, 0x00	; 0
     bb8:	2a f0       	brmi	.+10     	; 0xbc4 <__floatsisf+0x6c>
     bba:	9a 95       	dec	r25
     bbc:	66 0f       	add	r22, r22
     bbe:	77 1f       	adc	r23, r23
     bc0:	88 1f       	adc	r24, r24
     bc2:	da f7       	brpl	.-10     	; 0xbba <__floatsisf+0x62>
     bc4:	88 0f       	add	r24, r24
     bc6:	96 95       	lsr	r25
     bc8:	87 95       	ror	r24
     bca:	97 f9       	bld	r25, 7
     bcc:	08 95       	ret

00000bce <__fp_cmp>:
     bce:	99 0f       	add	r25, r25
     bd0:	00 08       	sbc	r0, r0
     bd2:	55 0f       	add	r21, r21
     bd4:	aa 0b       	sbc	r26, r26
     bd6:	e0 e8       	ldi	r30, 0x80	; 128
     bd8:	fe ef       	ldi	r31, 0xFE	; 254
     bda:	16 16       	cp	r1, r22
     bdc:	17 06       	cpc	r1, r23
     bde:	e8 07       	cpc	r30, r24
     be0:	f9 07       	cpc	r31, r25
     be2:	c0 f0       	brcs	.+48     	; 0xc14 <__fp_cmp+0x46>
     be4:	12 16       	cp	r1, r18
     be6:	13 06       	cpc	r1, r19
     be8:	e4 07       	cpc	r30, r20
     bea:	f5 07       	cpc	r31, r21
     bec:	98 f0       	brcs	.+38     	; 0xc14 <__fp_cmp+0x46>
     bee:	62 1b       	sub	r22, r18
     bf0:	73 0b       	sbc	r23, r19
     bf2:	84 0b       	sbc	r24, r20
     bf4:	95 0b       	sbc	r25, r21
     bf6:	39 f4       	brne	.+14     	; 0xc06 <__fp_cmp+0x38>
     bf8:	0a 26       	eor	r0, r26
     bfa:	61 f0       	breq	.+24     	; 0xc14 <__fp_cmp+0x46>
     bfc:	23 2b       	or	r18, r19
     bfe:	24 2b       	or	r18, r20
     c00:	25 2b       	or	r18, r21
     c02:	21 f4       	brne	.+8      	; 0xc0c <__fp_cmp+0x3e>
     c04:	08 95       	ret
     c06:	0a 26       	eor	r0, r26
     c08:	09 f4       	brne	.+2      	; 0xc0c <__fp_cmp+0x3e>
     c0a:	a1 40       	sbci	r26, 0x01	; 1
     c0c:	a6 95       	lsr	r26
     c0e:	8f ef       	ldi	r24, 0xFF	; 255
     c10:	81 1d       	adc	r24, r1
     c12:	81 1d       	adc	r24, r1
     c14:	08 95       	ret

00000c16 <__fp_inf>:
     c16:	97 f9       	bld	r25, 7
     c18:	9f 67       	ori	r25, 0x7F	; 127
     c1a:	80 e8       	ldi	r24, 0x80	; 128
     c1c:	70 e0       	ldi	r23, 0x00	; 0
     c1e:	60 e0       	ldi	r22, 0x00	; 0
     c20:	08 95       	ret

00000c22 <__fp_nan>:
     c22:	9f ef       	ldi	r25, 0xFF	; 255
     c24:	80 ec       	ldi	r24, 0xC0	; 192
     c26:	08 95       	ret

00000c28 <__fp_pscA>:
     c28:	00 24       	eor	r0, r0
     c2a:	0a 94       	dec	r0
     c2c:	16 16       	cp	r1, r22
     c2e:	17 06       	cpc	r1, r23
     c30:	18 06       	cpc	r1, r24
     c32:	09 06       	cpc	r0, r25
     c34:	08 95       	ret

00000c36 <__fp_pscB>:
     c36:	00 24       	eor	r0, r0
     c38:	0a 94       	dec	r0
     c3a:	12 16       	cp	r1, r18
     c3c:	13 06       	cpc	r1, r19
     c3e:	14 06       	cpc	r1, r20
     c40:	05 06       	cpc	r0, r21
     c42:	08 95       	ret

00000c44 <__fp_round>:
     c44:	09 2e       	mov	r0, r25
     c46:	03 94       	inc	r0
     c48:	00 0c       	add	r0, r0
     c4a:	11 f4       	brne	.+4      	; 0xc50 <__fp_round+0xc>
     c4c:	88 23       	and	r24, r24
     c4e:	52 f0       	brmi	.+20     	; 0xc64 <__fp_round+0x20>
     c50:	bb 0f       	add	r27, r27
     c52:	40 f4       	brcc	.+16     	; 0xc64 <__fp_round+0x20>
     c54:	bf 2b       	or	r27, r31
     c56:	11 f4       	brne	.+4      	; 0xc5c <__fp_round+0x18>
     c58:	60 ff       	sbrs	r22, 0
     c5a:	04 c0       	rjmp	.+8      	; 0xc64 <__fp_round+0x20>
     c5c:	6f 5f       	subi	r22, 0xFF	; 255
     c5e:	7f 4f       	sbci	r23, 0xFF	; 255
     c60:	8f 4f       	sbci	r24, 0xFF	; 255
     c62:	9f 4f       	sbci	r25, 0xFF	; 255
     c64:	08 95       	ret

00000c66 <__fp_split3>:
     c66:	57 fd       	sbrc	r21, 7
     c68:	90 58       	subi	r25, 0x80	; 128
     c6a:	44 0f       	add	r20, r20
     c6c:	55 1f       	adc	r21, r21
     c6e:	59 f0       	breq	.+22     	; 0xc86 <__fp_splitA+0x10>
     c70:	5f 3f       	cpi	r21, 0xFF	; 255
     c72:	71 f0       	breq	.+28     	; 0xc90 <__fp_splitA+0x1a>
     c74:	47 95       	ror	r20

00000c76 <__fp_splitA>:
     c76:	88 0f       	add	r24, r24
     c78:	97 fb       	bst	r25, 7
     c7a:	99 1f       	adc	r25, r25
     c7c:	61 f0       	breq	.+24     	; 0xc96 <__fp_splitA+0x20>
     c7e:	9f 3f       	cpi	r25, 0xFF	; 255
     c80:	79 f0       	breq	.+30     	; 0xca0 <__fp_splitA+0x2a>
     c82:	87 95       	ror	r24
     c84:	08 95       	ret
     c86:	12 16       	cp	r1, r18
     c88:	13 06       	cpc	r1, r19
     c8a:	14 06       	cpc	r1, r20
     c8c:	55 1f       	adc	r21, r21
     c8e:	f2 cf       	rjmp	.-28     	; 0xc74 <__fp_split3+0xe>
     c90:	46 95       	lsr	r20
     c92:	f1 df       	rcall	.-30     	; 0xc76 <__fp_splitA>
     c94:	08 c0       	rjmp	.+16     	; 0xca6 <__fp_splitA+0x30>
     c96:	16 16       	cp	r1, r22
     c98:	17 06       	cpc	r1, r23
     c9a:	18 06       	cpc	r1, r24
     c9c:	99 1f       	adc	r25, r25
     c9e:	f1 cf       	rjmp	.-30     	; 0xc82 <__fp_splitA+0xc>
     ca0:	86 95       	lsr	r24
     ca2:	71 05       	cpc	r23, r1
     ca4:	61 05       	cpc	r22, r1
     ca6:	08 94       	sec
     ca8:	08 95       	ret

00000caa <__fp_zero>:
     caa:	e8 94       	clt

00000cac <__fp_szero>:
     cac:	bb 27       	eor	r27, r27
     cae:	66 27       	eor	r22, r22
     cb0:	77 27       	eor	r23, r23
     cb2:	cb 01       	movw	r24, r22
     cb4:	97 f9       	bld	r25, 7
     cb6:	08 95       	ret

00000cb8 <__mulsf3>:
     cb8:	0e 94 6f 06 	call	0xcde	; 0xcde <__mulsf3x>
     cbc:	0c 94 22 06 	jmp	0xc44	; 0xc44 <__fp_round>
     cc0:	0e 94 14 06 	call	0xc28	; 0xc28 <__fp_pscA>
     cc4:	38 f0       	brcs	.+14     	; 0xcd4 <__mulsf3+0x1c>
     cc6:	0e 94 1b 06 	call	0xc36	; 0xc36 <__fp_pscB>
     cca:	20 f0       	brcs	.+8      	; 0xcd4 <__mulsf3+0x1c>
     ccc:	95 23       	and	r25, r21
     cce:	11 f0       	breq	.+4      	; 0xcd4 <__mulsf3+0x1c>
     cd0:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_inf>
     cd4:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__fp_nan>
     cd8:	11 24       	eor	r1, r1
     cda:	0c 94 56 06 	jmp	0xcac	; 0xcac <__fp_szero>

00000cde <__mulsf3x>:
     cde:	0e 94 33 06 	call	0xc66	; 0xc66 <__fp_split3>
     ce2:	70 f3       	brcs	.-36     	; 0xcc0 <__mulsf3+0x8>

00000ce4 <__mulsf3_pse>:
     ce4:	95 9f       	mul	r25, r21
     ce6:	c1 f3       	breq	.-16     	; 0xcd8 <__mulsf3+0x20>
     ce8:	95 0f       	add	r25, r21
     cea:	50 e0       	ldi	r21, 0x00	; 0
     cec:	55 1f       	adc	r21, r21
     cee:	62 9f       	mul	r22, r18
     cf0:	f0 01       	movw	r30, r0
     cf2:	72 9f       	mul	r23, r18
     cf4:	bb 27       	eor	r27, r27
     cf6:	f0 0d       	add	r31, r0
     cf8:	b1 1d       	adc	r27, r1
     cfa:	63 9f       	mul	r22, r19
     cfc:	aa 27       	eor	r26, r26
     cfe:	f0 0d       	add	r31, r0
     d00:	b1 1d       	adc	r27, r1
     d02:	aa 1f       	adc	r26, r26
     d04:	64 9f       	mul	r22, r20
     d06:	66 27       	eor	r22, r22
     d08:	b0 0d       	add	r27, r0
     d0a:	a1 1d       	adc	r26, r1
     d0c:	66 1f       	adc	r22, r22
     d0e:	82 9f       	mul	r24, r18
     d10:	22 27       	eor	r18, r18
     d12:	b0 0d       	add	r27, r0
     d14:	a1 1d       	adc	r26, r1
     d16:	62 1f       	adc	r22, r18
     d18:	73 9f       	mul	r23, r19
     d1a:	b0 0d       	add	r27, r0
     d1c:	a1 1d       	adc	r26, r1
     d1e:	62 1f       	adc	r22, r18
     d20:	83 9f       	mul	r24, r19
     d22:	a0 0d       	add	r26, r0
     d24:	61 1d       	adc	r22, r1
     d26:	22 1f       	adc	r18, r18
     d28:	74 9f       	mul	r23, r20
     d2a:	33 27       	eor	r19, r19
     d2c:	a0 0d       	add	r26, r0
     d2e:	61 1d       	adc	r22, r1
     d30:	23 1f       	adc	r18, r19
     d32:	84 9f       	mul	r24, r20
     d34:	60 0d       	add	r22, r0
     d36:	21 1d       	adc	r18, r1
     d38:	82 2f       	mov	r24, r18
     d3a:	76 2f       	mov	r23, r22
     d3c:	6a 2f       	mov	r22, r26
     d3e:	11 24       	eor	r1, r1
     d40:	9f 57       	subi	r25, 0x7F	; 127
     d42:	50 40       	sbci	r21, 0x00	; 0
     d44:	9a f0       	brmi	.+38     	; 0xd6c <__mulsf3_pse+0x88>
     d46:	f1 f0       	breq	.+60     	; 0xd84 <__mulsf3_pse+0xa0>
     d48:	88 23       	and	r24, r24
     d4a:	4a f0       	brmi	.+18     	; 0xd5e <__mulsf3_pse+0x7a>
     d4c:	ee 0f       	add	r30, r30
     d4e:	ff 1f       	adc	r31, r31
     d50:	bb 1f       	adc	r27, r27
     d52:	66 1f       	adc	r22, r22
     d54:	77 1f       	adc	r23, r23
     d56:	88 1f       	adc	r24, r24
     d58:	91 50       	subi	r25, 0x01	; 1
     d5a:	50 40       	sbci	r21, 0x00	; 0
     d5c:	a9 f7       	brne	.-22     	; 0xd48 <__mulsf3_pse+0x64>
     d5e:	9e 3f       	cpi	r25, 0xFE	; 254
     d60:	51 05       	cpc	r21, r1
     d62:	80 f0       	brcs	.+32     	; 0xd84 <__mulsf3_pse+0xa0>
     d64:	0c 94 0b 06 	jmp	0xc16	; 0xc16 <__fp_inf>
     d68:	0c 94 56 06 	jmp	0xcac	; 0xcac <__fp_szero>
     d6c:	5f 3f       	cpi	r21, 0xFF	; 255
     d6e:	e4 f3       	brlt	.-8      	; 0xd68 <__mulsf3_pse+0x84>
     d70:	98 3e       	cpi	r25, 0xE8	; 232
     d72:	d4 f3       	brlt	.-12     	; 0xd68 <__mulsf3_pse+0x84>
     d74:	86 95       	lsr	r24
     d76:	77 95       	ror	r23
     d78:	67 95       	ror	r22
     d7a:	b7 95       	ror	r27
     d7c:	f7 95       	ror	r31
     d7e:	e7 95       	ror	r30
     d80:	9f 5f       	subi	r25, 0xFF	; 255
     d82:	c1 f7       	brne	.-16     	; 0xd74 <__mulsf3_pse+0x90>
     d84:	fe 2b       	or	r31, r30
     d86:	88 0f       	add	r24, r24
     d88:	91 1d       	adc	r25, r1
     d8a:	96 95       	lsr	r25
     d8c:	87 95       	ror	r24
     d8e:	97 f9       	bld	r25, 7
     d90:	08 95       	ret

00000d92 <vfprintf>:
     d92:	a0 e1       	ldi	r26, 0x10	; 16
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	ef ec       	ldi	r30, 0xCF	; 207
     d98:	f6 e0       	ldi	r31, 0x06	; 6
     d9a:	0c 94 46 0a 	jmp	0x148c	; 0x148c <__prologue_saves__>
     d9e:	7c 01       	movw	r14, r24
     da0:	1b 01       	movw	r2, r22
     da2:	6a 01       	movw	r12, r20
     da4:	fc 01       	movw	r30, r24
     da6:	17 82       	std	Z+7, r1	; 0x07
     da8:	16 82       	std	Z+6, r1	; 0x06
     daa:	83 81       	ldd	r24, Z+3	; 0x03
     dac:	81 ff       	sbrs	r24, 1
     dae:	44 c3       	rjmp	.+1672   	; 0x1438 <vfprintf+0x6a6>
     db0:	9e 01       	movw	r18, r28
     db2:	2f 5f       	subi	r18, 0xFF	; 255
     db4:	3f 4f       	sbci	r19, 0xFF	; 255
     db6:	39 01       	movw	r6, r18
     db8:	f7 01       	movw	r30, r14
     dba:	93 81       	ldd	r25, Z+3	; 0x03
     dbc:	f1 01       	movw	r30, r2
     dbe:	93 fd       	sbrc	r25, 3
     dc0:	85 91       	lpm	r24, Z+
     dc2:	93 ff       	sbrs	r25, 3
     dc4:	81 91       	ld	r24, Z+
     dc6:	1f 01       	movw	r2, r30
     dc8:	88 23       	and	r24, r24
     dca:	09 f4       	brne	.+2      	; 0xdce <vfprintf+0x3c>
     dcc:	31 c3       	rjmp	.+1634   	; 0x1430 <vfprintf+0x69e>
     dce:	85 32       	cpi	r24, 0x25	; 37
     dd0:	39 f4       	brne	.+14     	; 0xde0 <vfprintf+0x4e>
     dd2:	93 fd       	sbrc	r25, 3
     dd4:	85 91       	lpm	r24, Z+
     dd6:	93 ff       	sbrs	r25, 3
     dd8:	81 91       	ld	r24, Z+
     dda:	1f 01       	movw	r2, r30
     ddc:	85 32       	cpi	r24, 0x25	; 37
     dde:	39 f4       	brne	.+14     	; 0xdee <vfprintf+0x5c>
     de0:	b7 01       	movw	r22, r14
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
     de8:	56 01       	movw	r10, r12
     dea:	65 01       	movw	r12, r10
     dec:	e5 cf       	rjmp	.-54     	; 0xdb8 <vfprintf+0x26>
     dee:	10 e0       	ldi	r17, 0x00	; 0
     df0:	51 2c       	mov	r5, r1
     df2:	91 2c       	mov	r9, r1
     df4:	ff e1       	ldi	r31, 0x1F	; 31
     df6:	f9 15       	cp	r31, r9
     df8:	d8 f0       	brcs	.+54     	; 0xe30 <vfprintf+0x9e>
     dfa:	8b 32       	cpi	r24, 0x2B	; 43
     dfc:	79 f0       	breq	.+30     	; 0xe1c <vfprintf+0x8a>
     dfe:	38 f4       	brcc	.+14     	; 0xe0e <vfprintf+0x7c>
     e00:	80 32       	cpi	r24, 0x20	; 32
     e02:	79 f0       	breq	.+30     	; 0xe22 <vfprintf+0x90>
     e04:	83 32       	cpi	r24, 0x23	; 35
     e06:	a1 f4       	brne	.+40     	; 0xe30 <vfprintf+0x9e>
     e08:	f9 2d       	mov	r31, r9
     e0a:	f0 61       	ori	r31, 0x10	; 16
     e0c:	2e c0       	rjmp	.+92     	; 0xe6a <vfprintf+0xd8>
     e0e:	8d 32       	cpi	r24, 0x2D	; 45
     e10:	61 f0       	breq	.+24     	; 0xe2a <vfprintf+0x98>
     e12:	80 33       	cpi	r24, 0x30	; 48
     e14:	69 f4       	brne	.+26     	; 0xe30 <vfprintf+0x9e>
     e16:	29 2d       	mov	r18, r9
     e18:	21 60       	ori	r18, 0x01	; 1
     e1a:	2d c0       	rjmp	.+90     	; 0xe76 <vfprintf+0xe4>
     e1c:	39 2d       	mov	r19, r9
     e1e:	32 60       	ori	r19, 0x02	; 2
     e20:	93 2e       	mov	r9, r19
     e22:	89 2d       	mov	r24, r9
     e24:	84 60       	ori	r24, 0x04	; 4
     e26:	98 2e       	mov	r9, r24
     e28:	2a c0       	rjmp	.+84     	; 0xe7e <vfprintf+0xec>
     e2a:	e9 2d       	mov	r30, r9
     e2c:	e8 60       	ori	r30, 0x08	; 8
     e2e:	15 c0       	rjmp	.+42     	; 0xe5a <vfprintf+0xc8>
     e30:	97 fc       	sbrc	r9, 7
     e32:	2d c0       	rjmp	.+90     	; 0xe8e <vfprintf+0xfc>
     e34:	20 ed       	ldi	r18, 0xD0	; 208
     e36:	28 0f       	add	r18, r24
     e38:	2a 30       	cpi	r18, 0x0A	; 10
     e3a:	88 f4       	brcc	.+34     	; 0xe5e <vfprintf+0xcc>
     e3c:	96 fe       	sbrs	r9, 6
     e3e:	06 c0       	rjmp	.+12     	; 0xe4c <vfprintf+0xba>
     e40:	3a e0       	ldi	r19, 0x0A	; 10
     e42:	13 9f       	mul	r17, r19
     e44:	20 0d       	add	r18, r0
     e46:	11 24       	eor	r1, r1
     e48:	12 2f       	mov	r17, r18
     e4a:	19 c0       	rjmp	.+50     	; 0xe7e <vfprintf+0xec>
     e4c:	8a e0       	ldi	r24, 0x0A	; 10
     e4e:	58 9e       	mul	r5, r24
     e50:	20 0d       	add	r18, r0
     e52:	11 24       	eor	r1, r1
     e54:	52 2e       	mov	r5, r18
     e56:	e9 2d       	mov	r30, r9
     e58:	e0 62       	ori	r30, 0x20	; 32
     e5a:	9e 2e       	mov	r9, r30
     e5c:	10 c0       	rjmp	.+32     	; 0xe7e <vfprintf+0xec>
     e5e:	8e 32       	cpi	r24, 0x2E	; 46
     e60:	31 f4       	brne	.+12     	; 0xe6e <vfprintf+0xdc>
     e62:	96 fc       	sbrc	r9, 6
     e64:	e5 c2       	rjmp	.+1482   	; 0x1430 <vfprintf+0x69e>
     e66:	f9 2d       	mov	r31, r9
     e68:	f0 64       	ori	r31, 0x40	; 64
     e6a:	9f 2e       	mov	r9, r31
     e6c:	08 c0       	rjmp	.+16     	; 0xe7e <vfprintf+0xec>
     e6e:	8c 36       	cpi	r24, 0x6C	; 108
     e70:	21 f4       	brne	.+8      	; 0xe7a <vfprintf+0xe8>
     e72:	29 2d       	mov	r18, r9
     e74:	20 68       	ori	r18, 0x80	; 128
     e76:	92 2e       	mov	r9, r18
     e78:	02 c0       	rjmp	.+4      	; 0xe7e <vfprintf+0xec>
     e7a:	88 36       	cpi	r24, 0x68	; 104
     e7c:	41 f4       	brne	.+16     	; 0xe8e <vfprintf+0xfc>
     e7e:	f1 01       	movw	r30, r2
     e80:	93 fd       	sbrc	r25, 3
     e82:	85 91       	lpm	r24, Z+
     e84:	93 ff       	sbrs	r25, 3
     e86:	81 91       	ld	r24, Z+
     e88:	1f 01       	movw	r2, r30
     e8a:	81 11       	cpse	r24, r1
     e8c:	b3 cf       	rjmp	.-154    	; 0xdf4 <vfprintf+0x62>
     e8e:	9b eb       	ldi	r25, 0xBB	; 187
     e90:	98 0f       	add	r25, r24
     e92:	93 30       	cpi	r25, 0x03	; 3
     e94:	20 f4       	brcc	.+8      	; 0xe9e <vfprintf+0x10c>
     e96:	99 2d       	mov	r25, r9
     e98:	90 61       	ori	r25, 0x10	; 16
     e9a:	80 5e       	subi	r24, 0xE0	; 224
     e9c:	07 c0       	rjmp	.+14     	; 0xeac <vfprintf+0x11a>
     e9e:	9b e9       	ldi	r25, 0x9B	; 155
     ea0:	98 0f       	add	r25, r24
     ea2:	93 30       	cpi	r25, 0x03	; 3
     ea4:	08 f0       	brcs	.+2      	; 0xea8 <vfprintf+0x116>
     ea6:	66 c1       	rjmp	.+716    	; 0x1174 <vfprintf+0x3e2>
     ea8:	99 2d       	mov	r25, r9
     eaa:	9f 7e       	andi	r25, 0xEF	; 239
     eac:	96 ff       	sbrs	r25, 6
     eae:	16 e0       	ldi	r17, 0x06	; 6
     eb0:	9f 73       	andi	r25, 0x3F	; 63
     eb2:	99 2e       	mov	r9, r25
     eb4:	85 36       	cpi	r24, 0x65	; 101
     eb6:	19 f4       	brne	.+6      	; 0xebe <vfprintf+0x12c>
     eb8:	90 64       	ori	r25, 0x40	; 64
     eba:	99 2e       	mov	r9, r25
     ebc:	08 c0       	rjmp	.+16     	; 0xece <vfprintf+0x13c>
     ebe:	86 36       	cpi	r24, 0x66	; 102
     ec0:	21 f4       	brne	.+8      	; 0xeca <vfprintf+0x138>
     ec2:	39 2f       	mov	r19, r25
     ec4:	30 68       	ori	r19, 0x80	; 128
     ec6:	93 2e       	mov	r9, r19
     ec8:	02 c0       	rjmp	.+4      	; 0xece <vfprintf+0x13c>
     eca:	11 11       	cpse	r17, r1
     ecc:	11 50       	subi	r17, 0x01	; 1
     ece:	97 fe       	sbrs	r9, 7
     ed0:	07 c0       	rjmp	.+14     	; 0xee0 <vfprintf+0x14e>
     ed2:	1c 33       	cpi	r17, 0x3C	; 60
     ed4:	50 f4       	brcc	.+20     	; 0xeea <vfprintf+0x158>
     ed6:	44 24       	eor	r4, r4
     ed8:	43 94       	inc	r4
     eda:	41 0e       	add	r4, r17
     edc:	27 e0       	ldi	r18, 0x07	; 7
     ede:	0b c0       	rjmp	.+22     	; 0xef6 <vfprintf+0x164>
     ee0:	18 30       	cpi	r17, 0x08	; 8
     ee2:	38 f0       	brcs	.+14     	; 0xef2 <vfprintf+0x160>
     ee4:	27 e0       	ldi	r18, 0x07	; 7
     ee6:	17 e0       	ldi	r17, 0x07	; 7
     ee8:	05 c0       	rjmp	.+10     	; 0xef4 <vfprintf+0x162>
     eea:	27 e0       	ldi	r18, 0x07	; 7
     eec:	9c e3       	ldi	r25, 0x3C	; 60
     eee:	49 2e       	mov	r4, r25
     ef0:	02 c0       	rjmp	.+4      	; 0xef6 <vfprintf+0x164>
     ef2:	21 2f       	mov	r18, r17
     ef4:	41 2c       	mov	r4, r1
     ef6:	56 01       	movw	r10, r12
     ef8:	84 e0       	ldi	r24, 0x04	; 4
     efa:	a8 0e       	add	r10, r24
     efc:	b1 1c       	adc	r11, r1
     efe:	f6 01       	movw	r30, r12
     f00:	60 81       	ld	r22, Z
     f02:	71 81       	ldd	r23, Z+1	; 0x01
     f04:	82 81       	ldd	r24, Z+2	; 0x02
     f06:	93 81       	ldd	r25, Z+3	; 0x03
     f08:	04 2d       	mov	r16, r4
     f0a:	a3 01       	movw	r20, r6
     f0c:	0e 94 7d 0a 	call	0x14fa	; 0x14fa <__ftoa_engine>
     f10:	6c 01       	movw	r12, r24
     f12:	f9 81       	ldd	r31, Y+1	; 0x01
     f14:	fc 87       	std	Y+12, r31	; 0x0c
     f16:	f0 ff       	sbrs	r31, 0
     f18:	02 c0       	rjmp	.+4      	; 0xf1e <vfprintf+0x18c>
     f1a:	f3 ff       	sbrs	r31, 3
     f1c:	06 c0       	rjmp	.+12     	; 0xf2a <vfprintf+0x198>
     f1e:	91 fc       	sbrc	r9, 1
     f20:	06 c0       	rjmp	.+12     	; 0xf2e <vfprintf+0x19c>
     f22:	92 fe       	sbrs	r9, 2
     f24:	06 c0       	rjmp	.+12     	; 0xf32 <vfprintf+0x1a0>
     f26:	00 e2       	ldi	r16, 0x20	; 32
     f28:	05 c0       	rjmp	.+10     	; 0xf34 <vfprintf+0x1a2>
     f2a:	0d e2       	ldi	r16, 0x2D	; 45
     f2c:	03 c0       	rjmp	.+6      	; 0xf34 <vfprintf+0x1a2>
     f2e:	0b e2       	ldi	r16, 0x2B	; 43
     f30:	01 c0       	rjmp	.+2      	; 0xf34 <vfprintf+0x1a2>
     f32:	00 e0       	ldi	r16, 0x00	; 0
     f34:	8c 85       	ldd	r24, Y+12	; 0x0c
     f36:	8c 70       	andi	r24, 0x0C	; 12
     f38:	19 f0       	breq	.+6      	; 0xf40 <vfprintf+0x1ae>
     f3a:	01 11       	cpse	r16, r1
     f3c:	5a c2       	rjmp	.+1204   	; 0x13f2 <vfprintf+0x660>
     f3e:	9b c2       	rjmp	.+1334   	; 0x1476 <vfprintf+0x6e4>
     f40:	97 fe       	sbrs	r9, 7
     f42:	10 c0       	rjmp	.+32     	; 0xf64 <vfprintf+0x1d2>
     f44:	4c 0c       	add	r4, r12
     f46:	fc 85       	ldd	r31, Y+12	; 0x0c
     f48:	f4 ff       	sbrs	r31, 4
     f4a:	04 c0       	rjmp	.+8      	; 0xf54 <vfprintf+0x1c2>
     f4c:	8a 81       	ldd	r24, Y+2	; 0x02
     f4e:	81 33       	cpi	r24, 0x31	; 49
     f50:	09 f4       	brne	.+2      	; 0xf54 <vfprintf+0x1c2>
     f52:	4a 94       	dec	r4
     f54:	14 14       	cp	r1, r4
     f56:	74 f5       	brge	.+92     	; 0xfb4 <vfprintf+0x222>
     f58:	28 e0       	ldi	r18, 0x08	; 8
     f5a:	24 15       	cp	r18, r4
     f5c:	78 f5       	brcc	.+94     	; 0xfbc <vfprintf+0x22a>
     f5e:	88 e0       	ldi	r24, 0x08	; 8
     f60:	48 2e       	mov	r4, r24
     f62:	2c c0       	rjmp	.+88     	; 0xfbc <vfprintf+0x22a>
     f64:	96 fc       	sbrc	r9, 6
     f66:	2a c0       	rjmp	.+84     	; 0xfbc <vfprintf+0x22a>
     f68:	81 2f       	mov	r24, r17
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	8c 15       	cp	r24, r12
     f6e:	9d 05       	cpc	r25, r13
     f70:	9c f0       	brlt	.+38     	; 0xf98 <vfprintf+0x206>
     f72:	3c ef       	ldi	r19, 0xFC	; 252
     f74:	c3 16       	cp	r12, r19
     f76:	3f ef       	ldi	r19, 0xFF	; 255
     f78:	d3 06       	cpc	r13, r19
     f7a:	74 f0       	brlt	.+28     	; 0xf98 <vfprintf+0x206>
     f7c:	89 2d       	mov	r24, r9
     f7e:	80 68       	ori	r24, 0x80	; 128
     f80:	98 2e       	mov	r9, r24
     f82:	0a c0       	rjmp	.+20     	; 0xf98 <vfprintf+0x206>
     f84:	e2 e0       	ldi	r30, 0x02	; 2
     f86:	f0 e0       	ldi	r31, 0x00	; 0
     f88:	ec 0f       	add	r30, r28
     f8a:	fd 1f       	adc	r31, r29
     f8c:	e1 0f       	add	r30, r17
     f8e:	f1 1d       	adc	r31, r1
     f90:	80 81       	ld	r24, Z
     f92:	80 33       	cpi	r24, 0x30	; 48
     f94:	19 f4       	brne	.+6      	; 0xf9c <vfprintf+0x20a>
     f96:	11 50       	subi	r17, 0x01	; 1
     f98:	11 11       	cpse	r17, r1
     f9a:	f4 cf       	rjmp	.-24     	; 0xf84 <vfprintf+0x1f2>
     f9c:	97 fe       	sbrs	r9, 7
     f9e:	0e c0       	rjmp	.+28     	; 0xfbc <vfprintf+0x22a>
     fa0:	44 24       	eor	r4, r4
     fa2:	43 94       	inc	r4
     fa4:	41 0e       	add	r4, r17
     fa6:	81 2f       	mov	r24, r17
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	c8 16       	cp	r12, r24
     fac:	d9 06       	cpc	r13, r25
     fae:	2c f4       	brge	.+10     	; 0xfba <vfprintf+0x228>
     fb0:	1c 19       	sub	r17, r12
     fb2:	04 c0       	rjmp	.+8      	; 0xfbc <vfprintf+0x22a>
     fb4:	44 24       	eor	r4, r4
     fb6:	43 94       	inc	r4
     fb8:	01 c0       	rjmp	.+2      	; 0xfbc <vfprintf+0x22a>
     fba:	10 e0       	ldi	r17, 0x00	; 0
     fbc:	97 fe       	sbrs	r9, 7
     fbe:	06 c0       	rjmp	.+12     	; 0xfcc <vfprintf+0x23a>
     fc0:	1c 14       	cp	r1, r12
     fc2:	1d 04       	cpc	r1, r13
     fc4:	34 f4       	brge	.+12     	; 0xfd2 <vfprintf+0x240>
     fc6:	c6 01       	movw	r24, r12
     fc8:	01 96       	adiw	r24, 0x01	; 1
     fca:	05 c0       	rjmp	.+10     	; 0xfd6 <vfprintf+0x244>
     fcc:	85 e0       	ldi	r24, 0x05	; 5
     fce:	90 e0       	ldi	r25, 0x00	; 0
     fd0:	02 c0       	rjmp	.+4      	; 0xfd6 <vfprintf+0x244>
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	01 11       	cpse	r16, r1
     fd8:	01 96       	adiw	r24, 0x01	; 1
     fda:	11 23       	and	r17, r17
     fdc:	31 f0       	breq	.+12     	; 0xfea <vfprintf+0x258>
     fde:	21 2f       	mov	r18, r17
     fe0:	30 e0       	ldi	r19, 0x00	; 0
     fe2:	2f 5f       	subi	r18, 0xFF	; 255
     fe4:	3f 4f       	sbci	r19, 0xFF	; 255
     fe6:	82 0f       	add	r24, r18
     fe8:	93 1f       	adc	r25, r19
     fea:	25 2d       	mov	r18, r5
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	82 17       	cp	r24, r18
     ff0:	93 07       	cpc	r25, r19
     ff2:	14 f4       	brge	.+4      	; 0xff8 <vfprintf+0x266>
     ff4:	58 1a       	sub	r5, r24
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <vfprintf+0x268>
     ff8:	51 2c       	mov	r5, r1
     ffa:	89 2d       	mov	r24, r9
     ffc:	89 70       	andi	r24, 0x09	; 9
     ffe:	49 f4       	brne	.+18     	; 0x1012 <vfprintf+0x280>
    1000:	55 20       	and	r5, r5
    1002:	39 f0       	breq	.+14     	; 0x1012 <vfprintf+0x280>
    1004:	b7 01       	movw	r22, r14
    1006:	80 e2       	ldi	r24, 0x20	; 32
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    100e:	5a 94       	dec	r5
    1010:	f7 cf       	rjmp	.-18     	; 0x1000 <vfprintf+0x26e>
    1012:	00 23       	and	r16, r16
    1014:	29 f0       	breq	.+10     	; 0x1020 <vfprintf+0x28e>
    1016:	b7 01       	movw	r22, r14
    1018:	80 2f       	mov	r24, r16
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1020:	93 fc       	sbrc	r9, 3
    1022:	09 c0       	rjmp	.+18     	; 0x1036 <vfprintf+0x2a4>
    1024:	55 20       	and	r5, r5
    1026:	39 f0       	breq	.+14     	; 0x1036 <vfprintf+0x2a4>
    1028:	b7 01       	movw	r22, r14
    102a:	80 e3       	ldi	r24, 0x30	; 48
    102c:	90 e0       	ldi	r25, 0x00	; 0
    102e:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1032:	5a 94       	dec	r5
    1034:	f7 cf       	rjmp	.-18     	; 0x1024 <vfprintf+0x292>
    1036:	97 fe       	sbrs	r9, 7
    1038:	4c c0       	rjmp	.+152    	; 0x10d2 <vfprintf+0x340>
    103a:	46 01       	movw	r8, r12
    103c:	d7 fe       	sbrs	r13, 7
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <vfprintf+0x2b2>
    1040:	81 2c       	mov	r8, r1
    1042:	91 2c       	mov	r9, r1
    1044:	c6 01       	movw	r24, r12
    1046:	88 19       	sub	r24, r8
    1048:	99 09       	sbc	r25, r9
    104a:	f3 01       	movw	r30, r6
    104c:	e8 0f       	add	r30, r24
    104e:	f9 1f       	adc	r31, r25
    1050:	fe 87       	std	Y+14, r31	; 0x0e
    1052:	ed 87       	std	Y+13, r30	; 0x0d
    1054:	96 01       	movw	r18, r12
    1056:	24 19       	sub	r18, r4
    1058:	31 09       	sbc	r19, r1
    105a:	38 8b       	std	Y+16, r19	; 0x10
    105c:	2f 87       	std	Y+15, r18	; 0x0f
    105e:	01 2f       	mov	r16, r17
    1060:	10 e0       	ldi	r17, 0x00	; 0
    1062:	11 95       	neg	r17
    1064:	01 95       	neg	r16
    1066:	11 09       	sbc	r17, r1
    1068:	3f ef       	ldi	r19, 0xFF	; 255
    106a:	83 16       	cp	r8, r19
    106c:	93 06       	cpc	r9, r19
    106e:	29 f4       	brne	.+10     	; 0x107a <vfprintf+0x2e8>
    1070:	b7 01       	movw	r22, r14
    1072:	8e e2       	ldi	r24, 0x2E	; 46
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    107a:	c8 14       	cp	r12, r8
    107c:	d9 04       	cpc	r13, r9
    107e:	4c f0       	brlt	.+18     	; 0x1092 <vfprintf+0x300>
    1080:	8f 85       	ldd	r24, Y+15	; 0x0f
    1082:	98 89       	ldd	r25, Y+16	; 0x10
    1084:	88 15       	cp	r24, r8
    1086:	99 05       	cpc	r25, r9
    1088:	24 f4       	brge	.+8      	; 0x1092 <vfprintf+0x300>
    108a:	ed 85       	ldd	r30, Y+13	; 0x0d
    108c:	fe 85       	ldd	r31, Y+14	; 0x0e
    108e:	81 81       	ldd	r24, Z+1	; 0x01
    1090:	01 c0       	rjmp	.+2      	; 0x1094 <vfprintf+0x302>
    1092:	80 e3       	ldi	r24, 0x30	; 48
    1094:	f1 e0       	ldi	r31, 0x01	; 1
    1096:	8f 1a       	sub	r8, r31
    1098:	91 08       	sbc	r9, r1
    109a:	2d 85       	ldd	r18, Y+13	; 0x0d
    109c:	3e 85       	ldd	r19, Y+14	; 0x0e
    109e:	2f 5f       	subi	r18, 0xFF	; 255
    10a0:	3f 4f       	sbci	r19, 0xFF	; 255
    10a2:	3e 87       	std	Y+14, r19	; 0x0e
    10a4:	2d 87       	std	Y+13, r18	; 0x0d
    10a6:	80 16       	cp	r8, r16
    10a8:	91 06       	cpc	r9, r17
    10aa:	2c f0       	brlt	.+10     	; 0x10b6 <vfprintf+0x324>
    10ac:	b7 01       	movw	r22, r14
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    10b4:	d9 cf       	rjmp	.-78     	; 0x1068 <vfprintf+0x2d6>
    10b6:	c8 14       	cp	r12, r8
    10b8:	d9 04       	cpc	r13, r9
    10ba:	41 f4       	brne	.+16     	; 0x10cc <vfprintf+0x33a>
    10bc:	9a 81       	ldd	r25, Y+2	; 0x02
    10be:	96 33       	cpi	r25, 0x36	; 54
    10c0:	20 f4       	brcc	.+8      	; 0x10ca <vfprintf+0x338>
    10c2:	95 33       	cpi	r25, 0x35	; 53
    10c4:	19 f4       	brne	.+6      	; 0x10cc <vfprintf+0x33a>
    10c6:	3c 85       	ldd	r19, Y+12	; 0x0c
    10c8:	34 ff       	sbrs	r19, 4
    10ca:	81 e3       	ldi	r24, 0x31	; 49
    10cc:	b7 01       	movw	r22, r14
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	4e c0       	rjmp	.+156    	; 0x116e <vfprintf+0x3dc>
    10d2:	8a 81       	ldd	r24, Y+2	; 0x02
    10d4:	81 33       	cpi	r24, 0x31	; 49
    10d6:	19 f0       	breq	.+6      	; 0x10de <vfprintf+0x34c>
    10d8:	9c 85       	ldd	r25, Y+12	; 0x0c
    10da:	9f 7e       	andi	r25, 0xEF	; 239
    10dc:	9c 87       	std	Y+12, r25	; 0x0c
    10de:	b7 01       	movw	r22, r14
    10e0:	90 e0       	ldi	r25, 0x00	; 0
    10e2:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    10e6:	11 11       	cpse	r17, r1
    10e8:	05 c0       	rjmp	.+10     	; 0x10f4 <vfprintf+0x362>
    10ea:	94 fc       	sbrc	r9, 4
    10ec:	18 c0       	rjmp	.+48     	; 0x111e <vfprintf+0x38c>
    10ee:	85 e6       	ldi	r24, 0x65	; 101
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	17 c0       	rjmp	.+46     	; 0x1122 <vfprintf+0x390>
    10f4:	b7 01       	movw	r22, r14
    10f6:	8e e2       	ldi	r24, 0x2E	; 46
    10f8:	90 e0       	ldi	r25, 0x00	; 0
    10fa:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    10fe:	1e 5f       	subi	r17, 0xFE	; 254
    1100:	82 e0       	ldi	r24, 0x02	; 2
    1102:	01 e0       	ldi	r16, 0x01	; 1
    1104:	08 0f       	add	r16, r24
    1106:	f3 01       	movw	r30, r6
    1108:	e8 0f       	add	r30, r24
    110a:	f1 1d       	adc	r31, r1
    110c:	80 81       	ld	r24, Z
    110e:	b7 01       	movw	r22, r14
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1116:	80 2f       	mov	r24, r16
    1118:	01 13       	cpse	r16, r17
    111a:	f3 cf       	rjmp	.-26     	; 0x1102 <vfprintf+0x370>
    111c:	e6 cf       	rjmp	.-52     	; 0x10ea <vfprintf+0x358>
    111e:	85 e4       	ldi	r24, 0x45	; 69
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	b7 01       	movw	r22, r14
    1124:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1128:	d7 fc       	sbrc	r13, 7
    112a:	06 c0       	rjmp	.+12     	; 0x1138 <vfprintf+0x3a6>
    112c:	c1 14       	cp	r12, r1
    112e:	d1 04       	cpc	r13, r1
    1130:	41 f4       	brne	.+16     	; 0x1142 <vfprintf+0x3b0>
    1132:	ec 85       	ldd	r30, Y+12	; 0x0c
    1134:	e4 ff       	sbrs	r30, 4
    1136:	05 c0       	rjmp	.+10     	; 0x1142 <vfprintf+0x3b0>
    1138:	d1 94       	neg	r13
    113a:	c1 94       	neg	r12
    113c:	d1 08       	sbc	r13, r1
    113e:	8d e2       	ldi	r24, 0x2D	; 45
    1140:	01 c0       	rjmp	.+2      	; 0x1144 <vfprintf+0x3b2>
    1142:	8b e2       	ldi	r24, 0x2B	; 43
    1144:	b7 01       	movw	r22, r14
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    114c:	80 e3       	ldi	r24, 0x30	; 48
    114e:	2a e0       	ldi	r18, 0x0A	; 10
    1150:	c2 16       	cp	r12, r18
    1152:	d1 04       	cpc	r13, r1
    1154:	2c f0       	brlt	.+10     	; 0x1160 <vfprintf+0x3ce>
    1156:	8f 5f       	subi	r24, 0xFF	; 255
    1158:	fa e0       	ldi	r31, 0x0A	; 10
    115a:	cf 1a       	sub	r12, r31
    115c:	d1 08       	sbc	r13, r1
    115e:	f7 cf       	rjmp	.-18     	; 0x114e <vfprintf+0x3bc>
    1160:	b7 01       	movw	r22, r14
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1168:	b7 01       	movw	r22, r14
    116a:	c6 01       	movw	r24, r12
    116c:	c0 96       	adiw	r24, 0x30	; 48
    116e:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1172:	54 c1       	rjmp	.+680    	; 0x141c <vfprintf+0x68a>
    1174:	83 36       	cpi	r24, 0x63	; 99
    1176:	31 f0       	breq	.+12     	; 0x1184 <vfprintf+0x3f2>
    1178:	83 37       	cpi	r24, 0x73	; 115
    117a:	79 f0       	breq	.+30     	; 0x119a <vfprintf+0x408>
    117c:	83 35       	cpi	r24, 0x53	; 83
    117e:	09 f0       	breq	.+2      	; 0x1182 <vfprintf+0x3f0>
    1180:	56 c0       	rjmp	.+172    	; 0x122e <vfprintf+0x49c>
    1182:	20 c0       	rjmp	.+64     	; 0x11c4 <vfprintf+0x432>
    1184:	56 01       	movw	r10, r12
    1186:	32 e0       	ldi	r19, 0x02	; 2
    1188:	a3 0e       	add	r10, r19
    118a:	b1 1c       	adc	r11, r1
    118c:	f6 01       	movw	r30, r12
    118e:	80 81       	ld	r24, Z
    1190:	89 83       	std	Y+1, r24	; 0x01
    1192:	01 e0       	ldi	r16, 0x01	; 1
    1194:	10 e0       	ldi	r17, 0x00	; 0
    1196:	63 01       	movw	r12, r6
    1198:	12 c0       	rjmp	.+36     	; 0x11be <vfprintf+0x42c>
    119a:	56 01       	movw	r10, r12
    119c:	f2 e0       	ldi	r31, 0x02	; 2
    119e:	af 0e       	add	r10, r31
    11a0:	b1 1c       	adc	r11, r1
    11a2:	f6 01       	movw	r30, r12
    11a4:	c0 80       	ld	r12, Z
    11a6:	d1 80       	ldd	r13, Z+1	; 0x01
    11a8:	96 fe       	sbrs	r9, 6
    11aa:	03 c0       	rjmp	.+6      	; 0x11b2 <vfprintf+0x420>
    11ac:	61 2f       	mov	r22, r17
    11ae:	70 e0       	ldi	r23, 0x00	; 0
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <vfprintf+0x424>
    11b2:	6f ef       	ldi	r22, 0xFF	; 255
    11b4:	7f ef       	ldi	r23, 0xFF	; 255
    11b6:	c6 01       	movw	r24, r12
    11b8:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <strnlen>
    11bc:	8c 01       	movw	r16, r24
    11be:	f9 2d       	mov	r31, r9
    11c0:	ff 77       	andi	r31, 0x7F	; 127
    11c2:	14 c0       	rjmp	.+40     	; 0x11ec <vfprintf+0x45a>
    11c4:	56 01       	movw	r10, r12
    11c6:	22 e0       	ldi	r18, 0x02	; 2
    11c8:	a2 0e       	add	r10, r18
    11ca:	b1 1c       	adc	r11, r1
    11cc:	f6 01       	movw	r30, r12
    11ce:	c0 80       	ld	r12, Z
    11d0:	d1 80       	ldd	r13, Z+1	; 0x01
    11d2:	96 fe       	sbrs	r9, 6
    11d4:	03 c0       	rjmp	.+6      	; 0x11dc <vfprintf+0x44a>
    11d6:	61 2f       	mov	r22, r17
    11d8:	70 e0       	ldi	r23, 0x00	; 0
    11da:	02 c0       	rjmp	.+4      	; 0x11e0 <vfprintf+0x44e>
    11dc:	6f ef       	ldi	r22, 0xFF	; 255
    11de:	7f ef       	ldi	r23, 0xFF	; 255
    11e0:	c6 01       	movw	r24, r12
    11e2:	0e 94 55 0b 	call	0x16aa	; 0x16aa <strnlen_P>
    11e6:	8c 01       	movw	r16, r24
    11e8:	f9 2d       	mov	r31, r9
    11ea:	f0 68       	ori	r31, 0x80	; 128
    11ec:	9f 2e       	mov	r9, r31
    11ee:	f3 fd       	sbrc	r31, 3
    11f0:	1a c0       	rjmp	.+52     	; 0x1226 <vfprintf+0x494>
    11f2:	85 2d       	mov	r24, r5
    11f4:	90 e0       	ldi	r25, 0x00	; 0
    11f6:	08 17       	cp	r16, r24
    11f8:	19 07       	cpc	r17, r25
    11fa:	a8 f4       	brcc	.+42     	; 0x1226 <vfprintf+0x494>
    11fc:	b7 01       	movw	r22, r14
    11fe:	80 e2       	ldi	r24, 0x20	; 32
    1200:	90 e0       	ldi	r25, 0x00	; 0
    1202:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1206:	5a 94       	dec	r5
    1208:	f4 cf       	rjmp	.-24     	; 0x11f2 <vfprintf+0x460>
    120a:	f6 01       	movw	r30, r12
    120c:	97 fc       	sbrc	r9, 7
    120e:	85 91       	lpm	r24, Z+
    1210:	97 fe       	sbrs	r9, 7
    1212:	81 91       	ld	r24, Z+
    1214:	6f 01       	movw	r12, r30
    1216:	b7 01       	movw	r22, r14
    1218:	90 e0       	ldi	r25, 0x00	; 0
    121a:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    121e:	51 10       	cpse	r5, r1
    1220:	5a 94       	dec	r5
    1222:	01 50       	subi	r16, 0x01	; 1
    1224:	11 09       	sbc	r17, r1
    1226:	01 15       	cp	r16, r1
    1228:	11 05       	cpc	r17, r1
    122a:	79 f7       	brne	.-34     	; 0x120a <vfprintf+0x478>
    122c:	f7 c0       	rjmp	.+494    	; 0x141c <vfprintf+0x68a>
    122e:	84 36       	cpi	r24, 0x64	; 100
    1230:	11 f0       	breq	.+4      	; 0x1236 <vfprintf+0x4a4>
    1232:	89 36       	cpi	r24, 0x69	; 105
    1234:	61 f5       	brne	.+88     	; 0x128e <vfprintf+0x4fc>
    1236:	56 01       	movw	r10, r12
    1238:	97 fe       	sbrs	r9, 7
    123a:	09 c0       	rjmp	.+18     	; 0x124e <vfprintf+0x4bc>
    123c:	24 e0       	ldi	r18, 0x04	; 4
    123e:	a2 0e       	add	r10, r18
    1240:	b1 1c       	adc	r11, r1
    1242:	f6 01       	movw	r30, r12
    1244:	60 81       	ld	r22, Z
    1246:	71 81       	ldd	r23, Z+1	; 0x01
    1248:	82 81       	ldd	r24, Z+2	; 0x02
    124a:	93 81       	ldd	r25, Z+3	; 0x03
    124c:	0a c0       	rjmp	.+20     	; 0x1262 <vfprintf+0x4d0>
    124e:	f2 e0       	ldi	r31, 0x02	; 2
    1250:	af 0e       	add	r10, r31
    1252:	b1 1c       	adc	r11, r1
    1254:	f6 01       	movw	r30, r12
    1256:	60 81       	ld	r22, Z
    1258:	71 81       	ldd	r23, Z+1	; 0x01
    125a:	07 2e       	mov	r0, r23
    125c:	00 0c       	add	r0, r0
    125e:	88 0b       	sbc	r24, r24
    1260:	99 0b       	sbc	r25, r25
    1262:	f9 2d       	mov	r31, r9
    1264:	ff 76       	andi	r31, 0x6F	; 111
    1266:	9f 2e       	mov	r9, r31
    1268:	97 ff       	sbrs	r25, 7
    126a:	09 c0       	rjmp	.+18     	; 0x127e <vfprintf+0x4ec>
    126c:	90 95       	com	r25
    126e:	80 95       	com	r24
    1270:	70 95       	com	r23
    1272:	61 95       	neg	r22
    1274:	7f 4f       	sbci	r23, 0xFF	; 255
    1276:	8f 4f       	sbci	r24, 0xFF	; 255
    1278:	9f 4f       	sbci	r25, 0xFF	; 255
    127a:	f0 68       	ori	r31, 0x80	; 128
    127c:	9f 2e       	mov	r9, r31
    127e:	2a e0       	ldi	r18, 0x0A	; 10
    1280:	30 e0       	ldi	r19, 0x00	; 0
    1282:	a3 01       	movw	r20, r6
    1284:	0e 94 bd 0b 	call	0x177a	; 0x177a <__ultoa_invert>
    1288:	c8 2e       	mov	r12, r24
    128a:	c6 18       	sub	r12, r6
    128c:	3f c0       	rjmp	.+126    	; 0x130c <vfprintf+0x57a>
    128e:	09 2d       	mov	r16, r9
    1290:	85 37       	cpi	r24, 0x75	; 117
    1292:	21 f4       	brne	.+8      	; 0x129c <vfprintf+0x50a>
    1294:	0f 7e       	andi	r16, 0xEF	; 239
    1296:	2a e0       	ldi	r18, 0x0A	; 10
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	1d c0       	rjmp	.+58     	; 0x12d6 <vfprintf+0x544>
    129c:	09 7f       	andi	r16, 0xF9	; 249
    129e:	8f 36       	cpi	r24, 0x6F	; 111
    12a0:	91 f0       	breq	.+36     	; 0x12c6 <vfprintf+0x534>
    12a2:	18 f4       	brcc	.+6      	; 0x12aa <vfprintf+0x518>
    12a4:	88 35       	cpi	r24, 0x58	; 88
    12a6:	59 f0       	breq	.+22     	; 0x12be <vfprintf+0x52c>
    12a8:	c3 c0       	rjmp	.+390    	; 0x1430 <vfprintf+0x69e>
    12aa:	80 37       	cpi	r24, 0x70	; 112
    12ac:	19 f0       	breq	.+6      	; 0x12b4 <vfprintf+0x522>
    12ae:	88 37       	cpi	r24, 0x78	; 120
    12b0:	11 f0       	breq	.+4      	; 0x12b6 <vfprintf+0x524>
    12b2:	be c0       	rjmp	.+380    	; 0x1430 <vfprintf+0x69e>
    12b4:	00 61       	ori	r16, 0x10	; 16
    12b6:	04 ff       	sbrs	r16, 4
    12b8:	09 c0       	rjmp	.+18     	; 0x12cc <vfprintf+0x53a>
    12ba:	04 60       	ori	r16, 0x04	; 4
    12bc:	07 c0       	rjmp	.+14     	; 0x12cc <vfprintf+0x53a>
    12be:	94 fe       	sbrs	r9, 4
    12c0:	08 c0       	rjmp	.+16     	; 0x12d2 <vfprintf+0x540>
    12c2:	06 60       	ori	r16, 0x06	; 6
    12c4:	06 c0       	rjmp	.+12     	; 0x12d2 <vfprintf+0x540>
    12c6:	28 e0       	ldi	r18, 0x08	; 8
    12c8:	30 e0       	ldi	r19, 0x00	; 0
    12ca:	05 c0       	rjmp	.+10     	; 0x12d6 <vfprintf+0x544>
    12cc:	20 e1       	ldi	r18, 0x10	; 16
    12ce:	30 e0       	ldi	r19, 0x00	; 0
    12d0:	02 c0       	rjmp	.+4      	; 0x12d6 <vfprintf+0x544>
    12d2:	20 e1       	ldi	r18, 0x10	; 16
    12d4:	32 e0       	ldi	r19, 0x02	; 2
    12d6:	56 01       	movw	r10, r12
    12d8:	07 ff       	sbrs	r16, 7
    12da:	09 c0       	rjmp	.+18     	; 0x12ee <vfprintf+0x55c>
    12dc:	84 e0       	ldi	r24, 0x04	; 4
    12de:	a8 0e       	add	r10, r24
    12e0:	b1 1c       	adc	r11, r1
    12e2:	f6 01       	movw	r30, r12
    12e4:	60 81       	ld	r22, Z
    12e6:	71 81       	ldd	r23, Z+1	; 0x01
    12e8:	82 81       	ldd	r24, Z+2	; 0x02
    12ea:	93 81       	ldd	r25, Z+3	; 0x03
    12ec:	08 c0       	rjmp	.+16     	; 0x12fe <vfprintf+0x56c>
    12ee:	f2 e0       	ldi	r31, 0x02	; 2
    12f0:	af 0e       	add	r10, r31
    12f2:	b1 1c       	adc	r11, r1
    12f4:	f6 01       	movw	r30, r12
    12f6:	60 81       	ld	r22, Z
    12f8:	71 81       	ldd	r23, Z+1	; 0x01
    12fa:	80 e0       	ldi	r24, 0x00	; 0
    12fc:	90 e0       	ldi	r25, 0x00	; 0
    12fe:	a3 01       	movw	r20, r6
    1300:	0e 94 bd 0b 	call	0x177a	; 0x177a <__ultoa_invert>
    1304:	c8 2e       	mov	r12, r24
    1306:	c6 18       	sub	r12, r6
    1308:	0f 77       	andi	r16, 0x7F	; 127
    130a:	90 2e       	mov	r9, r16
    130c:	96 fe       	sbrs	r9, 6
    130e:	0b c0       	rjmp	.+22     	; 0x1326 <vfprintf+0x594>
    1310:	09 2d       	mov	r16, r9
    1312:	0e 7f       	andi	r16, 0xFE	; 254
    1314:	c1 16       	cp	r12, r17
    1316:	50 f4       	brcc	.+20     	; 0x132c <vfprintf+0x59a>
    1318:	94 fe       	sbrs	r9, 4
    131a:	0a c0       	rjmp	.+20     	; 0x1330 <vfprintf+0x59e>
    131c:	92 fc       	sbrc	r9, 2
    131e:	08 c0       	rjmp	.+16     	; 0x1330 <vfprintf+0x59e>
    1320:	09 2d       	mov	r16, r9
    1322:	0e 7e       	andi	r16, 0xEE	; 238
    1324:	05 c0       	rjmp	.+10     	; 0x1330 <vfprintf+0x59e>
    1326:	dc 2c       	mov	r13, r12
    1328:	09 2d       	mov	r16, r9
    132a:	03 c0       	rjmp	.+6      	; 0x1332 <vfprintf+0x5a0>
    132c:	dc 2c       	mov	r13, r12
    132e:	01 c0       	rjmp	.+2      	; 0x1332 <vfprintf+0x5a0>
    1330:	d1 2e       	mov	r13, r17
    1332:	04 ff       	sbrs	r16, 4
    1334:	0d c0       	rjmp	.+26     	; 0x1350 <vfprintf+0x5be>
    1336:	fe 01       	movw	r30, r28
    1338:	ec 0d       	add	r30, r12
    133a:	f1 1d       	adc	r31, r1
    133c:	80 81       	ld	r24, Z
    133e:	80 33       	cpi	r24, 0x30	; 48
    1340:	11 f4       	brne	.+4      	; 0x1346 <vfprintf+0x5b4>
    1342:	09 7e       	andi	r16, 0xE9	; 233
    1344:	09 c0       	rjmp	.+18     	; 0x1358 <vfprintf+0x5c6>
    1346:	02 ff       	sbrs	r16, 2
    1348:	06 c0       	rjmp	.+12     	; 0x1356 <vfprintf+0x5c4>
    134a:	d3 94       	inc	r13
    134c:	d3 94       	inc	r13
    134e:	04 c0       	rjmp	.+8      	; 0x1358 <vfprintf+0x5c6>
    1350:	80 2f       	mov	r24, r16
    1352:	86 78       	andi	r24, 0x86	; 134
    1354:	09 f0       	breq	.+2      	; 0x1358 <vfprintf+0x5c6>
    1356:	d3 94       	inc	r13
    1358:	03 fd       	sbrc	r16, 3
    135a:	11 c0       	rjmp	.+34     	; 0x137e <vfprintf+0x5ec>
    135c:	00 ff       	sbrs	r16, 0
    135e:	06 c0       	rjmp	.+12     	; 0x136c <vfprintf+0x5da>
    1360:	1c 2d       	mov	r17, r12
    1362:	d5 14       	cp	r13, r5
    1364:	80 f4       	brcc	.+32     	; 0x1386 <vfprintf+0x5f4>
    1366:	15 0d       	add	r17, r5
    1368:	1d 19       	sub	r17, r13
    136a:	0d c0       	rjmp	.+26     	; 0x1386 <vfprintf+0x5f4>
    136c:	d5 14       	cp	r13, r5
    136e:	58 f4       	brcc	.+22     	; 0x1386 <vfprintf+0x5f4>
    1370:	b7 01       	movw	r22, r14
    1372:	80 e2       	ldi	r24, 0x20	; 32
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    137a:	d3 94       	inc	r13
    137c:	f7 cf       	rjmp	.-18     	; 0x136c <vfprintf+0x5da>
    137e:	d5 14       	cp	r13, r5
    1380:	10 f4       	brcc	.+4      	; 0x1386 <vfprintf+0x5f4>
    1382:	5d 18       	sub	r5, r13
    1384:	01 c0       	rjmp	.+2      	; 0x1388 <vfprintf+0x5f6>
    1386:	51 2c       	mov	r5, r1
    1388:	04 ff       	sbrs	r16, 4
    138a:	10 c0       	rjmp	.+32     	; 0x13ac <vfprintf+0x61a>
    138c:	b7 01       	movw	r22, r14
    138e:	80 e3       	ldi	r24, 0x30	; 48
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1396:	02 ff       	sbrs	r16, 2
    1398:	17 c0       	rjmp	.+46     	; 0x13c8 <vfprintf+0x636>
    139a:	01 fd       	sbrc	r16, 1
    139c:	03 c0       	rjmp	.+6      	; 0x13a4 <vfprintf+0x612>
    139e:	88 e7       	ldi	r24, 0x78	; 120
    13a0:	90 e0       	ldi	r25, 0x00	; 0
    13a2:	02 c0       	rjmp	.+4      	; 0x13a8 <vfprintf+0x616>
    13a4:	88 e5       	ldi	r24, 0x58	; 88
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	b7 01       	movw	r22, r14
    13aa:	0c c0       	rjmp	.+24     	; 0x13c4 <vfprintf+0x632>
    13ac:	80 2f       	mov	r24, r16
    13ae:	86 78       	andi	r24, 0x86	; 134
    13b0:	59 f0       	breq	.+22     	; 0x13c8 <vfprintf+0x636>
    13b2:	01 ff       	sbrs	r16, 1
    13b4:	02 c0       	rjmp	.+4      	; 0x13ba <vfprintf+0x628>
    13b6:	8b e2       	ldi	r24, 0x2B	; 43
    13b8:	01 c0       	rjmp	.+2      	; 0x13bc <vfprintf+0x62a>
    13ba:	80 e2       	ldi	r24, 0x20	; 32
    13bc:	07 fd       	sbrc	r16, 7
    13be:	8d e2       	ldi	r24, 0x2D	; 45
    13c0:	b7 01       	movw	r22, r14
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    13c8:	c1 16       	cp	r12, r17
    13ca:	38 f4       	brcc	.+14     	; 0x13da <vfprintf+0x648>
    13cc:	b7 01       	movw	r22, r14
    13ce:	80 e3       	ldi	r24, 0x30	; 48
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    13d6:	11 50       	subi	r17, 0x01	; 1
    13d8:	f7 cf       	rjmp	.-18     	; 0x13c8 <vfprintf+0x636>
    13da:	ca 94       	dec	r12
    13dc:	f3 01       	movw	r30, r6
    13de:	ec 0d       	add	r30, r12
    13e0:	f1 1d       	adc	r31, r1
    13e2:	80 81       	ld	r24, Z
    13e4:	b7 01       	movw	r22, r14
    13e6:	90 e0       	ldi	r25, 0x00	; 0
    13e8:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    13ec:	c1 10       	cpse	r12, r1
    13ee:	f5 cf       	rjmp	.-22     	; 0x13da <vfprintf+0x648>
    13f0:	15 c0       	rjmp	.+42     	; 0x141c <vfprintf+0x68a>
    13f2:	f4 e0       	ldi	r31, 0x04	; 4
    13f4:	f5 15       	cp	r31, r5
    13f6:	60 f5       	brcc	.+88     	; 0x1450 <vfprintf+0x6be>
    13f8:	84 e0       	ldi	r24, 0x04	; 4
    13fa:	58 1a       	sub	r5, r24
    13fc:	93 fe       	sbrs	r9, 3
    13fe:	1f c0       	rjmp	.+62     	; 0x143e <vfprintf+0x6ac>
    1400:	01 11       	cpse	r16, r1
    1402:	27 c0       	rjmp	.+78     	; 0x1452 <vfprintf+0x6c0>
    1404:	2c 85       	ldd	r18, Y+12	; 0x0c
    1406:	23 ff       	sbrs	r18, 3
    1408:	2a c0       	rjmp	.+84     	; 0x145e <vfprintf+0x6cc>
    140a:	08 e6       	ldi	r16, 0x68	; 104
    140c:	10 e0       	ldi	r17, 0x00	; 0
    140e:	39 2d       	mov	r19, r9
    1410:	30 71       	andi	r19, 0x10	; 16
    1412:	93 2e       	mov	r9, r19
    1414:	f8 01       	movw	r30, r16
    1416:	84 91       	lpm	r24, Z
    1418:	81 11       	cpse	r24, r1
    141a:	24 c0       	rjmp	.+72     	; 0x1464 <vfprintf+0x6d2>
    141c:	55 20       	and	r5, r5
    141e:	09 f4       	brne	.+2      	; 0x1422 <vfprintf+0x690>
    1420:	e4 cc       	rjmp	.-1592   	; 0xdea <vfprintf+0x58>
    1422:	b7 01       	movw	r22, r14
    1424:	80 e2       	ldi	r24, 0x20	; 32
    1426:	90 e0       	ldi	r25, 0x00	; 0
    1428:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    142c:	5a 94       	dec	r5
    142e:	f6 cf       	rjmp	.-20     	; 0x141c <vfprintf+0x68a>
    1430:	f7 01       	movw	r30, r14
    1432:	86 81       	ldd	r24, Z+6	; 0x06
    1434:	97 81       	ldd	r25, Z+7	; 0x07
    1436:	26 c0       	rjmp	.+76     	; 0x1484 <vfprintf+0x6f2>
    1438:	8f ef       	ldi	r24, 0xFF	; 255
    143a:	9f ef       	ldi	r25, 0xFF	; 255
    143c:	23 c0       	rjmp	.+70     	; 0x1484 <vfprintf+0x6f2>
    143e:	b7 01       	movw	r22, r14
    1440:	80 e2       	ldi	r24, 0x20	; 32
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1448:	5a 94       	dec	r5
    144a:	51 10       	cpse	r5, r1
    144c:	f8 cf       	rjmp	.-16     	; 0x143e <vfprintf+0x6ac>
    144e:	d8 cf       	rjmp	.-80     	; 0x1400 <vfprintf+0x66e>
    1450:	51 2c       	mov	r5, r1
    1452:	b7 01       	movw	r22, r14
    1454:	80 2f       	mov	r24, r16
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    145c:	d3 cf       	rjmp	.-90     	; 0x1404 <vfprintf+0x672>
    145e:	0c e6       	ldi	r16, 0x6C	; 108
    1460:	10 e0       	ldi	r17, 0x00	; 0
    1462:	d5 cf       	rjmp	.-86     	; 0x140e <vfprintf+0x67c>
    1464:	91 10       	cpse	r9, r1
    1466:	80 52       	subi	r24, 0x20	; 32
    1468:	b7 01       	movw	r22, r14
    146a:	90 e0       	ldi	r25, 0x00	; 0
    146c:	0e 94 6b 0b 	call	0x16d6	; 0x16d6 <fputc>
    1470:	0f 5f       	subi	r16, 0xFF	; 255
    1472:	1f 4f       	sbci	r17, 0xFF	; 255
    1474:	cf cf       	rjmp	.-98     	; 0x1414 <vfprintf+0x682>
    1476:	23 e0       	ldi	r18, 0x03	; 3
    1478:	25 15       	cp	r18, r5
    147a:	10 f4       	brcc	.+4      	; 0x1480 <vfprintf+0x6ee>
    147c:	83 e0       	ldi	r24, 0x03	; 3
    147e:	bd cf       	rjmp	.-134    	; 0x13fa <vfprintf+0x668>
    1480:	51 2c       	mov	r5, r1
    1482:	c0 cf       	rjmp	.-128    	; 0x1404 <vfprintf+0x672>
    1484:	60 96       	adiw	r28, 0x10	; 16
    1486:	e2 e1       	ldi	r30, 0x12	; 18
    1488:	0c 94 62 0a 	jmp	0x14c4	; 0x14c4 <__epilogue_restores__>

0000148c <__prologue_saves__>:
    148c:	2f 92       	push	r2
    148e:	3f 92       	push	r3
    1490:	4f 92       	push	r4
    1492:	5f 92       	push	r5
    1494:	6f 92       	push	r6
    1496:	7f 92       	push	r7
    1498:	8f 92       	push	r8
    149a:	9f 92       	push	r9
    149c:	af 92       	push	r10
    149e:	bf 92       	push	r11
    14a0:	cf 92       	push	r12
    14a2:	df 92       	push	r13
    14a4:	ef 92       	push	r14
    14a6:	ff 92       	push	r15
    14a8:	0f 93       	push	r16
    14aa:	1f 93       	push	r17
    14ac:	cf 93       	push	r28
    14ae:	df 93       	push	r29
    14b0:	cd b7       	in	r28, 0x3d	; 61
    14b2:	de b7       	in	r29, 0x3e	; 62
    14b4:	ca 1b       	sub	r28, r26
    14b6:	db 0b       	sbc	r29, r27
    14b8:	0f b6       	in	r0, 0x3f	; 63
    14ba:	f8 94       	cli
    14bc:	de bf       	out	0x3e, r29	; 62
    14be:	0f be       	out	0x3f, r0	; 63
    14c0:	cd bf       	out	0x3d, r28	; 61
    14c2:	09 94       	ijmp

000014c4 <__epilogue_restores__>:
    14c4:	2a 88       	ldd	r2, Y+18	; 0x12
    14c6:	39 88       	ldd	r3, Y+17	; 0x11
    14c8:	48 88       	ldd	r4, Y+16	; 0x10
    14ca:	5f 84       	ldd	r5, Y+15	; 0x0f
    14cc:	6e 84       	ldd	r6, Y+14	; 0x0e
    14ce:	7d 84       	ldd	r7, Y+13	; 0x0d
    14d0:	8c 84       	ldd	r8, Y+12	; 0x0c
    14d2:	9b 84       	ldd	r9, Y+11	; 0x0b
    14d4:	aa 84       	ldd	r10, Y+10	; 0x0a
    14d6:	b9 84       	ldd	r11, Y+9	; 0x09
    14d8:	c8 84       	ldd	r12, Y+8	; 0x08
    14da:	df 80       	ldd	r13, Y+7	; 0x07
    14dc:	ee 80       	ldd	r14, Y+6	; 0x06
    14de:	fd 80       	ldd	r15, Y+5	; 0x05
    14e0:	0c 81       	ldd	r16, Y+4	; 0x04
    14e2:	1b 81       	ldd	r17, Y+3	; 0x03
    14e4:	aa 81       	ldd	r26, Y+2	; 0x02
    14e6:	b9 81       	ldd	r27, Y+1	; 0x01
    14e8:	ce 0f       	add	r28, r30
    14ea:	d1 1d       	adc	r29, r1
    14ec:	0f b6       	in	r0, 0x3f	; 63
    14ee:	f8 94       	cli
    14f0:	de bf       	out	0x3e, r29	; 62
    14f2:	0f be       	out	0x3f, r0	; 63
    14f4:	cd bf       	out	0x3d, r28	; 61
    14f6:	ed 01       	movw	r28, r26
    14f8:	08 95       	ret

000014fa <__ftoa_engine>:
    14fa:	28 30       	cpi	r18, 0x08	; 8
    14fc:	08 f0       	brcs	.+2      	; 0x1500 <__ftoa_engine+0x6>
    14fe:	27 e0       	ldi	r18, 0x07	; 7
    1500:	33 27       	eor	r19, r19
    1502:	da 01       	movw	r26, r20
    1504:	99 0f       	add	r25, r25
    1506:	31 1d       	adc	r19, r1
    1508:	87 fd       	sbrc	r24, 7
    150a:	91 60       	ori	r25, 0x01	; 1
    150c:	00 96       	adiw	r24, 0x00	; 0
    150e:	61 05       	cpc	r22, r1
    1510:	71 05       	cpc	r23, r1
    1512:	39 f4       	brne	.+14     	; 0x1522 <__ftoa_engine+0x28>
    1514:	32 60       	ori	r19, 0x02	; 2
    1516:	2e 5f       	subi	r18, 0xFE	; 254
    1518:	3d 93       	st	X+, r19
    151a:	30 e3       	ldi	r19, 0x30	; 48
    151c:	2a 95       	dec	r18
    151e:	e1 f7       	brne	.-8      	; 0x1518 <__ftoa_engine+0x1e>
    1520:	08 95       	ret
    1522:	9f 3f       	cpi	r25, 0xFF	; 255
    1524:	30 f0       	brcs	.+12     	; 0x1532 <__ftoa_engine+0x38>
    1526:	80 38       	cpi	r24, 0x80	; 128
    1528:	71 05       	cpc	r23, r1
    152a:	61 05       	cpc	r22, r1
    152c:	09 f0       	breq	.+2      	; 0x1530 <__ftoa_engine+0x36>
    152e:	3c 5f       	subi	r19, 0xFC	; 252
    1530:	3c 5f       	subi	r19, 0xFC	; 252
    1532:	3d 93       	st	X+, r19
    1534:	91 30       	cpi	r25, 0x01	; 1
    1536:	08 f0       	brcs	.+2      	; 0x153a <__ftoa_engine+0x40>
    1538:	80 68       	ori	r24, 0x80	; 128
    153a:	91 1d       	adc	r25, r1
    153c:	df 93       	push	r29
    153e:	cf 93       	push	r28
    1540:	1f 93       	push	r17
    1542:	0f 93       	push	r16
    1544:	ff 92       	push	r15
    1546:	ef 92       	push	r14
    1548:	19 2f       	mov	r17, r25
    154a:	98 7f       	andi	r25, 0xF8	; 248
    154c:	96 95       	lsr	r25
    154e:	e9 2f       	mov	r30, r25
    1550:	96 95       	lsr	r25
    1552:	96 95       	lsr	r25
    1554:	e9 0f       	add	r30, r25
    1556:	ff 27       	eor	r31, r31
    1558:	e6 53       	subi	r30, 0x36	; 54
    155a:	ff 4f       	sbci	r31, 0xFF	; 255
    155c:	99 27       	eor	r25, r25
    155e:	33 27       	eor	r19, r19
    1560:	ee 24       	eor	r14, r14
    1562:	ff 24       	eor	r15, r15
    1564:	a7 01       	movw	r20, r14
    1566:	e7 01       	movw	r28, r14
    1568:	05 90       	lpm	r0, Z+
    156a:	08 94       	sec
    156c:	07 94       	ror	r0
    156e:	28 f4       	brcc	.+10     	; 0x157a <__ftoa_engine+0x80>
    1570:	36 0f       	add	r19, r22
    1572:	e7 1e       	adc	r14, r23
    1574:	f8 1e       	adc	r15, r24
    1576:	49 1f       	adc	r20, r25
    1578:	51 1d       	adc	r21, r1
    157a:	66 0f       	add	r22, r22
    157c:	77 1f       	adc	r23, r23
    157e:	88 1f       	adc	r24, r24
    1580:	99 1f       	adc	r25, r25
    1582:	06 94       	lsr	r0
    1584:	a1 f7       	brne	.-24     	; 0x156e <__ftoa_engine+0x74>
    1586:	05 90       	lpm	r0, Z+
    1588:	07 94       	ror	r0
    158a:	28 f4       	brcc	.+10     	; 0x1596 <__ftoa_engine+0x9c>
    158c:	e7 0e       	add	r14, r23
    158e:	f8 1e       	adc	r15, r24
    1590:	49 1f       	adc	r20, r25
    1592:	56 1f       	adc	r21, r22
    1594:	c1 1d       	adc	r28, r1
    1596:	77 0f       	add	r23, r23
    1598:	88 1f       	adc	r24, r24
    159a:	99 1f       	adc	r25, r25
    159c:	66 1f       	adc	r22, r22
    159e:	06 94       	lsr	r0
    15a0:	a1 f7       	brne	.-24     	; 0x158a <__ftoa_engine+0x90>
    15a2:	05 90       	lpm	r0, Z+
    15a4:	07 94       	ror	r0
    15a6:	28 f4       	brcc	.+10     	; 0x15b2 <__ftoa_engine+0xb8>
    15a8:	f8 0e       	add	r15, r24
    15aa:	49 1f       	adc	r20, r25
    15ac:	56 1f       	adc	r21, r22
    15ae:	c7 1f       	adc	r28, r23
    15b0:	d1 1d       	adc	r29, r1
    15b2:	88 0f       	add	r24, r24
    15b4:	99 1f       	adc	r25, r25
    15b6:	66 1f       	adc	r22, r22
    15b8:	77 1f       	adc	r23, r23
    15ba:	06 94       	lsr	r0
    15bc:	a1 f7       	brne	.-24     	; 0x15a6 <__ftoa_engine+0xac>
    15be:	05 90       	lpm	r0, Z+
    15c0:	07 94       	ror	r0
    15c2:	20 f4       	brcc	.+8      	; 0x15cc <__ftoa_engine+0xd2>
    15c4:	49 0f       	add	r20, r25
    15c6:	56 1f       	adc	r21, r22
    15c8:	c7 1f       	adc	r28, r23
    15ca:	d8 1f       	adc	r29, r24
    15cc:	99 0f       	add	r25, r25
    15ce:	66 1f       	adc	r22, r22
    15d0:	77 1f       	adc	r23, r23
    15d2:	88 1f       	adc	r24, r24
    15d4:	06 94       	lsr	r0
    15d6:	a9 f7       	brne	.-22     	; 0x15c2 <__ftoa_engine+0xc8>
    15d8:	84 91       	lpm	r24, Z
    15da:	10 95       	com	r17
    15dc:	17 70       	andi	r17, 0x07	; 7
    15de:	41 f0       	breq	.+16     	; 0x15f0 <__ftoa_engine+0xf6>
    15e0:	d6 95       	lsr	r29
    15e2:	c7 95       	ror	r28
    15e4:	57 95       	ror	r21
    15e6:	47 95       	ror	r20
    15e8:	f7 94       	ror	r15
    15ea:	e7 94       	ror	r14
    15ec:	1a 95       	dec	r17
    15ee:	c1 f7       	brne	.-16     	; 0x15e0 <__ftoa_engine+0xe6>
    15f0:	e0 e7       	ldi	r30, 0x70	; 112
    15f2:	f0 e0       	ldi	r31, 0x00	; 0
    15f4:	68 94       	set
    15f6:	15 90       	lpm	r1, Z+
    15f8:	15 91       	lpm	r17, Z+
    15fa:	35 91       	lpm	r19, Z+
    15fc:	65 91       	lpm	r22, Z+
    15fe:	95 91       	lpm	r25, Z+
    1600:	05 90       	lpm	r0, Z+
    1602:	7f e2       	ldi	r23, 0x2F	; 47
    1604:	73 95       	inc	r23
    1606:	e1 18       	sub	r14, r1
    1608:	f1 0a       	sbc	r15, r17
    160a:	43 0b       	sbc	r20, r19
    160c:	56 0b       	sbc	r21, r22
    160e:	c9 0b       	sbc	r28, r25
    1610:	d0 09       	sbc	r29, r0
    1612:	c0 f7       	brcc	.-16     	; 0x1604 <__ftoa_engine+0x10a>
    1614:	e1 0c       	add	r14, r1
    1616:	f1 1e       	adc	r15, r17
    1618:	43 1f       	adc	r20, r19
    161a:	56 1f       	adc	r21, r22
    161c:	c9 1f       	adc	r28, r25
    161e:	d0 1d       	adc	r29, r0
    1620:	7e f4       	brtc	.+30     	; 0x1640 <__ftoa_engine+0x146>
    1622:	70 33       	cpi	r23, 0x30	; 48
    1624:	11 f4       	brne	.+4      	; 0x162a <__ftoa_engine+0x130>
    1626:	8a 95       	dec	r24
    1628:	e6 cf       	rjmp	.-52     	; 0x15f6 <__ftoa_engine+0xfc>
    162a:	e8 94       	clt
    162c:	01 50       	subi	r16, 0x01	; 1
    162e:	30 f0       	brcs	.+12     	; 0x163c <__ftoa_engine+0x142>
    1630:	08 0f       	add	r16, r24
    1632:	0a f4       	brpl	.+2      	; 0x1636 <__ftoa_engine+0x13c>
    1634:	00 27       	eor	r16, r16
    1636:	02 17       	cp	r16, r18
    1638:	08 f4       	brcc	.+2      	; 0x163c <__ftoa_engine+0x142>
    163a:	20 2f       	mov	r18, r16
    163c:	23 95       	inc	r18
    163e:	02 2f       	mov	r16, r18
    1640:	7a 33       	cpi	r23, 0x3A	; 58
    1642:	28 f0       	brcs	.+10     	; 0x164e <__ftoa_engine+0x154>
    1644:	79 e3       	ldi	r23, 0x39	; 57
    1646:	7d 93       	st	X+, r23
    1648:	2a 95       	dec	r18
    164a:	e9 f7       	brne	.-6      	; 0x1646 <__ftoa_engine+0x14c>
    164c:	10 c0       	rjmp	.+32     	; 0x166e <__ftoa_engine+0x174>
    164e:	7d 93       	st	X+, r23
    1650:	2a 95       	dec	r18
    1652:	89 f6       	brne	.-94     	; 0x15f6 <__ftoa_engine+0xfc>
    1654:	06 94       	lsr	r0
    1656:	97 95       	ror	r25
    1658:	67 95       	ror	r22
    165a:	37 95       	ror	r19
    165c:	17 95       	ror	r17
    165e:	17 94       	ror	r1
    1660:	e1 18       	sub	r14, r1
    1662:	f1 0a       	sbc	r15, r17
    1664:	43 0b       	sbc	r20, r19
    1666:	56 0b       	sbc	r21, r22
    1668:	c9 0b       	sbc	r28, r25
    166a:	d0 09       	sbc	r29, r0
    166c:	98 f0       	brcs	.+38     	; 0x1694 <__ftoa_engine+0x19a>
    166e:	23 95       	inc	r18
    1670:	7e 91       	ld	r23, -X
    1672:	73 95       	inc	r23
    1674:	7a 33       	cpi	r23, 0x3A	; 58
    1676:	08 f0       	brcs	.+2      	; 0x167a <__ftoa_engine+0x180>
    1678:	70 e3       	ldi	r23, 0x30	; 48
    167a:	7c 93       	st	X, r23
    167c:	20 13       	cpse	r18, r16
    167e:	b8 f7       	brcc	.-18     	; 0x166e <__ftoa_engine+0x174>
    1680:	7e 91       	ld	r23, -X
    1682:	70 61       	ori	r23, 0x10	; 16
    1684:	7d 93       	st	X+, r23
    1686:	30 f0       	brcs	.+12     	; 0x1694 <__ftoa_engine+0x19a>
    1688:	83 95       	inc	r24
    168a:	71 e3       	ldi	r23, 0x31	; 49
    168c:	7d 93       	st	X+, r23
    168e:	70 e3       	ldi	r23, 0x30	; 48
    1690:	2a 95       	dec	r18
    1692:	e1 f7       	brne	.-8      	; 0x168c <__ftoa_engine+0x192>
    1694:	11 24       	eor	r1, r1
    1696:	ef 90       	pop	r14
    1698:	ff 90       	pop	r15
    169a:	0f 91       	pop	r16
    169c:	1f 91       	pop	r17
    169e:	cf 91       	pop	r28
    16a0:	df 91       	pop	r29
    16a2:	99 27       	eor	r25, r25
    16a4:	87 fd       	sbrc	r24, 7
    16a6:	90 95       	com	r25
    16a8:	08 95       	ret

000016aa <strnlen_P>:
    16aa:	fc 01       	movw	r30, r24
    16ac:	05 90       	lpm	r0, Z+
    16ae:	61 50       	subi	r22, 0x01	; 1
    16b0:	70 40       	sbci	r23, 0x00	; 0
    16b2:	01 10       	cpse	r0, r1
    16b4:	d8 f7       	brcc	.-10     	; 0x16ac <strnlen_P+0x2>
    16b6:	80 95       	com	r24
    16b8:	90 95       	com	r25
    16ba:	8e 0f       	add	r24, r30
    16bc:	9f 1f       	adc	r25, r31
    16be:	08 95       	ret

000016c0 <strnlen>:
    16c0:	fc 01       	movw	r30, r24
    16c2:	61 50       	subi	r22, 0x01	; 1
    16c4:	70 40       	sbci	r23, 0x00	; 0
    16c6:	01 90       	ld	r0, Z+
    16c8:	01 10       	cpse	r0, r1
    16ca:	d8 f7       	brcc	.-10     	; 0x16c2 <strnlen+0x2>
    16cc:	80 95       	com	r24
    16ce:	90 95       	com	r25
    16d0:	8e 0f       	add	r24, r30
    16d2:	9f 1f       	adc	r25, r31
    16d4:	08 95       	ret

000016d6 <fputc>:
    16d6:	0f 93       	push	r16
    16d8:	1f 93       	push	r17
    16da:	cf 93       	push	r28
    16dc:	df 93       	push	r29
    16de:	fb 01       	movw	r30, r22
    16e0:	23 81       	ldd	r18, Z+3	; 0x03
    16e2:	21 fd       	sbrc	r18, 1
    16e4:	03 c0       	rjmp	.+6      	; 0x16ec <fputc+0x16>
    16e6:	8f ef       	ldi	r24, 0xFF	; 255
    16e8:	9f ef       	ldi	r25, 0xFF	; 255
    16ea:	2c c0       	rjmp	.+88     	; 0x1744 <fputc+0x6e>
    16ec:	22 ff       	sbrs	r18, 2
    16ee:	16 c0       	rjmp	.+44     	; 0x171c <fputc+0x46>
    16f0:	46 81       	ldd	r20, Z+6	; 0x06
    16f2:	57 81       	ldd	r21, Z+7	; 0x07
    16f4:	24 81       	ldd	r18, Z+4	; 0x04
    16f6:	35 81       	ldd	r19, Z+5	; 0x05
    16f8:	42 17       	cp	r20, r18
    16fa:	53 07       	cpc	r21, r19
    16fc:	44 f4       	brge	.+16     	; 0x170e <fputc+0x38>
    16fe:	a0 81       	ld	r26, Z
    1700:	b1 81       	ldd	r27, Z+1	; 0x01
    1702:	9d 01       	movw	r18, r26
    1704:	2f 5f       	subi	r18, 0xFF	; 255
    1706:	3f 4f       	sbci	r19, 0xFF	; 255
    1708:	31 83       	std	Z+1, r19	; 0x01
    170a:	20 83       	st	Z, r18
    170c:	8c 93       	st	X, r24
    170e:	26 81       	ldd	r18, Z+6	; 0x06
    1710:	37 81       	ldd	r19, Z+7	; 0x07
    1712:	2f 5f       	subi	r18, 0xFF	; 255
    1714:	3f 4f       	sbci	r19, 0xFF	; 255
    1716:	37 83       	std	Z+7, r19	; 0x07
    1718:	26 83       	std	Z+6, r18	; 0x06
    171a:	14 c0       	rjmp	.+40     	; 0x1744 <fputc+0x6e>
    171c:	8b 01       	movw	r16, r22
    171e:	ec 01       	movw	r28, r24
    1720:	fb 01       	movw	r30, r22
    1722:	00 84       	ldd	r0, Z+8	; 0x08
    1724:	f1 85       	ldd	r31, Z+9	; 0x09
    1726:	e0 2d       	mov	r30, r0
    1728:	09 95       	icall
    172a:	89 2b       	or	r24, r25
    172c:	e1 f6       	brne	.-72     	; 0x16e6 <fputc+0x10>
    172e:	d8 01       	movw	r26, r16
    1730:	16 96       	adiw	r26, 0x06	; 6
    1732:	8d 91       	ld	r24, X+
    1734:	9c 91       	ld	r25, X
    1736:	17 97       	sbiw	r26, 0x07	; 7
    1738:	01 96       	adiw	r24, 0x01	; 1
    173a:	17 96       	adiw	r26, 0x07	; 7
    173c:	9c 93       	st	X, r25
    173e:	8e 93       	st	-X, r24
    1740:	16 97       	sbiw	r26, 0x06	; 6
    1742:	ce 01       	movw	r24, r28
    1744:	df 91       	pop	r29
    1746:	cf 91       	pop	r28
    1748:	1f 91       	pop	r17
    174a:	0f 91       	pop	r16
    174c:	08 95       	ret

0000174e <printf>:
    174e:	a0 e0       	ldi	r26, 0x00	; 0
    1750:	b0 e0       	ldi	r27, 0x00	; 0
    1752:	ed ea       	ldi	r30, 0xAD	; 173
    1754:	fb e0       	ldi	r31, 0x0B	; 11
    1756:	0c 94 56 0a 	jmp	0x14ac	; 0x14ac <__prologue_saves__+0x20>
    175a:	ae 01       	movw	r20, r28
    175c:	4b 5f       	subi	r20, 0xFB	; 251
    175e:	5f 4f       	sbci	r21, 0xFF	; 255
    1760:	fa 01       	movw	r30, r20
    1762:	61 91       	ld	r22, Z+
    1764:	71 91       	ld	r23, Z+
    1766:	af 01       	movw	r20, r30
    1768:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <__iob+0x2>
    176c:	90 91 ae 01 	lds	r25, 0x01AE	; 0x8001ae <__iob+0x3>
    1770:	0e 94 c9 06 	call	0xd92	; 0xd92 <vfprintf>
    1774:	e2 e0       	ldi	r30, 0x02	; 2
    1776:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__epilogue_restores__+0x20>

0000177a <__ultoa_invert>:
    177a:	fa 01       	movw	r30, r20
    177c:	aa 27       	eor	r26, r26
    177e:	28 30       	cpi	r18, 0x08	; 8
    1780:	51 f1       	breq	.+84     	; 0x17d6 <__ultoa_invert+0x5c>
    1782:	20 31       	cpi	r18, 0x10	; 16
    1784:	81 f1       	breq	.+96     	; 0x17e6 <__ultoa_invert+0x6c>
    1786:	e8 94       	clt
    1788:	6f 93       	push	r22
    178a:	6e 7f       	andi	r22, 0xFE	; 254
    178c:	6e 5f       	subi	r22, 0xFE	; 254
    178e:	7f 4f       	sbci	r23, 0xFF	; 255
    1790:	8f 4f       	sbci	r24, 0xFF	; 255
    1792:	9f 4f       	sbci	r25, 0xFF	; 255
    1794:	af 4f       	sbci	r26, 0xFF	; 255
    1796:	b1 e0       	ldi	r27, 0x01	; 1
    1798:	3e d0       	rcall	.+124    	; 0x1816 <__ultoa_invert+0x9c>
    179a:	b4 e0       	ldi	r27, 0x04	; 4
    179c:	3c d0       	rcall	.+120    	; 0x1816 <__ultoa_invert+0x9c>
    179e:	67 0f       	add	r22, r23
    17a0:	78 1f       	adc	r23, r24
    17a2:	89 1f       	adc	r24, r25
    17a4:	9a 1f       	adc	r25, r26
    17a6:	a1 1d       	adc	r26, r1
    17a8:	68 0f       	add	r22, r24
    17aa:	79 1f       	adc	r23, r25
    17ac:	8a 1f       	adc	r24, r26
    17ae:	91 1d       	adc	r25, r1
    17b0:	a1 1d       	adc	r26, r1
    17b2:	6a 0f       	add	r22, r26
    17b4:	71 1d       	adc	r23, r1
    17b6:	81 1d       	adc	r24, r1
    17b8:	91 1d       	adc	r25, r1
    17ba:	a1 1d       	adc	r26, r1
    17bc:	20 d0       	rcall	.+64     	; 0x17fe <__ultoa_invert+0x84>
    17be:	09 f4       	brne	.+2      	; 0x17c2 <__ultoa_invert+0x48>
    17c0:	68 94       	set
    17c2:	3f 91       	pop	r19
    17c4:	2a e0       	ldi	r18, 0x0A	; 10
    17c6:	26 9f       	mul	r18, r22
    17c8:	11 24       	eor	r1, r1
    17ca:	30 19       	sub	r19, r0
    17cc:	30 5d       	subi	r19, 0xD0	; 208
    17ce:	31 93       	st	Z+, r19
    17d0:	de f6       	brtc	.-74     	; 0x1788 <__ultoa_invert+0xe>
    17d2:	cf 01       	movw	r24, r30
    17d4:	08 95       	ret
    17d6:	46 2f       	mov	r20, r22
    17d8:	47 70       	andi	r20, 0x07	; 7
    17da:	40 5d       	subi	r20, 0xD0	; 208
    17dc:	41 93       	st	Z+, r20
    17de:	b3 e0       	ldi	r27, 0x03	; 3
    17e0:	0f d0       	rcall	.+30     	; 0x1800 <__ultoa_invert+0x86>
    17e2:	c9 f7       	brne	.-14     	; 0x17d6 <__ultoa_invert+0x5c>
    17e4:	f6 cf       	rjmp	.-20     	; 0x17d2 <__ultoa_invert+0x58>
    17e6:	46 2f       	mov	r20, r22
    17e8:	4f 70       	andi	r20, 0x0F	; 15
    17ea:	40 5d       	subi	r20, 0xD0	; 208
    17ec:	4a 33       	cpi	r20, 0x3A	; 58
    17ee:	18 f0       	brcs	.+6      	; 0x17f6 <__ultoa_invert+0x7c>
    17f0:	49 5d       	subi	r20, 0xD9	; 217
    17f2:	31 fd       	sbrc	r19, 1
    17f4:	40 52       	subi	r20, 0x20	; 32
    17f6:	41 93       	st	Z+, r20
    17f8:	02 d0       	rcall	.+4      	; 0x17fe <__ultoa_invert+0x84>
    17fa:	a9 f7       	brne	.-22     	; 0x17e6 <__ultoa_invert+0x6c>
    17fc:	ea cf       	rjmp	.-44     	; 0x17d2 <__ultoa_invert+0x58>
    17fe:	b4 e0       	ldi	r27, 0x04	; 4
    1800:	a6 95       	lsr	r26
    1802:	97 95       	ror	r25
    1804:	87 95       	ror	r24
    1806:	77 95       	ror	r23
    1808:	67 95       	ror	r22
    180a:	ba 95       	dec	r27
    180c:	c9 f7       	brne	.-14     	; 0x1800 <__ultoa_invert+0x86>
    180e:	00 97       	sbiw	r24, 0x00	; 0
    1810:	61 05       	cpc	r22, r1
    1812:	71 05       	cpc	r23, r1
    1814:	08 95       	ret
    1816:	9b 01       	movw	r18, r22
    1818:	ac 01       	movw	r20, r24
    181a:	0a 2e       	mov	r0, r26
    181c:	06 94       	lsr	r0
    181e:	57 95       	ror	r21
    1820:	47 95       	ror	r20
    1822:	37 95       	ror	r19
    1824:	27 95       	ror	r18
    1826:	ba 95       	dec	r27
    1828:	c9 f7       	brne	.-14     	; 0x181c <__ultoa_invert+0xa2>
    182a:	62 0f       	add	r22, r18
    182c:	73 1f       	adc	r23, r19
    182e:	84 1f       	adc	r24, r20
    1830:	95 1f       	adc	r25, r21
    1832:	a0 1d       	adc	r26, r0
    1834:	08 95       	ret

00001836 <_exit>:
    1836:	f8 94       	cli

00001838 <__stop_program>:
    1838:	ff cf       	rjmp	.-2      	; 0x1838 <__stop_program>
