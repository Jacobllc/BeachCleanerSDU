
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000122  00800100  000018fa  0000198e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800222  00800222  00001ab0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ab0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00001b50  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001586  00000000  00000000  00001c90  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b86  00000000  00000000  00003216  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000a07  00000000  00000000  00003d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000254  00000000  00000000  000047a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007b5  00000000  00000000  000049f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000775  00000000  00000000  000051ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00005922  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ea ef       	ldi	r30, 0xFA	; 250
     17e:	f8 e1       	ldi	r31, 0x18	; 24
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 32       	cpi	r26, 0x22	; 34
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	22 e0       	ldi	r18, 0x02	; 2
     18e:	a2 e2       	ldi	r26, 0x22	; 34
     190:	b2 e0       	ldi	r27, 0x02	; 2
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a8 32       	cpi	r26, 0x28	; 40
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
     1a0:	0c 94 7b 0c 	jmp	0x18f6	; 0x18f6 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     1a8:	0e 94 86 04 	call	0x90c	; 0x90c <system_init>
     1ac:	08 95       	ret

000001ae <main>:
//char msg1[80] = "$GPGGA,133800.000,5454.7212,N,00946.8262,E,2,06,1.58,28.1,M,44.6,M,0000,0000*52";
char msg1[85]   = "$GNGGA,144204.00,5454.71942,N,00946.83221,E,1,12,0.94,21.1,M,44.1,M,,*70";


int main(void)
{
     1ae:	cf 93       	push	r28
     1b0:	df 93       	push	r29
     1b2:	cd b7       	in	r28, 0x3d	; 61
     1b4:	de b7       	in	r29, 0x3e	; 62
     1b6:	a4 97       	sbiw	r28, 0x24	; 36
     1b8:	0f b6       	in	r0, 0x3f	; 63
     1ba:	f8 94       	cli
     1bc:	de bf       	out	0x3e, r29	; 62
     1be:	0f be       	out	0x3f, r0	; 63
     1c0:	cd bf       	out	0x3d, r28	; 61
	atmel_start_init();
     1c2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <atmel_start_init>
	struct DATA NMEA1;	//Create new instance of Data.

	if(GPS_Decode(msg1, &NMEA1))	//Take message as char array and reference to data struct. Returns true if checksum is okay.
     1c6:	be 01       	movw	r22, r28
     1c8:	6f 5f       	subi	r22, 0xFF	; 255
     1ca:	7f 4f       	sbci	r23, 0xFF	; 255
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	91 e0       	ldi	r25, 0x01	; 1
     1d0:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <GPS_Decode>
     1d4:	89 2b       	or	r24, r25
     1d6:	09 f4       	brne	.+2      	; 0x1da <main+0x2c>
     1d8:	93 c0       	rjmp	.+294    	; 0x300 <main+0x152>
	{
		printf("Lat_Degree:\t %d \t ", NMEA1.LAT_Degree);
     1da:	89 81       	ldd	r24, Y+1	; 0x01
     1dc:	1f 92       	push	r1
     1de:	8f 93       	push	r24
     1e0:	85 e7       	ldi	r24, 0x75	; 117
     1e2:	91 e0       	ldi	r25, 0x01	; 1
     1e4:	9f 93       	push	r25
     1e6:	8f 93       	push	r24
     1e8:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("Lat_Min:\t %d \t", NMEA1.LAT_Min);
     1ec:	8a 81       	ldd	r24, Y+2	; 0x02
     1ee:	1f 92       	push	r1
     1f0:	8f 93       	push	r24
     1f2:	88 e8       	ldi	r24, 0x88	; 136
     1f4:	91 e0       	ldi	r25, 0x01	; 1
     1f6:	9f 93       	push	r25
     1f8:	8f 93       	push	r24
     1fa:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("Lat_Dec:\t %lu \t", NMEA1.LAT);
     1fe:	8e 81       	ldd	r24, Y+6	; 0x06
     200:	8f 93       	push	r24
     202:	8d 81       	ldd	r24, Y+5	; 0x05
     204:	8f 93       	push	r24
     206:	8c 81       	ldd	r24, Y+4	; 0x04
     208:	8f 93       	push	r24
     20a:	8b 81       	ldd	r24, Y+3	; 0x03
     20c:	8f 93       	push	r24
     20e:	87 e9       	ldi	r24, 0x97	; 151
     210:	91 e0       	ldi	r25, 0x01	; 1
     212:	9f 93       	push	r25
     214:	8f 93       	push	r24
     216:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("%c\t\n", NMEA1.LATdir);
     21a:	8b 85       	ldd	r24, Y+11	; 0x0b
     21c:	1f 92       	push	r1
     21e:	8f 93       	push	r24
     220:	87 ea       	ldi	r24, 0xA7	; 167
     222:	91 e0       	ldi	r25, 0x01	; 1
     224:	9f 93       	push	r25
     226:	8f 93       	push	r24
     228:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		
		printf("Lon_Degree:\t %d \t ", NMEA1.LON_Degree);
     22c:	8c 85       	ldd	r24, Y+12	; 0x0c
     22e:	1f 92       	push	r1
     230:	8f 93       	push	r24
     232:	8c ea       	ldi	r24, 0xAC	; 172
     234:	91 e0       	ldi	r25, 0x01	; 1
     236:	9f 93       	push	r25
     238:	8f 93       	push	r24
     23a:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("Lon_Min:\t %d \t", NMEA1.LON_Min);
     23e:	8d 85       	ldd	r24, Y+13	; 0x0d
     240:	1f 92       	push	r1
     242:	8f 93       	push	r24
     244:	8f eb       	ldi	r24, 0xBF	; 191
     246:	91 e0       	ldi	r25, 0x01	; 1
     248:	9f 93       	push	r25
     24a:	8f 93       	push	r24
     24c:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("Lon_Dec:\t %lu \t", NMEA1.LON);
     250:	89 89       	ldd	r24, Y+17	; 0x11
     252:	8f 93       	push	r24
     254:	88 89       	ldd	r24, Y+16	; 0x10
     256:	8f 93       	push	r24
     258:	8f 85       	ldd	r24, Y+15	; 0x0f
     25a:	8f 93       	push	r24
     25c:	8e 85       	ldd	r24, Y+14	; 0x0e
     25e:	8f 93       	push	r24
     260:	8e ec       	ldi	r24, 0xCE	; 206
     262:	91 e0       	ldi	r25, 0x01	; 1
     264:	9f 93       	push	r25
     266:	8f 93       	push	r24
     268:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("%c\n", NMEA1.LONdir);
     26c:	0f b6       	in	r0, 0x3f	; 63
     26e:	f8 94       	cli
     270:	de bf       	out	0x3e, r29	; 62
     272:	0f be       	out	0x3f, r0	; 63
     274:	cd bf       	out	0x3d, r28	; 61
     276:	8a 8d       	ldd	r24, Y+26	; 0x1a
     278:	1f 92       	push	r1
     27a:	8f 93       	push	r24
     27c:	8e ed       	ldi	r24, 0xDE	; 222
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	9f 93       	push	r25
     282:	8f 93       	push	r24
     284:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		
		printf("Lat: %lf\t Lon: %lf\n", NMEA1.LAT_Float, NMEA1.LON_Float);
     288:	8d 89       	ldd	r24, Y+21	; 0x15
     28a:	8f 93       	push	r24
     28c:	8c 89       	ldd	r24, Y+20	; 0x14
     28e:	8f 93       	push	r24
     290:	8b 89       	ldd	r24, Y+19	; 0x13
     292:	8f 93       	push	r24
     294:	8a 89       	ldd	r24, Y+18	; 0x12
     296:	8f 93       	push	r24
     298:	8a 85       	ldd	r24, Y+10	; 0x0a
     29a:	8f 93       	push	r24
     29c:	89 85       	ldd	r24, Y+9	; 0x09
     29e:	8f 93       	push	r24
     2a0:	88 85       	ldd	r24, Y+8	; 0x08
     2a2:	8f 93       	push	r24
     2a4:	8f 81       	ldd	r24, Y+7	; 0x07
     2a6:	8f 93       	push	r24
     2a8:	82 ee       	ldi	r24, 0xE2	; 226
     2aa:	91 e0       	ldi	r25, 0x01	; 1
     2ac:	9f 93       	push	r25
     2ae:	8f 93       	push	r24
     2b0:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("LON_Final: %lu\n", NMEA1.LON_FINAL);
     2b4:	89 8d       	ldd	r24, Y+25	; 0x19
     2b6:	8f 93       	push	r24
     2b8:	88 8d       	ldd	r24, Y+24	; 0x18
     2ba:	8f 93       	push	r24
     2bc:	8f 89       	ldd	r24, Y+23	; 0x17
     2be:	8f 93       	push	r24
     2c0:	8e 89       	ldd	r24, Y+22	; 0x16
     2c2:	8f 93       	push	r24
     2c4:	86 ef       	ldi	r24, 0xF6	; 246
     2c6:	91 e0       	ldi	r25, 0x01	; 1
     2c8:	9f 93       	push	r25
     2ca:	8f 93       	push	r24
     2cc:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		//printf("LAT_Final: %lu\n", NMEA1.LAT_FINAL);
		
		
		printf("Quality: %d\n", NMEA1.quality);
     2d0:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2d2:	1f 92       	push	r1
     2d4:	8f 93       	push	r24
     2d6:	86 e0       	ldi	r24, 0x06	; 6
     2d8:	92 e0       	ldi	r25, 0x02	; 2
     2da:	9f 93       	push	r25
     2dc:	8f 93       	push	r24
     2de:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
		printf("Age: %d\n", NMEA1.ageOfCorrection);
     2e2:	8c 8d       	ldd	r24, Y+28	; 0x1c
     2e4:	1f 92       	push	r1
     2e6:	8f 93       	push	r24
     2e8:	83 e1       	ldi	r24, 0x13	; 19
     2ea:	92 e0       	ldi	r25, 0x02	; 2
     2ec:	9f 93       	push	r25
     2ee:	8f 93       	push	r24
     2f0:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
     2f4:	0f b6       	in	r0, 0x3f	; 63
     2f6:	f8 94       	cli
     2f8:	de bf       	out	0x3e, r29	; 62
     2fa:	0f be       	out	0x3f, r0	; 63
     2fc:	cd bf       	out	0x3d, r28	; 61
     2fe:	08 c0       	rjmp	.+16     	; 0x310 <main+0x162>
		
		
	}
	else
	{
		printf("NoGo!");
     300:	8c e1       	ldi	r24, 0x1C	; 28
     302:	92 e0       	ldi	r25, 0x02	; 2
     304:	9f 93       	push	r25
     306:	8f 93       	push	r24
     308:	0e 94 07 0c 	call	0x180e	; 0x180e <printf>
     30c:	0f 90       	pop	r0
     30e:	0f 90       	pop	r0
	}
}
     310:	80 e0       	ldi	r24, 0x00	; 0
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	a4 96       	adiw	r28, 0x24	; 36
     316:	0f b6       	in	r0, 0x3f	; 63
     318:	f8 94       	cli
     31a:	de bf       	out	0x3e, r29	; 62
     31c:	0f be       	out	0x3f, r0	; 63
     31e:	cd bf       	out	0x3d, r28	; 61
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	08 95       	ret

00000326 <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     326:	fc 01       	movw	r30, r24
	GPS_Data->LAT_Float=0.0;
     328:	16 82       	std	Z+6, r1	; 0x06
     32a:	17 82       	std	Z+7, r1	; 0x07
     32c:	10 86       	std	Z+8, r1	; 0x08
     32e:	11 86       	std	Z+9, r1	; 0x09
	GPS_Data->LAT=0;
     330:	12 82       	std	Z+2, r1	; 0x02
     332:	13 82       	std	Z+3, r1	; 0x03
     334:	14 82       	std	Z+4, r1	; 0x04
     336:	15 82       	std	Z+5, r1	; 0x05
	GPS_Data->LAT_Min=0;
     338:	11 82       	std	Z+1, r1	; 0x01
	GPS_Data->LAT_Degree=0;
     33a:	10 82       	st	Z, r1
	GPS_Data->LON_Float=0.0;
     33c:	11 8a       	std	Z+17, r1	; 0x11
     33e:	12 8a       	std	Z+18, r1	; 0x12
     340:	13 8a       	std	Z+19, r1	; 0x13
     342:	14 8a       	std	Z+20, r1	; 0x14
	GPS_Data->LON=0;
     344:	15 86       	std	Z+13, r1	; 0x0d
     346:	16 86       	std	Z+14, r1	; 0x0e
     348:	17 86       	std	Z+15, r1	; 0x0f
     34a:	10 8a       	std	Z+16, r1	; 0x10
	GPS_Data->LON_Min=0;
     34c:	14 86       	std	Z+12, r1	; 0x0c
	GPS_Data->LON_Degree=0;
     34e:	13 86       	std	Z+11, r1	; 0x0b
	GPS_Data->ageOfCorrection = 0;
     350:	13 8e       	std	Z+27, r1	; 0x1b
	GPS_Data->quality=0;
     352:	12 8e       	std	Z+26, r1	; 0x1a
	GPS_Data->Speed=0;
     354:	10 a2       	std	Z+32, r1	; 0x20
     356:	11 a2       	std	Z+33, r1	; 0x21
     358:	12 a2       	std	Z+34, r1	; 0x22
     35a:	13 a2       	std	Z+35, r1	; 0x23
	GPS_Data->TrueDir=0;
     35c:	14 8e       	std	Z+28, r1	; 0x1c
     35e:	15 8e       	std	Z+29, r1	; 0x1d
     360:	16 8e       	std	Z+30, r1	; 0x1e
     362:	17 8e       	std	Z+31, r1	; 0x1f
     364:	08 95       	ret

00000366 <checksum>:
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
     366:	fc 01       	movw	r30, r24
     368:	20 81       	ld	r18, Z
     36a:	24 32       	cpi	r18, 0x24	; 36
     36c:	61 f5       	brne	.+88     	; 0x3c6 <checksum+0x60>
	{
		i++;
		while(msg[i] != '*')
     36e:	21 81       	ldd	r18, Z+1	; 0x01
     370:	2a 32       	cpi	r18, 0x2A	; 42
     372:	59 f1       	breq	.+86     	; 0x3ca <checksum+0x64>
     374:	dc 01       	movw	r26, r24
     376:	12 96       	adiw	r26, 0x02	; 2
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	70 e0       	ldi	r23, 0x00	; 0
     37c:	41 e0       	ldi	r20, 0x01	; 1
     37e:	50 e0       	ldi	r21, 0x00	; 0
		{
			checksum ^= (msg[i]-48);
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	20 53       	subi	r18, 0x30	; 48
     384:	31 09       	sbc	r19, r1
     386:	62 27       	eor	r22, r18
     388:	73 27       	eor	r23, r19
			i++;
     38a:	4f 5f       	subi	r20, 0xFF	; 255
     38c:	5f 4f       	sbci	r21, 0xFF	; 255
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     38e:	2d 91       	ld	r18, X+
     390:	2a 32       	cpi	r18, 0x2A	; 42
     392:	b1 f7       	brne	.-20     	; 0x380 <checksum+0x1a>
     394:	1e c0       	rjmp	.+60     	; 0x3d2 <checksum+0x6c>
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
			{
				nmea_sum += 1*(msg[i]-48);
     396:	42 2f       	mov	r20, r18
     398:	50 e0       	ldi	r21, 0x00	; 0
     39a:	40 53       	subi	r20, 0x30	; 48
     39c:	51 09       	sbc	r21, r1
     39e:	84 0f       	add	r24, r20
     3a0:	95 1f       	adc	r25, r21
			}
			
			if((msg[i]>='A') && (msg[i]<='F'))
     3a2:	3f eb       	ldi	r19, 0xBF	; 191
     3a4:	32 0f       	add	r19, r18
     3a6:	36 30       	cpi	r19, 0x06	; 6
     3a8:	28 f4       	brcc	.+10     	; 0x3b4 <checksum+0x4e>
			{
				nmea_sum += 1*(msg[i]-55);
     3aa:	30 e0       	ldi	r19, 0x00	; 0
     3ac:	27 53       	subi	r18, 0x37	; 55
     3ae:	31 09       	sbc	r19, r1
     3b0:	82 0f       	add	r24, r18
     3b2:	93 1f       	adc	r25, r19
			}
		}
		
		if(checksum==(nmea_sum-(2*48)))
		{
			return 1;
     3b4:	9c 01       	movw	r18, r24
     3b6:	20 56       	subi	r18, 0x60	; 96
     3b8:	31 09       	sbc	r19, r1
     3ba:	81 e0       	ldi	r24, 0x01	; 1
     3bc:	26 17       	cp	r18, r22
     3be:	37 07       	cpc	r19, r23
     3c0:	d1 f0       	breq	.+52     	; 0x3f6 <checksum+0x90>
     3c2:	80 e0       	ldi	r24, 0x00	; 0
     3c4:	08 95       	ret
		{
			return 0;
		}
		
	}
return 0; 
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	08 95       	ret
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     3ca:	60 e0       	ldi	r22, 0x00	; 0
     3cc:	70 e0       	ldi	r23, 0x00	; 0
     3ce:	41 e0       	ldi	r20, 0x01	; 1
     3d0:	50 e0       	ldi	r21, 0x00	; 0
		
		if(msg[i] == '*')
		{
			////////////MSB
			i++;
			nmea_sum = 16*(msg[i]-48);
     3d2:	fc 01       	movw	r30, r24
     3d4:	e4 0f       	add	r30, r20
     3d6:	f5 1f       	adc	r31, r21
     3d8:	81 81       	ldd	r24, Z+1	; 0x01
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	c0 97       	sbiw	r24, 0x30	; 48
     3de:	82 95       	swap	r24
     3e0:	92 95       	swap	r25
     3e2:	90 7f       	andi	r25, 0xF0	; 240
     3e4:	98 27       	eor	r25, r24
     3e6:	80 7f       	andi	r24, 0xF0	; 240
     3e8:	98 27       	eor	r25, r24
				
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     3ea:	22 81       	ldd	r18, Z+2	; 0x02
     3ec:	30 ed       	ldi	r19, 0xD0	; 208
     3ee:	32 0f       	add	r19, r18
     3f0:	3a 30       	cpi	r19, 0x0A	; 10
     3f2:	88 f2       	brcs	.-94     	; 0x396 <checksum+0x30>
     3f4:	d6 cf       	rjmp	.-84     	; 0x3a2 <checksum+0x3c>
			return 0;
		}
		
	}
return 0; 
}
     3f6:	08 95       	ret

000003f8 <MessageType>:

uint8_t MessageType(char* msg){
     3f8:	cf 93       	push	r28
     3fa:	df 93       	push	r29
     3fc:	cd b7       	in	r28, 0x3d	; 61
     3fe:	de b7       	in	r29, 0x3e	; 62
     400:	64 97       	sbiw	r28, 0x14	; 20
     402:	0f b6       	in	r0, 0x3f	; 63
     404:	f8 94       	cli
     406:	de bf       	out	0x3e, r29	; 62
     408:	0f be       	out	0x3f, r0	; 63
     40a:	cd bf       	out	0x3d, r28	; 61
	if(msg[0]=='$')
     40c:	fc 01       	movw	r30, r24
     40e:	20 81       	ld	r18, Z
     410:	24 32       	cpi	r18, 0x24	; 36
     412:	09 f0       	breq	.+2      	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
     414:	55 c0       	rjmp	.+170    	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
     416:	dc 01       	movw	r26, r24
     418:	11 96       	adiw	r26, 0x01	; 1
     41a:	fe 01       	movw	r30, r28
     41c:	70 96       	adiw	r30, 0x10	; 16
     41e:	9e 01       	movw	r18, r28
     420:	2b 5e       	subi	r18, 0xEB	; 235
     422:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     424:	8d 91       	ld	r24, X+
     426:	9f eb       	ldi	r25, 0xBF	; 191
     428:	98 0f       	add	r25, r24
     42a:	9a 31       	cpi	r25, 0x1A	; 26
     42c:	08 f4       	brcc	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
			{
				msg_type[k]	= msg[k+1];
     42e:	80 83       	st	Z, r24
     430:	31 96       	adiw	r30, 0x01	; 1

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     432:	e2 17       	cp	r30, r18
     434:	f3 07       	cpc	r31, r19
     436:	b1 f7       	brne	.-20     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
			else
			{
				//printf("Failed message type\n");
			}
		}
		char msg_gpgga[5] = "GPGGA";
     438:	85 e0       	ldi	r24, 0x05	; 5
     43a:	e3 e6       	ldi	r30, 0x63	; 99
     43c:	f1 e0       	ldi	r31, 0x01	; 1
     43e:	de 01       	movw	r26, r28
     440:	1b 96       	adiw	r26, 0x0b	; 11
     442:	01 90       	ld	r0, Z+
     444:	0d 92       	st	X+, r0
     446:	8a 95       	dec	r24
     448:	e1 f7       	brne	.-8      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
		char msg_gpvtg[5] = "GPVTG";
     44a:	85 e0       	ldi	r24, 0x05	; 5
     44c:	e9 e6       	ldi	r30, 0x69	; 105
     44e:	f1 e0       	ldi	r31, 0x01	; 1
     450:	de 01       	movw	r26, r28
     452:	16 96       	adiw	r26, 0x06	; 6
     454:	01 90       	ld	r0, Z+
     456:	0d 92       	st	X+, r0
     458:	8a 95       	dec	r24
     45a:	e1 f7       	brne	.-8      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
		char msg_gngga[5] = "GNGGA";
     45c:	85 e0       	ldi	r24, 0x05	; 5
     45e:	ef e6       	ldi	r30, 0x6F	; 111
     460:	f1 e0       	ldi	r31, 0x01	; 1
     462:	de 01       	movw	r26, r28
     464:	11 96       	adiw	r26, 0x01	; 1
     466:	01 90       	ld	r0, Z+
     468:	0d 92       	st	X+, r0
     46a:	8a 95       	dec	r24
     46c:	e1 f7       	brne	.-8      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     46e:	45 e0       	ldi	r20, 0x05	; 5
     470:	50 e0       	ldi	r21, 0x00	; 0
     472:	be 01       	movw	r22, r28
     474:	65 5f       	subi	r22, 0xF5	; 245
     476:	7f 4f       	sbci	r23, 0xFF	; 255
     478:	ce 01       	movw	r24, r28
     47a:	40 96       	adiw	r24, 0x10	; 16
     47c:	0e 94 b2 0b 	call	0x1764	; 0x1764 <strncmp>
     480:	89 2b       	or	r24, r25
     482:	c1 f0       	breq	.+48     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
		{
			return GPGGA;
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     484:	45 e0       	ldi	r20, 0x05	; 5
     486:	50 e0       	ldi	r21, 0x00	; 0
     488:	be 01       	movw	r22, r28
     48a:	6a 5f       	subi	r22, 0xFA	; 250
     48c:	7f 4f       	sbci	r23, 0xFF	; 255
     48e:	ce 01       	movw	r24, r28
     490:	40 96       	adiw	r24, 0x10	; 16
     492:	0e 94 b2 0b 	call	0x1764	; 0x1764 <strncmp>
     496:	89 2b       	or	r24, r25
     498:	79 f0       	breq	.+30     	; 0x4b8 <__LOCK_REGION_LENGTH__+0xb8>
		{
			return GPVTG;
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
     49a:	45 e0       	ldi	r20, 0x05	; 5
     49c:	50 e0       	ldi	r21, 0x00	; 0
     49e:	be 01       	movw	r22, r28
     4a0:	6f 5f       	subi	r22, 0xFF	; 255
     4a2:	7f 4f       	sbci	r23, 0xFF	; 255
     4a4:	ce 01       	movw	r24, r28
     4a6:	40 96       	adiw	r24, 0x10	; 16
     4a8:	0e 94 b2 0b 	call	0x1764	; 0x1764 <strncmp>
     4ac:	89 2b       	or	r24, r25
     4ae:	31 f0       	breq	.+12     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
		{
			return GPGGA;
		}
	}
	return 0; 
     4b0:	80 e0       	ldi	r24, 0x00	; 0
     4b2:	07 c0       	rjmp	.+14     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
		char msg_gpvtg[5] = "GPVTG";
		char msg_gngga[5] = "GNGGA";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     4b4:	81 e0       	ldi	r24, 0x01	; 1
     4b6:	05 c0       	rjmp	.+10     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     4b8:	82 e0       	ldi	r24, 0x02	; 2
     4ba:	03 c0       	rjmp	.+6      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
		{
			return GPGGA;
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	01 c0       	rjmp	.+2      	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
		}
	}
	return 0; 
     4c0:	80 e0       	ldi	r24, 0x00	; 0
}
     4c2:	64 96       	adiw	r28, 0x14	; 20
     4c4:	0f b6       	in	r0, 0x3f	; 63
     4c6:	f8 94       	cli
     4c8:	de bf       	out	0x3e, r29	; 62
     4ca:	0f be       	out	0x3f, r0	; 63
     4cc:	cd bf       	out	0x3d, r28	; 61
     4ce:	df 91       	pop	r29
     4d0:	cf 91       	pop	r28
     4d2:	08 95       	ret

000004d4 <convert>:

void convert(struct DATA *GPS_Data)
{
     4d4:	cf 92       	push	r12
     4d6:	df 92       	push	r13
     4d8:	ef 92       	push	r14
     4da:	ff 92       	push	r15
     4dc:	cf 93       	push	r28
     4de:	df 93       	push	r29
     4e0:	ec 01       	movw	r28, r24
	GPS_Data->LAT_Float = GPS_Data->LAT_Degree + (GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0);
     4e2:	69 81       	ldd	r22, Y+1	; 0x01
     4e4:	70 e0       	ldi	r23, 0x00	; 0
     4e6:	80 e0       	ldi	r24, 0x00	; 0
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	0e 94 de 05 	call	0xbbc	; 0xbbc <__floatsisf>
     4ee:	20 e0       	ldi	r18, 0x00	; 0
     4f0:	30 e0       	ldi	r19, 0x00	; 0
     4f2:	40 e7       	ldi	r20, 0x70	; 112
     4f4:	52 e4       	ldi	r21, 0x42	; 66
     4f6:	0e 94 3b 05 	call	0xa76	; 0xa76 <__divsf3>
     4fa:	6b 01       	movw	r12, r22
     4fc:	7c 01       	movw	r14, r24
     4fe:	68 81       	ld	r22, Y
     500:	70 e0       	ldi	r23, 0x00	; 0
     502:	80 e0       	ldi	r24, 0x00	; 0
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	0e 94 de 05 	call	0xbbc	; 0xbbc <__floatsisf>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
     50e:	c7 01       	movw	r24, r14
     510:	b6 01       	movw	r22, r12
     512:	0e 94 cf 04 	call	0x99e	; 0x99e <__addsf3>
     516:	6b 01       	movw	r12, r22
     518:	7c 01       	movw	r14, r24
     51a:	6a 81       	ldd	r22, Y+2	; 0x02
     51c:	7b 81       	ldd	r23, Y+3	; 0x03
     51e:	8c 81       	ldd	r24, Y+4	; 0x04
     520:	9d 81       	ldd	r25, Y+5	; 0x05
     522:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__floatunsisf>
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	3b e1       	ldi	r19, 0x1B	; 27
     52a:	47 eb       	ldi	r20, 0xB7	; 183
     52c:	5a e4       	ldi	r21, 0x4A	; 74
     52e:	0e 94 3b 05 	call	0xa76	; 0xa76 <__divsf3>
     532:	9b 01       	movw	r18, r22
     534:	ac 01       	movw	r20, r24
     536:	c7 01       	movw	r24, r14
     538:	b6 01       	movw	r22, r12
     53a:	0e 94 cf 04 	call	0x99e	; 0x99e <__addsf3>
     53e:	6e 83       	std	Y+6, r22	; 0x06
     540:	7f 83       	std	Y+7, r23	; 0x07
     542:	88 87       	std	Y+8, r24	; 0x08
     544:	99 87       	std	Y+9, r25	; 0x09
	GPS_Data->LON_Float = GPS_Data->LON_Degree + (GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0);
     546:	6c 85       	ldd	r22, Y+12	; 0x0c
     548:	70 e0       	ldi	r23, 0x00	; 0
     54a:	80 e0       	ldi	r24, 0x00	; 0
     54c:	90 e0       	ldi	r25, 0x00	; 0
     54e:	0e 94 de 05 	call	0xbbc	; 0xbbc <__floatsisf>
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	40 e7       	ldi	r20, 0x70	; 112
     558:	52 e4       	ldi	r21, 0x42	; 66
     55a:	0e 94 3b 05 	call	0xa76	; 0xa76 <__divsf3>
     55e:	6b 01       	movw	r12, r22
     560:	7c 01       	movw	r14, r24
     562:	6b 85       	ldd	r22, Y+11	; 0x0b
     564:	70 e0       	ldi	r23, 0x00	; 0
     566:	80 e0       	ldi	r24, 0x00	; 0
     568:	90 e0       	ldi	r25, 0x00	; 0
     56a:	0e 94 de 05 	call	0xbbc	; 0xbbc <__floatsisf>
     56e:	9b 01       	movw	r18, r22
     570:	ac 01       	movw	r20, r24
     572:	c7 01       	movw	r24, r14
     574:	b6 01       	movw	r22, r12
     576:	0e 94 cf 04 	call	0x99e	; 0x99e <__addsf3>
     57a:	6b 01       	movw	r12, r22
     57c:	7c 01       	movw	r14, r24
     57e:	6d 85       	ldd	r22, Y+13	; 0x0d
     580:	7e 85       	ldd	r23, Y+14	; 0x0e
     582:	8f 85       	ldd	r24, Y+15	; 0x0f
     584:	98 89       	ldd	r25, Y+16	; 0x10
     586:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__floatunsisf>
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	3b e1       	ldi	r19, 0x1B	; 27
     58e:	47 eb       	ldi	r20, 0xB7	; 183
     590:	5a e4       	ldi	r21, 0x4A	; 74
     592:	0e 94 3b 05 	call	0xa76	; 0xa76 <__divsf3>
     596:	9b 01       	movw	r18, r22
     598:	ac 01       	movw	r20, r24
     59a:	c7 01       	movw	r24, r14
     59c:	b6 01       	movw	r22, r12
     59e:	0e 94 cf 04 	call	0x99e	; 0x99e <__addsf3>
     5a2:	69 8b       	std	Y+17, r22	; 0x11
     5a4:	7a 8b       	std	Y+18, r23	; 0x12
     5a6:	8b 8b       	std	Y+19, r24	; 0x13
     5a8:	9c 8b       	std	Y+20, r25	; 0x14
	GPS_Data->LON_FINAL = (GPS_Data->LON_Degree + (GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0))*1000000;
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	34 e2       	ldi	r19, 0x24	; 36
     5ae:	44 e7       	ldi	r20, 0x74	; 116
     5b0:	59 e4       	ldi	r21, 0x49	; 73
     5b2:	0e 94 6a 06 	call	0xcd4	; 0xcd4 <__mulsf3>
     5b6:	0e 94 ad 05 	call	0xb5a	; 0xb5a <__fixunssfsi>
     5ba:	6d 8b       	std	Y+21, r22	; 0x15
     5bc:	7e 8b       	std	Y+22, r23	; 0x16
     5be:	8f 8b       	std	Y+23, r24	; 0x17
     5c0:	98 8f       	std	Y+24, r25	; 0x18
}
     5c2:	df 91       	pop	r29
     5c4:	cf 91       	pop	r28
     5c6:	ff 90       	pop	r15
     5c8:	ef 90       	pop	r14
     5ca:	df 90       	pop	r13
     5cc:	cf 90       	pop	r12
     5ce:	08 95       	ret

000005d0 <GPS_Decode>:

int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
     5d0:	2f 92       	push	r2
     5d2:	3f 92       	push	r3
     5d4:	4f 92       	push	r4
     5d6:	5f 92       	push	r5
     5d8:	6f 92       	push	r6
     5da:	7f 92       	push	r7
     5dc:	8f 92       	push	r8
     5de:	9f 92       	push	r9
     5e0:	af 92       	push	r10
     5e2:	bf 92       	push	r11
     5e4:	cf 92       	push	r12
     5e6:	df 92       	push	r13
     5e8:	ef 92       	push	r14
     5ea:	ff 92       	push	r15
     5ec:	0f 93       	push	r16
     5ee:	1f 93       	push	r17
     5f0:	cf 93       	push	r28
     5f2:	df 93       	push	r29
     5f4:	00 d0       	rcall	.+0      	; 0x5f6 <GPS_Decode+0x26>
     5f6:	00 d0       	rcall	.+0      	; 0x5f8 <GPS_Decode+0x28>
     5f8:	00 d0       	rcall	.+0      	; 0x5fa <GPS_Decode+0x2a>
     5fa:	cd b7       	in	r28, 0x3d	; 61
     5fc:	de b7       	in	r29, 0x3e	; 62
     5fe:	8c 01       	movw	r16, r24
     600:	7b 01       	movw	r14, r22
	///////////////////Checksum////////////////////////
	if(checksum(msg))
     602:	0e 94 b3 01 	call	0x366	; 0x366 <checksum>
     606:	88 23       	and	r24, r24
     608:	09 f4       	brne	.+2      	; 0x60c <GPS_Decode+0x3c>
     60a:	5e c1       	rjmp	.+700    	; 0x8c8 <GPS_Decode+0x2f8>
	{
		uint8_t type = MessageType(msg);
     60c:	c8 01       	movw	r24, r16
     60e:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <MessageType>
     612:	89 83       	std	Y+1, r24	; 0x01
		init(GPS_Data);
     614:	c7 01       	movw	r24, r14
     616:	0e 94 93 01 	call	0x326	; 0x326 <init>
		
	switch(type)
     61a:	29 81       	ldd	r18, Y+1	; 0x01
     61c:	21 30       	cpi	r18, 0x01	; 1
     61e:	09 f0       	breq	.+2      	; 0x622 <GPS_Decode+0x52>
     620:	4d c1       	rjmp	.+666    	; 0x8bc <GPS_Decode+0x2ec>
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
     622:	d8 01       	movw	r26, r16
     624:	16 96       	adiw	r26, 0x06	; 6
     626:	8c 91       	ld	r24, X
     628:	8a 32       	cpi	r24, 0x2A	; 42
     62a:	09 f4       	brne	.+2      	; 0x62e <GPS_Decode+0x5e>
     62c:	47 c1       	rjmp	.+654    	; 0x8bc <GPS_Decode+0x2ec>
     62e:	0f 2e       	mov	r0, r31
     630:	f0 e1       	ldi	r31, 0x10	; 16
     632:	4f 2e       	mov	r4, r31
     634:	f7 e2       	ldi	r31, 0x27	; 39
     636:	5f 2e       	mov	r5, r31
     638:	61 2c       	mov	r6, r1
     63a:	71 2c       	mov	r7, r1
     63c:	f0 2d       	mov	r31, r0
     63e:	ba e0       	ldi	r27, 0x0A	; 10
     640:	bc 83       	std	Y+4, r27	; 0x04
     642:	e4 e6       	ldi	r30, 0x64	; 100
     644:	e9 83       	std	Y+1, r30	; 0x01
     646:	c1 2c       	mov	r12, r1
     648:	0f 2e       	mov	r0, r31
     64a:	f0 e1       	ldi	r31, 0x10	; 16
     64c:	8f 2e       	mov	r8, r31
     64e:	f7 e2       	ldi	r31, 0x27	; 39
     650:	9f 2e       	mov	r9, r31
     652:	a1 2c       	mov	r10, r1
     654:	b1 2c       	mov	r11, r1
     656:	f0 2d       	mov	r31, r0
     658:	fa e0       	ldi	r31, 0x0A	; 10
     65a:	fb 83       	std	Y+3, r31	; 0x03
     65c:	2a e0       	ldi	r18, 0x0A	; 10
     65e:	2a 83       	std	Y+2, r18	; 0x02
     660:	d1 2c       	mov	r13, r1
     662:	0f 2e       	mov	r0, r31
     664:	fa e0       	ldi	r31, 0x0A	; 10
     666:	3f 2e       	mov	r3, r31
     668:	f0 2d       	mov	r31, r0
     66a:	1e 82       	std	Y+6, r1	; 0x06
     66c:	96 e0       	ldi	r25, 0x06	; 6
									LonDegree /= 10;
								}
								if((LonCount>=3) && (LonCount<5))
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
									LonHour /= 10;
     66e:	0f 2e       	mov	r0, r31
     670:	fd ec       	ldi	r31, 0xCD	; 205
     672:	2f 2e       	mov	r2, r31
     674:	f0 2d       	mov	r31, r0
     676:	9d 83       	std	Y+5, r25	; 0x05
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
				{
					if(msg[i] == ',')
     678:	8c 32       	cpi	r24, 0x2C	; 44
     67a:	31 f4       	brne	.+12     	; 0x688 <GPS_Decode+0xb8>
					{
						CommaCounter++;
     67c:	be 81       	ldd	r27, Y+6	; 0x06
     67e:	bf 5f       	subi	r27, 0xFF	; 255
     680:	be 83       	std	Y+6, r27	; 0x06
						i++;
     682:	ed 81       	ldd	r30, Y+5	; 0x05
     684:	ef 5f       	subi	r30, 0xFF	; 255
     686:	ed 83       	std	Y+5, r30	; 0x05
					}
					
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
     688:	fe 81       	ldd	r31, Y+6	; 0x06
     68a:	f4 30       	cpi	r31, 0x04	; 4
     68c:	09 f4       	brne	.+2      	; 0x690 <GPS_Decode+0xc0>
     68e:	7c c0       	rjmp	.+248    	; 0x788 <GPS_Decode+0x1b8>
     690:	30 f4       	brcc	.+12     	; 0x69e <GPS_Decode+0xce>
     692:	f2 30       	cpi	r31, 0x02	; 2
     694:	71 f0       	breq	.+28     	; 0x6b2 <GPS_Decode+0xe2>
     696:	f3 30       	cpi	r31, 0x03	; 3
     698:	09 f4       	brne	.+2      	; 0x69c <GPS_Decode+0xcc>
     69a:	68 c0       	rjmp	.+208    	; 0x76c <GPS_Decode+0x19c>
     69c:	05 c1       	rjmp	.+522    	; 0x8a8 <GPS_Decode+0x2d8>
     69e:	2e 81       	ldd	r18, Y+6	; 0x06
     6a0:	26 30       	cpi	r18, 0x06	; 6
     6a2:	09 f4       	brne	.+2      	; 0x6a6 <GPS_Decode+0xd6>
     6a4:	dd c0       	rjmp	.+442    	; 0x860 <GPS_Decode+0x290>
     6a6:	08 f4       	brcc	.+2      	; 0x6aa <GPS_Decode+0xda>
     6a8:	ce c0       	rjmp	.+412    	; 0x846 <GPS_Decode+0x276>
     6aa:	2d 30       	cpi	r18, 0x0D	; 13
     6ac:	09 f4       	brne	.+2      	; 0x6b0 <GPS_Decode+0xe0>
     6ae:	e3 c0       	rjmp	.+454    	; 0x876 <GPS_Decode+0x2a6>
     6b0:	fb c0       	rjmp	.+502    	; 0x8a8 <GPS_Decode+0x2d8>
					{
						case 2:		//Latitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     6b2:	f8 01       	movw	r30, r16
     6b4:	8d 81       	ldd	r24, Y+5	; 0x05
     6b6:	e8 0f       	add	r30, r24
     6b8:	f1 1d       	adc	r31, r1
     6ba:	80 81       	ld	r24, Z
     6bc:	98 2f       	mov	r25, r24
     6be:	9d 7f       	andi	r25, 0xFD	; 253
     6c0:	9c 32       	cpi	r25, 0x2C	; 44
     6c2:	09 f4       	brne	.+2      	; 0x6c6 <GPS_Decode+0xf6>
     6c4:	f1 c0       	rjmp	.+482    	; 0x8a8 <GPS_Decode+0x2d8>
							{
								if(LatCount<2)
     6c6:	91 e0       	ldi	r25, 0x01	; 1
     6c8:	9d 15       	cp	r25, r13
     6ca:	88 f0       	brcs	.+34     	; 0x6ee <GPS_Decode+0x11e>
								{
									GPS_Data->LAT_Degree += (msg[i]-48) * LatDegree;
     6cc:	80 53       	subi	r24, 0x30	; 48
     6ce:	d7 01       	movw	r26, r14
     6d0:	9c 91       	ld	r25, X
     6d2:	ba 81       	ldd	r27, Y+2	; 0x02
     6d4:	8b 9f       	mul	r24, r27
     6d6:	90 0d       	add	r25, r0
     6d8:	11 24       	eor	r1, r1
     6da:	d7 01       	movw	r26, r14
     6dc:	9c 93       	st	X, r25
									LatDegree /= 10;
     6de:	ba 81       	ldd	r27, Y+2	; 0x02
     6e0:	b2 9d       	mul	r27, r2
     6e2:	81 2d       	mov	r24, r1
     6e4:	11 24       	eor	r1, r1
     6e6:	86 95       	lsr	r24
     6e8:	86 95       	lsr	r24
     6ea:	86 95       	lsr	r24
     6ec:	8a 83       	std	Y+2, r24	; 0x02
								}
								if((LatCount>=2) && (LatCount<4))
     6ee:	8e ef       	ldi	r24, 0xFE	; 254
     6f0:	8d 0d       	add	r24, r13
     6f2:	82 30       	cpi	r24, 0x02	; 2
     6f4:	a0 f4       	brcc	.+40     	; 0x71e <GPS_Decode+0x14e>
								{
									GPS_Data->LAT_Min += (msg[i]-48) * LatHour;
     6f6:	90 81       	ld	r25, Z
     6f8:	90 53       	subi	r25, 0x30	; 48
     6fa:	d7 01       	movw	r26, r14
     6fc:	11 96       	adiw	r26, 0x01	; 1
     6fe:	8c 91       	ld	r24, X
     700:	bb 81       	ldd	r27, Y+3	; 0x03
     702:	9b 9f       	mul	r25, r27
     704:	80 0d       	add	r24, r0
     706:	11 24       	eor	r1, r1
     708:	d7 01       	movw	r26, r14
     70a:	11 96       	adiw	r26, 0x01	; 1
     70c:	8c 93       	st	X, r24
									LatHour /= 10;
     70e:	bb 81       	ldd	r27, Y+3	; 0x03
     710:	b2 9d       	mul	r27, r2
     712:	81 2d       	mov	r24, r1
     714:	11 24       	eor	r1, r1
     716:	86 95       	lsr	r24
     718:	86 95       	lsr	r24
     71a:	86 95       	lsr	r24
     71c:	8b 83       	std	Y+3, r24	; 0x03
								}
								if((LatCount>=4))
     71e:	23 e0       	ldi	r18, 0x03	; 3
     720:	2d 15       	cp	r18, r13
     722:	18 f5       	brcc	.+70     	; 0x76a <GPS_Decode+0x19a>
								{
									GPS_Data->LAT += (msg[i]-48) * LatMin;
     724:	a0 81       	ld	r26, Z
     726:	b0 e0       	ldi	r27, 0x00	; 0
     728:	d0 97       	sbiw	r26, 0x30	; 48
     72a:	a5 01       	movw	r20, r10
     72c:	94 01       	movw	r18, r8
     72e:	0e 94 76 0a 	call	0x14ec	; 0x14ec <__mulshisi3>
     732:	d7 01       	movw	r26, r14
     734:	12 96       	adiw	r26, 0x02	; 2
     736:	2d 91       	ld	r18, X+
     738:	3d 91       	ld	r19, X+
     73a:	4d 91       	ld	r20, X+
     73c:	5c 91       	ld	r21, X
     73e:	15 97       	sbiw	r26, 0x05	; 5
     740:	dc 01       	movw	r26, r24
     742:	cb 01       	movw	r24, r22
     744:	82 0f       	add	r24, r18
     746:	93 1f       	adc	r25, r19
     748:	a4 1f       	adc	r26, r20
     74a:	b5 1f       	adc	r27, r21
     74c:	f7 01       	movw	r30, r14
     74e:	82 83       	std	Z+2, r24	; 0x02
     750:	93 83       	std	Z+3, r25	; 0x03
     752:	a4 83       	std	Z+4, r26	; 0x04
     754:	b5 83       	std	Z+5, r27	; 0x05
									LatMin /= 10;
     756:	c5 01       	movw	r24, r10
     758:	b4 01       	movw	r22, r8
     75a:	2a e0       	ldi	r18, 0x0A	; 10
     75c:	30 e0       	ldi	r19, 0x00	; 0
     75e:	40 e0       	ldi	r20, 0x00	; 0
     760:	50 e0       	ldi	r21, 0x00	; 0
     762:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <__udivmodsi4>
     766:	49 01       	movw	r8, r18
     768:	5a 01       	movw	r10, r20
								}
								LatCount++;
     76a:	d3 94       	inc	r13

						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
						{
							if(msg[i]>='A' && msg[i]<='Z')
     76c:	f8 01       	movw	r30, r16
     76e:	2d 81       	ldd	r18, Y+5	; 0x05
     770:	e2 0f       	add	r30, r18
     772:	f1 1d       	adc	r31, r1
     774:	80 81       	ld	r24, Z
     776:	9f eb       	ldi	r25, 0xBF	; 191
     778:	98 0f       	add	r25, r24
     77a:	9a 31       	cpi	r25, 0x1A	; 26
     77c:	08 f0       	brcs	.+2      	; 0x780 <GPS_Decode+0x1b0>
     77e:	94 c0       	rjmp	.+296    	; 0x8a8 <GPS_Decode+0x2d8>
							{
								GPS_Data->LATdir = msg[i];
     780:	d7 01       	movw	r26, r14
     782:	1a 96       	adiw	r26, 0x0a	; 10
     784:	8c 93       	st	X, r24
     786:	90 c0       	rjmp	.+288    	; 0x8a8 <GPS_Decode+0x2d8>
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     788:	f8 01       	movw	r30, r16
     78a:	bd 81       	ldd	r27, Y+5	; 0x05
     78c:	eb 0f       	add	r30, r27
     78e:	f1 1d       	adc	r31, r1
     790:	80 81       	ld	r24, Z
     792:	98 2f       	mov	r25, r24
     794:	9d 7f       	andi	r25, 0xFD	; 253
     796:	9c 32       	cpi	r25, 0x2C	; 44
     798:	09 f4       	brne	.+2      	; 0x79c <GPS_Decode+0x1cc>
     79a:	86 c0       	rjmp	.+268    	; 0x8a8 <GPS_Decode+0x2d8>
							{
								if(LonCount<3)
     79c:	22 e0       	ldi	r18, 0x02	; 2
     79e:	2c 15       	cp	r18, r12
     7a0:	98 f0       	brcs	.+38     	; 0x7c8 <GPS_Decode+0x1f8>
								{
									GPS_Data->LON_Degree += (msg[i]-48) * LonDegree;
     7a2:	80 53       	subi	r24, 0x30	; 48
     7a4:	d7 01       	movw	r26, r14
     7a6:	1b 96       	adiw	r26, 0x0b	; 11
     7a8:	9c 91       	ld	r25, X
     7aa:	b9 81       	ldd	r27, Y+1	; 0x01
     7ac:	8b 9f       	mul	r24, r27
     7ae:	90 0d       	add	r25, r0
     7b0:	11 24       	eor	r1, r1
     7b2:	d7 01       	movw	r26, r14
     7b4:	1b 96       	adiw	r26, 0x0b	; 11
     7b6:	9c 93       	st	X, r25
									LonDegree /= 10;
     7b8:	b9 81       	ldd	r27, Y+1	; 0x01
     7ba:	b2 9d       	mul	r27, r2
     7bc:	81 2d       	mov	r24, r1
     7be:	11 24       	eor	r1, r1
     7c0:	86 95       	lsr	r24
     7c2:	86 95       	lsr	r24
     7c4:	86 95       	lsr	r24
     7c6:	89 83       	std	Y+1, r24	; 0x01
								}
								if((LonCount>=3) && (LonCount<5))
     7c8:	8d ef       	ldi	r24, 0xFD	; 253
     7ca:	8c 0d       	add	r24, r12
     7cc:	82 30       	cpi	r24, 0x02	; 2
     7ce:	a0 f4       	brcc	.+40     	; 0x7f8 <GPS_Decode+0x228>
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
     7d0:	90 81       	ld	r25, Z
     7d2:	90 53       	subi	r25, 0x30	; 48
     7d4:	d7 01       	movw	r26, r14
     7d6:	1c 96       	adiw	r26, 0x0c	; 12
     7d8:	8c 91       	ld	r24, X
     7da:	bc 81       	ldd	r27, Y+4	; 0x04
     7dc:	9b 9f       	mul	r25, r27
     7de:	80 0d       	add	r24, r0
     7e0:	11 24       	eor	r1, r1
     7e2:	d7 01       	movw	r26, r14
     7e4:	1c 96       	adiw	r26, 0x0c	; 12
     7e6:	8c 93       	st	X, r24
									LonHour /= 10;
     7e8:	bc 81       	ldd	r27, Y+4	; 0x04
     7ea:	b2 9d       	mul	r27, r2
     7ec:	81 2d       	mov	r24, r1
     7ee:	11 24       	eor	r1, r1
     7f0:	86 95       	lsr	r24
     7f2:	86 95       	lsr	r24
     7f4:	86 95       	lsr	r24
     7f6:	8c 83       	std	Y+4, r24	; 0x04
								}
								if((LonCount>=5))
     7f8:	24 e0       	ldi	r18, 0x04	; 4
     7fa:	2c 15       	cp	r18, r12
     7fc:	18 f5       	brcc	.+70     	; 0x844 <GPS_Decode+0x274>
								{
									GPS_Data->LON += (msg[i]-48) * LonMin;
     7fe:	a0 81       	ld	r26, Z
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	d0 97       	sbiw	r26, 0x30	; 48
     804:	a3 01       	movw	r20, r6
     806:	92 01       	movw	r18, r4
     808:	0e 94 76 0a 	call	0x14ec	; 0x14ec <__mulshisi3>
     80c:	d7 01       	movw	r26, r14
     80e:	1d 96       	adiw	r26, 0x0d	; 13
     810:	2d 91       	ld	r18, X+
     812:	3d 91       	ld	r19, X+
     814:	4d 91       	ld	r20, X+
     816:	5c 91       	ld	r21, X
     818:	50 97       	sbiw	r26, 0x10	; 16
     81a:	dc 01       	movw	r26, r24
     81c:	cb 01       	movw	r24, r22
     81e:	82 0f       	add	r24, r18
     820:	93 1f       	adc	r25, r19
     822:	a4 1f       	adc	r26, r20
     824:	b5 1f       	adc	r27, r21
     826:	f7 01       	movw	r30, r14
     828:	85 87       	std	Z+13, r24	; 0x0d
     82a:	96 87       	std	Z+14, r25	; 0x0e
     82c:	a7 87       	std	Z+15, r26	; 0x0f
     82e:	b0 8b       	std	Z+16, r27	; 0x10
									LonMin /= 10;
     830:	c3 01       	movw	r24, r6
     832:	b2 01       	movw	r22, r4
     834:	2a e0       	ldi	r18, 0x0A	; 10
     836:	30 e0       	ldi	r19, 0x00	; 0
     838:	40 e0       	ldi	r20, 0x00	; 0
     83a:	50 e0       	ldi	r21, 0x00	; 0
     83c:	0e 94 54 0a 	call	0x14a8	; 0x14a8 <__udivmodsi4>
     840:	29 01       	movw	r4, r18
     842:	3a 01       	movw	r6, r20
								}
								LonCount++;	
     844:	c3 94       	inc	r12
							}
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
						{
							if(msg[i]>='A' && msg[i]<='Z')
     846:	f8 01       	movw	r30, r16
     848:	2d 81       	ldd	r18, Y+5	; 0x05
     84a:	e2 0f       	add	r30, r18
     84c:	f1 1d       	adc	r31, r1
     84e:	80 81       	ld	r24, Z
     850:	9f eb       	ldi	r25, 0xBF	; 191
     852:	98 0f       	add	r25, r24
     854:	9a 31       	cpi	r25, 0x1A	; 26
     856:	40 f5       	brcc	.+80     	; 0x8a8 <GPS_Decode+0x2d8>
							{
								GPS_Data->LONdir = msg[i];
     858:	d7 01       	movw	r26, r14
     85a:	59 96       	adiw	r26, 0x19	; 25
     85c:	8c 93       	st	X, r24
     85e:	24 c0       	rjmp	.+72     	; 0x8a8 <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
     860:	f8 01       	movw	r30, r16
     862:	bd 81       	ldd	r27, Y+5	; 0x05
     864:	eb 0f       	add	r30, r27
     866:	f1 1d       	adc	r31, r1
     868:	80 81       	ld	r24, Z
     86a:	80 53       	subi	r24, 0x30	; 48
     86c:	86 30       	cpi	r24, 0x06	; 6
     86e:	e0 f4       	brcc	.+56     	; 0x8a8 <GPS_Decode+0x2d8>
							{
								GPS_Data->quality = msg[i] - 48;
     870:	f7 01       	movw	r30, r14
     872:	82 8f       	std	Z+26, r24	; 0x1a
     874:	19 c0       	rjmp	.+50     	; 0x8a8 <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 13: //AGE
						{
							if((msg[i] != '.') && (msg[i] != ','))
     876:	f8 01       	movw	r30, r16
     878:	2d 81       	ldd	r18, Y+5	; 0x05
     87a:	e2 0f       	add	r30, r18
     87c:	f1 1d       	adc	r31, r1
     87e:	80 81       	ld	r24, Z
     880:	98 2f       	mov	r25, r24
     882:	9d 7f       	andi	r25, 0xFD	; 253
     884:	9c 32       	cpi	r25, 0x2C	; 44
     886:	81 f0       	breq	.+32     	; 0x8a8 <GPS_Decode+0x2d8>
							{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
     888:	80 53       	subi	r24, 0x30	; 48
     88a:	d7 01       	movw	r26, r14
     88c:	5b 96       	adiw	r26, 0x1b	; 27
     88e:	9c 91       	ld	r25, X
     890:	5b 97       	sbiw	r26, 0x1b	; 27
     892:	83 9d       	mul	r24, r3
     894:	90 0d       	add	r25, r0
     896:	11 24       	eor	r1, r1
     898:	5b 96       	adiw	r26, 0x1b	; 27
     89a:	9c 93       	st	X, r25
							age /= 10;
     89c:	32 9c       	mul	r3, r2
     89e:	31 2c       	mov	r3, r1
     8a0:	11 24       	eor	r1, r1
     8a2:	36 94       	lsr	r3
     8a4:	36 94       	lsr	r3
     8a6:	36 94       	lsr	r3
							}
							break;
						}
					}
					///////////COMMA SWITCH END!////////////////////////
					i++;
     8a8:	bd 81       	ldd	r27, Y+5	; 0x05
     8aa:	bf 5f       	subi	r27, 0xFF	; 255
     8ac:	bd 83       	std	Y+5, r27	; 0x05
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
     8ae:	f8 01       	movw	r30, r16
     8b0:	eb 0f       	add	r30, r27
     8b2:	f1 1d       	adc	r31, r1
     8b4:	80 81       	ld	r24, Z
     8b6:	8a 32       	cpi	r24, 0x2A	; 42
     8b8:	09 f0       	breq	.+2      	; 0x8bc <GPS_Decode+0x2ec>
     8ba:	de ce       	rjmp	.-580    	; 0x678 <GPS_Decode+0xa8>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		convert(GPS_Data);
     8bc:	c7 01       	movw	r24, r14
     8be:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <convert>
		return 1;
     8c2:	81 e0       	ldi	r24, 0x01	; 1
     8c4:	90 e0       	ldi	r25, 0x00	; 0
     8c6:	02 c0       	rjmp	.+4      	; 0x8cc <GPS_Decode+0x2fc>
	}
	else
	{
		return 0;
     8c8:	80 e0       	ldi	r24, 0x00	; 0
     8ca:	90 e0       	ldi	r25, 0x00	; 0
	}
     8cc:	26 96       	adiw	r28, 0x06	; 6
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	f8 94       	cli
     8d2:	de bf       	out	0x3e, r29	; 62
     8d4:	0f be       	out	0x3f, r0	; 63
     8d6:	cd bf       	out	0x3d, r28	; 61
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	1f 91       	pop	r17
     8de:	0f 91       	pop	r16
     8e0:	ff 90       	pop	r15
     8e2:	ef 90       	pop	r14
     8e4:	df 90       	pop	r13
     8e6:	cf 90       	pop	r12
     8e8:	bf 90       	pop	r11
     8ea:	af 90       	pop	r10
     8ec:	9f 90       	pop	r9
     8ee:	8f 90       	pop	r8
     8f0:	7f 90       	pop	r7
     8f2:	6f 90       	pop	r6
     8f4:	5f 90       	pop	r5
     8f6:	4f 90       	pop	r4
     8f8:	3f 90       	pop	r3
     8fa:	2f 90       	pop	r2
     8fc:	08 95       	ret

000008fe <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     8fe:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     900:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     902:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     904:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
     906:	0e 94 aa 04 	call	0x954	; 0x954 <USART_0_init>
     90a:	08 95       	ret

0000090c <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR = (1 << PRSPI) | (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI) | (1 << PRUSART0) | (1 << PRADC);
     90c:	8f ee       	ldi	r24, 0xEF	; 239
     90e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     912:	84 b1       	in	r24, 0x04	; 4
     914:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     916:	85 b1       	in	r24, 0x05	; 5
     918:	9f ef       	ldi	r25, 0xFF	; 255
     91a:	95 b9       	out	0x05, r25	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     91c:	87 b1       	in	r24, 0x07	; 7
     91e:	80 78       	andi	r24, 0x80	; 128
     920:	87 b9       	out	0x07, r24	; 7

		PORTC |= mask;
     922:	88 b1       	in	r24, 0x08	; 8
     924:	8f 67       	ori	r24, 0x7F	; 127
     926:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     928:	8a b1       	in	r24, 0x0a	; 10
     92a:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     92c:	8b b1       	in	r24, 0x0b	; 11
     92e:	9b b9       	out	0x0b, r25	; 11
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     930:	40 e0       	ldi	r20, 0x00	; 0
     932:	60 e8       	ldi	r22, 0x80	; 128
     934:	81 e6       	ldi	r24, 0x61	; 97
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	0e 94 a3 04 	call	0x946	; 0x946 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     93c:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     93e:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	USART_0_initialization();
     940:	0e 94 7f 04 	call	0x8fe	; 0x8fe <USART_0_initialization>
     944:	08 95       	ret

00000946 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     946:	2f b7       	in	r18, 0x3f	; 63
	cli
     948:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     94a:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     94c:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     94e:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     950:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     952:	08 95       	ret

00000954 <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
     954:	e4 e6       	ldi	r30, 0x64	; 100
     956:	f0 e0       	ldi	r31, 0x00	; 0
     958:	80 81       	ld	r24, Z
     95a:	8d 7f       	andi	r24, 0xFD	; 253
     95c:	80 83       	st	Z, r24
     95e:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     962:	83 e3       	ldi	r24, 0x33	; 51
     964:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     968:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     96c:	88 e9       	ldi	r24, 0x98	; 152
     96e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     972:	85 e5       	ldi	r24, 0x55	; 85
     974:	91 e0       	ldi	r25, 0x01	; 1
     976:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <__data_end+0x3>
     97a:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end+0x2>
     97e:	80 e0       	ldi	r24, 0x00	; 0
     980:	08 95       	ret

00000982 <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
     982:	e0 ec       	ldi	r30, 0xC0	; 192
     984:	f0 e0       	ldi	r31, 0x00	; 0
     986:	90 81       	ld	r25, Z
     988:	95 ff       	sbrs	r25, 5
     98a:	fd cf       	rjmp	.-6      	; 0x986 <USART_0_write+0x4>
		;
	UDR0 = data;
     98c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     990:	08 95       	ret

00000992 <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
     992:	0e 94 c1 04 	call	0x982	; 0x982 <USART_0_write>
	return 0;
}
     996:	80 e0       	ldi	r24, 0x00	; 0
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	08 95       	ret

0000099c <__subsf3>:
     99c:	50 58       	subi	r21, 0x80	; 128

0000099e <__addsf3>:
     99e:	bb 27       	eor	r27, r27
     9a0:	aa 27       	eor	r26, r26
     9a2:	0e 94 e6 04 	call	0x9cc	; 0x9cc <__addsf3x>
     9a6:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_round>
     9aa:	0e 94 22 06 	call	0xc44	; 0xc44 <__fp_pscA>
     9ae:	38 f0       	brcs	.+14     	; 0x9be <__addsf3+0x20>
     9b0:	0e 94 29 06 	call	0xc52	; 0xc52 <__fp_pscB>
     9b4:	20 f0       	brcs	.+8      	; 0x9be <__addsf3+0x20>
     9b6:	39 f4       	brne	.+14     	; 0x9c6 <__addsf3+0x28>
     9b8:	9f 3f       	cpi	r25, 0xFF	; 255
     9ba:	19 f4       	brne	.+6      	; 0x9c2 <__addsf3+0x24>
     9bc:	26 f4       	brtc	.+8      	; 0x9c6 <__addsf3+0x28>
     9be:	0c 94 1f 06 	jmp	0xc3e	; 0xc3e <__fp_nan>
     9c2:	0e f4       	brtc	.+2      	; 0x9c6 <__addsf3+0x28>
     9c4:	e0 95       	com	r30
     9c6:	e7 fb       	bst	r30, 7
     9c8:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_inf>

000009cc <__addsf3x>:
     9cc:	e9 2f       	mov	r30, r25
     9ce:	0e 94 41 06 	call	0xc82	; 0xc82 <__fp_split3>
     9d2:	58 f3       	brcs	.-42     	; 0x9aa <__addsf3+0xc>
     9d4:	ba 17       	cp	r27, r26
     9d6:	62 07       	cpc	r22, r18
     9d8:	73 07       	cpc	r23, r19
     9da:	84 07       	cpc	r24, r20
     9dc:	95 07       	cpc	r25, r21
     9de:	20 f0       	brcs	.+8      	; 0x9e8 <__addsf3x+0x1c>
     9e0:	79 f4       	brne	.+30     	; 0xa00 <__addsf3x+0x34>
     9e2:	a6 f5       	brtc	.+104    	; 0xa4c <__addsf3x+0x80>
     9e4:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_zero>
     9e8:	0e f4       	brtc	.+2      	; 0x9ec <__addsf3x+0x20>
     9ea:	e0 95       	com	r30
     9ec:	0b 2e       	mov	r0, r27
     9ee:	ba 2f       	mov	r27, r26
     9f0:	a0 2d       	mov	r26, r0
     9f2:	0b 01       	movw	r0, r22
     9f4:	b9 01       	movw	r22, r18
     9f6:	90 01       	movw	r18, r0
     9f8:	0c 01       	movw	r0, r24
     9fa:	ca 01       	movw	r24, r20
     9fc:	a0 01       	movw	r20, r0
     9fe:	11 24       	eor	r1, r1
     a00:	ff 27       	eor	r31, r31
     a02:	59 1b       	sub	r21, r25
     a04:	99 f0       	breq	.+38     	; 0xa2c <__addsf3x+0x60>
     a06:	59 3f       	cpi	r21, 0xF9	; 249
     a08:	50 f4       	brcc	.+20     	; 0xa1e <__addsf3x+0x52>
     a0a:	50 3e       	cpi	r21, 0xE0	; 224
     a0c:	68 f1       	brcs	.+90     	; 0xa68 <__addsf3x+0x9c>
     a0e:	1a 16       	cp	r1, r26
     a10:	f0 40       	sbci	r31, 0x00	; 0
     a12:	a2 2f       	mov	r26, r18
     a14:	23 2f       	mov	r18, r19
     a16:	34 2f       	mov	r19, r20
     a18:	44 27       	eor	r20, r20
     a1a:	58 5f       	subi	r21, 0xF8	; 248
     a1c:	f3 cf       	rjmp	.-26     	; 0xa04 <__addsf3x+0x38>
     a1e:	46 95       	lsr	r20
     a20:	37 95       	ror	r19
     a22:	27 95       	ror	r18
     a24:	a7 95       	ror	r26
     a26:	f0 40       	sbci	r31, 0x00	; 0
     a28:	53 95       	inc	r21
     a2a:	c9 f7       	brne	.-14     	; 0xa1e <__addsf3x+0x52>
     a2c:	7e f4       	brtc	.+30     	; 0xa4c <__addsf3x+0x80>
     a2e:	1f 16       	cp	r1, r31
     a30:	ba 0b       	sbc	r27, r26
     a32:	62 0b       	sbc	r22, r18
     a34:	73 0b       	sbc	r23, r19
     a36:	84 0b       	sbc	r24, r20
     a38:	ba f0       	brmi	.+46     	; 0xa68 <__addsf3x+0x9c>
     a3a:	91 50       	subi	r25, 0x01	; 1
     a3c:	a1 f0       	breq	.+40     	; 0xa66 <__addsf3x+0x9a>
     a3e:	ff 0f       	add	r31, r31
     a40:	bb 1f       	adc	r27, r27
     a42:	66 1f       	adc	r22, r22
     a44:	77 1f       	adc	r23, r23
     a46:	88 1f       	adc	r24, r24
     a48:	c2 f7       	brpl	.-16     	; 0xa3a <__addsf3x+0x6e>
     a4a:	0e c0       	rjmp	.+28     	; 0xa68 <__addsf3x+0x9c>
     a4c:	ba 0f       	add	r27, r26
     a4e:	62 1f       	adc	r22, r18
     a50:	73 1f       	adc	r23, r19
     a52:	84 1f       	adc	r24, r20
     a54:	48 f4       	brcc	.+18     	; 0xa68 <__addsf3x+0x9c>
     a56:	87 95       	ror	r24
     a58:	77 95       	ror	r23
     a5a:	67 95       	ror	r22
     a5c:	b7 95       	ror	r27
     a5e:	f7 95       	ror	r31
     a60:	9e 3f       	cpi	r25, 0xFE	; 254
     a62:	08 f0       	brcs	.+2      	; 0xa66 <__addsf3x+0x9a>
     a64:	b0 cf       	rjmp	.-160    	; 0x9c6 <__addsf3+0x28>
     a66:	93 95       	inc	r25
     a68:	88 0f       	add	r24, r24
     a6a:	08 f0       	brcs	.+2      	; 0xa6e <__addsf3x+0xa2>
     a6c:	99 27       	eor	r25, r25
     a6e:	ee 0f       	add	r30, r30
     a70:	97 95       	ror	r25
     a72:	87 95       	ror	r24
     a74:	08 95       	ret

00000a76 <__divsf3>:
     a76:	0e 94 4f 05 	call	0xa9e	; 0xa9e <__divsf3x>
     a7a:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_round>
     a7e:	0e 94 29 06 	call	0xc52	; 0xc52 <__fp_pscB>
     a82:	58 f0       	brcs	.+22     	; 0xa9a <__divsf3+0x24>
     a84:	0e 94 22 06 	call	0xc44	; 0xc44 <__fp_pscA>
     a88:	40 f0       	brcs	.+16     	; 0xa9a <__divsf3+0x24>
     a8a:	29 f4       	brne	.+10     	; 0xa96 <__divsf3+0x20>
     a8c:	5f 3f       	cpi	r21, 0xFF	; 255
     a8e:	29 f0       	breq	.+10     	; 0xa9a <__divsf3+0x24>
     a90:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_inf>
     a94:	51 11       	cpse	r21, r1
     a96:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_szero>
     a9a:	0c 94 1f 06 	jmp	0xc3e	; 0xc3e <__fp_nan>

00000a9e <__divsf3x>:
     a9e:	0e 94 41 06 	call	0xc82	; 0xc82 <__fp_split3>
     aa2:	68 f3       	brcs	.-38     	; 0xa7e <__divsf3+0x8>

00000aa4 <__divsf3_pse>:
     aa4:	99 23       	and	r25, r25
     aa6:	b1 f3       	breq	.-20     	; 0xa94 <__divsf3+0x1e>
     aa8:	55 23       	and	r21, r21
     aaa:	91 f3       	breq	.-28     	; 0xa90 <__divsf3+0x1a>
     aac:	95 1b       	sub	r25, r21
     aae:	55 0b       	sbc	r21, r21
     ab0:	bb 27       	eor	r27, r27
     ab2:	aa 27       	eor	r26, r26
     ab4:	62 17       	cp	r22, r18
     ab6:	73 07       	cpc	r23, r19
     ab8:	84 07       	cpc	r24, r20
     aba:	38 f0       	brcs	.+14     	; 0xaca <__divsf3_pse+0x26>
     abc:	9f 5f       	subi	r25, 0xFF	; 255
     abe:	5f 4f       	sbci	r21, 0xFF	; 255
     ac0:	22 0f       	add	r18, r18
     ac2:	33 1f       	adc	r19, r19
     ac4:	44 1f       	adc	r20, r20
     ac6:	aa 1f       	adc	r26, r26
     ac8:	a9 f3       	breq	.-22     	; 0xab4 <__divsf3_pse+0x10>
     aca:	35 d0       	rcall	.+106    	; 0xb36 <__divsf3_pse+0x92>
     acc:	0e 2e       	mov	r0, r30
     ace:	3a f0       	brmi	.+14     	; 0xade <__divsf3_pse+0x3a>
     ad0:	e0 e8       	ldi	r30, 0x80	; 128
     ad2:	32 d0       	rcall	.+100    	; 0xb38 <__divsf3_pse+0x94>
     ad4:	91 50       	subi	r25, 0x01	; 1
     ad6:	50 40       	sbci	r21, 0x00	; 0
     ad8:	e6 95       	lsr	r30
     ada:	00 1c       	adc	r0, r0
     adc:	ca f7       	brpl	.-14     	; 0xad0 <__divsf3_pse+0x2c>
     ade:	2b d0       	rcall	.+86     	; 0xb36 <__divsf3_pse+0x92>
     ae0:	fe 2f       	mov	r31, r30
     ae2:	29 d0       	rcall	.+82     	; 0xb36 <__divsf3_pse+0x92>
     ae4:	66 0f       	add	r22, r22
     ae6:	77 1f       	adc	r23, r23
     ae8:	88 1f       	adc	r24, r24
     aea:	bb 1f       	adc	r27, r27
     aec:	26 17       	cp	r18, r22
     aee:	37 07       	cpc	r19, r23
     af0:	48 07       	cpc	r20, r24
     af2:	ab 07       	cpc	r26, r27
     af4:	b0 e8       	ldi	r27, 0x80	; 128
     af6:	09 f0       	breq	.+2      	; 0xafa <__divsf3_pse+0x56>
     af8:	bb 0b       	sbc	r27, r27
     afa:	80 2d       	mov	r24, r0
     afc:	bf 01       	movw	r22, r30
     afe:	ff 27       	eor	r31, r31
     b00:	93 58       	subi	r25, 0x83	; 131
     b02:	5f 4f       	sbci	r21, 0xFF	; 255
     b04:	3a f0       	brmi	.+14     	; 0xb14 <__divsf3_pse+0x70>
     b06:	9e 3f       	cpi	r25, 0xFE	; 254
     b08:	51 05       	cpc	r21, r1
     b0a:	78 f0       	brcs	.+30     	; 0xb2a <__divsf3_pse+0x86>
     b0c:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_inf>
     b10:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_szero>
     b14:	5f 3f       	cpi	r21, 0xFF	; 255
     b16:	e4 f3       	brlt	.-8      	; 0xb10 <__divsf3_pse+0x6c>
     b18:	98 3e       	cpi	r25, 0xE8	; 232
     b1a:	d4 f3       	brlt	.-12     	; 0xb10 <__divsf3_pse+0x6c>
     b1c:	86 95       	lsr	r24
     b1e:	77 95       	ror	r23
     b20:	67 95       	ror	r22
     b22:	b7 95       	ror	r27
     b24:	f7 95       	ror	r31
     b26:	9f 5f       	subi	r25, 0xFF	; 255
     b28:	c9 f7       	brne	.-14     	; 0xb1c <__divsf3_pse+0x78>
     b2a:	88 0f       	add	r24, r24
     b2c:	91 1d       	adc	r25, r1
     b2e:	96 95       	lsr	r25
     b30:	87 95       	ror	r24
     b32:	97 f9       	bld	r25, 7
     b34:	08 95       	ret
     b36:	e1 e0       	ldi	r30, 0x01	; 1
     b38:	66 0f       	add	r22, r22
     b3a:	77 1f       	adc	r23, r23
     b3c:	88 1f       	adc	r24, r24
     b3e:	bb 1f       	adc	r27, r27
     b40:	62 17       	cp	r22, r18
     b42:	73 07       	cpc	r23, r19
     b44:	84 07       	cpc	r24, r20
     b46:	ba 07       	cpc	r27, r26
     b48:	20 f0       	brcs	.+8      	; 0xb52 <__divsf3_pse+0xae>
     b4a:	62 1b       	sub	r22, r18
     b4c:	73 0b       	sbc	r23, r19
     b4e:	84 0b       	sbc	r24, r20
     b50:	ba 0b       	sbc	r27, r26
     b52:	ee 1f       	adc	r30, r30
     b54:	88 f7       	brcc	.-30     	; 0xb38 <__divsf3_pse+0x94>
     b56:	e0 95       	com	r30
     b58:	08 95       	ret

00000b5a <__fixunssfsi>:
     b5a:	0e 94 49 06 	call	0xc92	; 0xc92 <__fp_splitA>
     b5e:	88 f0       	brcs	.+34     	; 0xb82 <__fixunssfsi+0x28>
     b60:	9f 57       	subi	r25, 0x7F	; 127
     b62:	98 f0       	brcs	.+38     	; 0xb8a <__fixunssfsi+0x30>
     b64:	b9 2f       	mov	r27, r25
     b66:	99 27       	eor	r25, r25
     b68:	b7 51       	subi	r27, 0x17	; 23
     b6a:	b0 f0       	brcs	.+44     	; 0xb98 <__fixunssfsi+0x3e>
     b6c:	e1 f0       	breq	.+56     	; 0xba6 <__fixunssfsi+0x4c>
     b6e:	66 0f       	add	r22, r22
     b70:	77 1f       	adc	r23, r23
     b72:	88 1f       	adc	r24, r24
     b74:	99 1f       	adc	r25, r25
     b76:	1a f0       	brmi	.+6      	; 0xb7e <__fixunssfsi+0x24>
     b78:	ba 95       	dec	r27
     b7a:	c9 f7       	brne	.-14     	; 0xb6e <__fixunssfsi+0x14>
     b7c:	14 c0       	rjmp	.+40     	; 0xba6 <__fixunssfsi+0x4c>
     b7e:	b1 30       	cpi	r27, 0x01	; 1
     b80:	91 f0       	breq	.+36     	; 0xba6 <__fixunssfsi+0x4c>
     b82:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_zero>
     b86:	b1 e0       	ldi	r27, 0x01	; 1
     b88:	08 95       	ret
     b8a:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_zero>
     b8e:	67 2f       	mov	r22, r23
     b90:	78 2f       	mov	r23, r24
     b92:	88 27       	eor	r24, r24
     b94:	b8 5f       	subi	r27, 0xF8	; 248
     b96:	39 f0       	breq	.+14     	; 0xba6 <__fixunssfsi+0x4c>
     b98:	b9 3f       	cpi	r27, 0xF9	; 249
     b9a:	cc f3       	brlt	.-14     	; 0xb8e <__fixunssfsi+0x34>
     b9c:	86 95       	lsr	r24
     b9e:	77 95       	ror	r23
     ba0:	67 95       	ror	r22
     ba2:	b3 95       	inc	r27
     ba4:	d9 f7       	brne	.-10     	; 0xb9c <__fixunssfsi+0x42>
     ba6:	3e f4       	brtc	.+14     	; 0xbb6 <__fixunssfsi+0x5c>
     ba8:	90 95       	com	r25
     baa:	80 95       	com	r24
     bac:	70 95       	com	r23
     bae:	61 95       	neg	r22
     bb0:	7f 4f       	sbci	r23, 0xFF	; 255
     bb2:	8f 4f       	sbci	r24, 0xFF	; 255
     bb4:	9f 4f       	sbci	r25, 0xFF	; 255
     bb6:	08 95       	ret

00000bb8 <__floatunsisf>:
     bb8:	e8 94       	clt
     bba:	09 c0       	rjmp	.+18     	; 0xbce <__floatsisf+0x12>

00000bbc <__floatsisf>:
     bbc:	97 fb       	bst	r25, 7
     bbe:	3e f4       	brtc	.+14     	; 0xbce <__floatsisf+0x12>
     bc0:	90 95       	com	r25
     bc2:	80 95       	com	r24
     bc4:	70 95       	com	r23
     bc6:	61 95       	neg	r22
     bc8:	7f 4f       	sbci	r23, 0xFF	; 255
     bca:	8f 4f       	sbci	r24, 0xFF	; 255
     bcc:	9f 4f       	sbci	r25, 0xFF	; 255
     bce:	99 23       	and	r25, r25
     bd0:	a9 f0       	breq	.+42     	; 0xbfc <__floatsisf+0x40>
     bd2:	f9 2f       	mov	r31, r25
     bd4:	96 e9       	ldi	r25, 0x96	; 150
     bd6:	bb 27       	eor	r27, r27
     bd8:	93 95       	inc	r25
     bda:	f6 95       	lsr	r31
     bdc:	87 95       	ror	r24
     bde:	77 95       	ror	r23
     be0:	67 95       	ror	r22
     be2:	b7 95       	ror	r27
     be4:	f1 11       	cpse	r31, r1
     be6:	f8 cf       	rjmp	.-16     	; 0xbd8 <__floatsisf+0x1c>
     be8:	fa f4       	brpl	.+62     	; 0xc28 <__floatsisf+0x6c>
     bea:	bb 0f       	add	r27, r27
     bec:	11 f4       	brne	.+4      	; 0xbf2 <__floatsisf+0x36>
     bee:	60 ff       	sbrs	r22, 0
     bf0:	1b c0       	rjmp	.+54     	; 0xc28 <__floatsisf+0x6c>
     bf2:	6f 5f       	subi	r22, 0xFF	; 255
     bf4:	7f 4f       	sbci	r23, 0xFF	; 255
     bf6:	8f 4f       	sbci	r24, 0xFF	; 255
     bf8:	9f 4f       	sbci	r25, 0xFF	; 255
     bfa:	16 c0       	rjmp	.+44     	; 0xc28 <__floatsisf+0x6c>
     bfc:	88 23       	and	r24, r24
     bfe:	11 f0       	breq	.+4      	; 0xc04 <__floatsisf+0x48>
     c00:	96 e9       	ldi	r25, 0x96	; 150
     c02:	11 c0       	rjmp	.+34     	; 0xc26 <__floatsisf+0x6a>
     c04:	77 23       	and	r23, r23
     c06:	21 f0       	breq	.+8      	; 0xc10 <__floatsisf+0x54>
     c08:	9e e8       	ldi	r25, 0x8E	; 142
     c0a:	87 2f       	mov	r24, r23
     c0c:	76 2f       	mov	r23, r22
     c0e:	05 c0       	rjmp	.+10     	; 0xc1a <__floatsisf+0x5e>
     c10:	66 23       	and	r22, r22
     c12:	71 f0       	breq	.+28     	; 0xc30 <__floatsisf+0x74>
     c14:	96 e8       	ldi	r25, 0x86	; 134
     c16:	86 2f       	mov	r24, r22
     c18:	70 e0       	ldi	r23, 0x00	; 0
     c1a:	60 e0       	ldi	r22, 0x00	; 0
     c1c:	2a f0       	brmi	.+10     	; 0xc28 <__floatsisf+0x6c>
     c1e:	9a 95       	dec	r25
     c20:	66 0f       	add	r22, r22
     c22:	77 1f       	adc	r23, r23
     c24:	88 1f       	adc	r24, r24
     c26:	da f7       	brpl	.-10     	; 0xc1e <__floatsisf+0x62>
     c28:	88 0f       	add	r24, r24
     c2a:	96 95       	lsr	r25
     c2c:	87 95       	ror	r24
     c2e:	97 f9       	bld	r25, 7
     c30:	08 95       	ret

00000c32 <__fp_inf>:
     c32:	97 f9       	bld	r25, 7
     c34:	9f 67       	ori	r25, 0x7F	; 127
     c36:	80 e8       	ldi	r24, 0x80	; 128
     c38:	70 e0       	ldi	r23, 0x00	; 0
     c3a:	60 e0       	ldi	r22, 0x00	; 0
     c3c:	08 95       	ret

00000c3e <__fp_nan>:
     c3e:	9f ef       	ldi	r25, 0xFF	; 255
     c40:	80 ec       	ldi	r24, 0xC0	; 192
     c42:	08 95       	ret

00000c44 <__fp_pscA>:
     c44:	00 24       	eor	r0, r0
     c46:	0a 94       	dec	r0
     c48:	16 16       	cp	r1, r22
     c4a:	17 06       	cpc	r1, r23
     c4c:	18 06       	cpc	r1, r24
     c4e:	09 06       	cpc	r0, r25
     c50:	08 95       	ret

00000c52 <__fp_pscB>:
     c52:	00 24       	eor	r0, r0
     c54:	0a 94       	dec	r0
     c56:	12 16       	cp	r1, r18
     c58:	13 06       	cpc	r1, r19
     c5a:	14 06       	cpc	r1, r20
     c5c:	05 06       	cpc	r0, r21
     c5e:	08 95       	ret

00000c60 <__fp_round>:
     c60:	09 2e       	mov	r0, r25
     c62:	03 94       	inc	r0
     c64:	00 0c       	add	r0, r0
     c66:	11 f4       	brne	.+4      	; 0xc6c <__fp_round+0xc>
     c68:	88 23       	and	r24, r24
     c6a:	52 f0       	brmi	.+20     	; 0xc80 <__fp_round+0x20>
     c6c:	bb 0f       	add	r27, r27
     c6e:	40 f4       	brcc	.+16     	; 0xc80 <__fp_round+0x20>
     c70:	bf 2b       	or	r27, r31
     c72:	11 f4       	brne	.+4      	; 0xc78 <__fp_round+0x18>
     c74:	60 ff       	sbrs	r22, 0
     c76:	04 c0       	rjmp	.+8      	; 0xc80 <__fp_round+0x20>
     c78:	6f 5f       	subi	r22, 0xFF	; 255
     c7a:	7f 4f       	sbci	r23, 0xFF	; 255
     c7c:	8f 4f       	sbci	r24, 0xFF	; 255
     c7e:	9f 4f       	sbci	r25, 0xFF	; 255
     c80:	08 95       	ret

00000c82 <__fp_split3>:
     c82:	57 fd       	sbrc	r21, 7
     c84:	90 58       	subi	r25, 0x80	; 128
     c86:	44 0f       	add	r20, r20
     c88:	55 1f       	adc	r21, r21
     c8a:	59 f0       	breq	.+22     	; 0xca2 <__fp_splitA+0x10>
     c8c:	5f 3f       	cpi	r21, 0xFF	; 255
     c8e:	71 f0       	breq	.+28     	; 0xcac <__fp_splitA+0x1a>
     c90:	47 95       	ror	r20

00000c92 <__fp_splitA>:
     c92:	88 0f       	add	r24, r24
     c94:	97 fb       	bst	r25, 7
     c96:	99 1f       	adc	r25, r25
     c98:	61 f0       	breq	.+24     	; 0xcb2 <__fp_splitA+0x20>
     c9a:	9f 3f       	cpi	r25, 0xFF	; 255
     c9c:	79 f0       	breq	.+30     	; 0xcbc <__fp_splitA+0x2a>
     c9e:	87 95       	ror	r24
     ca0:	08 95       	ret
     ca2:	12 16       	cp	r1, r18
     ca4:	13 06       	cpc	r1, r19
     ca6:	14 06       	cpc	r1, r20
     ca8:	55 1f       	adc	r21, r21
     caa:	f2 cf       	rjmp	.-28     	; 0xc90 <__fp_split3+0xe>
     cac:	46 95       	lsr	r20
     cae:	f1 df       	rcall	.-30     	; 0xc92 <__fp_splitA>
     cb0:	08 c0       	rjmp	.+16     	; 0xcc2 <__fp_splitA+0x30>
     cb2:	16 16       	cp	r1, r22
     cb4:	17 06       	cpc	r1, r23
     cb6:	18 06       	cpc	r1, r24
     cb8:	99 1f       	adc	r25, r25
     cba:	f1 cf       	rjmp	.-30     	; 0xc9e <__fp_splitA+0xc>
     cbc:	86 95       	lsr	r24
     cbe:	71 05       	cpc	r23, r1
     cc0:	61 05       	cpc	r22, r1
     cc2:	08 94       	sec
     cc4:	08 95       	ret

00000cc6 <__fp_zero>:
     cc6:	e8 94       	clt

00000cc8 <__fp_szero>:
     cc8:	bb 27       	eor	r27, r27
     cca:	66 27       	eor	r22, r22
     ccc:	77 27       	eor	r23, r23
     cce:	cb 01       	movw	r24, r22
     cd0:	97 f9       	bld	r25, 7
     cd2:	08 95       	ret

00000cd4 <__mulsf3>:
     cd4:	0e 94 7d 06 	call	0xcfa	; 0xcfa <__mulsf3x>
     cd8:	0c 94 30 06 	jmp	0xc60	; 0xc60 <__fp_round>
     cdc:	0e 94 22 06 	call	0xc44	; 0xc44 <__fp_pscA>
     ce0:	38 f0       	brcs	.+14     	; 0xcf0 <__mulsf3+0x1c>
     ce2:	0e 94 29 06 	call	0xc52	; 0xc52 <__fp_pscB>
     ce6:	20 f0       	brcs	.+8      	; 0xcf0 <__mulsf3+0x1c>
     ce8:	95 23       	and	r25, r21
     cea:	11 f0       	breq	.+4      	; 0xcf0 <__mulsf3+0x1c>
     cec:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_inf>
     cf0:	0c 94 1f 06 	jmp	0xc3e	; 0xc3e <__fp_nan>
     cf4:	11 24       	eor	r1, r1
     cf6:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_szero>

00000cfa <__mulsf3x>:
     cfa:	0e 94 41 06 	call	0xc82	; 0xc82 <__fp_split3>
     cfe:	70 f3       	brcs	.-36     	; 0xcdc <__mulsf3+0x8>

00000d00 <__mulsf3_pse>:
     d00:	95 9f       	mul	r25, r21
     d02:	c1 f3       	breq	.-16     	; 0xcf4 <__mulsf3+0x20>
     d04:	95 0f       	add	r25, r21
     d06:	50 e0       	ldi	r21, 0x00	; 0
     d08:	55 1f       	adc	r21, r21
     d0a:	62 9f       	mul	r22, r18
     d0c:	f0 01       	movw	r30, r0
     d0e:	72 9f       	mul	r23, r18
     d10:	bb 27       	eor	r27, r27
     d12:	f0 0d       	add	r31, r0
     d14:	b1 1d       	adc	r27, r1
     d16:	63 9f       	mul	r22, r19
     d18:	aa 27       	eor	r26, r26
     d1a:	f0 0d       	add	r31, r0
     d1c:	b1 1d       	adc	r27, r1
     d1e:	aa 1f       	adc	r26, r26
     d20:	64 9f       	mul	r22, r20
     d22:	66 27       	eor	r22, r22
     d24:	b0 0d       	add	r27, r0
     d26:	a1 1d       	adc	r26, r1
     d28:	66 1f       	adc	r22, r22
     d2a:	82 9f       	mul	r24, r18
     d2c:	22 27       	eor	r18, r18
     d2e:	b0 0d       	add	r27, r0
     d30:	a1 1d       	adc	r26, r1
     d32:	62 1f       	adc	r22, r18
     d34:	73 9f       	mul	r23, r19
     d36:	b0 0d       	add	r27, r0
     d38:	a1 1d       	adc	r26, r1
     d3a:	62 1f       	adc	r22, r18
     d3c:	83 9f       	mul	r24, r19
     d3e:	a0 0d       	add	r26, r0
     d40:	61 1d       	adc	r22, r1
     d42:	22 1f       	adc	r18, r18
     d44:	74 9f       	mul	r23, r20
     d46:	33 27       	eor	r19, r19
     d48:	a0 0d       	add	r26, r0
     d4a:	61 1d       	adc	r22, r1
     d4c:	23 1f       	adc	r18, r19
     d4e:	84 9f       	mul	r24, r20
     d50:	60 0d       	add	r22, r0
     d52:	21 1d       	adc	r18, r1
     d54:	82 2f       	mov	r24, r18
     d56:	76 2f       	mov	r23, r22
     d58:	6a 2f       	mov	r22, r26
     d5a:	11 24       	eor	r1, r1
     d5c:	9f 57       	subi	r25, 0x7F	; 127
     d5e:	50 40       	sbci	r21, 0x00	; 0
     d60:	9a f0       	brmi	.+38     	; 0xd88 <__mulsf3_pse+0x88>
     d62:	f1 f0       	breq	.+60     	; 0xda0 <__mulsf3_pse+0xa0>
     d64:	88 23       	and	r24, r24
     d66:	4a f0       	brmi	.+18     	; 0xd7a <__mulsf3_pse+0x7a>
     d68:	ee 0f       	add	r30, r30
     d6a:	ff 1f       	adc	r31, r31
     d6c:	bb 1f       	adc	r27, r27
     d6e:	66 1f       	adc	r22, r22
     d70:	77 1f       	adc	r23, r23
     d72:	88 1f       	adc	r24, r24
     d74:	91 50       	subi	r25, 0x01	; 1
     d76:	50 40       	sbci	r21, 0x00	; 0
     d78:	a9 f7       	brne	.-22     	; 0xd64 <__mulsf3_pse+0x64>
     d7a:	9e 3f       	cpi	r25, 0xFE	; 254
     d7c:	51 05       	cpc	r21, r1
     d7e:	80 f0       	brcs	.+32     	; 0xda0 <__mulsf3_pse+0xa0>
     d80:	0c 94 19 06 	jmp	0xc32	; 0xc32 <__fp_inf>
     d84:	0c 94 64 06 	jmp	0xcc8	; 0xcc8 <__fp_szero>
     d88:	5f 3f       	cpi	r21, 0xFF	; 255
     d8a:	e4 f3       	brlt	.-8      	; 0xd84 <__mulsf3_pse+0x84>
     d8c:	98 3e       	cpi	r25, 0xE8	; 232
     d8e:	d4 f3       	brlt	.-12     	; 0xd84 <__mulsf3_pse+0x84>
     d90:	86 95       	lsr	r24
     d92:	77 95       	ror	r23
     d94:	67 95       	ror	r22
     d96:	b7 95       	ror	r27
     d98:	f7 95       	ror	r31
     d9a:	e7 95       	ror	r30
     d9c:	9f 5f       	subi	r25, 0xFF	; 255
     d9e:	c1 f7       	brne	.-16     	; 0xd90 <__mulsf3_pse+0x90>
     da0:	fe 2b       	or	r31, r30
     da2:	88 0f       	add	r24, r24
     da4:	91 1d       	adc	r25, r1
     da6:	96 95       	lsr	r25
     da8:	87 95       	ror	r24
     daa:	97 f9       	bld	r25, 7
     dac:	08 95       	ret

00000dae <vfprintf>:
     dae:	a0 e1       	ldi	r26, 0x10	; 16
     db0:	b0 e0       	ldi	r27, 0x00	; 0
     db2:	ed ed       	ldi	r30, 0xDD	; 221
     db4:	f6 e0       	ldi	r31, 0x06	; 6
     db6:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__prologue_saves__>
     dba:	7c 01       	movw	r14, r24
     dbc:	1b 01       	movw	r2, r22
     dbe:	6a 01       	movw	r12, r20
     dc0:	fc 01       	movw	r30, r24
     dc2:	17 82       	std	Z+7, r1	; 0x07
     dc4:	16 82       	std	Z+6, r1	; 0x06
     dc6:	83 81       	ldd	r24, Z+3	; 0x03
     dc8:	81 ff       	sbrs	r24, 1
     dca:	44 c3       	rjmp	.+1672   	; 0x1454 <vfprintf+0x6a6>
     dcc:	9e 01       	movw	r18, r28
     dce:	2f 5f       	subi	r18, 0xFF	; 255
     dd0:	3f 4f       	sbci	r19, 0xFF	; 255
     dd2:	39 01       	movw	r6, r18
     dd4:	f7 01       	movw	r30, r14
     dd6:	93 81       	ldd	r25, Z+3	; 0x03
     dd8:	f1 01       	movw	r30, r2
     dda:	93 fd       	sbrc	r25, 3
     ddc:	85 91       	lpm	r24, Z+
     dde:	93 ff       	sbrs	r25, 3
     de0:	81 91       	ld	r24, Z+
     de2:	1f 01       	movw	r2, r30
     de4:	88 23       	and	r24, r24
     de6:	09 f4       	brne	.+2      	; 0xdea <vfprintf+0x3c>
     de8:	31 c3       	rjmp	.+1634   	; 0x144c <vfprintf+0x69e>
     dea:	85 32       	cpi	r24, 0x25	; 37
     dec:	39 f4       	brne	.+14     	; 0xdfc <vfprintf+0x4e>
     dee:	93 fd       	sbrc	r25, 3
     df0:	85 91       	lpm	r24, Z+
     df2:	93 ff       	sbrs	r25, 3
     df4:	81 91       	ld	r24, Z+
     df6:	1f 01       	movw	r2, r30
     df8:	85 32       	cpi	r24, 0x25	; 37
     dfa:	39 f4       	brne	.+14     	; 0xe0a <vfprintf+0x5c>
     dfc:	b7 01       	movw	r22, r14
     dfe:	90 e0       	ldi	r25, 0x00	; 0
     e00:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
     e04:	56 01       	movw	r10, r12
     e06:	65 01       	movw	r12, r10
     e08:	e5 cf       	rjmp	.-54     	; 0xdd4 <vfprintf+0x26>
     e0a:	10 e0       	ldi	r17, 0x00	; 0
     e0c:	51 2c       	mov	r5, r1
     e0e:	91 2c       	mov	r9, r1
     e10:	ff e1       	ldi	r31, 0x1F	; 31
     e12:	f9 15       	cp	r31, r9
     e14:	d8 f0       	brcs	.+54     	; 0xe4c <vfprintf+0x9e>
     e16:	8b 32       	cpi	r24, 0x2B	; 43
     e18:	79 f0       	breq	.+30     	; 0xe38 <vfprintf+0x8a>
     e1a:	38 f4       	brcc	.+14     	; 0xe2a <vfprintf+0x7c>
     e1c:	80 32       	cpi	r24, 0x20	; 32
     e1e:	79 f0       	breq	.+30     	; 0xe3e <vfprintf+0x90>
     e20:	83 32       	cpi	r24, 0x23	; 35
     e22:	a1 f4       	brne	.+40     	; 0xe4c <vfprintf+0x9e>
     e24:	f9 2d       	mov	r31, r9
     e26:	f0 61       	ori	r31, 0x10	; 16
     e28:	2e c0       	rjmp	.+92     	; 0xe86 <vfprintf+0xd8>
     e2a:	8d 32       	cpi	r24, 0x2D	; 45
     e2c:	61 f0       	breq	.+24     	; 0xe46 <vfprintf+0x98>
     e2e:	80 33       	cpi	r24, 0x30	; 48
     e30:	69 f4       	brne	.+26     	; 0xe4c <vfprintf+0x9e>
     e32:	29 2d       	mov	r18, r9
     e34:	21 60       	ori	r18, 0x01	; 1
     e36:	2d c0       	rjmp	.+90     	; 0xe92 <vfprintf+0xe4>
     e38:	39 2d       	mov	r19, r9
     e3a:	32 60       	ori	r19, 0x02	; 2
     e3c:	93 2e       	mov	r9, r19
     e3e:	89 2d       	mov	r24, r9
     e40:	84 60       	ori	r24, 0x04	; 4
     e42:	98 2e       	mov	r9, r24
     e44:	2a c0       	rjmp	.+84     	; 0xe9a <vfprintf+0xec>
     e46:	e9 2d       	mov	r30, r9
     e48:	e8 60       	ori	r30, 0x08	; 8
     e4a:	15 c0       	rjmp	.+42     	; 0xe76 <vfprintf+0xc8>
     e4c:	97 fc       	sbrc	r9, 7
     e4e:	2d c0       	rjmp	.+90     	; 0xeaa <vfprintf+0xfc>
     e50:	20 ed       	ldi	r18, 0xD0	; 208
     e52:	28 0f       	add	r18, r24
     e54:	2a 30       	cpi	r18, 0x0A	; 10
     e56:	88 f4       	brcc	.+34     	; 0xe7a <vfprintf+0xcc>
     e58:	96 fe       	sbrs	r9, 6
     e5a:	06 c0       	rjmp	.+12     	; 0xe68 <vfprintf+0xba>
     e5c:	3a e0       	ldi	r19, 0x0A	; 10
     e5e:	13 9f       	mul	r17, r19
     e60:	20 0d       	add	r18, r0
     e62:	11 24       	eor	r1, r1
     e64:	12 2f       	mov	r17, r18
     e66:	19 c0       	rjmp	.+50     	; 0xe9a <vfprintf+0xec>
     e68:	8a e0       	ldi	r24, 0x0A	; 10
     e6a:	58 9e       	mul	r5, r24
     e6c:	20 0d       	add	r18, r0
     e6e:	11 24       	eor	r1, r1
     e70:	52 2e       	mov	r5, r18
     e72:	e9 2d       	mov	r30, r9
     e74:	e0 62       	ori	r30, 0x20	; 32
     e76:	9e 2e       	mov	r9, r30
     e78:	10 c0       	rjmp	.+32     	; 0xe9a <vfprintf+0xec>
     e7a:	8e 32       	cpi	r24, 0x2E	; 46
     e7c:	31 f4       	brne	.+12     	; 0xe8a <vfprintf+0xdc>
     e7e:	96 fc       	sbrc	r9, 6
     e80:	e5 c2       	rjmp	.+1482   	; 0x144c <vfprintf+0x69e>
     e82:	f9 2d       	mov	r31, r9
     e84:	f0 64       	ori	r31, 0x40	; 64
     e86:	9f 2e       	mov	r9, r31
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <vfprintf+0xec>
     e8a:	8c 36       	cpi	r24, 0x6C	; 108
     e8c:	21 f4       	brne	.+8      	; 0xe96 <vfprintf+0xe8>
     e8e:	29 2d       	mov	r18, r9
     e90:	20 68       	ori	r18, 0x80	; 128
     e92:	92 2e       	mov	r9, r18
     e94:	02 c0       	rjmp	.+4      	; 0xe9a <vfprintf+0xec>
     e96:	88 36       	cpi	r24, 0x68	; 104
     e98:	41 f4       	brne	.+16     	; 0xeaa <vfprintf+0xfc>
     e9a:	f1 01       	movw	r30, r2
     e9c:	93 fd       	sbrc	r25, 3
     e9e:	85 91       	lpm	r24, Z+
     ea0:	93 ff       	sbrs	r25, 3
     ea2:	81 91       	ld	r24, Z+
     ea4:	1f 01       	movw	r2, r30
     ea6:	81 11       	cpse	r24, r1
     ea8:	b3 cf       	rjmp	.-154    	; 0xe10 <vfprintf+0x62>
     eaa:	9b eb       	ldi	r25, 0xBB	; 187
     eac:	98 0f       	add	r25, r24
     eae:	93 30       	cpi	r25, 0x03	; 3
     eb0:	20 f4       	brcc	.+8      	; 0xeba <vfprintf+0x10c>
     eb2:	99 2d       	mov	r25, r9
     eb4:	90 61       	ori	r25, 0x10	; 16
     eb6:	80 5e       	subi	r24, 0xE0	; 224
     eb8:	07 c0       	rjmp	.+14     	; 0xec8 <vfprintf+0x11a>
     eba:	9b e9       	ldi	r25, 0x9B	; 155
     ebc:	98 0f       	add	r25, r24
     ebe:	93 30       	cpi	r25, 0x03	; 3
     ec0:	08 f0       	brcs	.+2      	; 0xec4 <vfprintf+0x116>
     ec2:	66 c1       	rjmp	.+716    	; 0x1190 <vfprintf+0x3e2>
     ec4:	99 2d       	mov	r25, r9
     ec6:	9f 7e       	andi	r25, 0xEF	; 239
     ec8:	96 ff       	sbrs	r25, 6
     eca:	16 e0       	ldi	r17, 0x06	; 6
     ecc:	9f 73       	andi	r25, 0x3F	; 63
     ece:	99 2e       	mov	r9, r25
     ed0:	85 36       	cpi	r24, 0x65	; 101
     ed2:	19 f4       	brne	.+6      	; 0xeda <vfprintf+0x12c>
     ed4:	90 64       	ori	r25, 0x40	; 64
     ed6:	99 2e       	mov	r9, r25
     ed8:	08 c0       	rjmp	.+16     	; 0xeea <vfprintf+0x13c>
     eda:	86 36       	cpi	r24, 0x66	; 102
     edc:	21 f4       	brne	.+8      	; 0xee6 <vfprintf+0x138>
     ede:	39 2f       	mov	r19, r25
     ee0:	30 68       	ori	r19, 0x80	; 128
     ee2:	93 2e       	mov	r9, r19
     ee4:	02 c0       	rjmp	.+4      	; 0xeea <vfprintf+0x13c>
     ee6:	11 11       	cpse	r17, r1
     ee8:	11 50       	subi	r17, 0x01	; 1
     eea:	97 fe       	sbrs	r9, 7
     eec:	07 c0       	rjmp	.+14     	; 0xefc <vfprintf+0x14e>
     eee:	1c 33       	cpi	r17, 0x3C	; 60
     ef0:	50 f4       	brcc	.+20     	; 0xf06 <vfprintf+0x158>
     ef2:	44 24       	eor	r4, r4
     ef4:	43 94       	inc	r4
     ef6:	41 0e       	add	r4, r17
     ef8:	27 e0       	ldi	r18, 0x07	; 7
     efa:	0b c0       	rjmp	.+22     	; 0xf12 <vfprintf+0x164>
     efc:	18 30       	cpi	r17, 0x08	; 8
     efe:	38 f0       	brcs	.+14     	; 0xf0e <vfprintf+0x160>
     f00:	27 e0       	ldi	r18, 0x07	; 7
     f02:	17 e0       	ldi	r17, 0x07	; 7
     f04:	05 c0       	rjmp	.+10     	; 0xf10 <vfprintf+0x162>
     f06:	27 e0       	ldi	r18, 0x07	; 7
     f08:	9c e3       	ldi	r25, 0x3C	; 60
     f0a:	49 2e       	mov	r4, r25
     f0c:	02 c0       	rjmp	.+4      	; 0xf12 <vfprintf+0x164>
     f0e:	21 2f       	mov	r18, r17
     f10:	41 2c       	mov	r4, r1
     f12:	56 01       	movw	r10, r12
     f14:	84 e0       	ldi	r24, 0x04	; 4
     f16:	a8 0e       	add	r10, r24
     f18:	b1 1c       	adc	r11, r1
     f1a:	f6 01       	movw	r30, r12
     f1c:	60 81       	ld	r22, Z
     f1e:	71 81       	ldd	r23, Z+1	; 0x01
     f20:	82 81       	ldd	r24, Z+2	; 0x02
     f22:	93 81       	ldd	r25, Z+3	; 0x03
     f24:	04 2d       	mov	r16, r4
     f26:	a3 01       	movw	r20, r6
     f28:	0e 94 cf 0a 	call	0x159e	; 0x159e <__ftoa_engine>
     f2c:	6c 01       	movw	r12, r24
     f2e:	f9 81       	ldd	r31, Y+1	; 0x01
     f30:	fc 87       	std	Y+12, r31	; 0x0c
     f32:	f0 ff       	sbrs	r31, 0
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <vfprintf+0x18c>
     f36:	f3 ff       	sbrs	r31, 3
     f38:	06 c0       	rjmp	.+12     	; 0xf46 <vfprintf+0x198>
     f3a:	91 fc       	sbrc	r9, 1
     f3c:	06 c0       	rjmp	.+12     	; 0xf4a <vfprintf+0x19c>
     f3e:	92 fe       	sbrs	r9, 2
     f40:	06 c0       	rjmp	.+12     	; 0xf4e <vfprintf+0x1a0>
     f42:	00 e2       	ldi	r16, 0x20	; 32
     f44:	05 c0       	rjmp	.+10     	; 0xf50 <vfprintf+0x1a2>
     f46:	0d e2       	ldi	r16, 0x2D	; 45
     f48:	03 c0       	rjmp	.+6      	; 0xf50 <vfprintf+0x1a2>
     f4a:	0b e2       	ldi	r16, 0x2B	; 43
     f4c:	01 c0       	rjmp	.+2      	; 0xf50 <vfprintf+0x1a2>
     f4e:	00 e0       	ldi	r16, 0x00	; 0
     f50:	8c 85       	ldd	r24, Y+12	; 0x0c
     f52:	8c 70       	andi	r24, 0x0C	; 12
     f54:	19 f0       	breq	.+6      	; 0xf5c <vfprintf+0x1ae>
     f56:	01 11       	cpse	r16, r1
     f58:	5a c2       	rjmp	.+1204   	; 0x140e <vfprintf+0x660>
     f5a:	9b c2       	rjmp	.+1334   	; 0x1492 <vfprintf+0x6e4>
     f5c:	97 fe       	sbrs	r9, 7
     f5e:	10 c0       	rjmp	.+32     	; 0xf80 <vfprintf+0x1d2>
     f60:	4c 0c       	add	r4, r12
     f62:	fc 85       	ldd	r31, Y+12	; 0x0c
     f64:	f4 ff       	sbrs	r31, 4
     f66:	04 c0       	rjmp	.+8      	; 0xf70 <vfprintf+0x1c2>
     f68:	8a 81       	ldd	r24, Y+2	; 0x02
     f6a:	81 33       	cpi	r24, 0x31	; 49
     f6c:	09 f4       	brne	.+2      	; 0xf70 <vfprintf+0x1c2>
     f6e:	4a 94       	dec	r4
     f70:	14 14       	cp	r1, r4
     f72:	74 f5       	brge	.+92     	; 0xfd0 <vfprintf+0x222>
     f74:	28 e0       	ldi	r18, 0x08	; 8
     f76:	24 15       	cp	r18, r4
     f78:	78 f5       	brcc	.+94     	; 0xfd8 <vfprintf+0x22a>
     f7a:	88 e0       	ldi	r24, 0x08	; 8
     f7c:	48 2e       	mov	r4, r24
     f7e:	2c c0       	rjmp	.+88     	; 0xfd8 <vfprintf+0x22a>
     f80:	96 fc       	sbrc	r9, 6
     f82:	2a c0       	rjmp	.+84     	; 0xfd8 <vfprintf+0x22a>
     f84:	81 2f       	mov	r24, r17
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	8c 15       	cp	r24, r12
     f8a:	9d 05       	cpc	r25, r13
     f8c:	9c f0       	brlt	.+38     	; 0xfb4 <vfprintf+0x206>
     f8e:	3c ef       	ldi	r19, 0xFC	; 252
     f90:	c3 16       	cp	r12, r19
     f92:	3f ef       	ldi	r19, 0xFF	; 255
     f94:	d3 06       	cpc	r13, r19
     f96:	74 f0       	brlt	.+28     	; 0xfb4 <vfprintf+0x206>
     f98:	89 2d       	mov	r24, r9
     f9a:	80 68       	ori	r24, 0x80	; 128
     f9c:	98 2e       	mov	r9, r24
     f9e:	0a c0       	rjmp	.+20     	; 0xfb4 <vfprintf+0x206>
     fa0:	e2 e0       	ldi	r30, 0x02	; 2
     fa2:	f0 e0       	ldi	r31, 0x00	; 0
     fa4:	ec 0f       	add	r30, r28
     fa6:	fd 1f       	adc	r31, r29
     fa8:	e1 0f       	add	r30, r17
     faa:	f1 1d       	adc	r31, r1
     fac:	80 81       	ld	r24, Z
     fae:	80 33       	cpi	r24, 0x30	; 48
     fb0:	19 f4       	brne	.+6      	; 0xfb8 <vfprintf+0x20a>
     fb2:	11 50       	subi	r17, 0x01	; 1
     fb4:	11 11       	cpse	r17, r1
     fb6:	f4 cf       	rjmp	.-24     	; 0xfa0 <vfprintf+0x1f2>
     fb8:	97 fe       	sbrs	r9, 7
     fba:	0e c0       	rjmp	.+28     	; 0xfd8 <vfprintf+0x22a>
     fbc:	44 24       	eor	r4, r4
     fbe:	43 94       	inc	r4
     fc0:	41 0e       	add	r4, r17
     fc2:	81 2f       	mov	r24, r17
     fc4:	90 e0       	ldi	r25, 0x00	; 0
     fc6:	c8 16       	cp	r12, r24
     fc8:	d9 06       	cpc	r13, r25
     fca:	2c f4       	brge	.+10     	; 0xfd6 <vfprintf+0x228>
     fcc:	1c 19       	sub	r17, r12
     fce:	04 c0       	rjmp	.+8      	; 0xfd8 <vfprintf+0x22a>
     fd0:	44 24       	eor	r4, r4
     fd2:	43 94       	inc	r4
     fd4:	01 c0       	rjmp	.+2      	; 0xfd8 <vfprintf+0x22a>
     fd6:	10 e0       	ldi	r17, 0x00	; 0
     fd8:	97 fe       	sbrs	r9, 7
     fda:	06 c0       	rjmp	.+12     	; 0xfe8 <vfprintf+0x23a>
     fdc:	1c 14       	cp	r1, r12
     fde:	1d 04       	cpc	r1, r13
     fe0:	34 f4       	brge	.+12     	; 0xfee <vfprintf+0x240>
     fe2:	c6 01       	movw	r24, r12
     fe4:	01 96       	adiw	r24, 0x01	; 1
     fe6:	05 c0       	rjmp	.+10     	; 0xff2 <vfprintf+0x244>
     fe8:	85 e0       	ldi	r24, 0x05	; 5
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	02 c0       	rjmp	.+4      	; 0xff2 <vfprintf+0x244>
     fee:	81 e0       	ldi	r24, 0x01	; 1
     ff0:	90 e0       	ldi	r25, 0x00	; 0
     ff2:	01 11       	cpse	r16, r1
     ff4:	01 96       	adiw	r24, 0x01	; 1
     ff6:	11 23       	and	r17, r17
     ff8:	31 f0       	breq	.+12     	; 0x1006 <vfprintf+0x258>
     ffa:	21 2f       	mov	r18, r17
     ffc:	30 e0       	ldi	r19, 0x00	; 0
     ffe:	2f 5f       	subi	r18, 0xFF	; 255
    1000:	3f 4f       	sbci	r19, 0xFF	; 255
    1002:	82 0f       	add	r24, r18
    1004:	93 1f       	adc	r25, r19
    1006:	25 2d       	mov	r18, r5
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	82 17       	cp	r24, r18
    100c:	93 07       	cpc	r25, r19
    100e:	14 f4       	brge	.+4      	; 0x1014 <vfprintf+0x266>
    1010:	58 1a       	sub	r5, r24
    1012:	01 c0       	rjmp	.+2      	; 0x1016 <vfprintf+0x268>
    1014:	51 2c       	mov	r5, r1
    1016:	89 2d       	mov	r24, r9
    1018:	89 70       	andi	r24, 0x09	; 9
    101a:	49 f4       	brne	.+18     	; 0x102e <vfprintf+0x280>
    101c:	55 20       	and	r5, r5
    101e:	39 f0       	breq	.+14     	; 0x102e <vfprintf+0x280>
    1020:	b7 01       	movw	r22, r14
    1022:	80 e2       	ldi	r24, 0x20	; 32
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    102a:	5a 94       	dec	r5
    102c:	f7 cf       	rjmp	.-18     	; 0x101c <vfprintf+0x26e>
    102e:	00 23       	and	r16, r16
    1030:	29 f0       	breq	.+10     	; 0x103c <vfprintf+0x28e>
    1032:	b7 01       	movw	r22, r14
    1034:	80 2f       	mov	r24, r16
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    103c:	93 fc       	sbrc	r9, 3
    103e:	09 c0       	rjmp	.+18     	; 0x1052 <vfprintf+0x2a4>
    1040:	55 20       	and	r5, r5
    1042:	39 f0       	breq	.+14     	; 0x1052 <vfprintf+0x2a4>
    1044:	b7 01       	movw	r22, r14
    1046:	80 e3       	ldi	r24, 0x30	; 48
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    104e:	5a 94       	dec	r5
    1050:	f7 cf       	rjmp	.-18     	; 0x1040 <vfprintf+0x292>
    1052:	97 fe       	sbrs	r9, 7
    1054:	4c c0       	rjmp	.+152    	; 0x10ee <vfprintf+0x340>
    1056:	46 01       	movw	r8, r12
    1058:	d7 fe       	sbrs	r13, 7
    105a:	02 c0       	rjmp	.+4      	; 0x1060 <vfprintf+0x2b2>
    105c:	81 2c       	mov	r8, r1
    105e:	91 2c       	mov	r9, r1
    1060:	c6 01       	movw	r24, r12
    1062:	88 19       	sub	r24, r8
    1064:	99 09       	sbc	r25, r9
    1066:	f3 01       	movw	r30, r6
    1068:	e8 0f       	add	r30, r24
    106a:	f9 1f       	adc	r31, r25
    106c:	fe 87       	std	Y+14, r31	; 0x0e
    106e:	ed 87       	std	Y+13, r30	; 0x0d
    1070:	96 01       	movw	r18, r12
    1072:	24 19       	sub	r18, r4
    1074:	31 09       	sbc	r19, r1
    1076:	38 8b       	std	Y+16, r19	; 0x10
    1078:	2f 87       	std	Y+15, r18	; 0x0f
    107a:	01 2f       	mov	r16, r17
    107c:	10 e0       	ldi	r17, 0x00	; 0
    107e:	11 95       	neg	r17
    1080:	01 95       	neg	r16
    1082:	11 09       	sbc	r17, r1
    1084:	3f ef       	ldi	r19, 0xFF	; 255
    1086:	83 16       	cp	r8, r19
    1088:	93 06       	cpc	r9, r19
    108a:	29 f4       	brne	.+10     	; 0x1096 <vfprintf+0x2e8>
    108c:	b7 01       	movw	r22, r14
    108e:	8e e2       	ldi	r24, 0x2E	; 46
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1096:	c8 14       	cp	r12, r8
    1098:	d9 04       	cpc	r13, r9
    109a:	4c f0       	brlt	.+18     	; 0x10ae <vfprintf+0x300>
    109c:	8f 85       	ldd	r24, Y+15	; 0x0f
    109e:	98 89       	ldd	r25, Y+16	; 0x10
    10a0:	88 15       	cp	r24, r8
    10a2:	99 05       	cpc	r25, r9
    10a4:	24 f4       	brge	.+8      	; 0x10ae <vfprintf+0x300>
    10a6:	ed 85       	ldd	r30, Y+13	; 0x0d
    10a8:	fe 85       	ldd	r31, Y+14	; 0x0e
    10aa:	81 81       	ldd	r24, Z+1	; 0x01
    10ac:	01 c0       	rjmp	.+2      	; 0x10b0 <vfprintf+0x302>
    10ae:	80 e3       	ldi	r24, 0x30	; 48
    10b0:	f1 e0       	ldi	r31, 0x01	; 1
    10b2:	8f 1a       	sub	r8, r31
    10b4:	91 08       	sbc	r9, r1
    10b6:	2d 85       	ldd	r18, Y+13	; 0x0d
    10b8:	3e 85       	ldd	r19, Y+14	; 0x0e
    10ba:	2f 5f       	subi	r18, 0xFF	; 255
    10bc:	3f 4f       	sbci	r19, 0xFF	; 255
    10be:	3e 87       	std	Y+14, r19	; 0x0e
    10c0:	2d 87       	std	Y+13, r18	; 0x0d
    10c2:	80 16       	cp	r8, r16
    10c4:	91 06       	cpc	r9, r17
    10c6:	2c f0       	brlt	.+10     	; 0x10d2 <vfprintf+0x324>
    10c8:	b7 01       	movw	r22, r14
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    10d0:	d9 cf       	rjmp	.-78     	; 0x1084 <vfprintf+0x2d6>
    10d2:	c8 14       	cp	r12, r8
    10d4:	d9 04       	cpc	r13, r9
    10d6:	41 f4       	brne	.+16     	; 0x10e8 <vfprintf+0x33a>
    10d8:	9a 81       	ldd	r25, Y+2	; 0x02
    10da:	96 33       	cpi	r25, 0x36	; 54
    10dc:	20 f4       	brcc	.+8      	; 0x10e6 <vfprintf+0x338>
    10de:	95 33       	cpi	r25, 0x35	; 53
    10e0:	19 f4       	brne	.+6      	; 0x10e8 <vfprintf+0x33a>
    10e2:	3c 85       	ldd	r19, Y+12	; 0x0c
    10e4:	34 ff       	sbrs	r19, 4
    10e6:	81 e3       	ldi	r24, 0x31	; 49
    10e8:	b7 01       	movw	r22, r14
    10ea:	90 e0       	ldi	r25, 0x00	; 0
    10ec:	4e c0       	rjmp	.+156    	; 0x118a <vfprintf+0x3dc>
    10ee:	8a 81       	ldd	r24, Y+2	; 0x02
    10f0:	81 33       	cpi	r24, 0x31	; 49
    10f2:	19 f0       	breq	.+6      	; 0x10fa <vfprintf+0x34c>
    10f4:	9c 85       	ldd	r25, Y+12	; 0x0c
    10f6:	9f 7e       	andi	r25, 0xEF	; 239
    10f8:	9c 87       	std	Y+12, r25	; 0x0c
    10fa:	b7 01       	movw	r22, r14
    10fc:	90 e0       	ldi	r25, 0x00	; 0
    10fe:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1102:	11 11       	cpse	r17, r1
    1104:	05 c0       	rjmp	.+10     	; 0x1110 <vfprintf+0x362>
    1106:	94 fc       	sbrc	r9, 4
    1108:	18 c0       	rjmp	.+48     	; 0x113a <vfprintf+0x38c>
    110a:	85 e6       	ldi	r24, 0x65	; 101
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	17 c0       	rjmp	.+46     	; 0x113e <vfprintf+0x390>
    1110:	b7 01       	movw	r22, r14
    1112:	8e e2       	ldi	r24, 0x2E	; 46
    1114:	90 e0       	ldi	r25, 0x00	; 0
    1116:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    111a:	1e 5f       	subi	r17, 0xFE	; 254
    111c:	82 e0       	ldi	r24, 0x02	; 2
    111e:	01 e0       	ldi	r16, 0x01	; 1
    1120:	08 0f       	add	r16, r24
    1122:	f3 01       	movw	r30, r6
    1124:	e8 0f       	add	r30, r24
    1126:	f1 1d       	adc	r31, r1
    1128:	80 81       	ld	r24, Z
    112a:	b7 01       	movw	r22, r14
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1132:	80 2f       	mov	r24, r16
    1134:	01 13       	cpse	r16, r17
    1136:	f3 cf       	rjmp	.-26     	; 0x111e <vfprintf+0x370>
    1138:	e6 cf       	rjmp	.-52     	; 0x1106 <vfprintf+0x358>
    113a:	85 e4       	ldi	r24, 0x45	; 69
    113c:	90 e0       	ldi	r25, 0x00	; 0
    113e:	b7 01       	movw	r22, r14
    1140:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1144:	d7 fc       	sbrc	r13, 7
    1146:	06 c0       	rjmp	.+12     	; 0x1154 <vfprintf+0x3a6>
    1148:	c1 14       	cp	r12, r1
    114a:	d1 04       	cpc	r13, r1
    114c:	41 f4       	brne	.+16     	; 0x115e <vfprintf+0x3b0>
    114e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1150:	e4 ff       	sbrs	r30, 4
    1152:	05 c0       	rjmp	.+10     	; 0x115e <vfprintf+0x3b0>
    1154:	d1 94       	neg	r13
    1156:	c1 94       	neg	r12
    1158:	d1 08       	sbc	r13, r1
    115a:	8d e2       	ldi	r24, 0x2D	; 45
    115c:	01 c0       	rjmp	.+2      	; 0x1160 <vfprintf+0x3b2>
    115e:	8b e2       	ldi	r24, 0x2B	; 43
    1160:	b7 01       	movw	r22, r14
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1168:	80 e3       	ldi	r24, 0x30	; 48
    116a:	2a e0       	ldi	r18, 0x0A	; 10
    116c:	c2 16       	cp	r12, r18
    116e:	d1 04       	cpc	r13, r1
    1170:	2c f0       	brlt	.+10     	; 0x117c <vfprintf+0x3ce>
    1172:	8f 5f       	subi	r24, 0xFF	; 255
    1174:	fa e0       	ldi	r31, 0x0A	; 10
    1176:	cf 1a       	sub	r12, r31
    1178:	d1 08       	sbc	r13, r1
    117a:	f7 cf       	rjmp	.-18     	; 0x116a <vfprintf+0x3bc>
    117c:	b7 01       	movw	r22, r14
    117e:	90 e0       	ldi	r25, 0x00	; 0
    1180:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1184:	b7 01       	movw	r22, r14
    1186:	c6 01       	movw	r24, r12
    1188:	c0 96       	adiw	r24, 0x30	; 48
    118a:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    118e:	54 c1       	rjmp	.+680    	; 0x1438 <vfprintf+0x68a>
    1190:	83 36       	cpi	r24, 0x63	; 99
    1192:	31 f0       	breq	.+12     	; 0x11a0 <vfprintf+0x3f2>
    1194:	83 37       	cpi	r24, 0x73	; 115
    1196:	79 f0       	breq	.+30     	; 0x11b6 <vfprintf+0x408>
    1198:	83 35       	cpi	r24, 0x53	; 83
    119a:	09 f0       	breq	.+2      	; 0x119e <vfprintf+0x3f0>
    119c:	56 c0       	rjmp	.+172    	; 0x124a <vfprintf+0x49c>
    119e:	20 c0       	rjmp	.+64     	; 0x11e0 <vfprintf+0x432>
    11a0:	56 01       	movw	r10, r12
    11a2:	32 e0       	ldi	r19, 0x02	; 2
    11a4:	a3 0e       	add	r10, r19
    11a6:	b1 1c       	adc	r11, r1
    11a8:	f6 01       	movw	r30, r12
    11aa:	80 81       	ld	r24, Z
    11ac:	89 83       	std	Y+1, r24	; 0x01
    11ae:	01 e0       	ldi	r16, 0x01	; 1
    11b0:	10 e0       	ldi	r17, 0x00	; 0
    11b2:	63 01       	movw	r12, r6
    11b4:	12 c0       	rjmp	.+36     	; 0x11da <vfprintf+0x42c>
    11b6:	56 01       	movw	r10, r12
    11b8:	f2 e0       	ldi	r31, 0x02	; 2
    11ba:	af 0e       	add	r10, r31
    11bc:	b1 1c       	adc	r11, r1
    11be:	f6 01       	movw	r30, r12
    11c0:	c0 80       	ld	r12, Z
    11c2:	d1 80       	ldd	r13, Z+1	; 0x01
    11c4:	96 fe       	sbrs	r9, 6
    11c6:	03 c0       	rjmp	.+6      	; 0x11ce <vfprintf+0x420>
    11c8:	61 2f       	mov	r22, r17
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	02 c0       	rjmp	.+4      	; 0x11d2 <vfprintf+0x424>
    11ce:	6f ef       	ldi	r22, 0xFF	; 255
    11d0:	7f ef       	ldi	r23, 0xFF	; 255
    11d2:	c6 01       	movw	r24, r12
    11d4:	0e 94 c0 0b 	call	0x1780	; 0x1780 <strnlen>
    11d8:	8c 01       	movw	r16, r24
    11da:	f9 2d       	mov	r31, r9
    11dc:	ff 77       	andi	r31, 0x7F	; 127
    11de:	14 c0       	rjmp	.+40     	; 0x1208 <vfprintf+0x45a>
    11e0:	56 01       	movw	r10, r12
    11e2:	22 e0       	ldi	r18, 0x02	; 2
    11e4:	a2 0e       	add	r10, r18
    11e6:	b1 1c       	adc	r11, r1
    11e8:	f6 01       	movw	r30, r12
    11ea:	c0 80       	ld	r12, Z
    11ec:	d1 80       	ldd	r13, Z+1	; 0x01
    11ee:	96 fe       	sbrs	r9, 6
    11f0:	03 c0       	rjmp	.+6      	; 0x11f8 <vfprintf+0x44a>
    11f2:	61 2f       	mov	r22, r17
    11f4:	70 e0       	ldi	r23, 0x00	; 0
    11f6:	02 c0       	rjmp	.+4      	; 0x11fc <vfprintf+0x44e>
    11f8:	6f ef       	ldi	r22, 0xFF	; 255
    11fa:	7f ef       	ldi	r23, 0xFF	; 255
    11fc:	c6 01       	movw	r24, r12
    11fe:	0e 94 a7 0b 	call	0x174e	; 0x174e <strnlen_P>
    1202:	8c 01       	movw	r16, r24
    1204:	f9 2d       	mov	r31, r9
    1206:	f0 68       	ori	r31, 0x80	; 128
    1208:	9f 2e       	mov	r9, r31
    120a:	f3 fd       	sbrc	r31, 3
    120c:	1a c0       	rjmp	.+52     	; 0x1242 <vfprintf+0x494>
    120e:	85 2d       	mov	r24, r5
    1210:	90 e0       	ldi	r25, 0x00	; 0
    1212:	08 17       	cp	r16, r24
    1214:	19 07       	cpc	r17, r25
    1216:	a8 f4       	brcc	.+42     	; 0x1242 <vfprintf+0x494>
    1218:	b7 01       	movw	r22, r14
    121a:	80 e2       	ldi	r24, 0x20	; 32
    121c:	90 e0       	ldi	r25, 0x00	; 0
    121e:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1222:	5a 94       	dec	r5
    1224:	f4 cf       	rjmp	.-24     	; 0x120e <vfprintf+0x460>
    1226:	f6 01       	movw	r30, r12
    1228:	97 fc       	sbrc	r9, 7
    122a:	85 91       	lpm	r24, Z+
    122c:	97 fe       	sbrs	r9, 7
    122e:	81 91       	ld	r24, Z+
    1230:	6f 01       	movw	r12, r30
    1232:	b7 01       	movw	r22, r14
    1234:	90 e0       	ldi	r25, 0x00	; 0
    1236:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    123a:	51 10       	cpse	r5, r1
    123c:	5a 94       	dec	r5
    123e:	01 50       	subi	r16, 0x01	; 1
    1240:	11 09       	sbc	r17, r1
    1242:	01 15       	cp	r16, r1
    1244:	11 05       	cpc	r17, r1
    1246:	79 f7       	brne	.-34     	; 0x1226 <vfprintf+0x478>
    1248:	f7 c0       	rjmp	.+494    	; 0x1438 <vfprintf+0x68a>
    124a:	84 36       	cpi	r24, 0x64	; 100
    124c:	11 f0       	breq	.+4      	; 0x1252 <vfprintf+0x4a4>
    124e:	89 36       	cpi	r24, 0x69	; 105
    1250:	61 f5       	brne	.+88     	; 0x12aa <vfprintf+0x4fc>
    1252:	56 01       	movw	r10, r12
    1254:	97 fe       	sbrs	r9, 7
    1256:	09 c0       	rjmp	.+18     	; 0x126a <vfprintf+0x4bc>
    1258:	24 e0       	ldi	r18, 0x04	; 4
    125a:	a2 0e       	add	r10, r18
    125c:	b1 1c       	adc	r11, r1
    125e:	f6 01       	movw	r30, r12
    1260:	60 81       	ld	r22, Z
    1262:	71 81       	ldd	r23, Z+1	; 0x01
    1264:	82 81       	ldd	r24, Z+2	; 0x02
    1266:	93 81       	ldd	r25, Z+3	; 0x03
    1268:	0a c0       	rjmp	.+20     	; 0x127e <vfprintf+0x4d0>
    126a:	f2 e0       	ldi	r31, 0x02	; 2
    126c:	af 0e       	add	r10, r31
    126e:	b1 1c       	adc	r11, r1
    1270:	f6 01       	movw	r30, r12
    1272:	60 81       	ld	r22, Z
    1274:	71 81       	ldd	r23, Z+1	; 0x01
    1276:	07 2e       	mov	r0, r23
    1278:	00 0c       	add	r0, r0
    127a:	88 0b       	sbc	r24, r24
    127c:	99 0b       	sbc	r25, r25
    127e:	f9 2d       	mov	r31, r9
    1280:	ff 76       	andi	r31, 0x6F	; 111
    1282:	9f 2e       	mov	r9, r31
    1284:	97 ff       	sbrs	r25, 7
    1286:	09 c0       	rjmp	.+18     	; 0x129a <vfprintf+0x4ec>
    1288:	90 95       	com	r25
    128a:	80 95       	com	r24
    128c:	70 95       	com	r23
    128e:	61 95       	neg	r22
    1290:	7f 4f       	sbci	r23, 0xFF	; 255
    1292:	8f 4f       	sbci	r24, 0xFF	; 255
    1294:	9f 4f       	sbci	r25, 0xFF	; 255
    1296:	f0 68       	ori	r31, 0x80	; 128
    1298:	9f 2e       	mov	r9, r31
    129a:	2a e0       	ldi	r18, 0x0A	; 10
    129c:	30 e0       	ldi	r19, 0x00	; 0
    129e:	a3 01       	movw	r20, r6
    12a0:	0e 94 1d 0c 	call	0x183a	; 0x183a <__ultoa_invert>
    12a4:	c8 2e       	mov	r12, r24
    12a6:	c6 18       	sub	r12, r6
    12a8:	3f c0       	rjmp	.+126    	; 0x1328 <vfprintf+0x57a>
    12aa:	09 2d       	mov	r16, r9
    12ac:	85 37       	cpi	r24, 0x75	; 117
    12ae:	21 f4       	brne	.+8      	; 0x12b8 <vfprintf+0x50a>
    12b0:	0f 7e       	andi	r16, 0xEF	; 239
    12b2:	2a e0       	ldi	r18, 0x0A	; 10
    12b4:	30 e0       	ldi	r19, 0x00	; 0
    12b6:	1d c0       	rjmp	.+58     	; 0x12f2 <vfprintf+0x544>
    12b8:	09 7f       	andi	r16, 0xF9	; 249
    12ba:	8f 36       	cpi	r24, 0x6F	; 111
    12bc:	91 f0       	breq	.+36     	; 0x12e2 <vfprintf+0x534>
    12be:	18 f4       	brcc	.+6      	; 0x12c6 <vfprintf+0x518>
    12c0:	88 35       	cpi	r24, 0x58	; 88
    12c2:	59 f0       	breq	.+22     	; 0x12da <vfprintf+0x52c>
    12c4:	c3 c0       	rjmp	.+390    	; 0x144c <vfprintf+0x69e>
    12c6:	80 37       	cpi	r24, 0x70	; 112
    12c8:	19 f0       	breq	.+6      	; 0x12d0 <vfprintf+0x522>
    12ca:	88 37       	cpi	r24, 0x78	; 120
    12cc:	11 f0       	breq	.+4      	; 0x12d2 <vfprintf+0x524>
    12ce:	be c0       	rjmp	.+380    	; 0x144c <vfprintf+0x69e>
    12d0:	00 61       	ori	r16, 0x10	; 16
    12d2:	04 ff       	sbrs	r16, 4
    12d4:	09 c0       	rjmp	.+18     	; 0x12e8 <vfprintf+0x53a>
    12d6:	04 60       	ori	r16, 0x04	; 4
    12d8:	07 c0       	rjmp	.+14     	; 0x12e8 <vfprintf+0x53a>
    12da:	94 fe       	sbrs	r9, 4
    12dc:	08 c0       	rjmp	.+16     	; 0x12ee <vfprintf+0x540>
    12de:	06 60       	ori	r16, 0x06	; 6
    12e0:	06 c0       	rjmp	.+12     	; 0x12ee <vfprintf+0x540>
    12e2:	28 e0       	ldi	r18, 0x08	; 8
    12e4:	30 e0       	ldi	r19, 0x00	; 0
    12e6:	05 c0       	rjmp	.+10     	; 0x12f2 <vfprintf+0x544>
    12e8:	20 e1       	ldi	r18, 0x10	; 16
    12ea:	30 e0       	ldi	r19, 0x00	; 0
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <vfprintf+0x544>
    12ee:	20 e1       	ldi	r18, 0x10	; 16
    12f0:	32 e0       	ldi	r19, 0x02	; 2
    12f2:	56 01       	movw	r10, r12
    12f4:	07 ff       	sbrs	r16, 7
    12f6:	09 c0       	rjmp	.+18     	; 0x130a <vfprintf+0x55c>
    12f8:	84 e0       	ldi	r24, 0x04	; 4
    12fa:	a8 0e       	add	r10, r24
    12fc:	b1 1c       	adc	r11, r1
    12fe:	f6 01       	movw	r30, r12
    1300:	60 81       	ld	r22, Z
    1302:	71 81       	ldd	r23, Z+1	; 0x01
    1304:	82 81       	ldd	r24, Z+2	; 0x02
    1306:	93 81       	ldd	r25, Z+3	; 0x03
    1308:	08 c0       	rjmp	.+16     	; 0x131a <vfprintf+0x56c>
    130a:	f2 e0       	ldi	r31, 0x02	; 2
    130c:	af 0e       	add	r10, r31
    130e:	b1 1c       	adc	r11, r1
    1310:	f6 01       	movw	r30, r12
    1312:	60 81       	ld	r22, Z
    1314:	71 81       	ldd	r23, Z+1	; 0x01
    1316:	80 e0       	ldi	r24, 0x00	; 0
    1318:	90 e0       	ldi	r25, 0x00	; 0
    131a:	a3 01       	movw	r20, r6
    131c:	0e 94 1d 0c 	call	0x183a	; 0x183a <__ultoa_invert>
    1320:	c8 2e       	mov	r12, r24
    1322:	c6 18       	sub	r12, r6
    1324:	0f 77       	andi	r16, 0x7F	; 127
    1326:	90 2e       	mov	r9, r16
    1328:	96 fe       	sbrs	r9, 6
    132a:	0b c0       	rjmp	.+22     	; 0x1342 <vfprintf+0x594>
    132c:	09 2d       	mov	r16, r9
    132e:	0e 7f       	andi	r16, 0xFE	; 254
    1330:	c1 16       	cp	r12, r17
    1332:	50 f4       	brcc	.+20     	; 0x1348 <vfprintf+0x59a>
    1334:	94 fe       	sbrs	r9, 4
    1336:	0a c0       	rjmp	.+20     	; 0x134c <vfprintf+0x59e>
    1338:	92 fc       	sbrc	r9, 2
    133a:	08 c0       	rjmp	.+16     	; 0x134c <vfprintf+0x59e>
    133c:	09 2d       	mov	r16, r9
    133e:	0e 7e       	andi	r16, 0xEE	; 238
    1340:	05 c0       	rjmp	.+10     	; 0x134c <vfprintf+0x59e>
    1342:	dc 2c       	mov	r13, r12
    1344:	09 2d       	mov	r16, r9
    1346:	03 c0       	rjmp	.+6      	; 0x134e <vfprintf+0x5a0>
    1348:	dc 2c       	mov	r13, r12
    134a:	01 c0       	rjmp	.+2      	; 0x134e <vfprintf+0x5a0>
    134c:	d1 2e       	mov	r13, r17
    134e:	04 ff       	sbrs	r16, 4
    1350:	0d c0       	rjmp	.+26     	; 0x136c <vfprintf+0x5be>
    1352:	fe 01       	movw	r30, r28
    1354:	ec 0d       	add	r30, r12
    1356:	f1 1d       	adc	r31, r1
    1358:	80 81       	ld	r24, Z
    135a:	80 33       	cpi	r24, 0x30	; 48
    135c:	11 f4       	brne	.+4      	; 0x1362 <vfprintf+0x5b4>
    135e:	09 7e       	andi	r16, 0xE9	; 233
    1360:	09 c0       	rjmp	.+18     	; 0x1374 <vfprintf+0x5c6>
    1362:	02 ff       	sbrs	r16, 2
    1364:	06 c0       	rjmp	.+12     	; 0x1372 <vfprintf+0x5c4>
    1366:	d3 94       	inc	r13
    1368:	d3 94       	inc	r13
    136a:	04 c0       	rjmp	.+8      	; 0x1374 <vfprintf+0x5c6>
    136c:	80 2f       	mov	r24, r16
    136e:	86 78       	andi	r24, 0x86	; 134
    1370:	09 f0       	breq	.+2      	; 0x1374 <vfprintf+0x5c6>
    1372:	d3 94       	inc	r13
    1374:	03 fd       	sbrc	r16, 3
    1376:	11 c0       	rjmp	.+34     	; 0x139a <vfprintf+0x5ec>
    1378:	00 ff       	sbrs	r16, 0
    137a:	06 c0       	rjmp	.+12     	; 0x1388 <vfprintf+0x5da>
    137c:	1c 2d       	mov	r17, r12
    137e:	d5 14       	cp	r13, r5
    1380:	80 f4       	brcc	.+32     	; 0x13a2 <vfprintf+0x5f4>
    1382:	15 0d       	add	r17, r5
    1384:	1d 19       	sub	r17, r13
    1386:	0d c0       	rjmp	.+26     	; 0x13a2 <vfprintf+0x5f4>
    1388:	d5 14       	cp	r13, r5
    138a:	58 f4       	brcc	.+22     	; 0x13a2 <vfprintf+0x5f4>
    138c:	b7 01       	movw	r22, r14
    138e:	80 e2       	ldi	r24, 0x20	; 32
    1390:	90 e0       	ldi	r25, 0x00	; 0
    1392:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1396:	d3 94       	inc	r13
    1398:	f7 cf       	rjmp	.-18     	; 0x1388 <vfprintf+0x5da>
    139a:	d5 14       	cp	r13, r5
    139c:	10 f4       	brcc	.+4      	; 0x13a2 <vfprintf+0x5f4>
    139e:	5d 18       	sub	r5, r13
    13a0:	01 c0       	rjmp	.+2      	; 0x13a4 <vfprintf+0x5f6>
    13a2:	51 2c       	mov	r5, r1
    13a4:	04 ff       	sbrs	r16, 4
    13a6:	10 c0       	rjmp	.+32     	; 0x13c8 <vfprintf+0x61a>
    13a8:	b7 01       	movw	r22, r14
    13aa:	80 e3       	ldi	r24, 0x30	; 48
    13ac:	90 e0       	ldi	r25, 0x00	; 0
    13ae:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    13b2:	02 ff       	sbrs	r16, 2
    13b4:	17 c0       	rjmp	.+46     	; 0x13e4 <vfprintf+0x636>
    13b6:	01 fd       	sbrc	r16, 1
    13b8:	03 c0       	rjmp	.+6      	; 0x13c0 <vfprintf+0x612>
    13ba:	88 e7       	ldi	r24, 0x78	; 120
    13bc:	90 e0       	ldi	r25, 0x00	; 0
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <vfprintf+0x616>
    13c0:	88 e5       	ldi	r24, 0x58	; 88
    13c2:	90 e0       	ldi	r25, 0x00	; 0
    13c4:	b7 01       	movw	r22, r14
    13c6:	0c c0       	rjmp	.+24     	; 0x13e0 <vfprintf+0x632>
    13c8:	80 2f       	mov	r24, r16
    13ca:	86 78       	andi	r24, 0x86	; 134
    13cc:	59 f0       	breq	.+22     	; 0x13e4 <vfprintf+0x636>
    13ce:	01 ff       	sbrs	r16, 1
    13d0:	02 c0       	rjmp	.+4      	; 0x13d6 <vfprintf+0x628>
    13d2:	8b e2       	ldi	r24, 0x2B	; 43
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <vfprintf+0x62a>
    13d6:	80 e2       	ldi	r24, 0x20	; 32
    13d8:	07 fd       	sbrc	r16, 7
    13da:	8d e2       	ldi	r24, 0x2D	; 45
    13dc:	b7 01       	movw	r22, r14
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    13e4:	c1 16       	cp	r12, r17
    13e6:	38 f4       	brcc	.+14     	; 0x13f6 <vfprintf+0x648>
    13e8:	b7 01       	movw	r22, r14
    13ea:	80 e3       	ldi	r24, 0x30	; 48
    13ec:	90 e0       	ldi	r25, 0x00	; 0
    13ee:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    13f2:	11 50       	subi	r17, 0x01	; 1
    13f4:	f7 cf       	rjmp	.-18     	; 0x13e4 <vfprintf+0x636>
    13f6:	ca 94       	dec	r12
    13f8:	f3 01       	movw	r30, r6
    13fa:	ec 0d       	add	r30, r12
    13fc:	f1 1d       	adc	r31, r1
    13fe:	80 81       	ld	r24, Z
    1400:	b7 01       	movw	r22, r14
    1402:	90 e0       	ldi	r25, 0x00	; 0
    1404:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1408:	c1 10       	cpse	r12, r1
    140a:	f5 cf       	rjmp	.-22     	; 0x13f6 <vfprintf+0x648>
    140c:	15 c0       	rjmp	.+42     	; 0x1438 <vfprintf+0x68a>
    140e:	f4 e0       	ldi	r31, 0x04	; 4
    1410:	f5 15       	cp	r31, r5
    1412:	60 f5       	brcc	.+88     	; 0x146c <vfprintf+0x6be>
    1414:	84 e0       	ldi	r24, 0x04	; 4
    1416:	58 1a       	sub	r5, r24
    1418:	93 fe       	sbrs	r9, 3
    141a:	1f c0       	rjmp	.+62     	; 0x145a <vfprintf+0x6ac>
    141c:	01 11       	cpse	r16, r1
    141e:	27 c0       	rjmp	.+78     	; 0x146e <vfprintf+0x6c0>
    1420:	2c 85       	ldd	r18, Y+12	; 0x0c
    1422:	23 ff       	sbrs	r18, 3
    1424:	2a c0       	rjmp	.+84     	; 0x147a <vfprintf+0x6cc>
    1426:	08 e6       	ldi	r16, 0x68	; 104
    1428:	10 e0       	ldi	r17, 0x00	; 0
    142a:	39 2d       	mov	r19, r9
    142c:	30 71       	andi	r19, 0x10	; 16
    142e:	93 2e       	mov	r9, r19
    1430:	f8 01       	movw	r30, r16
    1432:	84 91       	lpm	r24, Z
    1434:	81 11       	cpse	r24, r1
    1436:	24 c0       	rjmp	.+72     	; 0x1480 <vfprintf+0x6d2>
    1438:	55 20       	and	r5, r5
    143a:	09 f4       	brne	.+2      	; 0x143e <vfprintf+0x690>
    143c:	e4 cc       	rjmp	.-1592   	; 0xe06 <vfprintf+0x58>
    143e:	b7 01       	movw	r22, r14
    1440:	80 e2       	ldi	r24, 0x20	; 32
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1448:	5a 94       	dec	r5
    144a:	f6 cf       	rjmp	.-20     	; 0x1438 <vfprintf+0x68a>
    144c:	f7 01       	movw	r30, r14
    144e:	86 81       	ldd	r24, Z+6	; 0x06
    1450:	97 81       	ldd	r25, Z+7	; 0x07
    1452:	26 c0       	rjmp	.+76     	; 0x14a0 <vfprintf+0x6f2>
    1454:	8f ef       	ldi	r24, 0xFF	; 255
    1456:	9f ef       	ldi	r25, 0xFF	; 255
    1458:	23 c0       	rjmp	.+70     	; 0x14a0 <vfprintf+0x6f2>
    145a:	b7 01       	movw	r22, r14
    145c:	80 e2       	ldi	r24, 0x20	; 32
    145e:	90 e0       	ldi	r25, 0x00	; 0
    1460:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1464:	5a 94       	dec	r5
    1466:	51 10       	cpse	r5, r1
    1468:	f8 cf       	rjmp	.-16     	; 0x145a <vfprintf+0x6ac>
    146a:	d8 cf       	rjmp	.-80     	; 0x141c <vfprintf+0x66e>
    146c:	51 2c       	mov	r5, r1
    146e:	b7 01       	movw	r22, r14
    1470:	80 2f       	mov	r24, r16
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    1478:	d3 cf       	rjmp	.-90     	; 0x1420 <vfprintf+0x672>
    147a:	0c e6       	ldi	r16, 0x6C	; 108
    147c:	10 e0       	ldi	r17, 0x00	; 0
    147e:	d5 cf       	rjmp	.-86     	; 0x142a <vfprintf+0x67c>
    1480:	91 10       	cpse	r9, r1
    1482:	80 52       	subi	r24, 0x20	; 32
    1484:	b7 01       	movw	r22, r14
    1486:	90 e0       	ldi	r25, 0x00	; 0
    1488:	0e 94 cb 0b 	call	0x1796	; 0x1796 <fputc>
    148c:	0f 5f       	subi	r16, 0xFF	; 255
    148e:	1f 4f       	sbci	r17, 0xFF	; 255
    1490:	cf cf       	rjmp	.-98     	; 0x1430 <vfprintf+0x682>
    1492:	23 e0       	ldi	r18, 0x03	; 3
    1494:	25 15       	cp	r18, r5
    1496:	10 f4       	brcc	.+4      	; 0x149c <vfprintf+0x6ee>
    1498:	83 e0       	ldi	r24, 0x03	; 3
    149a:	bd cf       	rjmp	.-134    	; 0x1416 <vfprintf+0x668>
    149c:	51 2c       	mov	r5, r1
    149e:	c0 cf       	rjmp	.-128    	; 0x1420 <vfprintf+0x672>
    14a0:	60 96       	adiw	r28, 0x10	; 16
    14a2:	e2 e1       	ldi	r30, 0x12	; 18
    14a4:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__epilogue_restores__>

000014a8 <__udivmodsi4>:
    14a8:	a1 e2       	ldi	r26, 0x21	; 33
    14aa:	1a 2e       	mov	r1, r26
    14ac:	aa 1b       	sub	r26, r26
    14ae:	bb 1b       	sub	r27, r27
    14b0:	fd 01       	movw	r30, r26
    14b2:	0d c0       	rjmp	.+26     	; 0x14ce <__udivmodsi4_ep>

000014b4 <__udivmodsi4_loop>:
    14b4:	aa 1f       	adc	r26, r26
    14b6:	bb 1f       	adc	r27, r27
    14b8:	ee 1f       	adc	r30, r30
    14ba:	ff 1f       	adc	r31, r31
    14bc:	a2 17       	cp	r26, r18
    14be:	b3 07       	cpc	r27, r19
    14c0:	e4 07       	cpc	r30, r20
    14c2:	f5 07       	cpc	r31, r21
    14c4:	20 f0       	brcs	.+8      	; 0x14ce <__udivmodsi4_ep>
    14c6:	a2 1b       	sub	r26, r18
    14c8:	b3 0b       	sbc	r27, r19
    14ca:	e4 0b       	sbc	r30, r20
    14cc:	f5 0b       	sbc	r31, r21

000014ce <__udivmodsi4_ep>:
    14ce:	66 1f       	adc	r22, r22
    14d0:	77 1f       	adc	r23, r23
    14d2:	88 1f       	adc	r24, r24
    14d4:	99 1f       	adc	r25, r25
    14d6:	1a 94       	dec	r1
    14d8:	69 f7       	brne	.-38     	; 0x14b4 <__udivmodsi4_loop>
    14da:	60 95       	com	r22
    14dc:	70 95       	com	r23
    14de:	80 95       	com	r24
    14e0:	90 95       	com	r25
    14e2:	9b 01       	movw	r18, r22
    14e4:	ac 01       	movw	r20, r24
    14e6:	bd 01       	movw	r22, r26
    14e8:	cf 01       	movw	r24, r30
    14ea:	08 95       	ret

000014ec <__mulshisi3>:
    14ec:	b7 ff       	sbrs	r27, 7
    14ee:	0c 94 b5 0a 	jmp	0x156a	; 0x156a <__muluhisi3>

000014f2 <__mulohisi3>:
    14f2:	0e 94 b5 0a 	call	0x156a	; 0x156a <__muluhisi3>
    14f6:	82 1b       	sub	r24, r18
    14f8:	93 0b       	sbc	r25, r19
    14fa:	08 95       	ret

000014fc <__prologue_saves__>:
    14fc:	2f 92       	push	r2
    14fe:	3f 92       	push	r3
    1500:	4f 92       	push	r4
    1502:	5f 92       	push	r5
    1504:	6f 92       	push	r6
    1506:	7f 92       	push	r7
    1508:	8f 92       	push	r8
    150a:	9f 92       	push	r9
    150c:	af 92       	push	r10
    150e:	bf 92       	push	r11
    1510:	cf 92       	push	r12
    1512:	df 92       	push	r13
    1514:	ef 92       	push	r14
    1516:	ff 92       	push	r15
    1518:	0f 93       	push	r16
    151a:	1f 93       	push	r17
    151c:	cf 93       	push	r28
    151e:	df 93       	push	r29
    1520:	cd b7       	in	r28, 0x3d	; 61
    1522:	de b7       	in	r29, 0x3e	; 62
    1524:	ca 1b       	sub	r28, r26
    1526:	db 0b       	sbc	r29, r27
    1528:	0f b6       	in	r0, 0x3f	; 63
    152a:	f8 94       	cli
    152c:	de bf       	out	0x3e, r29	; 62
    152e:	0f be       	out	0x3f, r0	; 63
    1530:	cd bf       	out	0x3d, r28	; 61
    1532:	09 94       	ijmp

00001534 <__epilogue_restores__>:
    1534:	2a 88       	ldd	r2, Y+18	; 0x12
    1536:	39 88       	ldd	r3, Y+17	; 0x11
    1538:	48 88       	ldd	r4, Y+16	; 0x10
    153a:	5f 84       	ldd	r5, Y+15	; 0x0f
    153c:	6e 84       	ldd	r6, Y+14	; 0x0e
    153e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1540:	8c 84       	ldd	r8, Y+12	; 0x0c
    1542:	9b 84       	ldd	r9, Y+11	; 0x0b
    1544:	aa 84       	ldd	r10, Y+10	; 0x0a
    1546:	b9 84       	ldd	r11, Y+9	; 0x09
    1548:	c8 84       	ldd	r12, Y+8	; 0x08
    154a:	df 80       	ldd	r13, Y+7	; 0x07
    154c:	ee 80       	ldd	r14, Y+6	; 0x06
    154e:	fd 80       	ldd	r15, Y+5	; 0x05
    1550:	0c 81       	ldd	r16, Y+4	; 0x04
    1552:	1b 81       	ldd	r17, Y+3	; 0x03
    1554:	aa 81       	ldd	r26, Y+2	; 0x02
    1556:	b9 81       	ldd	r27, Y+1	; 0x01
    1558:	ce 0f       	add	r28, r30
    155a:	d1 1d       	adc	r29, r1
    155c:	0f b6       	in	r0, 0x3f	; 63
    155e:	f8 94       	cli
    1560:	de bf       	out	0x3e, r29	; 62
    1562:	0f be       	out	0x3f, r0	; 63
    1564:	cd bf       	out	0x3d, r28	; 61
    1566:	ed 01       	movw	r28, r26
    1568:	08 95       	ret

0000156a <__muluhisi3>:
    156a:	0e 94 c0 0a 	call	0x1580	; 0x1580 <__umulhisi3>
    156e:	a5 9f       	mul	r26, r21
    1570:	90 0d       	add	r25, r0
    1572:	b4 9f       	mul	r27, r20
    1574:	90 0d       	add	r25, r0
    1576:	a4 9f       	mul	r26, r20
    1578:	80 0d       	add	r24, r0
    157a:	91 1d       	adc	r25, r1
    157c:	11 24       	eor	r1, r1
    157e:	08 95       	ret

00001580 <__umulhisi3>:
    1580:	a2 9f       	mul	r26, r18
    1582:	b0 01       	movw	r22, r0
    1584:	b3 9f       	mul	r27, r19
    1586:	c0 01       	movw	r24, r0
    1588:	a3 9f       	mul	r26, r19
    158a:	70 0d       	add	r23, r0
    158c:	81 1d       	adc	r24, r1
    158e:	11 24       	eor	r1, r1
    1590:	91 1d       	adc	r25, r1
    1592:	b2 9f       	mul	r27, r18
    1594:	70 0d       	add	r23, r0
    1596:	81 1d       	adc	r24, r1
    1598:	11 24       	eor	r1, r1
    159a:	91 1d       	adc	r25, r1
    159c:	08 95       	ret

0000159e <__ftoa_engine>:
    159e:	28 30       	cpi	r18, 0x08	; 8
    15a0:	08 f0       	brcs	.+2      	; 0x15a4 <__ftoa_engine+0x6>
    15a2:	27 e0       	ldi	r18, 0x07	; 7
    15a4:	33 27       	eor	r19, r19
    15a6:	da 01       	movw	r26, r20
    15a8:	99 0f       	add	r25, r25
    15aa:	31 1d       	adc	r19, r1
    15ac:	87 fd       	sbrc	r24, 7
    15ae:	91 60       	ori	r25, 0x01	; 1
    15b0:	00 96       	adiw	r24, 0x00	; 0
    15b2:	61 05       	cpc	r22, r1
    15b4:	71 05       	cpc	r23, r1
    15b6:	39 f4       	brne	.+14     	; 0x15c6 <__ftoa_engine+0x28>
    15b8:	32 60       	ori	r19, 0x02	; 2
    15ba:	2e 5f       	subi	r18, 0xFE	; 254
    15bc:	3d 93       	st	X+, r19
    15be:	30 e3       	ldi	r19, 0x30	; 48
    15c0:	2a 95       	dec	r18
    15c2:	e1 f7       	brne	.-8      	; 0x15bc <__ftoa_engine+0x1e>
    15c4:	08 95       	ret
    15c6:	9f 3f       	cpi	r25, 0xFF	; 255
    15c8:	30 f0       	brcs	.+12     	; 0x15d6 <__ftoa_engine+0x38>
    15ca:	80 38       	cpi	r24, 0x80	; 128
    15cc:	71 05       	cpc	r23, r1
    15ce:	61 05       	cpc	r22, r1
    15d0:	09 f0       	breq	.+2      	; 0x15d4 <__ftoa_engine+0x36>
    15d2:	3c 5f       	subi	r19, 0xFC	; 252
    15d4:	3c 5f       	subi	r19, 0xFC	; 252
    15d6:	3d 93       	st	X+, r19
    15d8:	91 30       	cpi	r25, 0x01	; 1
    15da:	08 f0       	brcs	.+2      	; 0x15de <__ftoa_engine+0x40>
    15dc:	80 68       	ori	r24, 0x80	; 128
    15de:	91 1d       	adc	r25, r1
    15e0:	df 93       	push	r29
    15e2:	cf 93       	push	r28
    15e4:	1f 93       	push	r17
    15e6:	0f 93       	push	r16
    15e8:	ff 92       	push	r15
    15ea:	ef 92       	push	r14
    15ec:	19 2f       	mov	r17, r25
    15ee:	98 7f       	andi	r25, 0xF8	; 248
    15f0:	96 95       	lsr	r25
    15f2:	e9 2f       	mov	r30, r25
    15f4:	96 95       	lsr	r25
    15f6:	96 95       	lsr	r25
    15f8:	e9 0f       	add	r30, r25
    15fa:	ff 27       	eor	r31, r31
    15fc:	e6 53       	subi	r30, 0x36	; 54
    15fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1600:	99 27       	eor	r25, r25
    1602:	33 27       	eor	r19, r19
    1604:	ee 24       	eor	r14, r14
    1606:	ff 24       	eor	r15, r15
    1608:	a7 01       	movw	r20, r14
    160a:	e7 01       	movw	r28, r14
    160c:	05 90       	lpm	r0, Z+
    160e:	08 94       	sec
    1610:	07 94       	ror	r0
    1612:	28 f4       	brcc	.+10     	; 0x161e <__ftoa_engine+0x80>
    1614:	36 0f       	add	r19, r22
    1616:	e7 1e       	adc	r14, r23
    1618:	f8 1e       	adc	r15, r24
    161a:	49 1f       	adc	r20, r25
    161c:	51 1d       	adc	r21, r1
    161e:	66 0f       	add	r22, r22
    1620:	77 1f       	adc	r23, r23
    1622:	88 1f       	adc	r24, r24
    1624:	99 1f       	adc	r25, r25
    1626:	06 94       	lsr	r0
    1628:	a1 f7       	brne	.-24     	; 0x1612 <__ftoa_engine+0x74>
    162a:	05 90       	lpm	r0, Z+
    162c:	07 94       	ror	r0
    162e:	28 f4       	brcc	.+10     	; 0x163a <__ftoa_engine+0x9c>
    1630:	e7 0e       	add	r14, r23
    1632:	f8 1e       	adc	r15, r24
    1634:	49 1f       	adc	r20, r25
    1636:	56 1f       	adc	r21, r22
    1638:	c1 1d       	adc	r28, r1
    163a:	77 0f       	add	r23, r23
    163c:	88 1f       	adc	r24, r24
    163e:	99 1f       	adc	r25, r25
    1640:	66 1f       	adc	r22, r22
    1642:	06 94       	lsr	r0
    1644:	a1 f7       	brne	.-24     	; 0x162e <__ftoa_engine+0x90>
    1646:	05 90       	lpm	r0, Z+
    1648:	07 94       	ror	r0
    164a:	28 f4       	brcc	.+10     	; 0x1656 <__ftoa_engine+0xb8>
    164c:	f8 0e       	add	r15, r24
    164e:	49 1f       	adc	r20, r25
    1650:	56 1f       	adc	r21, r22
    1652:	c7 1f       	adc	r28, r23
    1654:	d1 1d       	adc	r29, r1
    1656:	88 0f       	add	r24, r24
    1658:	99 1f       	adc	r25, r25
    165a:	66 1f       	adc	r22, r22
    165c:	77 1f       	adc	r23, r23
    165e:	06 94       	lsr	r0
    1660:	a1 f7       	brne	.-24     	; 0x164a <__ftoa_engine+0xac>
    1662:	05 90       	lpm	r0, Z+
    1664:	07 94       	ror	r0
    1666:	20 f4       	brcc	.+8      	; 0x1670 <__ftoa_engine+0xd2>
    1668:	49 0f       	add	r20, r25
    166a:	56 1f       	adc	r21, r22
    166c:	c7 1f       	adc	r28, r23
    166e:	d8 1f       	adc	r29, r24
    1670:	99 0f       	add	r25, r25
    1672:	66 1f       	adc	r22, r22
    1674:	77 1f       	adc	r23, r23
    1676:	88 1f       	adc	r24, r24
    1678:	06 94       	lsr	r0
    167a:	a9 f7       	brne	.-22     	; 0x1666 <__ftoa_engine+0xc8>
    167c:	84 91       	lpm	r24, Z
    167e:	10 95       	com	r17
    1680:	17 70       	andi	r17, 0x07	; 7
    1682:	41 f0       	breq	.+16     	; 0x1694 <__ftoa_engine+0xf6>
    1684:	d6 95       	lsr	r29
    1686:	c7 95       	ror	r28
    1688:	57 95       	ror	r21
    168a:	47 95       	ror	r20
    168c:	f7 94       	ror	r15
    168e:	e7 94       	ror	r14
    1690:	1a 95       	dec	r17
    1692:	c1 f7       	brne	.-16     	; 0x1684 <__ftoa_engine+0xe6>
    1694:	e0 e7       	ldi	r30, 0x70	; 112
    1696:	f0 e0       	ldi	r31, 0x00	; 0
    1698:	68 94       	set
    169a:	15 90       	lpm	r1, Z+
    169c:	15 91       	lpm	r17, Z+
    169e:	35 91       	lpm	r19, Z+
    16a0:	65 91       	lpm	r22, Z+
    16a2:	95 91       	lpm	r25, Z+
    16a4:	05 90       	lpm	r0, Z+
    16a6:	7f e2       	ldi	r23, 0x2F	; 47
    16a8:	73 95       	inc	r23
    16aa:	e1 18       	sub	r14, r1
    16ac:	f1 0a       	sbc	r15, r17
    16ae:	43 0b       	sbc	r20, r19
    16b0:	56 0b       	sbc	r21, r22
    16b2:	c9 0b       	sbc	r28, r25
    16b4:	d0 09       	sbc	r29, r0
    16b6:	c0 f7       	brcc	.-16     	; 0x16a8 <__ftoa_engine+0x10a>
    16b8:	e1 0c       	add	r14, r1
    16ba:	f1 1e       	adc	r15, r17
    16bc:	43 1f       	adc	r20, r19
    16be:	56 1f       	adc	r21, r22
    16c0:	c9 1f       	adc	r28, r25
    16c2:	d0 1d       	adc	r29, r0
    16c4:	7e f4       	brtc	.+30     	; 0x16e4 <__ftoa_engine+0x146>
    16c6:	70 33       	cpi	r23, 0x30	; 48
    16c8:	11 f4       	brne	.+4      	; 0x16ce <__ftoa_engine+0x130>
    16ca:	8a 95       	dec	r24
    16cc:	e6 cf       	rjmp	.-52     	; 0x169a <__ftoa_engine+0xfc>
    16ce:	e8 94       	clt
    16d0:	01 50       	subi	r16, 0x01	; 1
    16d2:	30 f0       	brcs	.+12     	; 0x16e0 <__ftoa_engine+0x142>
    16d4:	08 0f       	add	r16, r24
    16d6:	0a f4       	brpl	.+2      	; 0x16da <__ftoa_engine+0x13c>
    16d8:	00 27       	eor	r16, r16
    16da:	02 17       	cp	r16, r18
    16dc:	08 f4       	brcc	.+2      	; 0x16e0 <__ftoa_engine+0x142>
    16de:	20 2f       	mov	r18, r16
    16e0:	23 95       	inc	r18
    16e2:	02 2f       	mov	r16, r18
    16e4:	7a 33       	cpi	r23, 0x3A	; 58
    16e6:	28 f0       	brcs	.+10     	; 0x16f2 <__ftoa_engine+0x154>
    16e8:	79 e3       	ldi	r23, 0x39	; 57
    16ea:	7d 93       	st	X+, r23
    16ec:	2a 95       	dec	r18
    16ee:	e9 f7       	brne	.-6      	; 0x16ea <__ftoa_engine+0x14c>
    16f0:	10 c0       	rjmp	.+32     	; 0x1712 <__ftoa_engine+0x174>
    16f2:	7d 93       	st	X+, r23
    16f4:	2a 95       	dec	r18
    16f6:	89 f6       	brne	.-94     	; 0x169a <__ftoa_engine+0xfc>
    16f8:	06 94       	lsr	r0
    16fa:	97 95       	ror	r25
    16fc:	67 95       	ror	r22
    16fe:	37 95       	ror	r19
    1700:	17 95       	ror	r17
    1702:	17 94       	ror	r1
    1704:	e1 18       	sub	r14, r1
    1706:	f1 0a       	sbc	r15, r17
    1708:	43 0b       	sbc	r20, r19
    170a:	56 0b       	sbc	r21, r22
    170c:	c9 0b       	sbc	r28, r25
    170e:	d0 09       	sbc	r29, r0
    1710:	98 f0       	brcs	.+38     	; 0x1738 <__ftoa_engine+0x19a>
    1712:	23 95       	inc	r18
    1714:	7e 91       	ld	r23, -X
    1716:	73 95       	inc	r23
    1718:	7a 33       	cpi	r23, 0x3A	; 58
    171a:	08 f0       	brcs	.+2      	; 0x171e <__ftoa_engine+0x180>
    171c:	70 e3       	ldi	r23, 0x30	; 48
    171e:	7c 93       	st	X, r23
    1720:	20 13       	cpse	r18, r16
    1722:	b8 f7       	brcc	.-18     	; 0x1712 <__ftoa_engine+0x174>
    1724:	7e 91       	ld	r23, -X
    1726:	70 61       	ori	r23, 0x10	; 16
    1728:	7d 93       	st	X+, r23
    172a:	30 f0       	brcs	.+12     	; 0x1738 <__ftoa_engine+0x19a>
    172c:	83 95       	inc	r24
    172e:	71 e3       	ldi	r23, 0x31	; 49
    1730:	7d 93       	st	X+, r23
    1732:	70 e3       	ldi	r23, 0x30	; 48
    1734:	2a 95       	dec	r18
    1736:	e1 f7       	brne	.-8      	; 0x1730 <__ftoa_engine+0x192>
    1738:	11 24       	eor	r1, r1
    173a:	ef 90       	pop	r14
    173c:	ff 90       	pop	r15
    173e:	0f 91       	pop	r16
    1740:	1f 91       	pop	r17
    1742:	cf 91       	pop	r28
    1744:	df 91       	pop	r29
    1746:	99 27       	eor	r25, r25
    1748:	87 fd       	sbrc	r24, 7
    174a:	90 95       	com	r25
    174c:	08 95       	ret

0000174e <strnlen_P>:
    174e:	fc 01       	movw	r30, r24
    1750:	05 90       	lpm	r0, Z+
    1752:	61 50       	subi	r22, 0x01	; 1
    1754:	70 40       	sbci	r23, 0x00	; 0
    1756:	01 10       	cpse	r0, r1
    1758:	d8 f7       	brcc	.-10     	; 0x1750 <strnlen_P+0x2>
    175a:	80 95       	com	r24
    175c:	90 95       	com	r25
    175e:	8e 0f       	add	r24, r30
    1760:	9f 1f       	adc	r25, r31
    1762:	08 95       	ret

00001764 <strncmp>:
    1764:	fb 01       	movw	r30, r22
    1766:	dc 01       	movw	r26, r24
    1768:	41 50       	subi	r20, 0x01	; 1
    176a:	50 40       	sbci	r21, 0x00	; 0
    176c:	30 f0       	brcs	.+12     	; 0x177a <strncmp+0x16>
    176e:	8d 91       	ld	r24, X+
    1770:	01 90       	ld	r0, Z+
    1772:	80 19       	sub	r24, r0
    1774:	19 f4       	brne	.+6      	; 0x177c <strncmp+0x18>
    1776:	00 20       	and	r0, r0
    1778:	b9 f7       	brne	.-18     	; 0x1768 <strncmp+0x4>
    177a:	88 1b       	sub	r24, r24
    177c:	99 0b       	sbc	r25, r25
    177e:	08 95       	ret

00001780 <strnlen>:
    1780:	fc 01       	movw	r30, r24
    1782:	61 50       	subi	r22, 0x01	; 1
    1784:	70 40       	sbci	r23, 0x00	; 0
    1786:	01 90       	ld	r0, Z+
    1788:	01 10       	cpse	r0, r1
    178a:	d8 f7       	brcc	.-10     	; 0x1782 <strnlen+0x2>
    178c:	80 95       	com	r24
    178e:	90 95       	com	r25
    1790:	8e 0f       	add	r24, r30
    1792:	9f 1f       	adc	r25, r31
    1794:	08 95       	ret

00001796 <fputc>:
    1796:	0f 93       	push	r16
    1798:	1f 93       	push	r17
    179a:	cf 93       	push	r28
    179c:	df 93       	push	r29
    179e:	fb 01       	movw	r30, r22
    17a0:	23 81       	ldd	r18, Z+3	; 0x03
    17a2:	21 fd       	sbrc	r18, 1
    17a4:	03 c0       	rjmp	.+6      	; 0x17ac <fputc+0x16>
    17a6:	8f ef       	ldi	r24, 0xFF	; 255
    17a8:	9f ef       	ldi	r25, 0xFF	; 255
    17aa:	2c c0       	rjmp	.+88     	; 0x1804 <fputc+0x6e>
    17ac:	22 ff       	sbrs	r18, 2
    17ae:	16 c0       	rjmp	.+44     	; 0x17dc <fputc+0x46>
    17b0:	46 81       	ldd	r20, Z+6	; 0x06
    17b2:	57 81       	ldd	r21, Z+7	; 0x07
    17b4:	24 81       	ldd	r18, Z+4	; 0x04
    17b6:	35 81       	ldd	r19, Z+5	; 0x05
    17b8:	42 17       	cp	r20, r18
    17ba:	53 07       	cpc	r21, r19
    17bc:	44 f4       	brge	.+16     	; 0x17ce <fputc+0x38>
    17be:	a0 81       	ld	r26, Z
    17c0:	b1 81       	ldd	r27, Z+1	; 0x01
    17c2:	9d 01       	movw	r18, r26
    17c4:	2f 5f       	subi	r18, 0xFF	; 255
    17c6:	3f 4f       	sbci	r19, 0xFF	; 255
    17c8:	31 83       	std	Z+1, r19	; 0x01
    17ca:	20 83       	st	Z, r18
    17cc:	8c 93       	st	X, r24
    17ce:	26 81       	ldd	r18, Z+6	; 0x06
    17d0:	37 81       	ldd	r19, Z+7	; 0x07
    17d2:	2f 5f       	subi	r18, 0xFF	; 255
    17d4:	3f 4f       	sbci	r19, 0xFF	; 255
    17d6:	37 83       	std	Z+7, r19	; 0x07
    17d8:	26 83       	std	Z+6, r18	; 0x06
    17da:	14 c0       	rjmp	.+40     	; 0x1804 <fputc+0x6e>
    17dc:	8b 01       	movw	r16, r22
    17de:	ec 01       	movw	r28, r24
    17e0:	fb 01       	movw	r30, r22
    17e2:	00 84       	ldd	r0, Z+8	; 0x08
    17e4:	f1 85       	ldd	r31, Z+9	; 0x09
    17e6:	e0 2d       	mov	r30, r0
    17e8:	09 95       	icall
    17ea:	89 2b       	or	r24, r25
    17ec:	e1 f6       	brne	.-72     	; 0x17a6 <fputc+0x10>
    17ee:	d8 01       	movw	r26, r16
    17f0:	16 96       	adiw	r26, 0x06	; 6
    17f2:	8d 91       	ld	r24, X+
    17f4:	9c 91       	ld	r25, X
    17f6:	17 97       	sbiw	r26, 0x07	; 7
    17f8:	01 96       	adiw	r24, 0x01	; 1
    17fa:	17 96       	adiw	r26, 0x07	; 7
    17fc:	9c 93       	st	X, r25
    17fe:	8e 93       	st	-X, r24
    1800:	16 97       	sbiw	r26, 0x06	; 6
    1802:	ce 01       	movw	r24, r28
    1804:	df 91       	pop	r29
    1806:	cf 91       	pop	r28
    1808:	1f 91       	pop	r17
    180a:	0f 91       	pop	r16
    180c:	08 95       	ret

0000180e <printf>:
    180e:	a0 e0       	ldi	r26, 0x00	; 0
    1810:	b0 e0       	ldi	r27, 0x00	; 0
    1812:	ed e0       	ldi	r30, 0x0D	; 13
    1814:	fc e0       	ldi	r31, 0x0C	; 12
    1816:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__prologue_saves__+0x20>
    181a:	ae 01       	movw	r20, r28
    181c:	4b 5f       	subi	r20, 0xFB	; 251
    181e:	5f 4f       	sbci	r21, 0xFF	; 255
    1820:	fa 01       	movw	r30, r20
    1822:	61 91       	ld	r22, Z+
    1824:	71 91       	ld	r23, Z+
    1826:	af 01       	movw	r20, r30
    1828:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__data_end+0x2>
    182c:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <__data_end+0x3>
    1830:	0e 94 d7 06 	call	0xdae	; 0xdae <vfprintf>
    1834:	e2 e0       	ldi	r30, 0x02	; 2
    1836:	0c 94 aa 0a 	jmp	0x1554	; 0x1554 <__epilogue_restores__+0x20>

0000183a <__ultoa_invert>:
    183a:	fa 01       	movw	r30, r20
    183c:	aa 27       	eor	r26, r26
    183e:	28 30       	cpi	r18, 0x08	; 8
    1840:	51 f1       	breq	.+84     	; 0x1896 <__ultoa_invert+0x5c>
    1842:	20 31       	cpi	r18, 0x10	; 16
    1844:	81 f1       	breq	.+96     	; 0x18a6 <__ultoa_invert+0x6c>
    1846:	e8 94       	clt
    1848:	6f 93       	push	r22
    184a:	6e 7f       	andi	r22, 0xFE	; 254
    184c:	6e 5f       	subi	r22, 0xFE	; 254
    184e:	7f 4f       	sbci	r23, 0xFF	; 255
    1850:	8f 4f       	sbci	r24, 0xFF	; 255
    1852:	9f 4f       	sbci	r25, 0xFF	; 255
    1854:	af 4f       	sbci	r26, 0xFF	; 255
    1856:	b1 e0       	ldi	r27, 0x01	; 1
    1858:	3e d0       	rcall	.+124    	; 0x18d6 <__ultoa_invert+0x9c>
    185a:	b4 e0       	ldi	r27, 0x04	; 4
    185c:	3c d0       	rcall	.+120    	; 0x18d6 <__ultoa_invert+0x9c>
    185e:	67 0f       	add	r22, r23
    1860:	78 1f       	adc	r23, r24
    1862:	89 1f       	adc	r24, r25
    1864:	9a 1f       	adc	r25, r26
    1866:	a1 1d       	adc	r26, r1
    1868:	68 0f       	add	r22, r24
    186a:	79 1f       	adc	r23, r25
    186c:	8a 1f       	adc	r24, r26
    186e:	91 1d       	adc	r25, r1
    1870:	a1 1d       	adc	r26, r1
    1872:	6a 0f       	add	r22, r26
    1874:	71 1d       	adc	r23, r1
    1876:	81 1d       	adc	r24, r1
    1878:	91 1d       	adc	r25, r1
    187a:	a1 1d       	adc	r26, r1
    187c:	20 d0       	rcall	.+64     	; 0x18be <__ultoa_invert+0x84>
    187e:	09 f4       	brne	.+2      	; 0x1882 <__ultoa_invert+0x48>
    1880:	68 94       	set
    1882:	3f 91       	pop	r19
    1884:	2a e0       	ldi	r18, 0x0A	; 10
    1886:	26 9f       	mul	r18, r22
    1888:	11 24       	eor	r1, r1
    188a:	30 19       	sub	r19, r0
    188c:	30 5d       	subi	r19, 0xD0	; 208
    188e:	31 93       	st	Z+, r19
    1890:	de f6       	brtc	.-74     	; 0x1848 <__ultoa_invert+0xe>
    1892:	cf 01       	movw	r24, r30
    1894:	08 95       	ret
    1896:	46 2f       	mov	r20, r22
    1898:	47 70       	andi	r20, 0x07	; 7
    189a:	40 5d       	subi	r20, 0xD0	; 208
    189c:	41 93       	st	Z+, r20
    189e:	b3 e0       	ldi	r27, 0x03	; 3
    18a0:	0f d0       	rcall	.+30     	; 0x18c0 <__ultoa_invert+0x86>
    18a2:	c9 f7       	brne	.-14     	; 0x1896 <__ultoa_invert+0x5c>
    18a4:	f6 cf       	rjmp	.-20     	; 0x1892 <__ultoa_invert+0x58>
    18a6:	46 2f       	mov	r20, r22
    18a8:	4f 70       	andi	r20, 0x0F	; 15
    18aa:	40 5d       	subi	r20, 0xD0	; 208
    18ac:	4a 33       	cpi	r20, 0x3A	; 58
    18ae:	18 f0       	brcs	.+6      	; 0x18b6 <__ultoa_invert+0x7c>
    18b0:	49 5d       	subi	r20, 0xD9	; 217
    18b2:	31 fd       	sbrc	r19, 1
    18b4:	40 52       	subi	r20, 0x20	; 32
    18b6:	41 93       	st	Z+, r20
    18b8:	02 d0       	rcall	.+4      	; 0x18be <__ultoa_invert+0x84>
    18ba:	a9 f7       	brne	.-22     	; 0x18a6 <__ultoa_invert+0x6c>
    18bc:	ea cf       	rjmp	.-44     	; 0x1892 <__ultoa_invert+0x58>
    18be:	b4 e0       	ldi	r27, 0x04	; 4
    18c0:	a6 95       	lsr	r26
    18c2:	97 95       	ror	r25
    18c4:	87 95       	ror	r24
    18c6:	77 95       	ror	r23
    18c8:	67 95       	ror	r22
    18ca:	ba 95       	dec	r27
    18cc:	c9 f7       	brne	.-14     	; 0x18c0 <__ultoa_invert+0x86>
    18ce:	00 97       	sbiw	r24, 0x00	; 0
    18d0:	61 05       	cpc	r22, r1
    18d2:	71 05       	cpc	r23, r1
    18d4:	08 95       	ret
    18d6:	9b 01       	movw	r18, r22
    18d8:	ac 01       	movw	r20, r24
    18da:	0a 2e       	mov	r0, r26
    18dc:	06 94       	lsr	r0
    18de:	57 95       	ror	r21
    18e0:	47 95       	ror	r20
    18e2:	37 95       	ror	r19
    18e4:	27 95       	ror	r18
    18e6:	ba 95       	dec	r27
    18e8:	c9 f7       	brne	.-14     	; 0x18dc <__ultoa_invert+0xa2>
    18ea:	62 0f       	add	r22, r18
    18ec:	73 1f       	adc	r23, r19
    18ee:	84 1f       	adc	r24, r20
    18f0:	95 1f       	adc	r25, r21
    18f2:	a0 1d       	adc	r26, r0
    18f4:	08 95       	ret

000018f6 <_exit>:
    18f6:	f8 94       	cli

000018f8 <__stop_program>:
    18f8:	ff cf       	rjmp	.-2      	; 0x18f8 <__stop_program>
