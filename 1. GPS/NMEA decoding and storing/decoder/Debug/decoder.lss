
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009c  00800100  0000152e  000015c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000152e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080019c  0080019c  0000165e  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  0000165e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000138  00000000  00000000  00001730  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001395  00000000  00000000  00001868  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b91  00000000  00000000  00002bfd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000091e  00000000  00000000  0000378e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  000040ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000073a  00000000  00000000  000042cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000630  00000000  00000000  00004a06  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00005036  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       8:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      4c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ee e2       	ldi	r30, 0x2E	; 46
     17e:	f5 e1       	ldi	r31, 0x15	; 21
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 39       	cpi	r26, 0x9C	; 156
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e9       	ldi	r26, 0x9C	; 156
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a2 3a       	cpi	r26, 0xA2	; 162
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
     1a0:	0c 94 95 0a 	jmp	0x152a	; 0x152a <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     1a8:	0e 94 13 03 	call	0x626	; 0x626 <system_init>
     1ac:	08 95       	ret

000001ae <main>:

char msg1[80] = "$GPGGA,133800.000,5454.7212,N,00946.8262,E,2,06,1.58,28.1,M,44.6,M,0000,0000*52";


int main(void)
{
     1ae:	0f 93       	push	r16
     1b0:	1f 93       	push	r17
     1b2:	cf 93       	push	r28
     1b4:	df 93       	push	r29
     1b6:	cd b7       	in	r28, 0x3d	; 61
     1b8:	de b7       	in	r29, 0x3e	; 62
     1ba:	64 97       	sbiw	r28, 0x14	; 20
     1bc:	0f b6       	in	r0, 0x3f	; 63
     1be:	f8 94       	cli
     1c0:	de bf       	out	0x3e, r29	; 62
     1c2:	0f be       	out	0x3f, r0	; 63
     1c4:	cd bf       	out	0x3d, r28	; 61
	atmel_start_init();
     1c6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <atmel_start_init>
	
	struct DATA NMEA1;	//Create new instance of Data.

	if(GPS_Decode(msg1, &NMEA1))	//Take message as char array and reference to data struct. Returns true if checksum is okay.
     1ca:	be 01       	movw	r22, r28
     1cc:	6f 5f       	subi	r22, 0xFF	; 255
     1ce:	7f 4f       	sbci	r23, 0xFF	; 255
     1d0:	80 e0       	ldi	r24, 0x00	; 0
     1d2:	91 e0       	ldi	r25, 0x01	; 1
     1d4:	0e 94 fd 01 	call	0x3fa	; 0x3fa <GPS_Decode>
     1d8:	89 2b       	or	r24, r25
     1da:	09 f4       	brne	.+2      	; 0x1de <main+0x30>
     1dc:	44 c0       	rjmp	.+136    	; 0x266 <main+0xb8>
	{
		printf("Lat:\t%f ", NMEA1.LAT);
     1de:	8c 81       	ldd	r24, Y+4	; 0x04
     1e0:	8f 93       	push	r24
     1e2:	8b 81       	ldd	r24, Y+3	; 0x03
     1e4:	8f 93       	push	r24
     1e6:	8a 81       	ldd	r24, Y+2	; 0x02
     1e8:	8f 93       	push	r24
     1ea:	89 81       	ldd	r24, Y+1	; 0x01
     1ec:	8f 93       	push	r24
     1ee:	8a e6       	ldi	r24, 0x6A	; 106
     1f0:	91 e0       	ldi	r25, 0x01	; 1
     1f2:	9f 93       	push	r25
     1f4:	8f 93       	push	r24
     1f6:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
		printf("%c\n", NMEA1.LATdir);
     1fa:	8d 81       	ldd	r24, Y+5	; 0x05
     1fc:	1f 92       	push	r1
     1fe:	8f 93       	push	r24
     200:	03 e7       	ldi	r16, 0x73	; 115
     202:	11 e0       	ldi	r17, 0x01	; 1
     204:	1f 93       	push	r17
     206:	0f 93       	push	r16
     208:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
		printf("Lon:\t%f ", NMEA1.LON);
     20c:	89 85       	ldd	r24, Y+9	; 0x09
     20e:	8f 93       	push	r24
     210:	88 85       	ldd	r24, Y+8	; 0x08
     212:	8f 93       	push	r24
     214:	8f 81       	ldd	r24, Y+7	; 0x07
     216:	8f 93       	push	r24
     218:	8e 81       	ldd	r24, Y+6	; 0x06
     21a:	8f 93       	push	r24
     21c:	87 e7       	ldi	r24, 0x77	; 119
     21e:	91 e0       	ldi	r25, 0x01	; 1
     220:	9f 93       	push	r25
     222:	8f 93       	push	r24
     224:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
		printf("%c\n", NMEA1.LONdir);
     228:	8a 85       	ldd	r24, Y+10	; 0x0a
     22a:	1f 92       	push	r1
     22c:	8f 93       	push	r24
     22e:	1f 93       	push	r17
     230:	0f 93       	push	r16
     232:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
		printf("Quality: %d\n", NMEA1.quality);
     236:	8b 85       	ldd	r24, Y+11	; 0x0b
     238:	1f 92       	push	r1
     23a:	8f 93       	push	r24
     23c:	80 e8       	ldi	r24, 0x80	; 128
     23e:	91 e0       	ldi	r25, 0x01	; 1
     240:	9f 93       	push	r25
     242:	8f 93       	push	r24
     244:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
		printf("Age: %d\n", NMEA1.ageOfCorrection);
     248:	8c 85       	ldd	r24, Y+12	; 0x0c
     24a:	1f 92       	push	r1
     24c:	8f 93       	push	r24
     24e:	8d e8       	ldi	r24, 0x8D	; 141
     250:	91 e0       	ldi	r25, 0x01	; 1
     252:	9f 93       	push	r25
     254:	8f 93       	push	r24
     256:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
     25a:	0f b6       	in	r0, 0x3f	; 63
     25c:	f8 94       	cli
     25e:	de bf       	out	0x3e, r29	; 62
     260:	0f be       	out	0x3f, r0	; 63
     262:	cd bf       	out	0x3d, r28	; 61
     264:	08 c0       	rjmp	.+16     	; 0x276 <main+0xc8>
	}
	else
	{
		printf("NoGo!");
     266:	86 e9       	ldi	r24, 0x96	; 150
     268:	91 e0       	ldi	r25, 0x01	; 1
     26a:	9f 93       	push	r25
     26c:	8f 93       	push	r24
     26e:	0e 94 21 0a 	call	0x1442	; 0x1442 <printf>
     272:	0f 90       	pop	r0
     274:	0f 90       	pop	r0
	}
}
     276:	80 e0       	ldi	r24, 0x00	; 0
     278:	90 e0       	ldi	r25, 0x00	; 0
     27a:	64 96       	adiw	r28, 0x14	; 20
     27c:	0f b6       	in	r0, 0x3f	; 63
     27e:	f8 94       	cli
     280:	de bf       	out	0x3e, r29	; 62
     282:	0f be       	out	0x3f, r0	; 63
     284:	cd bf       	out	0x3d, r28	; 61
     286:	df 91       	pop	r29
     288:	cf 91       	pop	r28
     28a:	1f 91       	pop	r17
     28c:	0f 91       	pop	r16
     28e:	08 95       	ret

00000290 <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     290:	fc 01       	movw	r30, r24
	GPS_Data->LON = 0.0;
     292:	15 82       	std	Z+5, r1	; 0x05
     294:	16 82       	std	Z+6, r1	; 0x06
     296:	17 82       	std	Z+7, r1	; 0x07
     298:	10 86       	std	Z+8, r1	; 0x08
	GPS_Data->LAT = 0.0;
     29a:	10 82       	st	Z, r1
     29c:	11 82       	std	Z+1, r1	; 0x01
     29e:	12 82       	std	Z+2, r1	; 0x02
     2a0:	13 82       	std	Z+3, r1	; 0x03
	GPS_Data->ageOfCorrection = 0;
     2a2:	13 86       	std	Z+11, r1	; 0x0b
	GPS_Data->quality=0;
     2a4:	12 86       	std	Z+10, r1	; 0x0a
	GPS_Data->Speed=0;
     2a6:	10 8a       	std	Z+16, r1	; 0x10
     2a8:	11 8a       	std	Z+17, r1	; 0x11
     2aa:	12 8a       	std	Z+18, r1	; 0x12
     2ac:	13 8a       	std	Z+19, r1	; 0x13
	GPS_Data->TrueDir=0;
     2ae:	14 86       	std	Z+12, r1	; 0x0c
     2b0:	15 86       	std	Z+13, r1	; 0x0d
     2b2:	16 86       	std	Z+14, r1	; 0x0e
     2b4:	17 86       	std	Z+15, r1	; 0x0f
     2b6:	08 95       	ret

000002b8 <checksum>:
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
     2b8:	fc 01       	movw	r30, r24
     2ba:	20 81       	ld	r18, Z
     2bc:	24 32       	cpi	r18, 0x24	; 36
     2be:	61 f5       	brne	.+88     	; 0x318 <checksum+0x60>
	{
		i++;
		while(msg[i] != '*')
     2c0:	21 81       	ldd	r18, Z+1	; 0x01
     2c2:	2a 32       	cpi	r18, 0x2A	; 42
     2c4:	59 f1       	breq	.+86     	; 0x31c <checksum+0x64>
     2c6:	dc 01       	movw	r26, r24
     2c8:	12 96       	adiw	r26, 0x02	; 2
     2ca:	60 e0       	ldi	r22, 0x00	; 0
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	41 e0       	ldi	r20, 0x01	; 1
     2d0:	50 e0       	ldi	r21, 0x00	; 0
		{
			checksum ^= (msg[i]-48);
     2d2:	30 e0       	ldi	r19, 0x00	; 0
     2d4:	20 53       	subi	r18, 0x30	; 48
     2d6:	31 09       	sbc	r19, r1
     2d8:	62 27       	eor	r22, r18
     2da:	73 27       	eor	r23, r19
			i++;
     2dc:	4f 5f       	subi	r20, 0xFF	; 255
     2de:	5f 4f       	sbci	r21, 0xFF	; 255
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     2e0:	2d 91       	ld	r18, X+
     2e2:	2a 32       	cpi	r18, 0x2A	; 42
     2e4:	b1 f7       	brne	.-20     	; 0x2d2 <checksum+0x1a>
     2e6:	1e c0       	rjmp	.+60     	; 0x324 <checksum+0x6c>
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
			{
				nmea_sum += 1*(msg[i]-48);
     2e8:	42 2f       	mov	r20, r18
     2ea:	50 e0       	ldi	r21, 0x00	; 0
     2ec:	40 53       	subi	r20, 0x30	; 48
     2ee:	51 09       	sbc	r21, r1
     2f0:	84 0f       	add	r24, r20
     2f2:	95 1f       	adc	r25, r21
			}
			
			if((msg[i]>='A') && (msg[i]<='F'))
     2f4:	3f eb       	ldi	r19, 0xBF	; 191
     2f6:	32 0f       	add	r19, r18
     2f8:	36 30       	cpi	r19, 0x06	; 6
     2fa:	28 f4       	brcc	.+10     	; 0x306 <checksum+0x4e>
			{
				nmea_sum += 1*(msg[i]-55);
     2fc:	30 e0       	ldi	r19, 0x00	; 0
     2fe:	27 53       	subi	r18, 0x37	; 55
     300:	31 09       	sbc	r19, r1
     302:	82 0f       	add	r24, r18
     304:	93 1f       	adc	r25, r19
			
		}
		
		if(checksum==(nmea_sum-48))
		{
			return 1;
     306:	9c 01       	movw	r18, r24
     308:	20 53       	subi	r18, 0x30	; 48
     30a:	31 09       	sbc	r19, r1
     30c:	81 e0       	ldi	r24, 0x01	; 1
     30e:	26 17       	cp	r18, r22
     310:	37 07       	cpc	r19, r23
     312:	d1 f0       	breq	.+52     	; 0x348 <checksum+0x90>
     314:	80 e0       	ldi	r24, 0x00	; 0
     316:	08 95       	ret
		{
			return 0;
		}
		
	}
return 0; 
     318:	80 e0       	ldi	r24, 0x00	; 0
     31a:	08 95       	ret
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	70 e0       	ldi	r23, 0x00	; 0
     320:	41 e0       	ldi	r20, 0x01	; 1
     322:	50 e0       	ldi	r21, 0x00	; 0
		
		if(msg[i] == '*')
		{
			////////////MSB
			i++;
			nmea_sum = 16*(msg[i]-48);
     324:	fc 01       	movw	r30, r24
     326:	e4 0f       	add	r30, r20
     328:	f5 1f       	adc	r31, r21
     32a:	81 81       	ldd	r24, Z+1	; 0x01
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	c0 97       	sbiw	r24, 0x30	; 48
     330:	82 95       	swap	r24
     332:	92 95       	swap	r25
     334:	90 7f       	andi	r25, 0xF0	; 240
     336:	98 27       	eor	r25, r24
     338:	80 7f       	andi	r24, 0xF0	; 240
     33a:	98 27       	eor	r25, r24
			
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     33c:	22 81       	ldd	r18, Z+2	; 0x02
     33e:	30 ed       	ldi	r19, 0xD0	; 208
     340:	32 0f       	add	r19, r18
     342:	3a 30       	cpi	r19, 0x0A	; 10
     344:	88 f2       	brcs	.-94     	; 0x2e8 <checksum+0x30>
     346:	d6 cf       	rjmp	.-84     	; 0x2f4 <checksum+0x3c>
			return 0;
		}
		
	}
return 0; 
}
     348:	08 95       	ret

0000034a <MessageType>:

uint8_t MessageType(char* msg){
     34a:	cf 93       	push	r28
     34c:	df 93       	push	r29
     34e:	cd b7       	in	r28, 0x3d	; 61
     350:	de b7       	in	r29, 0x3e	; 62
     352:	2f 97       	sbiw	r28, 0x0f	; 15
     354:	0f b6       	in	r0, 0x3f	; 63
     356:	f8 94       	cli
     358:	de bf       	out	0x3e, r29	; 62
     35a:	0f be       	out	0x3f, r0	; 63
     35c:	cd bf       	out	0x3d, r28	; 61
	if(msg[0]=='$')
     35e:	fc 01       	movw	r30, r24
     360:	20 81       	ld	r18, Z
     362:	24 32       	cpi	r18, 0x24	; 36
     364:	09 f0       	breq	.+2      	; 0x368 <MessageType+0x1e>
     366:	3f c0       	rjmp	.+126    	; 0x3e6 <MessageType+0x9c>
     368:	dc 01       	movw	r26, r24
     36a:	11 96       	adiw	r26, 0x01	; 1
     36c:	fe 01       	movw	r30, r28
     36e:	3b 96       	adiw	r30, 0x0b	; 11
     370:	9e 01       	movw	r18, r28
     372:	20 5f       	subi	r18, 0xF0	; 240
     374:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     376:	8d 91       	ld	r24, X+
     378:	9f eb       	ldi	r25, 0xBF	; 191
     37a:	98 0f       	add	r25, r24
     37c:	9a 31       	cpi	r25, 0x1A	; 26
     37e:	08 f4       	brcc	.+2      	; 0x382 <MessageType+0x38>
			{
				msg_type[k]	= msg[k+1];
     380:	80 83       	st	Z, r24
     382:	31 96       	adiw	r30, 0x01	; 1

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     384:	e2 17       	cp	r30, r18
     386:	f3 07       	cpc	r31, r19
     388:	b1 f7       	brne	.-20     	; 0x376 <MessageType+0x2c>
			else
			{
				//printf("Failed message type\n");
			}
		}
		char msg_gpgga[5] = "GPGGA";
     38a:	85 e0       	ldi	r24, 0x05	; 5
     38c:	ee e5       	ldi	r30, 0x5E	; 94
     38e:	f1 e0       	ldi	r31, 0x01	; 1
     390:	de 01       	movw	r26, r28
     392:	16 96       	adiw	r26, 0x06	; 6
     394:	01 90       	ld	r0, Z+
     396:	0d 92       	st	X+, r0
     398:	8a 95       	dec	r24
     39a:	e1 f7       	brne	.-8      	; 0x394 <MessageType+0x4a>
		char msg_gpvtg[5] = "GPVTG";
     39c:	85 e0       	ldi	r24, 0x05	; 5
     39e:	e4 e6       	ldi	r30, 0x64	; 100
     3a0:	f1 e0       	ldi	r31, 0x01	; 1
     3a2:	de 01       	movw	r26, r28
     3a4:	11 96       	adiw	r26, 0x01	; 1
     3a6:	01 90       	ld	r0, Z+
     3a8:	0d 92       	st	X+, r0
     3aa:	8a 95       	dec	r24
     3ac:	e1 f7       	brne	.-8      	; 0x3a6 <MessageType+0x5c>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     3ae:	45 e0       	ldi	r20, 0x05	; 5
     3b0:	50 e0       	ldi	r21, 0x00	; 0
     3b2:	be 01       	movw	r22, r28
     3b4:	6a 5f       	subi	r22, 0xFA	; 250
     3b6:	7f 4f       	sbci	r23, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	0b 96       	adiw	r24, 0x0b	; 11
     3bc:	0e 94 cc 09 	call	0x1398	; 0x1398 <strncmp>
     3c0:	89 2b       	or	r24, r25
     3c2:	69 f0       	breq	.+26     	; 0x3de <MessageType+0x94>
		{
			return GPGGA;
		}
		else if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     3c4:	45 e0       	ldi	r20, 0x05	; 5
     3c6:	50 e0       	ldi	r21, 0x00	; 0
     3c8:	be 01       	movw	r22, r28
     3ca:	6f 5f       	subi	r22, 0xFF	; 255
     3cc:	7f 4f       	sbci	r23, 0xFF	; 255
     3ce:	ce 01       	movw	r24, r28
     3d0:	0b 96       	adiw	r24, 0x0b	; 11
     3d2:	0e 94 cc 09 	call	0x1398	; 0x1398 <strncmp>
     3d6:	89 2b       	or	r24, r25
     3d8:	21 f0       	breq	.+8      	; 0x3e2 <MessageType+0x98>
		{
			return GPVTG;
		}
	}
	return 0; 
     3da:	80 e0       	ldi	r24, 0x00	; 0
     3dc:	05 c0       	rjmp	.+10     	; 0x3e8 <MessageType+0x9e>
		char msg_gpgga[5] = "GPGGA";
		char msg_gpvtg[5] = "GPVTG";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     3de:	81 e0       	ldi	r24, 0x01	; 1
     3e0:	03 c0       	rjmp	.+6      	; 0x3e8 <MessageType+0x9e>
		}
		else if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     3e2:	82 e0       	ldi	r24, 0x02	; 2
     3e4:	01 c0       	rjmp	.+2      	; 0x3e8 <MessageType+0x9e>
		}
	}
	return 0; 
     3e6:	80 e0       	ldi	r24, 0x00	; 0
}
     3e8:	2f 96       	adiw	r28, 0x0f	; 15
     3ea:	0f b6       	in	r0, 0x3f	; 63
     3ec:	f8 94       	cli
     3ee:	de bf       	out	0x3e, r29	; 62
     3f0:	0f be       	out	0x3f, r0	; 63
     3f2:	cd bf       	out	0x3d, r28	; 61
     3f4:	df 91       	pop	r29
     3f6:	cf 91       	pop	r28
     3f8:	08 95       	ret

000003fa <GPS_Decode>:

int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
     3fa:	4f 92       	push	r4
     3fc:	5f 92       	push	r5
     3fe:	6f 92       	push	r6
     400:	7f 92       	push	r7
     402:	8f 92       	push	r8
     404:	9f 92       	push	r9
     406:	af 92       	push	r10
     408:	bf 92       	push	r11
     40a:	cf 92       	push	r12
     40c:	df 92       	push	r13
     40e:	ef 92       	push	r14
     410:	ff 92       	push	r15
     412:	0f 93       	push	r16
     414:	1f 93       	push	r17
     416:	cf 93       	push	r28
     418:	df 93       	push	r29
     41a:	8c 01       	movw	r16, r24
     41c:	7b 01       	movw	r14, r22
	///////////////////Checksum////////////////////////
	if(checksum(msg))
     41e:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <checksum>
     422:	88 23       	and	r24, r24
     424:	09 f4       	brne	.+2      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
     426:	df c0       	rjmp	.+446    	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
	{
		uint8_t type = MessageType(msg);
     428:	c8 01       	movw	r24, r16
     42a:	0e 94 a5 01 	call	0x34a	; 0x34a <MessageType>
     42e:	c8 2f       	mov	r28, r24
		init(GPS_Data);
     430:	c7 01       	movw	r24, r14
     432:	0e 94 48 01 	call	0x290	; 0x290 <init>

	switch(type)
     436:	c1 30       	cpi	r28, 0x01	; 1
     438:	09 f0       	breq	.+2      	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
     43a:	d8 c0       	rjmp	.+432    	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
				uint8_t CommaCounter=0;	//Comma counter
				float Lat_divider = 1000;	//Digit number
				float Lon_divider = 10000;
				uint8_t age = 10;
				
				while(msg[i] != '*')
     43c:	f8 01       	movw	r30, r16
     43e:	86 81       	ldd	r24, Z+6	; 0x06
     440:	8a 32       	cpi	r24, 0x2A	; 42
     442:	09 f4       	brne	.+2      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
     444:	d6 c0       	rjmp	.+428    	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
     446:	0f 2e       	mov	r0, r31
     448:	fa e0       	ldi	r31, 0x0A	; 10
     44a:	df 2e       	mov	r13, r31
     44c:	f0 2d       	mov	r31, r0
     44e:	0f 2e       	mov	r0, r31
     450:	41 2c       	mov	r4, r1
     452:	f0 e4       	ldi	r31, 0x40	; 64
     454:	5f 2e       	mov	r5, r31
     456:	fc e1       	ldi	r31, 0x1C	; 28
     458:	6f 2e       	mov	r6, r31
     45a:	f6 e4       	ldi	r31, 0x46	; 70
     45c:	7f 2e       	mov	r7, r31
     45e:	f0 2d       	mov	r31, r0
     460:	0f 2e       	mov	r0, r31
     462:	81 2c       	mov	r8, r1
     464:	91 2c       	mov	r9, r1
     466:	fa e7       	ldi	r31, 0x7A	; 122
     468:	af 2e       	mov	r10, r31
     46a:	f4 e4       	ldi	r31, 0x44	; 68
     46c:	bf 2e       	mov	r11, r31
     46e:	f0 2d       	mov	r31, r0
     470:	d0 e0       	ldi	r29, 0x00	; 0
     472:	c6 e0       	ldi	r28, 0x06	; 6
						}
						//////////////////////////////////////////////////
						case 13:
						{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
							age /= 10;
     474:	0f 2e       	mov	r0, r31
     476:	fd ec       	ldi	r31, 0xCD	; 205
     478:	cf 2e       	mov	r12, r31
     47a:	f0 2d       	mov	r31, r0
				float Lon_divider = 10000;
				uint8_t age = 10;
				
				while(msg[i] != '*')
				{
					if(msg[i] == ',')
     47c:	8c 32       	cpi	r24, 0x2C	; 44
     47e:	11 f4       	brne	.+4      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
					{
						CommaCounter++;
     480:	df 5f       	subi	r29, 0xFF	; 255
						i++;
     482:	cf 5f       	subi	r28, 0xFF	; 255
					}
					
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
     484:	d4 30       	cpi	r29, 0x04	; 4
     486:	09 f4       	brne	.+2      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
     488:	4c c0       	rjmp	.+152    	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
     48a:	28 f4       	brcc	.+10     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     48c:	d2 30       	cpi	r29, 0x02	; 2
     48e:	61 f0       	breq	.+24     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
     490:	d3 30       	cpi	r29, 0x03	; 3
     492:	d9 f1       	breq	.+118    	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
     494:	9d c0       	rjmp	.+314    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
     496:	d6 30       	cpi	r29, 0x06	; 6
     498:	09 f4       	brne	.+2      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
     49a:	7f c0       	rjmp	.+254    	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
     49c:	08 f4       	brcc	.+2      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     49e:	72 c0       	rjmp	.+228    	; 0x584 <__LOCK_REGION_LENGTH__+0x184>
     4a0:	dd 30       	cpi	r29, 0x0D	; 13
     4a2:	09 f4       	brne	.+2      	; 0x4a6 <__LOCK_REGION_LENGTH__+0xa6>
     4a4:	84 c0       	rjmp	.+264    	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
     4a6:	94 c0       	rjmp	.+296    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
					{
						case 2:		//Latitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     4a8:	f8 01       	movw	r30, r16
     4aa:	ec 0f       	add	r30, r28
     4ac:	f1 1d       	adc	r31, r1
     4ae:	60 81       	ld	r22, Z
     4b0:	86 2f       	mov	r24, r22
     4b2:	8d 7f       	andi	r24, 0xFD	; 253
     4b4:	8c 32       	cpi	r24, 0x2C	; 44
     4b6:	09 f4       	brne	.+2      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
     4b8:	8b c0       	rjmp	.+278    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							{
								GPS_Data->LAT += (msg[i] - 48.0) * Lat_divider;
     4ba:	70 e0       	ldi	r23, 0x00	; 0
     4bc:	80 e0       	ldi	r24, 0x00	; 0
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	0e 94 3c 04 	call	0x878	; 0x878 <__floatsisf>
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	40 e4       	ldi	r20, 0x40	; 64
     4ca:	52 e4       	ldi	r21, 0x42	; 66
     4cc:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__subsf3>
     4d0:	a5 01       	movw	r20, r10
     4d2:	94 01       	movw	r18, r8
     4d4:	0e 94 c8 04 	call	0x990	; 0x990 <__mulsf3>
     4d8:	9b 01       	movw	r18, r22
     4da:	ac 01       	movw	r20, r24
     4dc:	f7 01       	movw	r30, r14
     4de:	60 81       	ld	r22, Z
     4e0:	71 81       	ldd	r23, Z+1	; 0x01
     4e2:	82 81       	ldd	r24, Z+2	; 0x02
     4e4:	93 81       	ldd	r25, Z+3	; 0x03
     4e6:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__addsf3>
     4ea:	f7 01       	movw	r30, r14
     4ec:	60 83       	st	Z, r22
     4ee:	71 83       	std	Z+1, r23	; 0x01
     4f0:	82 83       	std	Z+2, r24	; 0x02
     4f2:	93 83       	std	Z+3, r25	; 0x03
								Lat_divider /= 10;
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e0       	ldi	r19, 0x00	; 0
     4f8:	40 e2       	ldi	r20, 0x20	; 32
     4fa:	51 e4       	ldi	r21, 0x41	; 65
     4fc:	c5 01       	movw	r24, r10
     4fe:	b4 01       	movw	r22, r8
     500:	0e 94 c8 03 	call	0x790	; 0x790 <__divsf3>
     504:	4b 01       	movw	r8, r22
     506:	5c 01       	movw	r10, r24
     508:	63 c0       	rjmp	.+198    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							break;
						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
						{
							if(msg[i]>='A' && msg[i]<='Z')
     50a:	f8 01       	movw	r30, r16
     50c:	ec 0f       	add	r30, r28
     50e:	f1 1d       	adc	r31, r1
     510:	80 81       	ld	r24, Z
     512:	9f eb       	ldi	r25, 0xBF	; 191
     514:	98 0f       	add	r25, r24
     516:	9a 31       	cpi	r25, 0x1A	; 26
     518:	08 f0       	brcs	.+2      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     51a:	5a c0       	rjmp	.+180    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							{
								GPS_Data->LATdir = msg[i];
     51c:	f7 01       	movw	r30, r14
     51e:	84 83       	std	Z+4, r24	; 0x04
     520:	57 c0       	rjmp	.+174    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     522:	f8 01       	movw	r30, r16
     524:	ec 0f       	add	r30, r28
     526:	f1 1d       	adc	r31, r1
     528:	60 81       	ld	r22, Z
     52a:	86 2f       	mov	r24, r22
     52c:	8d 7f       	andi	r24, 0xFD	; 253
     52e:	8c 32       	cpi	r24, 0x2C	; 44
     530:	09 f4       	brne	.+2      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
     532:	4e c0       	rjmp	.+156    	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							{
								GPS_Data->LON += (msg[i] - 48.0) * Lon_divider;
     534:	70 e0       	ldi	r23, 0x00	; 0
     536:	80 e0       	ldi	r24, 0x00	; 0
     538:	90 e0       	ldi	r25, 0x00	; 0
     53a:	0e 94 3c 04 	call	0x878	; 0x878 <__floatsisf>
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	40 e4       	ldi	r20, 0x40	; 64
     544:	52 e4       	ldi	r21, 0x42	; 66
     546:	0e 94 5b 03 	call	0x6b6	; 0x6b6 <__subsf3>
     54a:	a3 01       	movw	r20, r6
     54c:	92 01       	movw	r18, r4
     54e:	0e 94 c8 04 	call	0x990	; 0x990 <__mulsf3>
     552:	9b 01       	movw	r18, r22
     554:	ac 01       	movw	r20, r24
     556:	f7 01       	movw	r30, r14
     558:	65 81       	ldd	r22, Z+5	; 0x05
     55a:	76 81       	ldd	r23, Z+6	; 0x06
     55c:	87 81       	ldd	r24, Z+7	; 0x07
     55e:	90 85       	ldd	r25, Z+8	; 0x08
     560:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <__addsf3>
     564:	f7 01       	movw	r30, r14
     566:	65 83       	std	Z+5, r22	; 0x05
     568:	76 83       	std	Z+6, r23	; 0x06
     56a:	87 83       	std	Z+7, r24	; 0x07
     56c:	90 87       	std	Z+8, r25	; 0x08
								Lon_divider /= 10;
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	40 e2       	ldi	r20, 0x20	; 32
     574:	51 e4       	ldi	r21, 0x41	; 65
     576:	c3 01       	movw	r24, r6
     578:	b2 01       	movw	r22, r4
     57a:	0e 94 c8 03 	call	0x790	; 0x790 <__divsf3>
     57e:	2b 01       	movw	r4, r22
     580:	3c 01       	movw	r6, r24
     582:	26 c0       	rjmp	.+76     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							break;
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
						{
							if(msg[i]>='A' && msg[i]<='Z')
     584:	f8 01       	movw	r30, r16
     586:	ec 0f       	add	r30, r28
     588:	f1 1d       	adc	r31, r1
     58a:	80 81       	ld	r24, Z
     58c:	9f eb       	ldi	r25, 0xBF	; 191
     58e:	98 0f       	add	r25, r24
     590:	9a 31       	cpi	r25, 0x1A	; 26
     592:	f0 f4       	brcc	.+60     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							{
								GPS_Data->LONdir = msg[i];
     594:	f7 01       	movw	r30, r14
     596:	81 87       	std	Z+9, r24	; 0x09
     598:	1b c0       	rjmp	.+54     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
     59a:	f8 01       	movw	r30, r16
     59c:	ec 0f       	add	r30, r28
     59e:	f1 1d       	adc	r31, r1
     5a0:	80 81       	ld	r24, Z
     5a2:	80 53       	subi	r24, 0x30	; 48
     5a4:	86 30       	cpi	r24, 0x06	; 6
     5a6:	a0 f4       	brcc	.+40     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							{
								GPS_Data->quality = msg[i] - 48;
     5a8:	f7 01       	movw	r30, r14
     5aa:	82 87       	std	Z+10, r24	; 0x0a
     5ac:	11 c0       	rjmp	.+34     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
							break;
						}
						//////////////////////////////////////////////////
						case 13:
						{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
     5ae:	f8 01       	movw	r30, r16
     5b0:	ec 0f       	add	r30, r28
     5b2:	f1 1d       	adc	r31, r1
     5b4:	90 81       	ld	r25, Z
     5b6:	90 53       	subi	r25, 0x30	; 48
     5b8:	f7 01       	movw	r30, r14
     5ba:	83 85       	ldd	r24, Z+11	; 0x0b
     5bc:	9d 9d       	mul	r25, r13
     5be:	80 0d       	add	r24, r0
     5c0:	11 24       	eor	r1, r1
     5c2:	83 87       	std	Z+11, r24	; 0x0b
							age /= 10;
     5c4:	dc 9c       	mul	r13, r12
     5c6:	d1 2c       	mov	r13, r1
     5c8:	11 24       	eor	r1, r1
     5ca:	d6 94       	lsr	r13
     5cc:	d6 94       	lsr	r13
     5ce:	d6 94       	lsr	r13
							break;
						}
					}
					///////////COMMA SWITCH END!////////////////////////
					i++;
     5d0:	cf 5f       	subi	r28, 0xFF	; 255
				uint8_t CommaCounter=0;	//Comma counter
				float Lat_divider = 1000;	//Digit number
				float Lon_divider = 10000;
				uint8_t age = 10;
				
				while(msg[i] != '*')
     5d2:	f8 01       	movw	r30, r16
     5d4:	ec 0f       	add	r30, r28
     5d6:	f1 1d       	adc	r31, r1
     5d8:	80 81       	ld	r24, Z
     5da:	8a 32       	cpi	r24, 0x2A	; 42
     5dc:	09 f0       	breq	.+2      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
     5de:	4e cf       	rjmp	.-356    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		return 1;
     5e0:	81 e0       	ldi	r24, 0x01	; 1
     5e2:	90 e0       	ldi	r25, 0x00	; 0
     5e4:	08 c0       	rjmp	.+16     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
	}
	else
	{
		return 0;
     5e6:	80 e0       	ldi	r24, 0x00	; 0
     5e8:	90 e0       	ldi	r25, 0x00	; 0
     5ea:	05 c0       	rjmp	.+10     	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		return 1;
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
     5f2:	81 e0       	ldi	r24, 0x01	; 1
     5f4:	90 e0       	ldi	r25, 0x00	; 0
	}
	else
	{
		return 0;
	}
     5f6:	df 91       	pop	r29
     5f8:	cf 91       	pop	r28
     5fa:	1f 91       	pop	r17
     5fc:	0f 91       	pop	r16
     5fe:	ff 90       	pop	r15
     600:	ef 90       	pop	r14
     602:	df 90       	pop	r13
     604:	cf 90       	pop	r12
     606:	bf 90       	pop	r11
     608:	af 90       	pop	r10
     60a:	9f 90       	pop	r9
     60c:	8f 90       	pop	r8
     60e:	7f 90       	pop	r7
     610:	6f 90       	pop	r6
     612:	5f 90       	pop	r5
     614:	4f 90       	pop	r4
     616:	08 95       	ret

00000618 <USART_0_initialization>:
 */
static inline void PORTD_set_pin_dir(const uint8_t pin, const enum port_dir direction)
{
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
     618:	50 98       	cbi	0x0a, 0	; 10
		DDRD &= ~(1 << pin);

		PORTD |= 1 << pin;
	} else if (pull_mode == PORT_PULL_OFF) {

		PORTD &= ~(1 << pin);
     61a:	58 98       	cbi	0x0b, 0	; 11
	switch (direction) {
	case PORT_DIR_IN:
		DDRD &= ~(1 << pin);
		break;
	case PORT_DIR_OUT:
		DDRD |= 1 << pin;
     61c:	51 9a       	sbi	0x0a, 1	; 10
static inline void PORTD_set_pin_level(const uint8_t pin, const bool level)
{
	if (level) {
		PORTD |= 1 << pin;
	} else {
		PORTD &= ~(1 << pin);
     61e:	59 98       	cbi	0x0b, 1	; 11
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
     620:	0e 94 37 03 	call	0x66e	; 0x66e <USART_0_init>
     624:	08 95       	ret

00000626 <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR = (1 << PRSPI) | (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI) | (1 << PRUSART0) | (1 << PRADC);
     626:	8f ee       	ldi	r24, 0xEF	; 239
     628:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     62c:	84 b1       	in	r24, 0x04	; 4
     62e:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     630:	85 b1       	in	r24, 0x05	; 5
     632:	9f ef       	ldi	r25, 0xFF	; 255
     634:	95 b9       	out	0x05, r25	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     636:	87 b1       	in	r24, 0x07	; 7
     638:	80 78       	andi	r24, 0x80	; 128
     63a:	87 b9       	out	0x07, r24	; 7

		PORTC |= mask;
     63c:	88 b1       	in	r24, 0x08	; 8
     63e:	8f 67       	ori	r24, 0x7F	; 127
     640:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     642:	8a b1       	in	r24, 0x0a	; 10
     644:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     646:	8b b1       	in	r24, 0x0b	; 11
     648:	9b b9       	out	0x0b, r25	; 11
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     64a:	40 e0       	ldi	r20, 0x00	; 0
     64c:	60 e8       	ldi	r22, 0x80	; 128
     64e:	81 e6       	ldi	r24, 0x61	; 97
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	0e 94 30 03 	call	0x660	; 0x660 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     656:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     658:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	USART_0_initialization();
     65a:	0e 94 0c 03 	call	0x618	; 0x618 <USART_0_initialization>
     65e:	08 95       	ret

00000660 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
     660:	2f b7       	in	r18, 0x3f	; 63
	cli
     662:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
     664:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
     666:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
     668:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
     66a:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
     66c:	08 95       	ret

0000066e <USART_0_init>:
uint8_t USART_0_read()
{
	while (!(UCSR0A & (1 << RXC0)))
		;
	return UDR0;
}
     66e:	e4 e6       	ldi	r30, 0x64	; 100
     670:	f0 e0       	ldi	r31, 0x00	; 0
     672:	80 81       	ld	r24, Z
     674:	8d 7f       	andi	r24, 0xFD	; 253
     676:	80 83       	st	Z, r24
     678:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     67c:	83 e3       	ldi	r24, 0x33	; 51
     67e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     682:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     686:	88 e9       	ldi	r24, 0x98	; 152
     688:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     68c:	80 e5       	ldi	r24, 0x50	; 80
     68e:	91 e0       	ldi	r25, 0x01	; 1
     690:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <__data_end+0x3>
     694:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__data_end+0x2>
     698:	80 e0       	ldi	r24, 0x00	; 0
     69a:	08 95       	ret

0000069c <USART_0_write>:
 *
 * \return Nothing
 */
void USART_0_write(const uint8_t data)
{
	while (!(UCSR0A & (1 << UDRE0)))
     69c:	e0 ec       	ldi	r30, 0xC0	; 192
     69e:	f0 e0       	ldi	r31, 0x00	; 0
     6a0:	90 81       	ld	r25, Z
     6a2:	95 ff       	sbrs	r25, 5
     6a4:	fd cf       	rjmp	.-6      	; 0x6a0 <USART_0_write+0x4>
		;
	UDR0 = data;
     6a6:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     6aa:	08 95       	ret

000006ac <USART_0_printCHAR>:

#if defined(__GNUC__)

int USART_0_printCHAR(char character, FILE *stream)
{
	USART_0_write(character);
     6ac:	0e 94 4e 03 	call	0x69c	; 0x69c <USART_0_write>
	return 0;
}
     6b0:	80 e0       	ldi	r24, 0x00	; 0
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	08 95       	ret

000006b6 <__subsf3>:
     6b6:	50 58       	subi	r21, 0x80	; 128

000006b8 <__addsf3>:
     6b8:	bb 27       	eor	r27, r27
     6ba:	aa 27       	eor	r26, r26
     6bc:	0e 94 73 03 	call	0x6e6	; 0x6e6 <__addsf3x>
     6c0:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_round>
     6c4:	0e 94 80 04 	call	0x900	; 0x900 <__fp_pscA>
     6c8:	38 f0       	brcs	.+14     	; 0x6d8 <__addsf3+0x20>
     6ca:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscB>
     6ce:	20 f0       	brcs	.+8      	; 0x6d8 <__addsf3+0x20>
     6d0:	39 f4       	brne	.+14     	; 0x6e0 <__addsf3+0x28>
     6d2:	9f 3f       	cpi	r25, 0xFF	; 255
     6d4:	19 f4       	brne	.+6      	; 0x6dc <__addsf3+0x24>
     6d6:	26 f4       	brtc	.+8      	; 0x6e0 <__addsf3+0x28>
     6d8:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_nan>
     6dc:	0e f4       	brtc	.+2      	; 0x6e0 <__addsf3+0x28>
     6de:	e0 95       	com	r30
     6e0:	e7 fb       	bst	r30, 7
     6e2:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>

000006e6 <__addsf3x>:
     6e6:	e9 2f       	mov	r30, r25
     6e8:	0e 94 9f 04 	call	0x93e	; 0x93e <__fp_split3>
     6ec:	58 f3       	brcs	.-42     	; 0x6c4 <__addsf3+0xc>
     6ee:	ba 17       	cp	r27, r26
     6f0:	62 07       	cpc	r22, r18
     6f2:	73 07       	cpc	r23, r19
     6f4:	84 07       	cpc	r24, r20
     6f6:	95 07       	cpc	r25, r21
     6f8:	20 f0       	brcs	.+8      	; 0x702 <__addsf3x+0x1c>
     6fa:	79 f4       	brne	.+30     	; 0x71a <__addsf3x+0x34>
     6fc:	a6 f5       	brtc	.+104    	; 0x766 <__addsf3x+0x80>
     6fe:	0c 94 c1 04 	jmp	0x982	; 0x982 <__fp_zero>
     702:	0e f4       	brtc	.+2      	; 0x706 <__addsf3x+0x20>
     704:	e0 95       	com	r30
     706:	0b 2e       	mov	r0, r27
     708:	ba 2f       	mov	r27, r26
     70a:	a0 2d       	mov	r26, r0
     70c:	0b 01       	movw	r0, r22
     70e:	b9 01       	movw	r22, r18
     710:	90 01       	movw	r18, r0
     712:	0c 01       	movw	r0, r24
     714:	ca 01       	movw	r24, r20
     716:	a0 01       	movw	r20, r0
     718:	11 24       	eor	r1, r1
     71a:	ff 27       	eor	r31, r31
     71c:	59 1b       	sub	r21, r25
     71e:	99 f0       	breq	.+38     	; 0x746 <__addsf3x+0x60>
     720:	59 3f       	cpi	r21, 0xF9	; 249
     722:	50 f4       	brcc	.+20     	; 0x738 <__addsf3x+0x52>
     724:	50 3e       	cpi	r21, 0xE0	; 224
     726:	68 f1       	brcs	.+90     	; 0x782 <__addsf3x+0x9c>
     728:	1a 16       	cp	r1, r26
     72a:	f0 40       	sbci	r31, 0x00	; 0
     72c:	a2 2f       	mov	r26, r18
     72e:	23 2f       	mov	r18, r19
     730:	34 2f       	mov	r19, r20
     732:	44 27       	eor	r20, r20
     734:	58 5f       	subi	r21, 0xF8	; 248
     736:	f3 cf       	rjmp	.-26     	; 0x71e <__addsf3x+0x38>
     738:	46 95       	lsr	r20
     73a:	37 95       	ror	r19
     73c:	27 95       	ror	r18
     73e:	a7 95       	ror	r26
     740:	f0 40       	sbci	r31, 0x00	; 0
     742:	53 95       	inc	r21
     744:	c9 f7       	brne	.-14     	; 0x738 <__addsf3x+0x52>
     746:	7e f4       	brtc	.+30     	; 0x766 <__addsf3x+0x80>
     748:	1f 16       	cp	r1, r31
     74a:	ba 0b       	sbc	r27, r26
     74c:	62 0b       	sbc	r22, r18
     74e:	73 0b       	sbc	r23, r19
     750:	84 0b       	sbc	r24, r20
     752:	ba f0       	brmi	.+46     	; 0x782 <__addsf3x+0x9c>
     754:	91 50       	subi	r25, 0x01	; 1
     756:	a1 f0       	breq	.+40     	; 0x780 <__addsf3x+0x9a>
     758:	ff 0f       	add	r31, r31
     75a:	bb 1f       	adc	r27, r27
     75c:	66 1f       	adc	r22, r22
     75e:	77 1f       	adc	r23, r23
     760:	88 1f       	adc	r24, r24
     762:	c2 f7       	brpl	.-16     	; 0x754 <__addsf3x+0x6e>
     764:	0e c0       	rjmp	.+28     	; 0x782 <__addsf3x+0x9c>
     766:	ba 0f       	add	r27, r26
     768:	62 1f       	adc	r22, r18
     76a:	73 1f       	adc	r23, r19
     76c:	84 1f       	adc	r24, r20
     76e:	48 f4       	brcc	.+18     	; 0x782 <__addsf3x+0x9c>
     770:	87 95       	ror	r24
     772:	77 95       	ror	r23
     774:	67 95       	ror	r22
     776:	b7 95       	ror	r27
     778:	f7 95       	ror	r31
     77a:	9e 3f       	cpi	r25, 0xFE	; 254
     77c:	08 f0       	brcs	.+2      	; 0x780 <__addsf3x+0x9a>
     77e:	b0 cf       	rjmp	.-160    	; 0x6e0 <__addsf3+0x28>
     780:	93 95       	inc	r25
     782:	88 0f       	add	r24, r24
     784:	08 f0       	brcs	.+2      	; 0x788 <__addsf3x+0xa2>
     786:	99 27       	eor	r25, r25
     788:	ee 0f       	add	r30, r30
     78a:	97 95       	ror	r25
     78c:	87 95       	ror	r24
     78e:	08 95       	ret

00000790 <__divsf3>:
     790:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <__divsf3x>
     794:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_round>
     798:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscB>
     79c:	58 f0       	brcs	.+22     	; 0x7b4 <__divsf3+0x24>
     79e:	0e 94 80 04 	call	0x900	; 0x900 <__fp_pscA>
     7a2:	40 f0       	brcs	.+16     	; 0x7b4 <__divsf3+0x24>
     7a4:	29 f4       	brne	.+10     	; 0x7b0 <__divsf3+0x20>
     7a6:	5f 3f       	cpi	r21, 0xFF	; 255
     7a8:	29 f0       	breq	.+10     	; 0x7b4 <__divsf3+0x24>
     7aa:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>
     7ae:	51 11       	cpse	r21, r1
     7b0:	0c 94 c2 04 	jmp	0x984	; 0x984 <__fp_szero>
     7b4:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_nan>

000007b8 <__divsf3x>:
     7b8:	0e 94 9f 04 	call	0x93e	; 0x93e <__fp_split3>
     7bc:	68 f3       	brcs	.-38     	; 0x798 <__divsf3+0x8>

000007be <__divsf3_pse>:
     7be:	99 23       	and	r25, r25
     7c0:	b1 f3       	breq	.-20     	; 0x7ae <__divsf3+0x1e>
     7c2:	55 23       	and	r21, r21
     7c4:	91 f3       	breq	.-28     	; 0x7aa <__divsf3+0x1a>
     7c6:	95 1b       	sub	r25, r21
     7c8:	55 0b       	sbc	r21, r21
     7ca:	bb 27       	eor	r27, r27
     7cc:	aa 27       	eor	r26, r26
     7ce:	62 17       	cp	r22, r18
     7d0:	73 07       	cpc	r23, r19
     7d2:	84 07       	cpc	r24, r20
     7d4:	38 f0       	brcs	.+14     	; 0x7e4 <__divsf3_pse+0x26>
     7d6:	9f 5f       	subi	r25, 0xFF	; 255
     7d8:	5f 4f       	sbci	r21, 0xFF	; 255
     7da:	22 0f       	add	r18, r18
     7dc:	33 1f       	adc	r19, r19
     7de:	44 1f       	adc	r20, r20
     7e0:	aa 1f       	adc	r26, r26
     7e2:	a9 f3       	breq	.-22     	; 0x7ce <__divsf3_pse+0x10>
     7e4:	35 d0       	rcall	.+106    	; 0x850 <__divsf3_pse+0x92>
     7e6:	0e 2e       	mov	r0, r30
     7e8:	3a f0       	brmi	.+14     	; 0x7f8 <__divsf3_pse+0x3a>
     7ea:	e0 e8       	ldi	r30, 0x80	; 128
     7ec:	32 d0       	rcall	.+100    	; 0x852 <__divsf3_pse+0x94>
     7ee:	91 50       	subi	r25, 0x01	; 1
     7f0:	50 40       	sbci	r21, 0x00	; 0
     7f2:	e6 95       	lsr	r30
     7f4:	00 1c       	adc	r0, r0
     7f6:	ca f7       	brpl	.-14     	; 0x7ea <__divsf3_pse+0x2c>
     7f8:	2b d0       	rcall	.+86     	; 0x850 <__divsf3_pse+0x92>
     7fa:	fe 2f       	mov	r31, r30
     7fc:	29 d0       	rcall	.+82     	; 0x850 <__divsf3_pse+0x92>
     7fe:	66 0f       	add	r22, r22
     800:	77 1f       	adc	r23, r23
     802:	88 1f       	adc	r24, r24
     804:	bb 1f       	adc	r27, r27
     806:	26 17       	cp	r18, r22
     808:	37 07       	cpc	r19, r23
     80a:	48 07       	cpc	r20, r24
     80c:	ab 07       	cpc	r26, r27
     80e:	b0 e8       	ldi	r27, 0x80	; 128
     810:	09 f0       	breq	.+2      	; 0x814 <__divsf3_pse+0x56>
     812:	bb 0b       	sbc	r27, r27
     814:	80 2d       	mov	r24, r0
     816:	bf 01       	movw	r22, r30
     818:	ff 27       	eor	r31, r31
     81a:	93 58       	subi	r25, 0x83	; 131
     81c:	5f 4f       	sbci	r21, 0xFF	; 255
     81e:	3a f0       	brmi	.+14     	; 0x82e <__divsf3_pse+0x70>
     820:	9e 3f       	cpi	r25, 0xFE	; 254
     822:	51 05       	cpc	r21, r1
     824:	78 f0       	brcs	.+30     	; 0x844 <__divsf3_pse+0x86>
     826:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>
     82a:	0c 94 c2 04 	jmp	0x984	; 0x984 <__fp_szero>
     82e:	5f 3f       	cpi	r21, 0xFF	; 255
     830:	e4 f3       	brlt	.-8      	; 0x82a <__divsf3_pse+0x6c>
     832:	98 3e       	cpi	r25, 0xE8	; 232
     834:	d4 f3       	brlt	.-12     	; 0x82a <__divsf3_pse+0x6c>
     836:	86 95       	lsr	r24
     838:	77 95       	ror	r23
     83a:	67 95       	ror	r22
     83c:	b7 95       	ror	r27
     83e:	f7 95       	ror	r31
     840:	9f 5f       	subi	r25, 0xFF	; 255
     842:	c9 f7       	brne	.-14     	; 0x836 <__divsf3_pse+0x78>
     844:	88 0f       	add	r24, r24
     846:	91 1d       	adc	r25, r1
     848:	96 95       	lsr	r25
     84a:	87 95       	ror	r24
     84c:	97 f9       	bld	r25, 7
     84e:	08 95       	ret
     850:	e1 e0       	ldi	r30, 0x01	; 1
     852:	66 0f       	add	r22, r22
     854:	77 1f       	adc	r23, r23
     856:	88 1f       	adc	r24, r24
     858:	bb 1f       	adc	r27, r27
     85a:	62 17       	cp	r22, r18
     85c:	73 07       	cpc	r23, r19
     85e:	84 07       	cpc	r24, r20
     860:	ba 07       	cpc	r27, r26
     862:	20 f0       	brcs	.+8      	; 0x86c <__divsf3_pse+0xae>
     864:	62 1b       	sub	r22, r18
     866:	73 0b       	sbc	r23, r19
     868:	84 0b       	sbc	r24, r20
     86a:	ba 0b       	sbc	r27, r26
     86c:	ee 1f       	adc	r30, r30
     86e:	88 f7       	brcc	.-30     	; 0x852 <__divsf3_pse+0x94>
     870:	e0 95       	com	r30
     872:	08 95       	ret

00000874 <__floatunsisf>:
     874:	e8 94       	clt
     876:	09 c0       	rjmp	.+18     	; 0x88a <__floatsisf+0x12>

00000878 <__floatsisf>:
     878:	97 fb       	bst	r25, 7
     87a:	3e f4       	brtc	.+14     	; 0x88a <__floatsisf+0x12>
     87c:	90 95       	com	r25
     87e:	80 95       	com	r24
     880:	70 95       	com	r23
     882:	61 95       	neg	r22
     884:	7f 4f       	sbci	r23, 0xFF	; 255
     886:	8f 4f       	sbci	r24, 0xFF	; 255
     888:	9f 4f       	sbci	r25, 0xFF	; 255
     88a:	99 23       	and	r25, r25
     88c:	a9 f0       	breq	.+42     	; 0x8b8 <__floatsisf+0x40>
     88e:	f9 2f       	mov	r31, r25
     890:	96 e9       	ldi	r25, 0x96	; 150
     892:	bb 27       	eor	r27, r27
     894:	93 95       	inc	r25
     896:	f6 95       	lsr	r31
     898:	87 95       	ror	r24
     89a:	77 95       	ror	r23
     89c:	67 95       	ror	r22
     89e:	b7 95       	ror	r27
     8a0:	f1 11       	cpse	r31, r1
     8a2:	f8 cf       	rjmp	.-16     	; 0x894 <__floatsisf+0x1c>
     8a4:	fa f4       	brpl	.+62     	; 0x8e4 <__floatsisf+0x6c>
     8a6:	bb 0f       	add	r27, r27
     8a8:	11 f4       	brne	.+4      	; 0x8ae <__floatsisf+0x36>
     8aa:	60 ff       	sbrs	r22, 0
     8ac:	1b c0       	rjmp	.+54     	; 0x8e4 <__floatsisf+0x6c>
     8ae:	6f 5f       	subi	r22, 0xFF	; 255
     8b0:	7f 4f       	sbci	r23, 0xFF	; 255
     8b2:	8f 4f       	sbci	r24, 0xFF	; 255
     8b4:	9f 4f       	sbci	r25, 0xFF	; 255
     8b6:	16 c0       	rjmp	.+44     	; 0x8e4 <__floatsisf+0x6c>
     8b8:	88 23       	and	r24, r24
     8ba:	11 f0       	breq	.+4      	; 0x8c0 <__floatsisf+0x48>
     8bc:	96 e9       	ldi	r25, 0x96	; 150
     8be:	11 c0       	rjmp	.+34     	; 0x8e2 <__floatsisf+0x6a>
     8c0:	77 23       	and	r23, r23
     8c2:	21 f0       	breq	.+8      	; 0x8cc <__floatsisf+0x54>
     8c4:	9e e8       	ldi	r25, 0x8E	; 142
     8c6:	87 2f       	mov	r24, r23
     8c8:	76 2f       	mov	r23, r22
     8ca:	05 c0       	rjmp	.+10     	; 0x8d6 <__floatsisf+0x5e>
     8cc:	66 23       	and	r22, r22
     8ce:	71 f0       	breq	.+28     	; 0x8ec <__floatsisf+0x74>
     8d0:	96 e8       	ldi	r25, 0x86	; 134
     8d2:	86 2f       	mov	r24, r22
     8d4:	70 e0       	ldi	r23, 0x00	; 0
     8d6:	60 e0       	ldi	r22, 0x00	; 0
     8d8:	2a f0       	brmi	.+10     	; 0x8e4 <__floatsisf+0x6c>
     8da:	9a 95       	dec	r25
     8dc:	66 0f       	add	r22, r22
     8de:	77 1f       	adc	r23, r23
     8e0:	88 1f       	adc	r24, r24
     8e2:	da f7       	brpl	.-10     	; 0x8da <__floatsisf+0x62>
     8e4:	88 0f       	add	r24, r24
     8e6:	96 95       	lsr	r25
     8e8:	87 95       	ror	r24
     8ea:	97 f9       	bld	r25, 7
     8ec:	08 95       	ret

000008ee <__fp_inf>:
     8ee:	97 f9       	bld	r25, 7
     8f0:	9f 67       	ori	r25, 0x7F	; 127
     8f2:	80 e8       	ldi	r24, 0x80	; 128
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	60 e0       	ldi	r22, 0x00	; 0
     8f8:	08 95       	ret

000008fa <__fp_nan>:
     8fa:	9f ef       	ldi	r25, 0xFF	; 255
     8fc:	80 ec       	ldi	r24, 0xC0	; 192
     8fe:	08 95       	ret

00000900 <__fp_pscA>:
     900:	00 24       	eor	r0, r0
     902:	0a 94       	dec	r0
     904:	16 16       	cp	r1, r22
     906:	17 06       	cpc	r1, r23
     908:	18 06       	cpc	r1, r24
     90a:	09 06       	cpc	r0, r25
     90c:	08 95       	ret

0000090e <__fp_pscB>:
     90e:	00 24       	eor	r0, r0
     910:	0a 94       	dec	r0
     912:	12 16       	cp	r1, r18
     914:	13 06       	cpc	r1, r19
     916:	14 06       	cpc	r1, r20
     918:	05 06       	cpc	r0, r21
     91a:	08 95       	ret

0000091c <__fp_round>:
     91c:	09 2e       	mov	r0, r25
     91e:	03 94       	inc	r0
     920:	00 0c       	add	r0, r0
     922:	11 f4       	brne	.+4      	; 0x928 <__fp_round+0xc>
     924:	88 23       	and	r24, r24
     926:	52 f0       	brmi	.+20     	; 0x93c <__fp_round+0x20>
     928:	bb 0f       	add	r27, r27
     92a:	40 f4       	brcc	.+16     	; 0x93c <__fp_round+0x20>
     92c:	bf 2b       	or	r27, r31
     92e:	11 f4       	brne	.+4      	; 0x934 <__fp_round+0x18>
     930:	60 ff       	sbrs	r22, 0
     932:	04 c0       	rjmp	.+8      	; 0x93c <__fp_round+0x20>
     934:	6f 5f       	subi	r22, 0xFF	; 255
     936:	7f 4f       	sbci	r23, 0xFF	; 255
     938:	8f 4f       	sbci	r24, 0xFF	; 255
     93a:	9f 4f       	sbci	r25, 0xFF	; 255
     93c:	08 95       	ret

0000093e <__fp_split3>:
     93e:	57 fd       	sbrc	r21, 7
     940:	90 58       	subi	r25, 0x80	; 128
     942:	44 0f       	add	r20, r20
     944:	55 1f       	adc	r21, r21
     946:	59 f0       	breq	.+22     	; 0x95e <__fp_splitA+0x10>
     948:	5f 3f       	cpi	r21, 0xFF	; 255
     94a:	71 f0       	breq	.+28     	; 0x968 <__fp_splitA+0x1a>
     94c:	47 95       	ror	r20

0000094e <__fp_splitA>:
     94e:	88 0f       	add	r24, r24
     950:	97 fb       	bst	r25, 7
     952:	99 1f       	adc	r25, r25
     954:	61 f0       	breq	.+24     	; 0x96e <__fp_splitA+0x20>
     956:	9f 3f       	cpi	r25, 0xFF	; 255
     958:	79 f0       	breq	.+30     	; 0x978 <__fp_splitA+0x2a>
     95a:	87 95       	ror	r24
     95c:	08 95       	ret
     95e:	12 16       	cp	r1, r18
     960:	13 06       	cpc	r1, r19
     962:	14 06       	cpc	r1, r20
     964:	55 1f       	adc	r21, r21
     966:	f2 cf       	rjmp	.-28     	; 0x94c <__fp_split3+0xe>
     968:	46 95       	lsr	r20
     96a:	f1 df       	rcall	.-30     	; 0x94e <__fp_splitA>
     96c:	08 c0       	rjmp	.+16     	; 0x97e <__fp_splitA+0x30>
     96e:	16 16       	cp	r1, r22
     970:	17 06       	cpc	r1, r23
     972:	18 06       	cpc	r1, r24
     974:	99 1f       	adc	r25, r25
     976:	f1 cf       	rjmp	.-30     	; 0x95a <__fp_splitA+0xc>
     978:	86 95       	lsr	r24
     97a:	71 05       	cpc	r23, r1
     97c:	61 05       	cpc	r22, r1
     97e:	08 94       	sec
     980:	08 95       	ret

00000982 <__fp_zero>:
     982:	e8 94       	clt

00000984 <__fp_szero>:
     984:	bb 27       	eor	r27, r27
     986:	66 27       	eor	r22, r22
     988:	77 27       	eor	r23, r23
     98a:	cb 01       	movw	r24, r22
     98c:	97 f9       	bld	r25, 7
     98e:	08 95       	ret

00000990 <__mulsf3>:
     990:	0e 94 db 04 	call	0x9b6	; 0x9b6 <__mulsf3x>
     994:	0c 94 8e 04 	jmp	0x91c	; 0x91c <__fp_round>
     998:	0e 94 80 04 	call	0x900	; 0x900 <__fp_pscA>
     99c:	38 f0       	brcs	.+14     	; 0x9ac <__mulsf3+0x1c>
     99e:	0e 94 87 04 	call	0x90e	; 0x90e <__fp_pscB>
     9a2:	20 f0       	brcs	.+8      	; 0x9ac <__mulsf3+0x1c>
     9a4:	95 23       	and	r25, r21
     9a6:	11 f0       	breq	.+4      	; 0x9ac <__mulsf3+0x1c>
     9a8:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>
     9ac:	0c 94 7d 04 	jmp	0x8fa	; 0x8fa <__fp_nan>
     9b0:	11 24       	eor	r1, r1
     9b2:	0c 94 c2 04 	jmp	0x984	; 0x984 <__fp_szero>

000009b6 <__mulsf3x>:
     9b6:	0e 94 9f 04 	call	0x93e	; 0x93e <__fp_split3>
     9ba:	70 f3       	brcs	.-36     	; 0x998 <__mulsf3+0x8>

000009bc <__mulsf3_pse>:
     9bc:	95 9f       	mul	r25, r21
     9be:	c1 f3       	breq	.-16     	; 0x9b0 <__mulsf3+0x20>
     9c0:	95 0f       	add	r25, r21
     9c2:	50 e0       	ldi	r21, 0x00	; 0
     9c4:	55 1f       	adc	r21, r21
     9c6:	62 9f       	mul	r22, r18
     9c8:	f0 01       	movw	r30, r0
     9ca:	72 9f       	mul	r23, r18
     9cc:	bb 27       	eor	r27, r27
     9ce:	f0 0d       	add	r31, r0
     9d0:	b1 1d       	adc	r27, r1
     9d2:	63 9f       	mul	r22, r19
     9d4:	aa 27       	eor	r26, r26
     9d6:	f0 0d       	add	r31, r0
     9d8:	b1 1d       	adc	r27, r1
     9da:	aa 1f       	adc	r26, r26
     9dc:	64 9f       	mul	r22, r20
     9de:	66 27       	eor	r22, r22
     9e0:	b0 0d       	add	r27, r0
     9e2:	a1 1d       	adc	r26, r1
     9e4:	66 1f       	adc	r22, r22
     9e6:	82 9f       	mul	r24, r18
     9e8:	22 27       	eor	r18, r18
     9ea:	b0 0d       	add	r27, r0
     9ec:	a1 1d       	adc	r26, r1
     9ee:	62 1f       	adc	r22, r18
     9f0:	73 9f       	mul	r23, r19
     9f2:	b0 0d       	add	r27, r0
     9f4:	a1 1d       	adc	r26, r1
     9f6:	62 1f       	adc	r22, r18
     9f8:	83 9f       	mul	r24, r19
     9fa:	a0 0d       	add	r26, r0
     9fc:	61 1d       	adc	r22, r1
     9fe:	22 1f       	adc	r18, r18
     a00:	74 9f       	mul	r23, r20
     a02:	33 27       	eor	r19, r19
     a04:	a0 0d       	add	r26, r0
     a06:	61 1d       	adc	r22, r1
     a08:	23 1f       	adc	r18, r19
     a0a:	84 9f       	mul	r24, r20
     a0c:	60 0d       	add	r22, r0
     a0e:	21 1d       	adc	r18, r1
     a10:	82 2f       	mov	r24, r18
     a12:	76 2f       	mov	r23, r22
     a14:	6a 2f       	mov	r22, r26
     a16:	11 24       	eor	r1, r1
     a18:	9f 57       	subi	r25, 0x7F	; 127
     a1a:	50 40       	sbci	r21, 0x00	; 0
     a1c:	9a f0       	brmi	.+38     	; 0xa44 <__mulsf3_pse+0x88>
     a1e:	f1 f0       	breq	.+60     	; 0xa5c <__mulsf3_pse+0xa0>
     a20:	88 23       	and	r24, r24
     a22:	4a f0       	brmi	.+18     	; 0xa36 <__mulsf3_pse+0x7a>
     a24:	ee 0f       	add	r30, r30
     a26:	ff 1f       	adc	r31, r31
     a28:	bb 1f       	adc	r27, r27
     a2a:	66 1f       	adc	r22, r22
     a2c:	77 1f       	adc	r23, r23
     a2e:	88 1f       	adc	r24, r24
     a30:	91 50       	subi	r25, 0x01	; 1
     a32:	50 40       	sbci	r21, 0x00	; 0
     a34:	a9 f7       	brne	.-22     	; 0xa20 <__mulsf3_pse+0x64>
     a36:	9e 3f       	cpi	r25, 0xFE	; 254
     a38:	51 05       	cpc	r21, r1
     a3a:	80 f0       	brcs	.+32     	; 0xa5c <__mulsf3_pse+0xa0>
     a3c:	0c 94 77 04 	jmp	0x8ee	; 0x8ee <__fp_inf>
     a40:	0c 94 c2 04 	jmp	0x984	; 0x984 <__fp_szero>
     a44:	5f 3f       	cpi	r21, 0xFF	; 255
     a46:	e4 f3       	brlt	.-8      	; 0xa40 <__mulsf3_pse+0x84>
     a48:	98 3e       	cpi	r25, 0xE8	; 232
     a4a:	d4 f3       	brlt	.-12     	; 0xa40 <__mulsf3_pse+0x84>
     a4c:	86 95       	lsr	r24
     a4e:	77 95       	ror	r23
     a50:	67 95       	ror	r22
     a52:	b7 95       	ror	r27
     a54:	f7 95       	ror	r31
     a56:	e7 95       	ror	r30
     a58:	9f 5f       	subi	r25, 0xFF	; 255
     a5a:	c1 f7       	brne	.-16     	; 0xa4c <__mulsf3_pse+0x90>
     a5c:	fe 2b       	or	r31, r30
     a5e:	88 0f       	add	r24, r24
     a60:	91 1d       	adc	r25, r1
     a62:	96 95       	lsr	r25
     a64:	87 95       	ror	r24
     a66:	97 f9       	bld	r25, 7
     a68:	08 95       	ret

00000a6a <vfprintf>:
     a6a:	a0 e1       	ldi	r26, 0x10	; 16
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	eb e3       	ldi	r30, 0x3B	; 59
     a70:	f5 e0       	ldi	r31, 0x05	; 5
     a72:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <__prologue_saves__>
     a76:	7c 01       	movw	r14, r24
     a78:	1b 01       	movw	r2, r22
     a7a:	6a 01       	movw	r12, r20
     a7c:	fc 01       	movw	r30, r24
     a7e:	17 82       	std	Z+7, r1	; 0x07
     a80:	16 82       	std	Z+6, r1	; 0x06
     a82:	83 81       	ldd	r24, Z+3	; 0x03
     a84:	81 ff       	sbrs	r24, 1
     a86:	44 c3       	rjmp	.+1672   	; 0x1110 <vfprintf+0x6a6>
     a88:	9e 01       	movw	r18, r28
     a8a:	2f 5f       	subi	r18, 0xFF	; 255
     a8c:	3f 4f       	sbci	r19, 0xFF	; 255
     a8e:	39 01       	movw	r6, r18
     a90:	f7 01       	movw	r30, r14
     a92:	93 81       	ldd	r25, Z+3	; 0x03
     a94:	f1 01       	movw	r30, r2
     a96:	93 fd       	sbrc	r25, 3
     a98:	85 91       	lpm	r24, Z+
     a9a:	93 ff       	sbrs	r25, 3
     a9c:	81 91       	ld	r24, Z+
     a9e:	1f 01       	movw	r2, r30
     aa0:	88 23       	and	r24, r24
     aa2:	09 f4       	brne	.+2      	; 0xaa6 <vfprintf+0x3c>
     aa4:	31 c3       	rjmp	.+1634   	; 0x1108 <vfprintf+0x69e>
     aa6:	85 32       	cpi	r24, 0x25	; 37
     aa8:	39 f4       	brne	.+14     	; 0xab8 <vfprintf+0x4e>
     aaa:	93 fd       	sbrc	r25, 3
     aac:	85 91       	lpm	r24, Z+
     aae:	93 ff       	sbrs	r25, 3
     ab0:	81 91       	ld	r24, Z+
     ab2:	1f 01       	movw	r2, r30
     ab4:	85 32       	cpi	r24, 0x25	; 37
     ab6:	39 f4       	brne	.+14     	; 0xac6 <vfprintf+0x5c>
     ab8:	b7 01       	movw	r22, r14
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     ac0:	56 01       	movw	r10, r12
     ac2:	65 01       	movw	r12, r10
     ac4:	e5 cf       	rjmp	.-54     	; 0xa90 <vfprintf+0x26>
     ac6:	10 e0       	ldi	r17, 0x00	; 0
     ac8:	51 2c       	mov	r5, r1
     aca:	91 2c       	mov	r9, r1
     acc:	ff e1       	ldi	r31, 0x1F	; 31
     ace:	f9 15       	cp	r31, r9
     ad0:	d8 f0       	brcs	.+54     	; 0xb08 <vfprintf+0x9e>
     ad2:	8b 32       	cpi	r24, 0x2B	; 43
     ad4:	79 f0       	breq	.+30     	; 0xaf4 <vfprintf+0x8a>
     ad6:	38 f4       	brcc	.+14     	; 0xae6 <vfprintf+0x7c>
     ad8:	80 32       	cpi	r24, 0x20	; 32
     ada:	79 f0       	breq	.+30     	; 0xafa <vfprintf+0x90>
     adc:	83 32       	cpi	r24, 0x23	; 35
     ade:	a1 f4       	brne	.+40     	; 0xb08 <vfprintf+0x9e>
     ae0:	f9 2d       	mov	r31, r9
     ae2:	f0 61       	ori	r31, 0x10	; 16
     ae4:	2e c0       	rjmp	.+92     	; 0xb42 <vfprintf+0xd8>
     ae6:	8d 32       	cpi	r24, 0x2D	; 45
     ae8:	61 f0       	breq	.+24     	; 0xb02 <vfprintf+0x98>
     aea:	80 33       	cpi	r24, 0x30	; 48
     aec:	69 f4       	brne	.+26     	; 0xb08 <vfprintf+0x9e>
     aee:	29 2d       	mov	r18, r9
     af0:	21 60       	ori	r18, 0x01	; 1
     af2:	2d c0       	rjmp	.+90     	; 0xb4e <vfprintf+0xe4>
     af4:	39 2d       	mov	r19, r9
     af6:	32 60       	ori	r19, 0x02	; 2
     af8:	93 2e       	mov	r9, r19
     afa:	89 2d       	mov	r24, r9
     afc:	84 60       	ori	r24, 0x04	; 4
     afe:	98 2e       	mov	r9, r24
     b00:	2a c0       	rjmp	.+84     	; 0xb56 <vfprintf+0xec>
     b02:	e9 2d       	mov	r30, r9
     b04:	e8 60       	ori	r30, 0x08	; 8
     b06:	15 c0       	rjmp	.+42     	; 0xb32 <vfprintf+0xc8>
     b08:	97 fc       	sbrc	r9, 7
     b0a:	2d c0       	rjmp	.+90     	; 0xb66 <vfprintf+0xfc>
     b0c:	20 ed       	ldi	r18, 0xD0	; 208
     b0e:	28 0f       	add	r18, r24
     b10:	2a 30       	cpi	r18, 0x0A	; 10
     b12:	88 f4       	brcc	.+34     	; 0xb36 <vfprintf+0xcc>
     b14:	96 fe       	sbrs	r9, 6
     b16:	06 c0       	rjmp	.+12     	; 0xb24 <vfprintf+0xba>
     b18:	3a e0       	ldi	r19, 0x0A	; 10
     b1a:	13 9f       	mul	r17, r19
     b1c:	20 0d       	add	r18, r0
     b1e:	11 24       	eor	r1, r1
     b20:	12 2f       	mov	r17, r18
     b22:	19 c0       	rjmp	.+50     	; 0xb56 <vfprintf+0xec>
     b24:	8a e0       	ldi	r24, 0x0A	; 10
     b26:	58 9e       	mul	r5, r24
     b28:	20 0d       	add	r18, r0
     b2a:	11 24       	eor	r1, r1
     b2c:	52 2e       	mov	r5, r18
     b2e:	e9 2d       	mov	r30, r9
     b30:	e0 62       	ori	r30, 0x20	; 32
     b32:	9e 2e       	mov	r9, r30
     b34:	10 c0       	rjmp	.+32     	; 0xb56 <vfprintf+0xec>
     b36:	8e 32       	cpi	r24, 0x2E	; 46
     b38:	31 f4       	brne	.+12     	; 0xb46 <vfprintf+0xdc>
     b3a:	96 fc       	sbrc	r9, 6
     b3c:	e5 c2       	rjmp	.+1482   	; 0x1108 <vfprintf+0x69e>
     b3e:	f9 2d       	mov	r31, r9
     b40:	f0 64       	ori	r31, 0x40	; 64
     b42:	9f 2e       	mov	r9, r31
     b44:	08 c0       	rjmp	.+16     	; 0xb56 <vfprintf+0xec>
     b46:	8c 36       	cpi	r24, 0x6C	; 108
     b48:	21 f4       	brne	.+8      	; 0xb52 <vfprintf+0xe8>
     b4a:	29 2d       	mov	r18, r9
     b4c:	20 68       	ori	r18, 0x80	; 128
     b4e:	92 2e       	mov	r9, r18
     b50:	02 c0       	rjmp	.+4      	; 0xb56 <vfprintf+0xec>
     b52:	88 36       	cpi	r24, 0x68	; 104
     b54:	41 f4       	brne	.+16     	; 0xb66 <vfprintf+0xfc>
     b56:	f1 01       	movw	r30, r2
     b58:	93 fd       	sbrc	r25, 3
     b5a:	85 91       	lpm	r24, Z+
     b5c:	93 ff       	sbrs	r25, 3
     b5e:	81 91       	ld	r24, Z+
     b60:	1f 01       	movw	r2, r30
     b62:	81 11       	cpse	r24, r1
     b64:	b3 cf       	rjmp	.-154    	; 0xacc <vfprintf+0x62>
     b66:	9b eb       	ldi	r25, 0xBB	; 187
     b68:	98 0f       	add	r25, r24
     b6a:	93 30       	cpi	r25, 0x03	; 3
     b6c:	20 f4       	brcc	.+8      	; 0xb76 <vfprintf+0x10c>
     b6e:	99 2d       	mov	r25, r9
     b70:	90 61       	ori	r25, 0x10	; 16
     b72:	80 5e       	subi	r24, 0xE0	; 224
     b74:	07 c0       	rjmp	.+14     	; 0xb84 <vfprintf+0x11a>
     b76:	9b e9       	ldi	r25, 0x9B	; 155
     b78:	98 0f       	add	r25, r24
     b7a:	93 30       	cpi	r25, 0x03	; 3
     b7c:	08 f0       	brcs	.+2      	; 0xb80 <vfprintf+0x116>
     b7e:	66 c1       	rjmp	.+716    	; 0xe4c <vfprintf+0x3e2>
     b80:	99 2d       	mov	r25, r9
     b82:	9f 7e       	andi	r25, 0xEF	; 239
     b84:	96 ff       	sbrs	r25, 6
     b86:	16 e0       	ldi	r17, 0x06	; 6
     b88:	9f 73       	andi	r25, 0x3F	; 63
     b8a:	99 2e       	mov	r9, r25
     b8c:	85 36       	cpi	r24, 0x65	; 101
     b8e:	19 f4       	brne	.+6      	; 0xb96 <vfprintf+0x12c>
     b90:	90 64       	ori	r25, 0x40	; 64
     b92:	99 2e       	mov	r9, r25
     b94:	08 c0       	rjmp	.+16     	; 0xba6 <vfprintf+0x13c>
     b96:	86 36       	cpi	r24, 0x66	; 102
     b98:	21 f4       	brne	.+8      	; 0xba2 <vfprintf+0x138>
     b9a:	39 2f       	mov	r19, r25
     b9c:	30 68       	ori	r19, 0x80	; 128
     b9e:	93 2e       	mov	r9, r19
     ba0:	02 c0       	rjmp	.+4      	; 0xba6 <vfprintf+0x13c>
     ba2:	11 11       	cpse	r17, r1
     ba4:	11 50       	subi	r17, 0x01	; 1
     ba6:	97 fe       	sbrs	r9, 7
     ba8:	07 c0       	rjmp	.+14     	; 0xbb8 <vfprintf+0x14e>
     baa:	1c 33       	cpi	r17, 0x3C	; 60
     bac:	50 f4       	brcc	.+20     	; 0xbc2 <vfprintf+0x158>
     bae:	44 24       	eor	r4, r4
     bb0:	43 94       	inc	r4
     bb2:	41 0e       	add	r4, r17
     bb4:	27 e0       	ldi	r18, 0x07	; 7
     bb6:	0b c0       	rjmp	.+22     	; 0xbce <vfprintf+0x164>
     bb8:	18 30       	cpi	r17, 0x08	; 8
     bba:	38 f0       	brcs	.+14     	; 0xbca <vfprintf+0x160>
     bbc:	27 e0       	ldi	r18, 0x07	; 7
     bbe:	17 e0       	ldi	r17, 0x07	; 7
     bc0:	05 c0       	rjmp	.+10     	; 0xbcc <vfprintf+0x162>
     bc2:	27 e0       	ldi	r18, 0x07	; 7
     bc4:	9c e3       	ldi	r25, 0x3C	; 60
     bc6:	49 2e       	mov	r4, r25
     bc8:	02 c0       	rjmp	.+4      	; 0xbce <vfprintf+0x164>
     bca:	21 2f       	mov	r18, r17
     bcc:	41 2c       	mov	r4, r1
     bce:	56 01       	movw	r10, r12
     bd0:	84 e0       	ldi	r24, 0x04	; 4
     bd2:	a8 0e       	add	r10, r24
     bd4:	b1 1c       	adc	r11, r1
     bd6:	f6 01       	movw	r30, r12
     bd8:	60 81       	ld	r22, Z
     bda:	71 81       	ldd	r23, Z+1	; 0x01
     bdc:	82 81       	ldd	r24, Z+2	; 0x02
     bde:	93 81       	ldd	r25, Z+3	; 0x03
     be0:	04 2d       	mov	r16, r4
     be2:	a3 01       	movw	r20, r6
     be4:	0e 94 e9 08 	call	0x11d2	; 0x11d2 <__ftoa_engine>
     be8:	6c 01       	movw	r12, r24
     bea:	f9 81       	ldd	r31, Y+1	; 0x01
     bec:	fc 87       	std	Y+12, r31	; 0x0c
     bee:	f0 ff       	sbrs	r31, 0
     bf0:	02 c0       	rjmp	.+4      	; 0xbf6 <vfprintf+0x18c>
     bf2:	f3 ff       	sbrs	r31, 3
     bf4:	06 c0       	rjmp	.+12     	; 0xc02 <vfprintf+0x198>
     bf6:	91 fc       	sbrc	r9, 1
     bf8:	06 c0       	rjmp	.+12     	; 0xc06 <vfprintf+0x19c>
     bfa:	92 fe       	sbrs	r9, 2
     bfc:	06 c0       	rjmp	.+12     	; 0xc0a <vfprintf+0x1a0>
     bfe:	00 e2       	ldi	r16, 0x20	; 32
     c00:	05 c0       	rjmp	.+10     	; 0xc0c <vfprintf+0x1a2>
     c02:	0d e2       	ldi	r16, 0x2D	; 45
     c04:	03 c0       	rjmp	.+6      	; 0xc0c <vfprintf+0x1a2>
     c06:	0b e2       	ldi	r16, 0x2B	; 43
     c08:	01 c0       	rjmp	.+2      	; 0xc0c <vfprintf+0x1a2>
     c0a:	00 e0       	ldi	r16, 0x00	; 0
     c0c:	8c 85       	ldd	r24, Y+12	; 0x0c
     c0e:	8c 70       	andi	r24, 0x0C	; 12
     c10:	19 f0       	breq	.+6      	; 0xc18 <vfprintf+0x1ae>
     c12:	01 11       	cpse	r16, r1
     c14:	5a c2       	rjmp	.+1204   	; 0x10ca <vfprintf+0x660>
     c16:	9b c2       	rjmp	.+1334   	; 0x114e <vfprintf+0x6e4>
     c18:	97 fe       	sbrs	r9, 7
     c1a:	10 c0       	rjmp	.+32     	; 0xc3c <vfprintf+0x1d2>
     c1c:	4c 0c       	add	r4, r12
     c1e:	fc 85       	ldd	r31, Y+12	; 0x0c
     c20:	f4 ff       	sbrs	r31, 4
     c22:	04 c0       	rjmp	.+8      	; 0xc2c <vfprintf+0x1c2>
     c24:	8a 81       	ldd	r24, Y+2	; 0x02
     c26:	81 33       	cpi	r24, 0x31	; 49
     c28:	09 f4       	brne	.+2      	; 0xc2c <vfprintf+0x1c2>
     c2a:	4a 94       	dec	r4
     c2c:	14 14       	cp	r1, r4
     c2e:	74 f5       	brge	.+92     	; 0xc8c <vfprintf+0x222>
     c30:	28 e0       	ldi	r18, 0x08	; 8
     c32:	24 15       	cp	r18, r4
     c34:	78 f5       	brcc	.+94     	; 0xc94 <vfprintf+0x22a>
     c36:	88 e0       	ldi	r24, 0x08	; 8
     c38:	48 2e       	mov	r4, r24
     c3a:	2c c0       	rjmp	.+88     	; 0xc94 <vfprintf+0x22a>
     c3c:	96 fc       	sbrc	r9, 6
     c3e:	2a c0       	rjmp	.+84     	; 0xc94 <vfprintf+0x22a>
     c40:	81 2f       	mov	r24, r17
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	8c 15       	cp	r24, r12
     c46:	9d 05       	cpc	r25, r13
     c48:	9c f0       	brlt	.+38     	; 0xc70 <vfprintf+0x206>
     c4a:	3c ef       	ldi	r19, 0xFC	; 252
     c4c:	c3 16       	cp	r12, r19
     c4e:	3f ef       	ldi	r19, 0xFF	; 255
     c50:	d3 06       	cpc	r13, r19
     c52:	74 f0       	brlt	.+28     	; 0xc70 <vfprintf+0x206>
     c54:	89 2d       	mov	r24, r9
     c56:	80 68       	ori	r24, 0x80	; 128
     c58:	98 2e       	mov	r9, r24
     c5a:	0a c0       	rjmp	.+20     	; 0xc70 <vfprintf+0x206>
     c5c:	e2 e0       	ldi	r30, 0x02	; 2
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	ec 0f       	add	r30, r28
     c62:	fd 1f       	adc	r31, r29
     c64:	e1 0f       	add	r30, r17
     c66:	f1 1d       	adc	r31, r1
     c68:	80 81       	ld	r24, Z
     c6a:	80 33       	cpi	r24, 0x30	; 48
     c6c:	19 f4       	brne	.+6      	; 0xc74 <vfprintf+0x20a>
     c6e:	11 50       	subi	r17, 0x01	; 1
     c70:	11 11       	cpse	r17, r1
     c72:	f4 cf       	rjmp	.-24     	; 0xc5c <vfprintf+0x1f2>
     c74:	97 fe       	sbrs	r9, 7
     c76:	0e c0       	rjmp	.+28     	; 0xc94 <vfprintf+0x22a>
     c78:	44 24       	eor	r4, r4
     c7a:	43 94       	inc	r4
     c7c:	41 0e       	add	r4, r17
     c7e:	81 2f       	mov	r24, r17
     c80:	90 e0       	ldi	r25, 0x00	; 0
     c82:	c8 16       	cp	r12, r24
     c84:	d9 06       	cpc	r13, r25
     c86:	2c f4       	brge	.+10     	; 0xc92 <vfprintf+0x228>
     c88:	1c 19       	sub	r17, r12
     c8a:	04 c0       	rjmp	.+8      	; 0xc94 <vfprintf+0x22a>
     c8c:	44 24       	eor	r4, r4
     c8e:	43 94       	inc	r4
     c90:	01 c0       	rjmp	.+2      	; 0xc94 <vfprintf+0x22a>
     c92:	10 e0       	ldi	r17, 0x00	; 0
     c94:	97 fe       	sbrs	r9, 7
     c96:	06 c0       	rjmp	.+12     	; 0xca4 <vfprintf+0x23a>
     c98:	1c 14       	cp	r1, r12
     c9a:	1d 04       	cpc	r1, r13
     c9c:	34 f4       	brge	.+12     	; 0xcaa <vfprintf+0x240>
     c9e:	c6 01       	movw	r24, r12
     ca0:	01 96       	adiw	r24, 0x01	; 1
     ca2:	05 c0       	rjmp	.+10     	; 0xcae <vfprintf+0x244>
     ca4:	85 e0       	ldi	r24, 0x05	; 5
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 c0       	rjmp	.+4      	; 0xcae <vfprintf+0x244>
     caa:	81 e0       	ldi	r24, 0x01	; 1
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	01 11       	cpse	r16, r1
     cb0:	01 96       	adiw	r24, 0x01	; 1
     cb2:	11 23       	and	r17, r17
     cb4:	31 f0       	breq	.+12     	; 0xcc2 <vfprintf+0x258>
     cb6:	21 2f       	mov	r18, r17
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	2f 5f       	subi	r18, 0xFF	; 255
     cbc:	3f 4f       	sbci	r19, 0xFF	; 255
     cbe:	82 0f       	add	r24, r18
     cc0:	93 1f       	adc	r25, r19
     cc2:	25 2d       	mov	r18, r5
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	82 17       	cp	r24, r18
     cc8:	93 07       	cpc	r25, r19
     cca:	14 f4       	brge	.+4      	; 0xcd0 <vfprintf+0x266>
     ccc:	58 1a       	sub	r5, r24
     cce:	01 c0       	rjmp	.+2      	; 0xcd2 <vfprintf+0x268>
     cd0:	51 2c       	mov	r5, r1
     cd2:	89 2d       	mov	r24, r9
     cd4:	89 70       	andi	r24, 0x09	; 9
     cd6:	49 f4       	brne	.+18     	; 0xcea <vfprintf+0x280>
     cd8:	55 20       	and	r5, r5
     cda:	39 f0       	breq	.+14     	; 0xcea <vfprintf+0x280>
     cdc:	b7 01       	movw	r22, r14
     cde:	80 e2       	ldi	r24, 0x20	; 32
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     ce6:	5a 94       	dec	r5
     ce8:	f7 cf       	rjmp	.-18     	; 0xcd8 <vfprintf+0x26e>
     cea:	00 23       	and	r16, r16
     cec:	29 f0       	breq	.+10     	; 0xcf8 <vfprintf+0x28e>
     cee:	b7 01       	movw	r22, r14
     cf0:	80 2f       	mov	r24, r16
     cf2:	90 e0       	ldi	r25, 0x00	; 0
     cf4:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     cf8:	93 fc       	sbrc	r9, 3
     cfa:	09 c0       	rjmp	.+18     	; 0xd0e <vfprintf+0x2a4>
     cfc:	55 20       	and	r5, r5
     cfe:	39 f0       	breq	.+14     	; 0xd0e <vfprintf+0x2a4>
     d00:	b7 01       	movw	r22, r14
     d02:	80 e3       	ldi	r24, 0x30	; 48
     d04:	90 e0       	ldi	r25, 0x00	; 0
     d06:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     d0a:	5a 94       	dec	r5
     d0c:	f7 cf       	rjmp	.-18     	; 0xcfc <vfprintf+0x292>
     d0e:	97 fe       	sbrs	r9, 7
     d10:	4c c0       	rjmp	.+152    	; 0xdaa <vfprintf+0x340>
     d12:	46 01       	movw	r8, r12
     d14:	d7 fe       	sbrs	r13, 7
     d16:	02 c0       	rjmp	.+4      	; 0xd1c <vfprintf+0x2b2>
     d18:	81 2c       	mov	r8, r1
     d1a:	91 2c       	mov	r9, r1
     d1c:	c6 01       	movw	r24, r12
     d1e:	88 19       	sub	r24, r8
     d20:	99 09       	sbc	r25, r9
     d22:	f3 01       	movw	r30, r6
     d24:	e8 0f       	add	r30, r24
     d26:	f9 1f       	adc	r31, r25
     d28:	fe 87       	std	Y+14, r31	; 0x0e
     d2a:	ed 87       	std	Y+13, r30	; 0x0d
     d2c:	96 01       	movw	r18, r12
     d2e:	24 19       	sub	r18, r4
     d30:	31 09       	sbc	r19, r1
     d32:	38 8b       	std	Y+16, r19	; 0x10
     d34:	2f 87       	std	Y+15, r18	; 0x0f
     d36:	01 2f       	mov	r16, r17
     d38:	10 e0       	ldi	r17, 0x00	; 0
     d3a:	11 95       	neg	r17
     d3c:	01 95       	neg	r16
     d3e:	11 09       	sbc	r17, r1
     d40:	3f ef       	ldi	r19, 0xFF	; 255
     d42:	83 16       	cp	r8, r19
     d44:	93 06       	cpc	r9, r19
     d46:	29 f4       	brne	.+10     	; 0xd52 <vfprintf+0x2e8>
     d48:	b7 01       	movw	r22, r14
     d4a:	8e e2       	ldi	r24, 0x2E	; 46
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     d52:	c8 14       	cp	r12, r8
     d54:	d9 04       	cpc	r13, r9
     d56:	4c f0       	brlt	.+18     	; 0xd6a <vfprintf+0x300>
     d58:	8f 85       	ldd	r24, Y+15	; 0x0f
     d5a:	98 89       	ldd	r25, Y+16	; 0x10
     d5c:	88 15       	cp	r24, r8
     d5e:	99 05       	cpc	r25, r9
     d60:	24 f4       	brge	.+8      	; 0xd6a <vfprintf+0x300>
     d62:	ed 85       	ldd	r30, Y+13	; 0x0d
     d64:	fe 85       	ldd	r31, Y+14	; 0x0e
     d66:	81 81       	ldd	r24, Z+1	; 0x01
     d68:	01 c0       	rjmp	.+2      	; 0xd6c <vfprintf+0x302>
     d6a:	80 e3       	ldi	r24, 0x30	; 48
     d6c:	f1 e0       	ldi	r31, 0x01	; 1
     d6e:	8f 1a       	sub	r8, r31
     d70:	91 08       	sbc	r9, r1
     d72:	2d 85       	ldd	r18, Y+13	; 0x0d
     d74:	3e 85       	ldd	r19, Y+14	; 0x0e
     d76:	2f 5f       	subi	r18, 0xFF	; 255
     d78:	3f 4f       	sbci	r19, 0xFF	; 255
     d7a:	3e 87       	std	Y+14, r19	; 0x0e
     d7c:	2d 87       	std	Y+13, r18	; 0x0d
     d7e:	80 16       	cp	r8, r16
     d80:	91 06       	cpc	r9, r17
     d82:	2c f0       	brlt	.+10     	; 0xd8e <vfprintf+0x324>
     d84:	b7 01       	movw	r22, r14
     d86:	90 e0       	ldi	r25, 0x00	; 0
     d88:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     d8c:	d9 cf       	rjmp	.-78     	; 0xd40 <vfprintf+0x2d6>
     d8e:	c8 14       	cp	r12, r8
     d90:	d9 04       	cpc	r13, r9
     d92:	41 f4       	brne	.+16     	; 0xda4 <vfprintf+0x33a>
     d94:	9a 81       	ldd	r25, Y+2	; 0x02
     d96:	96 33       	cpi	r25, 0x36	; 54
     d98:	20 f4       	brcc	.+8      	; 0xda2 <vfprintf+0x338>
     d9a:	95 33       	cpi	r25, 0x35	; 53
     d9c:	19 f4       	brne	.+6      	; 0xda4 <vfprintf+0x33a>
     d9e:	3c 85       	ldd	r19, Y+12	; 0x0c
     da0:	34 ff       	sbrs	r19, 4
     da2:	81 e3       	ldi	r24, 0x31	; 49
     da4:	b7 01       	movw	r22, r14
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	4e c0       	rjmp	.+156    	; 0xe46 <vfprintf+0x3dc>
     daa:	8a 81       	ldd	r24, Y+2	; 0x02
     dac:	81 33       	cpi	r24, 0x31	; 49
     dae:	19 f0       	breq	.+6      	; 0xdb6 <vfprintf+0x34c>
     db0:	9c 85       	ldd	r25, Y+12	; 0x0c
     db2:	9f 7e       	andi	r25, 0xEF	; 239
     db4:	9c 87       	std	Y+12, r25	; 0x0c
     db6:	b7 01       	movw	r22, r14
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     dbe:	11 11       	cpse	r17, r1
     dc0:	05 c0       	rjmp	.+10     	; 0xdcc <vfprintf+0x362>
     dc2:	94 fc       	sbrc	r9, 4
     dc4:	18 c0       	rjmp	.+48     	; 0xdf6 <vfprintf+0x38c>
     dc6:	85 e6       	ldi	r24, 0x65	; 101
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	17 c0       	rjmp	.+46     	; 0xdfa <vfprintf+0x390>
     dcc:	b7 01       	movw	r22, r14
     dce:	8e e2       	ldi	r24, 0x2E	; 46
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     dd6:	1e 5f       	subi	r17, 0xFE	; 254
     dd8:	82 e0       	ldi	r24, 0x02	; 2
     dda:	01 e0       	ldi	r16, 0x01	; 1
     ddc:	08 0f       	add	r16, r24
     dde:	f3 01       	movw	r30, r6
     de0:	e8 0f       	add	r30, r24
     de2:	f1 1d       	adc	r31, r1
     de4:	80 81       	ld	r24, Z
     de6:	b7 01       	movw	r22, r14
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     dee:	80 2f       	mov	r24, r16
     df0:	01 13       	cpse	r16, r17
     df2:	f3 cf       	rjmp	.-26     	; 0xdda <vfprintf+0x370>
     df4:	e6 cf       	rjmp	.-52     	; 0xdc2 <vfprintf+0x358>
     df6:	85 e4       	ldi	r24, 0x45	; 69
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	b7 01       	movw	r22, r14
     dfc:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     e00:	d7 fc       	sbrc	r13, 7
     e02:	06 c0       	rjmp	.+12     	; 0xe10 <vfprintf+0x3a6>
     e04:	c1 14       	cp	r12, r1
     e06:	d1 04       	cpc	r13, r1
     e08:	41 f4       	brne	.+16     	; 0xe1a <vfprintf+0x3b0>
     e0a:	ec 85       	ldd	r30, Y+12	; 0x0c
     e0c:	e4 ff       	sbrs	r30, 4
     e0e:	05 c0       	rjmp	.+10     	; 0xe1a <vfprintf+0x3b0>
     e10:	d1 94       	neg	r13
     e12:	c1 94       	neg	r12
     e14:	d1 08       	sbc	r13, r1
     e16:	8d e2       	ldi	r24, 0x2D	; 45
     e18:	01 c0       	rjmp	.+2      	; 0xe1c <vfprintf+0x3b2>
     e1a:	8b e2       	ldi	r24, 0x2B	; 43
     e1c:	b7 01       	movw	r22, r14
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     e24:	80 e3       	ldi	r24, 0x30	; 48
     e26:	2a e0       	ldi	r18, 0x0A	; 10
     e28:	c2 16       	cp	r12, r18
     e2a:	d1 04       	cpc	r13, r1
     e2c:	2c f0       	brlt	.+10     	; 0xe38 <vfprintf+0x3ce>
     e2e:	8f 5f       	subi	r24, 0xFF	; 255
     e30:	fa e0       	ldi	r31, 0x0A	; 10
     e32:	cf 1a       	sub	r12, r31
     e34:	d1 08       	sbc	r13, r1
     e36:	f7 cf       	rjmp	.-18     	; 0xe26 <vfprintf+0x3bc>
     e38:	b7 01       	movw	r22, r14
     e3a:	90 e0       	ldi	r25, 0x00	; 0
     e3c:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     e40:	b7 01       	movw	r22, r14
     e42:	c6 01       	movw	r24, r12
     e44:	c0 96       	adiw	r24, 0x30	; 48
     e46:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     e4a:	54 c1       	rjmp	.+680    	; 0x10f4 <vfprintf+0x68a>
     e4c:	83 36       	cpi	r24, 0x63	; 99
     e4e:	31 f0       	breq	.+12     	; 0xe5c <vfprintf+0x3f2>
     e50:	83 37       	cpi	r24, 0x73	; 115
     e52:	79 f0       	breq	.+30     	; 0xe72 <vfprintf+0x408>
     e54:	83 35       	cpi	r24, 0x53	; 83
     e56:	09 f0       	breq	.+2      	; 0xe5a <vfprintf+0x3f0>
     e58:	56 c0       	rjmp	.+172    	; 0xf06 <vfprintf+0x49c>
     e5a:	20 c0       	rjmp	.+64     	; 0xe9c <vfprintf+0x432>
     e5c:	56 01       	movw	r10, r12
     e5e:	32 e0       	ldi	r19, 0x02	; 2
     e60:	a3 0e       	add	r10, r19
     e62:	b1 1c       	adc	r11, r1
     e64:	f6 01       	movw	r30, r12
     e66:	80 81       	ld	r24, Z
     e68:	89 83       	std	Y+1, r24	; 0x01
     e6a:	01 e0       	ldi	r16, 0x01	; 1
     e6c:	10 e0       	ldi	r17, 0x00	; 0
     e6e:	63 01       	movw	r12, r6
     e70:	12 c0       	rjmp	.+36     	; 0xe96 <vfprintf+0x42c>
     e72:	56 01       	movw	r10, r12
     e74:	f2 e0       	ldi	r31, 0x02	; 2
     e76:	af 0e       	add	r10, r31
     e78:	b1 1c       	adc	r11, r1
     e7a:	f6 01       	movw	r30, r12
     e7c:	c0 80       	ld	r12, Z
     e7e:	d1 80       	ldd	r13, Z+1	; 0x01
     e80:	96 fe       	sbrs	r9, 6
     e82:	03 c0       	rjmp	.+6      	; 0xe8a <vfprintf+0x420>
     e84:	61 2f       	mov	r22, r17
     e86:	70 e0       	ldi	r23, 0x00	; 0
     e88:	02 c0       	rjmp	.+4      	; 0xe8e <vfprintf+0x424>
     e8a:	6f ef       	ldi	r22, 0xFF	; 255
     e8c:	7f ef       	ldi	r23, 0xFF	; 255
     e8e:	c6 01       	movw	r24, r12
     e90:	0e 94 da 09 	call	0x13b4	; 0x13b4 <strnlen>
     e94:	8c 01       	movw	r16, r24
     e96:	f9 2d       	mov	r31, r9
     e98:	ff 77       	andi	r31, 0x7F	; 127
     e9a:	14 c0       	rjmp	.+40     	; 0xec4 <vfprintf+0x45a>
     e9c:	56 01       	movw	r10, r12
     e9e:	22 e0       	ldi	r18, 0x02	; 2
     ea0:	a2 0e       	add	r10, r18
     ea2:	b1 1c       	adc	r11, r1
     ea4:	f6 01       	movw	r30, r12
     ea6:	c0 80       	ld	r12, Z
     ea8:	d1 80       	ldd	r13, Z+1	; 0x01
     eaa:	96 fe       	sbrs	r9, 6
     eac:	03 c0       	rjmp	.+6      	; 0xeb4 <vfprintf+0x44a>
     eae:	61 2f       	mov	r22, r17
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <vfprintf+0x44e>
     eb4:	6f ef       	ldi	r22, 0xFF	; 255
     eb6:	7f ef       	ldi	r23, 0xFF	; 255
     eb8:	c6 01       	movw	r24, r12
     eba:	0e 94 c1 09 	call	0x1382	; 0x1382 <strnlen_P>
     ebe:	8c 01       	movw	r16, r24
     ec0:	f9 2d       	mov	r31, r9
     ec2:	f0 68       	ori	r31, 0x80	; 128
     ec4:	9f 2e       	mov	r9, r31
     ec6:	f3 fd       	sbrc	r31, 3
     ec8:	1a c0       	rjmp	.+52     	; 0xefe <vfprintf+0x494>
     eca:	85 2d       	mov	r24, r5
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	08 17       	cp	r16, r24
     ed0:	19 07       	cpc	r17, r25
     ed2:	a8 f4       	brcc	.+42     	; 0xefe <vfprintf+0x494>
     ed4:	b7 01       	movw	r22, r14
     ed6:	80 e2       	ldi	r24, 0x20	; 32
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     ede:	5a 94       	dec	r5
     ee0:	f4 cf       	rjmp	.-24     	; 0xeca <vfprintf+0x460>
     ee2:	f6 01       	movw	r30, r12
     ee4:	97 fc       	sbrc	r9, 7
     ee6:	85 91       	lpm	r24, Z+
     ee8:	97 fe       	sbrs	r9, 7
     eea:	81 91       	ld	r24, Z+
     eec:	6f 01       	movw	r12, r30
     eee:	b7 01       	movw	r22, r14
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
     ef6:	51 10       	cpse	r5, r1
     ef8:	5a 94       	dec	r5
     efa:	01 50       	subi	r16, 0x01	; 1
     efc:	11 09       	sbc	r17, r1
     efe:	01 15       	cp	r16, r1
     f00:	11 05       	cpc	r17, r1
     f02:	79 f7       	brne	.-34     	; 0xee2 <vfprintf+0x478>
     f04:	f7 c0       	rjmp	.+494    	; 0x10f4 <vfprintf+0x68a>
     f06:	84 36       	cpi	r24, 0x64	; 100
     f08:	11 f0       	breq	.+4      	; 0xf0e <vfprintf+0x4a4>
     f0a:	89 36       	cpi	r24, 0x69	; 105
     f0c:	61 f5       	brne	.+88     	; 0xf66 <vfprintf+0x4fc>
     f0e:	56 01       	movw	r10, r12
     f10:	97 fe       	sbrs	r9, 7
     f12:	09 c0       	rjmp	.+18     	; 0xf26 <vfprintf+0x4bc>
     f14:	24 e0       	ldi	r18, 0x04	; 4
     f16:	a2 0e       	add	r10, r18
     f18:	b1 1c       	adc	r11, r1
     f1a:	f6 01       	movw	r30, r12
     f1c:	60 81       	ld	r22, Z
     f1e:	71 81       	ldd	r23, Z+1	; 0x01
     f20:	82 81       	ldd	r24, Z+2	; 0x02
     f22:	93 81       	ldd	r25, Z+3	; 0x03
     f24:	0a c0       	rjmp	.+20     	; 0xf3a <vfprintf+0x4d0>
     f26:	f2 e0       	ldi	r31, 0x02	; 2
     f28:	af 0e       	add	r10, r31
     f2a:	b1 1c       	adc	r11, r1
     f2c:	f6 01       	movw	r30, r12
     f2e:	60 81       	ld	r22, Z
     f30:	71 81       	ldd	r23, Z+1	; 0x01
     f32:	07 2e       	mov	r0, r23
     f34:	00 0c       	add	r0, r0
     f36:	88 0b       	sbc	r24, r24
     f38:	99 0b       	sbc	r25, r25
     f3a:	f9 2d       	mov	r31, r9
     f3c:	ff 76       	andi	r31, 0x6F	; 111
     f3e:	9f 2e       	mov	r9, r31
     f40:	97 ff       	sbrs	r25, 7
     f42:	09 c0       	rjmp	.+18     	; 0xf56 <vfprintf+0x4ec>
     f44:	90 95       	com	r25
     f46:	80 95       	com	r24
     f48:	70 95       	com	r23
     f4a:	61 95       	neg	r22
     f4c:	7f 4f       	sbci	r23, 0xFF	; 255
     f4e:	8f 4f       	sbci	r24, 0xFF	; 255
     f50:	9f 4f       	sbci	r25, 0xFF	; 255
     f52:	f0 68       	ori	r31, 0x80	; 128
     f54:	9f 2e       	mov	r9, r31
     f56:	2a e0       	ldi	r18, 0x0A	; 10
     f58:	30 e0       	ldi	r19, 0x00	; 0
     f5a:	a3 01       	movw	r20, r6
     f5c:	0e 94 37 0a 	call	0x146e	; 0x146e <__ultoa_invert>
     f60:	c8 2e       	mov	r12, r24
     f62:	c6 18       	sub	r12, r6
     f64:	3f c0       	rjmp	.+126    	; 0xfe4 <vfprintf+0x57a>
     f66:	09 2d       	mov	r16, r9
     f68:	85 37       	cpi	r24, 0x75	; 117
     f6a:	21 f4       	brne	.+8      	; 0xf74 <vfprintf+0x50a>
     f6c:	0f 7e       	andi	r16, 0xEF	; 239
     f6e:	2a e0       	ldi	r18, 0x0A	; 10
     f70:	30 e0       	ldi	r19, 0x00	; 0
     f72:	1d c0       	rjmp	.+58     	; 0xfae <vfprintf+0x544>
     f74:	09 7f       	andi	r16, 0xF9	; 249
     f76:	8f 36       	cpi	r24, 0x6F	; 111
     f78:	91 f0       	breq	.+36     	; 0xf9e <vfprintf+0x534>
     f7a:	18 f4       	brcc	.+6      	; 0xf82 <vfprintf+0x518>
     f7c:	88 35       	cpi	r24, 0x58	; 88
     f7e:	59 f0       	breq	.+22     	; 0xf96 <vfprintf+0x52c>
     f80:	c3 c0       	rjmp	.+390    	; 0x1108 <vfprintf+0x69e>
     f82:	80 37       	cpi	r24, 0x70	; 112
     f84:	19 f0       	breq	.+6      	; 0xf8c <vfprintf+0x522>
     f86:	88 37       	cpi	r24, 0x78	; 120
     f88:	11 f0       	breq	.+4      	; 0xf8e <vfprintf+0x524>
     f8a:	be c0       	rjmp	.+380    	; 0x1108 <vfprintf+0x69e>
     f8c:	00 61       	ori	r16, 0x10	; 16
     f8e:	04 ff       	sbrs	r16, 4
     f90:	09 c0       	rjmp	.+18     	; 0xfa4 <vfprintf+0x53a>
     f92:	04 60       	ori	r16, 0x04	; 4
     f94:	07 c0       	rjmp	.+14     	; 0xfa4 <vfprintf+0x53a>
     f96:	94 fe       	sbrs	r9, 4
     f98:	08 c0       	rjmp	.+16     	; 0xfaa <vfprintf+0x540>
     f9a:	06 60       	ori	r16, 0x06	; 6
     f9c:	06 c0       	rjmp	.+12     	; 0xfaa <vfprintf+0x540>
     f9e:	28 e0       	ldi	r18, 0x08	; 8
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	05 c0       	rjmp	.+10     	; 0xfae <vfprintf+0x544>
     fa4:	20 e1       	ldi	r18, 0x10	; 16
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	02 c0       	rjmp	.+4      	; 0xfae <vfprintf+0x544>
     faa:	20 e1       	ldi	r18, 0x10	; 16
     fac:	32 e0       	ldi	r19, 0x02	; 2
     fae:	56 01       	movw	r10, r12
     fb0:	07 ff       	sbrs	r16, 7
     fb2:	09 c0       	rjmp	.+18     	; 0xfc6 <vfprintf+0x55c>
     fb4:	84 e0       	ldi	r24, 0x04	; 4
     fb6:	a8 0e       	add	r10, r24
     fb8:	b1 1c       	adc	r11, r1
     fba:	f6 01       	movw	r30, r12
     fbc:	60 81       	ld	r22, Z
     fbe:	71 81       	ldd	r23, Z+1	; 0x01
     fc0:	82 81       	ldd	r24, Z+2	; 0x02
     fc2:	93 81       	ldd	r25, Z+3	; 0x03
     fc4:	08 c0       	rjmp	.+16     	; 0xfd6 <vfprintf+0x56c>
     fc6:	f2 e0       	ldi	r31, 0x02	; 2
     fc8:	af 0e       	add	r10, r31
     fca:	b1 1c       	adc	r11, r1
     fcc:	f6 01       	movw	r30, r12
     fce:	60 81       	ld	r22, Z
     fd0:	71 81       	ldd	r23, Z+1	; 0x01
     fd2:	80 e0       	ldi	r24, 0x00	; 0
     fd4:	90 e0       	ldi	r25, 0x00	; 0
     fd6:	a3 01       	movw	r20, r6
     fd8:	0e 94 37 0a 	call	0x146e	; 0x146e <__ultoa_invert>
     fdc:	c8 2e       	mov	r12, r24
     fde:	c6 18       	sub	r12, r6
     fe0:	0f 77       	andi	r16, 0x7F	; 127
     fe2:	90 2e       	mov	r9, r16
     fe4:	96 fe       	sbrs	r9, 6
     fe6:	0b c0       	rjmp	.+22     	; 0xffe <vfprintf+0x594>
     fe8:	09 2d       	mov	r16, r9
     fea:	0e 7f       	andi	r16, 0xFE	; 254
     fec:	c1 16       	cp	r12, r17
     fee:	50 f4       	brcc	.+20     	; 0x1004 <vfprintf+0x59a>
     ff0:	94 fe       	sbrs	r9, 4
     ff2:	0a c0       	rjmp	.+20     	; 0x1008 <vfprintf+0x59e>
     ff4:	92 fc       	sbrc	r9, 2
     ff6:	08 c0       	rjmp	.+16     	; 0x1008 <vfprintf+0x59e>
     ff8:	09 2d       	mov	r16, r9
     ffa:	0e 7e       	andi	r16, 0xEE	; 238
     ffc:	05 c0       	rjmp	.+10     	; 0x1008 <vfprintf+0x59e>
     ffe:	dc 2c       	mov	r13, r12
    1000:	09 2d       	mov	r16, r9
    1002:	03 c0       	rjmp	.+6      	; 0x100a <vfprintf+0x5a0>
    1004:	dc 2c       	mov	r13, r12
    1006:	01 c0       	rjmp	.+2      	; 0x100a <vfprintf+0x5a0>
    1008:	d1 2e       	mov	r13, r17
    100a:	04 ff       	sbrs	r16, 4
    100c:	0d c0       	rjmp	.+26     	; 0x1028 <vfprintf+0x5be>
    100e:	fe 01       	movw	r30, r28
    1010:	ec 0d       	add	r30, r12
    1012:	f1 1d       	adc	r31, r1
    1014:	80 81       	ld	r24, Z
    1016:	80 33       	cpi	r24, 0x30	; 48
    1018:	11 f4       	brne	.+4      	; 0x101e <vfprintf+0x5b4>
    101a:	09 7e       	andi	r16, 0xE9	; 233
    101c:	09 c0       	rjmp	.+18     	; 0x1030 <vfprintf+0x5c6>
    101e:	02 ff       	sbrs	r16, 2
    1020:	06 c0       	rjmp	.+12     	; 0x102e <vfprintf+0x5c4>
    1022:	d3 94       	inc	r13
    1024:	d3 94       	inc	r13
    1026:	04 c0       	rjmp	.+8      	; 0x1030 <vfprintf+0x5c6>
    1028:	80 2f       	mov	r24, r16
    102a:	86 78       	andi	r24, 0x86	; 134
    102c:	09 f0       	breq	.+2      	; 0x1030 <vfprintf+0x5c6>
    102e:	d3 94       	inc	r13
    1030:	03 fd       	sbrc	r16, 3
    1032:	11 c0       	rjmp	.+34     	; 0x1056 <vfprintf+0x5ec>
    1034:	00 ff       	sbrs	r16, 0
    1036:	06 c0       	rjmp	.+12     	; 0x1044 <vfprintf+0x5da>
    1038:	1c 2d       	mov	r17, r12
    103a:	d5 14       	cp	r13, r5
    103c:	80 f4       	brcc	.+32     	; 0x105e <vfprintf+0x5f4>
    103e:	15 0d       	add	r17, r5
    1040:	1d 19       	sub	r17, r13
    1042:	0d c0       	rjmp	.+26     	; 0x105e <vfprintf+0x5f4>
    1044:	d5 14       	cp	r13, r5
    1046:	58 f4       	brcc	.+22     	; 0x105e <vfprintf+0x5f4>
    1048:	b7 01       	movw	r22, r14
    104a:	80 e2       	ldi	r24, 0x20	; 32
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    1052:	d3 94       	inc	r13
    1054:	f7 cf       	rjmp	.-18     	; 0x1044 <vfprintf+0x5da>
    1056:	d5 14       	cp	r13, r5
    1058:	10 f4       	brcc	.+4      	; 0x105e <vfprintf+0x5f4>
    105a:	5d 18       	sub	r5, r13
    105c:	01 c0       	rjmp	.+2      	; 0x1060 <vfprintf+0x5f6>
    105e:	51 2c       	mov	r5, r1
    1060:	04 ff       	sbrs	r16, 4
    1062:	10 c0       	rjmp	.+32     	; 0x1084 <vfprintf+0x61a>
    1064:	b7 01       	movw	r22, r14
    1066:	80 e3       	ldi	r24, 0x30	; 48
    1068:	90 e0       	ldi	r25, 0x00	; 0
    106a:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    106e:	02 ff       	sbrs	r16, 2
    1070:	17 c0       	rjmp	.+46     	; 0x10a0 <vfprintf+0x636>
    1072:	01 fd       	sbrc	r16, 1
    1074:	03 c0       	rjmp	.+6      	; 0x107c <vfprintf+0x612>
    1076:	88 e7       	ldi	r24, 0x78	; 120
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	02 c0       	rjmp	.+4      	; 0x1080 <vfprintf+0x616>
    107c:	88 e5       	ldi	r24, 0x58	; 88
    107e:	90 e0       	ldi	r25, 0x00	; 0
    1080:	b7 01       	movw	r22, r14
    1082:	0c c0       	rjmp	.+24     	; 0x109c <vfprintf+0x632>
    1084:	80 2f       	mov	r24, r16
    1086:	86 78       	andi	r24, 0x86	; 134
    1088:	59 f0       	breq	.+22     	; 0x10a0 <vfprintf+0x636>
    108a:	01 ff       	sbrs	r16, 1
    108c:	02 c0       	rjmp	.+4      	; 0x1092 <vfprintf+0x628>
    108e:	8b e2       	ldi	r24, 0x2B	; 43
    1090:	01 c0       	rjmp	.+2      	; 0x1094 <vfprintf+0x62a>
    1092:	80 e2       	ldi	r24, 0x20	; 32
    1094:	07 fd       	sbrc	r16, 7
    1096:	8d e2       	ldi	r24, 0x2D	; 45
    1098:	b7 01       	movw	r22, r14
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    10a0:	c1 16       	cp	r12, r17
    10a2:	38 f4       	brcc	.+14     	; 0x10b2 <vfprintf+0x648>
    10a4:	b7 01       	movw	r22, r14
    10a6:	80 e3       	ldi	r24, 0x30	; 48
    10a8:	90 e0       	ldi	r25, 0x00	; 0
    10aa:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    10ae:	11 50       	subi	r17, 0x01	; 1
    10b0:	f7 cf       	rjmp	.-18     	; 0x10a0 <vfprintf+0x636>
    10b2:	ca 94       	dec	r12
    10b4:	f3 01       	movw	r30, r6
    10b6:	ec 0d       	add	r30, r12
    10b8:	f1 1d       	adc	r31, r1
    10ba:	80 81       	ld	r24, Z
    10bc:	b7 01       	movw	r22, r14
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    10c4:	c1 10       	cpse	r12, r1
    10c6:	f5 cf       	rjmp	.-22     	; 0x10b2 <vfprintf+0x648>
    10c8:	15 c0       	rjmp	.+42     	; 0x10f4 <vfprintf+0x68a>
    10ca:	f4 e0       	ldi	r31, 0x04	; 4
    10cc:	f5 15       	cp	r31, r5
    10ce:	60 f5       	brcc	.+88     	; 0x1128 <vfprintf+0x6be>
    10d0:	84 e0       	ldi	r24, 0x04	; 4
    10d2:	58 1a       	sub	r5, r24
    10d4:	93 fe       	sbrs	r9, 3
    10d6:	1f c0       	rjmp	.+62     	; 0x1116 <vfprintf+0x6ac>
    10d8:	01 11       	cpse	r16, r1
    10da:	27 c0       	rjmp	.+78     	; 0x112a <vfprintf+0x6c0>
    10dc:	2c 85       	ldd	r18, Y+12	; 0x0c
    10de:	23 ff       	sbrs	r18, 3
    10e0:	2a c0       	rjmp	.+84     	; 0x1136 <vfprintf+0x6cc>
    10e2:	08 e6       	ldi	r16, 0x68	; 104
    10e4:	10 e0       	ldi	r17, 0x00	; 0
    10e6:	39 2d       	mov	r19, r9
    10e8:	30 71       	andi	r19, 0x10	; 16
    10ea:	93 2e       	mov	r9, r19
    10ec:	f8 01       	movw	r30, r16
    10ee:	84 91       	lpm	r24, Z
    10f0:	81 11       	cpse	r24, r1
    10f2:	24 c0       	rjmp	.+72     	; 0x113c <vfprintf+0x6d2>
    10f4:	55 20       	and	r5, r5
    10f6:	09 f4       	brne	.+2      	; 0x10fa <vfprintf+0x690>
    10f8:	e4 cc       	rjmp	.-1592   	; 0xac2 <vfprintf+0x58>
    10fa:	b7 01       	movw	r22, r14
    10fc:	80 e2       	ldi	r24, 0x20	; 32
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    1104:	5a 94       	dec	r5
    1106:	f6 cf       	rjmp	.-20     	; 0x10f4 <vfprintf+0x68a>
    1108:	f7 01       	movw	r30, r14
    110a:	86 81       	ldd	r24, Z+6	; 0x06
    110c:	97 81       	ldd	r25, Z+7	; 0x07
    110e:	26 c0       	rjmp	.+76     	; 0x115c <vfprintf+0x6f2>
    1110:	8f ef       	ldi	r24, 0xFF	; 255
    1112:	9f ef       	ldi	r25, 0xFF	; 255
    1114:	23 c0       	rjmp	.+70     	; 0x115c <vfprintf+0x6f2>
    1116:	b7 01       	movw	r22, r14
    1118:	80 e2       	ldi	r24, 0x20	; 32
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    1120:	5a 94       	dec	r5
    1122:	51 10       	cpse	r5, r1
    1124:	f8 cf       	rjmp	.-16     	; 0x1116 <vfprintf+0x6ac>
    1126:	d8 cf       	rjmp	.-80     	; 0x10d8 <vfprintf+0x66e>
    1128:	51 2c       	mov	r5, r1
    112a:	b7 01       	movw	r22, r14
    112c:	80 2f       	mov	r24, r16
    112e:	90 e0       	ldi	r25, 0x00	; 0
    1130:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    1134:	d3 cf       	rjmp	.-90     	; 0x10dc <vfprintf+0x672>
    1136:	0c e6       	ldi	r16, 0x6C	; 108
    1138:	10 e0       	ldi	r17, 0x00	; 0
    113a:	d5 cf       	rjmp	.-86     	; 0x10e6 <vfprintf+0x67c>
    113c:	91 10       	cpse	r9, r1
    113e:	80 52       	subi	r24, 0x20	; 32
    1140:	b7 01       	movw	r22, r14
    1142:	90 e0       	ldi	r25, 0x00	; 0
    1144:	0e 94 e5 09 	call	0x13ca	; 0x13ca <fputc>
    1148:	0f 5f       	subi	r16, 0xFF	; 255
    114a:	1f 4f       	sbci	r17, 0xFF	; 255
    114c:	cf cf       	rjmp	.-98     	; 0x10ec <vfprintf+0x682>
    114e:	23 e0       	ldi	r18, 0x03	; 3
    1150:	25 15       	cp	r18, r5
    1152:	10 f4       	brcc	.+4      	; 0x1158 <vfprintf+0x6ee>
    1154:	83 e0       	ldi	r24, 0x03	; 3
    1156:	bd cf       	rjmp	.-134    	; 0x10d2 <vfprintf+0x668>
    1158:	51 2c       	mov	r5, r1
    115a:	c0 cf       	rjmp	.-128    	; 0x10dc <vfprintf+0x672>
    115c:	60 96       	adiw	r28, 0x10	; 16
    115e:	e2 e1       	ldi	r30, 0x12	; 18
    1160:	0c 94 ce 08 	jmp	0x119c	; 0x119c <__epilogue_restores__>

00001164 <__prologue_saves__>:
    1164:	2f 92       	push	r2
    1166:	3f 92       	push	r3
    1168:	4f 92       	push	r4
    116a:	5f 92       	push	r5
    116c:	6f 92       	push	r6
    116e:	7f 92       	push	r7
    1170:	8f 92       	push	r8
    1172:	9f 92       	push	r9
    1174:	af 92       	push	r10
    1176:	bf 92       	push	r11
    1178:	cf 92       	push	r12
    117a:	df 92       	push	r13
    117c:	ef 92       	push	r14
    117e:	ff 92       	push	r15
    1180:	0f 93       	push	r16
    1182:	1f 93       	push	r17
    1184:	cf 93       	push	r28
    1186:	df 93       	push	r29
    1188:	cd b7       	in	r28, 0x3d	; 61
    118a:	de b7       	in	r29, 0x3e	; 62
    118c:	ca 1b       	sub	r28, r26
    118e:	db 0b       	sbc	r29, r27
    1190:	0f b6       	in	r0, 0x3f	; 63
    1192:	f8 94       	cli
    1194:	de bf       	out	0x3e, r29	; 62
    1196:	0f be       	out	0x3f, r0	; 63
    1198:	cd bf       	out	0x3d, r28	; 61
    119a:	09 94       	ijmp

0000119c <__epilogue_restores__>:
    119c:	2a 88       	ldd	r2, Y+18	; 0x12
    119e:	39 88       	ldd	r3, Y+17	; 0x11
    11a0:	48 88       	ldd	r4, Y+16	; 0x10
    11a2:	5f 84       	ldd	r5, Y+15	; 0x0f
    11a4:	6e 84       	ldd	r6, Y+14	; 0x0e
    11a6:	7d 84       	ldd	r7, Y+13	; 0x0d
    11a8:	8c 84       	ldd	r8, Y+12	; 0x0c
    11aa:	9b 84       	ldd	r9, Y+11	; 0x0b
    11ac:	aa 84       	ldd	r10, Y+10	; 0x0a
    11ae:	b9 84       	ldd	r11, Y+9	; 0x09
    11b0:	c8 84       	ldd	r12, Y+8	; 0x08
    11b2:	df 80       	ldd	r13, Y+7	; 0x07
    11b4:	ee 80       	ldd	r14, Y+6	; 0x06
    11b6:	fd 80       	ldd	r15, Y+5	; 0x05
    11b8:	0c 81       	ldd	r16, Y+4	; 0x04
    11ba:	1b 81       	ldd	r17, Y+3	; 0x03
    11bc:	aa 81       	ldd	r26, Y+2	; 0x02
    11be:	b9 81       	ldd	r27, Y+1	; 0x01
    11c0:	ce 0f       	add	r28, r30
    11c2:	d1 1d       	adc	r29, r1
    11c4:	0f b6       	in	r0, 0x3f	; 63
    11c6:	f8 94       	cli
    11c8:	de bf       	out	0x3e, r29	; 62
    11ca:	0f be       	out	0x3f, r0	; 63
    11cc:	cd bf       	out	0x3d, r28	; 61
    11ce:	ed 01       	movw	r28, r26
    11d0:	08 95       	ret

000011d2 <__ftoa_engine>:
    11d2:	28 30       	cpi	r18, 0x08	; 8
    11d4:	08 f0       	brcs	.+2      	; 0x11d8 <__ftoa_engine+0x6>
    11d6:	27 e0       	ldi	r18, 0x07	; 7
    11d8:	33 27       	eor	r19, r19
    11da:	da 01       	movw	r26, r20
    11dc:	99 0f       	add	r25, r25
    11de:	31 1d       	adc	r19, r1
    11e0:	87 fd       	sbrc	r24, 7
    11e2:	91 60       	ori	r25, 0x01	; 1
    11e4:	00 96       	adiw	r24, 0x00	; 0
    11e6:	61 05       	cpc	r22, r1
    11e8:	71 05       	cpc	r23, r1
    11ea:	39 f4       	brne	.+14     	; 0x11fa <__ftoa_engine+0x28>
    11ec:	32 60       	ori	r19, 0x02	; 2
    11ee:	2e 5f       	subi	r18, 0xFE	; 254
    11f0:	3d 93       	st	X+, r19
    11f2:	30 e3       	ldi	r19, 0x30	; 48
    11f4:	2a 95       	dec	r18
    11f6:	e1 f7       	brne	.-8      	; 0x11f0 <__ftoa_engine+0x1e>
    11f8:	08 95       	ret
    11fa:	9f 3f       	cpi	r25, 0xFF	; 255
    11fc:	30 f0       	brcs	.+12     	; 0x120a <__ftoa_engine+0x38>
    11fe:	80 38       	cpi	r24, 0x80	; 128
    1200:	71 05       	cpc	r23, r1
    1202:	61 05       	cpc	r22, r1
    1204:	09 f0       	breq	.+2      	; 0x1208 <__ftoa_engine+0x36>
    1206:	3c 5f       	subi	r19, 0xFC	; 252
    1208:	3c 5f       	subi	r19, 0xFC	; 252
    120a:	3d 93       	st	X+, r19
    120c:	91 30       	cpi	r25, 0x01	; 1
    120e:	08 f0       	brcs	.+2      	; 0x1212 <__ftoa_engine+0x40>
    1210:	80 68       	ori	r24, 0x80	; 128
    1212:	91 1d       	adc	r25, r1
    1214:	df 93       	push	r29
    1216:	cf 93       	push	r28
    1218:	1f 93       	push	r17
    121a:	0f 93       	push	r16
    121c:	ff 92       	push	r15
    121e:	ef 92       	push	r14
    1220:	19 2f       	mov	r17, r25
    1222:	98 7f       	andi	r25, 0xF8	; 248
    1224:	96 95       	lsr	r25
    1226:	e9 2f       	mov	r30, r25
    1228:	96 95       	lsr	r25
    122a:	96 95       	lsr	r25
    122c:	e9 0f       	add	r30, r25
    122e:	ff 27       	eor	r31, r31
    1230:	e6 53       	subi	r30, 0x36	; 54
    1232:	ff 4f       	sbci	r31, 0xFF	; 255
    1234:	99 27       	eor	r25, r25
    1236:	33 27       	eor	r19, r19
    1238:	ee 24       	eor	r14, r14
    123a:	ff 24       	eor	r15, r15
    123c:	a7 01       	movw	r20, r14
    123e:	e7 01       	movw	r28, r14
    1240:	05 90       	lpm	r0, Z+
    1242:	08 94       	sec
    1244:	07 94       	ror	r0
    1246:	28 f4       	brcc	.+10     	; 0x1252 <__ftoa_engine+0x80>
    1248:	36 0f       	add	r19, r22
    124a:	e7 1e       	adc	r14, r23
    124c:	f8 1e       	adc	r15, r24
    124e:	49 1f       	adc	r20, r25
    1250:	51 1d       	adc	r21, r1
    1252:	66 0f       	add	r22, r22
    1254:	77 1f       	adc	r23, r23
    1256:	88 1f       	adc	r24, r24
    1258:	99 1f       	adc	r25, r25
    125a:	06 94       	lsr	r0
    125c:	a1 f7       	brne	.-24     	; 0x1246 <__ftoa_engine+0x74>
    125e:	05 90       	lpm	r0, Z+
    1260:	07 94       	ror	r0
    1262:	28 f4       	brcc	.+10     	; 0x126e <__ftoa_engine+0x9c>
    1264:	e7 0e       	add	r14, r23
    1266:	f8 1e       	adc	r15, r24
    1268:	49 1f       	adc	r20, r25
    126a:	56 1f       	adc	r21, r22
    126c:	c1 1d       	adc	r28, r1
    126e:	77 0f       	add	r23, r23
    1270:	88 1f       	adc	r24, r24
    1272:	99 1f       	adc	r25, r25
    1274:	66 1f       	adc	r22, r22
    1276:	06 94       	lsr	r0
    1278:	a1 f7       	brne	.-24     	; 0x1262 <__ftoa_engine+0x90>
    127a:	05 90       	lpm	r0, Z+
    127c:	07 94       	ror	r0
    127e:	28 f4       	brcc	.+10     	; 0x128a <__ftoa_engine+0xb8>
    1280:	f8 0e       	add	r15, r24
    1282:	49 1f       	adc	r20, r25
    1284:	56 1f       	adc	r21, r22
    1286:	c7 1f       	adc	r28, r23
    1288:	d1 1d       	adc	r29, r1
    128a:	88 0f       	add	r24, r24
    128c:	99 1f       	adc	r25, r25
    128e:	66 1f       	adc	r22, r22
    1290:	77 1f       	adc	r23, r23
    1292:	06 94       	lsr	r0
    1294:	a1 f7       	brne	.-24     	; 0x127e <__ftoa_engine+0xac>
    1296:	05 90       	lpm	r0, Z+
    1298:	07 94       	ror	r0
    129a:	20 f4       	brcc	.+8      	; 0x12a4 <__ftoa_engine+0xd2>
    129c:	49 0f       	add	r20, r25
    129e:	56 1f       	adc	r21, r22
    12a0:	c7 1f       	adc	r28, r23
    12a2:	d8 1f       	adc	r29, r24
    12a4:	99 0f       	add	r25, r25
    12a6:	66 1f       	adc	r22, r22
    12a8:	77 1f       	adc	r23, r23
    12aa:	88 1f       	adc	r24, r24
    12ac:	06 94       	lsr	r0
    12ae:	a9 f7       	brne	.-22     	; 0x129a <__ftoa_engine+0xc8>
    12b0:	84 91       	lpm	r24, Z
    12b2:	10 95       	com	r17
    12b4:	17 70       	andi	r17, 0x07	; 7
    12b6:	41 f0       	breq	.+16     	; 0x12c8 <__ftoa_engine+0xf6>
    12b8:	d6 95       	lsr	r29
    12ba:	c7 95       	ror	r28
    12bc:	57 95       	ror	r21
    12be:	47 95       	ror	r20
    12c0:	f7 94       	ror	r15
    12c2:	e7 94       	ror	r14
    12c4:	1a 95       	dec	r17
    12c6:	c1 f7       	brne	.-16     	; 0x12b8 <__ftoa_engine+0xe6>
    12c8:	e0 e7       	ldi	r30, 0x70	; 112
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	68 94       	set
    12ce:	15 90       	lpm	r1, Z+
    12d0:	15 91       	lpm	r17, Z+
    12d2:	35 91       	lpm	r19, Z+
    12d4:	65 91       	lpm	r22, Z+
    12d6:	95 91       	lpm	r25, Z+
    12d8:	05 90       	lpm	r0, Z+
    12da:	7f e2       	ldi	r23, 0x2F	; 47
    12dc:	73 95       	inc	r23
    12de:	e1 18       	sub	r14, r1
    12e0:	f1 0a       	sbc	r15, r17
    12e2:	43 0b       	sbc	r20, r19
    12e4:	56 0b       	sbc	r21, r22
    12e6:	c9 0b       	sbc	r28, r25
    12e8:	d0 09       	sbc	r29, r0
    12ea:	c0 f7       	brcc	.-16     	; 0x12dc <__ftoa_engine+0x10a>
    12ec:	e1 0c       	add	r14, r1
    12ee:	f1 1e       	adc	r15, r17
    12f0:	43 1f       	adc	r20, r19
    12f2:	56 1f       	adc	r21, r22
    12f4:	c9 1f       	adc	r28, r25
    12f6:	d0 1d       	adc	r29, r0
    12f8:	7e f4       	brtc	.+30     	; 0x1318 <__ftoa_engine+0x146>
    12fa:	70 33       	cpi	r23, 0x30	; 48
    12fc:	11 f4       	brne	.+4      	; 0x1302 <__ftoa_engine+0x130>
    12fe:	8a 95       	dec	r24
    1300:	e6 cf       	rjmp	.-52     	; 0x12ce <__ftoa_engine+0xfc>
    1302:	e8 94       	clt
    1304:	01 50       	subi	r16, 0x01	; 1
    1306:	30 f0       	brcs	.+12     	; 0x1314 <__ftoa_engine+0x142>
    1308:	08 0f       	add	r16, r24
    130a:	0a f4       	brpl	.+2      	; 0x130e <__ftoa_engine+0x13c>
    130c:	00 27       	eor	r16, r16
    130e:	02 17       	cp	r16, r18
    1310:	08 f4       	brcc	.+2      	; 0x1314 <__ftoa_engine+0x142>
    1312:	20 2f       	mov	r18, r16
    1314:	23 95       	inc	r18
    1316:	02 2f       	mov	r16, r18
    1318:	7a 33       	cpi	r23, 0x3A	; 58
    131a:	28 f0       	brcs	.+10     	; 0x1326 <__ftoa_engine+0x154>
    131c:	79 e3       	ldi	r23, 0x39	; 57
    131e:	7d 93       	st	X+, r23
    1320:	2a 95       	dec	r18
    1322:	e9 f7       	brne	.-6      	; 0x131e <__ftoa_engine+0x14c>
    1324:	10 c0       	rjmp	.+32     	; 0x1346 <__ftoa_engine+0x174>
    1326:	7d 93       	st	X+, r23
    1328:	2a 95       	dec	r18
    132a:	89 f6       	brne	.-94     	; 0x12ce <__ftoa_engine+0xfc>
    132c:	06 94       	lsr	r0
    132e:	97 95       	ror	r25
    1330:	67 95       	ror	r22
    1332:	37 95       	ror	r19
    1334:	17 95       	ror	r17
    1336:	17 94       	ror	r1
    1338:	e1 18       	sub	r14, r1
    133a:	f1 0a       	sbc	r15, r17
    133c:	43 0b       	sbc	r20, r19
    133e:	56 0b       	sbc	r21, r22
    1340:	c9 0b       	sbc	r28, r25
    1342:	d0 09       	sbc	r29, r0
    1344:	98 f0       	brcs	.+38     	; 0x136c <__ftoa_engine+0x19a>
    1346:	23 95       	inc	r18
    1348:	7e 91       	ld	r23, -X
    134a:	73 95       	inc	r23
    134c:	7a 33       	cpi	r23, 0x3A	; 58
    134e:	08 f0       	brcs	.+2      	; 0x1352 <__ftoa_engine+0x180>
    1350:	70 e3       	ldi	r23, 0x30	; 48
    1352:	7c 93       	st	X, r23
    1354:	20 13       	cpse	r18, r16
    1356:	b8 f7       	brcc	.-18     	; 0x1346 <__ftoa_engine+0x174>
    1358:	7e 91       	ld	r23, -X
    135a:	70 61       	ori	r23, 0x10	; 16
    135c:	7d 93       	st	X+, r23
    135e:	30 f0       	brcs	.+12     	; 0x136c <__ftoa_engine+0x19a>
    1360:	83 95       	inc	r24
    1362:	71 e3       	ldi	r23, 0x31	; 49
    1364:	7d 93       	st	X+, r23
    1366:	70 e3       	ldi	r23, 0x30	; 48
    1368:	2a 95       	dec	r18
    136a:	e1 f7       	brne	.-8      	; 0x1364 <__ftoa_engine+0x192>
    136c:	11 24       	eor	r1, r1
    136e:	ef 90       	pop	r14
    1370:	ff 90       	pop	r15
    1372:	0f 91       	pop	r16
    1374:	1f 91       	pop	r17
    1376:	cf 91       	pop	r28
    1378:	df 91       	pop	r29
    137a:	99 27       	eor	r25, r25
    137c:	87 fd       	sbrc	r24, 7
    137e:	90 95       	com	r25
    1380:	08 95       	ret

00001382 <strnlen_P>:
    1382:	fc 01       	movw	r30, r24
    1384:	05 90       	lpm	r0, Z+
    1386:	61 50       	subi	r22, 0x01	; 1
    1388:	70 40       	sbci	r23, 0x00	; 0
    138a:	01 10       	cpse	r0, r1
    138c:	d8 f7       	brcc	.-10     	; 0x1384 <strnlen_P+0x2>
    138e:	80 95       	com	r24
    1390:	90 95       	com	r25
    1392:	8e 0f       	add	r24, r30
    1394:	9f 1f       	adc	r25, r31
    1396:	08 95       	ret

00001398 <strncmp>:
    1398:	fb 01       	movw	r30, r22
    139a:	dc 01       	movw	r26, r24
    139c:	41 50       	subi	r20, 0x01	; 1
    139e:	50 40       	sbci	r21, 0x00	; 0
    13a0:	30 f0       	brcs	.+12     	; 0x13ae <strncmp+0x16>
    13a2:	8d 91       	ld	r24, X+
    13a4:	01 90       	ld	r0, Z+
    13a6:	80 19       	sub	r24, r0
    13a8:	19 f4       	brne	.+6      	; 0x13b0 <strncmp+0x18>
    13aa:	00 20       	and	r0, r0
    13ac:	b9 f7       	brne	.-18     	; 0x139c <strncmp+0x4>
    13ae:	88 1b       	sub	r24, r24
    13b0:	99 0b       	sbc	r25, r25
    13b2:	08 95       	ret

000013b4 <strnlen>:
    13b4:	fc 01       	movw	r30, r24
    13b6:	61 50       	subi	r22, 0x01	; 1
    13b8:	70 40       	sbci	r23, 0x00	; 0
    13ba:	01 90       	ld	r0, Z+
    13bc:	01 10       	cpse	r0, r1
    13be:	d8 f7       	brcc	.-10     	; 0x13b6 <strnlen+0x2>
    13c0:	80 95       	com	r24
    13c2:	90 95       	com	r25
    13c4:	8e 0f       	add	r24, r30
    13c6:	9f 1f       	adc	r25, r31
    13c8:	08 95       	ret

000013ca <fputc>:
    13ca:	0f 93       	push	r16
    13cc:	1f 93       	push	r17
    13ce:	cf 93       	push	r28
    13d0:	df 93       	push	r29
    13d2:	fb 01       	movw	r30, r22
    13d4:	23 81       	ldd	r18, Z+3	; 0x03
    13d6:	21 fd       	sbrc	r18, 1
    13d8:	03 c0       	rjmp	.+6      	; 0x13e0 <fputc+0x16>
    13da:	8f ef       	ldi	r24, 0xFF	; 255
    13dc:	9f ef       	ldi	r25, 0xFF	; 255
    13de:	2c c0       	rjmp	.+88     	; 0x1438 <fputc+0x6e>
    13e0:	22 ff       	sbrs	r18, 2
    13e2:	16 c0       	rjmp	.+44     	; 0x1410 <fputc+0x46>
    13e4:	46 81       	ldd	r20, Z+6	; 0x06
    13e6:	57 81       	ldd	r21, Z+7	; 0x07
    13e8:	24 81       	ldd	r18, Z+4	; 0x04
    13ea:	35 81       	ldd	r19, Z+5	; 0x05
    13ec:	42 17       	cp	r20, r18
    13ee:	53 07       	cpc	r21, r19
    13f0:	44 f4       	brge	.+16     	; 0x1402 <fputc+0x38>
    13f2:	a0 81       	ld	r26, Z
    13f4:	b1 81       	ldd	r27, Z+1	; 0x01
    13f6:	9d 01       	movw	r18, r26
    13f8:	2f 5f       	subi	r18, 0xFF	; 255
    13fa:	3f 4f       	sbci	r19, 0xFF	; 255
    13fc:	31 83       	std	Z+1, r19	; 0x01
    13fe:	20 83       	st	Z, r18
    1400:	8c 93       	st	X, r24
    1402:	26 81       	ldd	r18, Z+6	; 0x06
    1404:	37 81       	ldd	r19, Z+7	; 0x07
    1406:	2f 5f       	subi	r18, 0xFF	; 255
    1408:	3f 4f       	sbci	r19, 0xFF	; 255
    140a:	37 83       	std	Z+7, r19	; 0x07
    140c:	26 83       	std	Z+6, r18	; 0x06
    140e:	14 c0       	rjmp	.+40     	; 0x1438 <fputc+0x6e>
    1410:	8b 01       	movw	r16, r22
    1412:	ec 01       	movw	r28, r24
    1414:	fb 01       	movw	r30, r22
    1416:	00 84       	ldd	r0, Z+8	; 0x08
    1418:	f1 85       	ldd	r31, Z+9	; 0x09
    141a:	e0 2d       	mov	r30, r0
    141c:	09 95       	icall
    141e:	89 2b       	or	r24, r25
    1420:	e1 f6       	brne	.-72     	; 0x13da <fputc+0x10>
    1422:	d8 01       	movw	r26, r16
    1424:	16 96       	adiw	r26, 0x06	; 6
    1426:	8d 91       	ld	r24, X+
    1428:	9c 91       	ld	r25, X
    142a:	17 97       	sbiw	r26, 0x07	; 7
    142c:	01 96       	adiw	r24, 0x01	; 1
    142e:	17 96       	adiw	r26, 0x07	; 7
    1430:	9c 93       	st	X, r25
    1432:	8e 93       	st	-X, r24
    1434:	16 97       	sbiw	r26, 0x06	; 6
    1436:	ce 01       	movw	r24, r28
    1438:	df 91       	pop	r29
    143a:	cf 91       	pop	r28
    143c:	1f 91       	pop	r17
    143e:	0f 91       	pop	r16
    1440:	08 95       	ret

00001442 <printf>:
    1442:	a0 e0       	ldi	r26, 0x00	; 0
    1444:	b0 e0       	ldi	r27, 0x00	; 0
    1446:	e7 e2       	ldi	r30, 0x27	; 39
    1448:	fa e0       	ldi	r31, 0x0A	; 10
    144a:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <__prologue_saves__+0x20>
    144e:	ae 01       	movw	r20, r28
    1450:	4b 5f       	subi	r20, 0xFB	; 251
    1452:	5f 4f       	sbci	r21, 0xFF	; 255
    1454:	fa 01       	movw	r30, r20
    1456:	61 91       	ld	r22, Z+
    1458:	71 91       	ld	r23, Z+
    145a:	af 01       	movw	r20, r30
    145c:	80 91 9e 01 	lds	r24, 0x019E	; 0x80019e <__data_end+0x2>
    1460:	90 91 9f 01 	lds	r25, 0x019F	; 0x80019f <__data_end+0x3>
    1464:	0e 94 35 05 	call	0xa6a	; 0xa6a <vfprintf>
    1468:	e2 e0       	ldi	r30, 0x02	; 2
    146a:	0c 94 de 08 	jmp	0x11bc	; 0x11bc <__epilogue_restores__+0x20>

0000146e <__ultoa_invert>:
    146e:	fa 01       	movw	r30, r20
    1470:	aa 27       	eor	r26, r26
    1472:	28 30       	cpi	r18, 0x08	; 8
    1474:	51 f1       	breq	.+84     	; 0x14ca <__ultoa_invert+0x5c>
    1476:	20 31       	cpi	r18, 0x10	; 16
    1478:	81 f1       	breq	.+96     	; 0x14da <__ultoa_invert+0x6c>
    147a:	e8 94       	clt
    147c:	6f 93       	push	r22
    147e:	6e 7f       	andi	r22, 0xFE	; 254
    1480:	6e 5f       	subi	r22, 0xFE	; 254
    1482:	7f 4f       	sbci	r23, 0xFF	; 255
    1484:	8f 4f       	sbci	r24, 0xFF	; 255
    1486:	9f 4f       	sbci	r25, 0xFF	; 255
    1488:	af 4f       	sbci	r26, 0xFF	; 255
    148a:	b1 e0       	ldi	r27, 0x01	; 1
    148c:	3e d0       	rcall	.+124    	; 0x150a <__ultoa_invert+0x9c>
    148e:	b4 e0       	ldi	r27, 0x04	; 4
    1490:	3c d0       	rcall	.+120    	; 0x150a <__ultoa_invert+0x9c>
    1492:	67 0f       	add	r22, r23
    1494:	78 1f       	adc	r23, r24
    1496:	89 1f       	adc	r24, r25
    1498:	9a 1f       	adc	r25, r26
    149a:	a1 1d       	adc	r26, r1
    149c:	68 0f       	add	r22, r24
    149e:	79 1f       	adc	r23, r25
    14a0:	8a 1f       	adc	r24, r26
    14a2:	91 1d       	adc	r25, r1
    14a4:	a1 1d       	adc	r26, r1
    14a6:	6a 0f       	add	r22, r26
    14a8:	71 1d       	adc	r23, r1
    14aa:	81 1d       	adc	r24, r1
    14ac:	91 1d       	adc	r25, r1
    14ae:	a1 1d       	adc	r26, r1
    14b0:	20 d0       	rcall	.+64     	; 0x14f2 <__ultoa_invert+0x84>
    14b2:	09 f4       	brne	.+2      	; 0x14b6 <__ultoa_invert+0x48>
    14b4:	68 94       	set
    14b6:	3f 91       	pop	r19
    14b8:	2a e0       	ldi	r18, 0x0A	; 10
    14ba:	26 9f       	mul	r18, r22
    14bc:	11 24       	eor	r1, r1
    14be:	30 19       	sub	r19, r0
    14c0:	30 5d       	subi	r19, 0xD0	; 208
    14c2:	31 93       	st	Z+, r19
    14c4:	de f6       	brtc	.-74     	; 0x147c <__ultoa_invert+0xe>
    14c6:	cf 01       	movw	r24, r30
    14c8:	08 95       	ret
    14ca:	46 2f       	mov	r20, r22
    14cc:	47 70       	andi	r20, 0x07	; 7
    14ce:	40 5d       	subi	r20, 0xD0	; 208
    14d0:	41 93       	st	Z+, r20
    14d2:	b3 e0       	ldi	r27, 0x03	; 3
    14d4:	0f d0       	rcall	.+30     	; 0x14f4 <__ultoa_invert+0x86>
    14d6:	c9 f7       	brne	.-14     	; 0x14ca <__ultoa_invert+0x5c>
    14d8:	f6 cf       	rjmp	.-20     	; 0x14c6 <__ultoa_invert+0x58>
    14da:	46 2f       	mov	r20, r22
    14dc:	4f 70       	andi	r20, 0x0F	; 15
    14de:	40 5d       	subi	r20, 0xD0	; 208
    14e0:	4a 33       	cpi	r20, 0x3A	; 58
    14e2:	18 f0       	brcs	.+6      	; 0x14ea <__ultoa_invert+0x7c>
    14e4:	49 5d       	subi	r20, 0xD9	; 217
    14e6:	31 fd       	sbrc	r19, 1
    14e8:	40 52       	subi	r20, 0x20	; 32
    14ea:	41 93       	st	Z+, r20
    14ec:	02 d0       	rcall	.+4      	; 0x14f2 <__ultoa_invert+0x84>
    14ee:	a9 f7       	brne	.-22     	; 0x14da <__ultoa_invert+0x6c>
    14f0:	ea cf       	rjmp	.-44     	; 0x14c6 <__ultoa_invert+0x58>
    14f2:	b4 e0       	ldi	r27, 0x04	; 4
    14f4:	a6 95       	lsr	r26
    14f6:	97 95       	ror	r25
    14f8:	87 95       	ror	r24
    14fa:	77 95       	ror	r23
    14fc:	67 95       	ror	r22
    14fe:	ba 95       	dec	r27
    1500:	c9 f7       	brne	.-14     	; 0x14f4 <__ultoa_invert+0x86>
    1502:	00 97       	sbiw	r24, 0x00	; 0
    1504:	61 05       	cpc	r22, r1
    1506:	71 05       	cpc	r23, r1
    1508:	08 95       	ret
    150a:	9b 01       	movw	r18, r22
    150c:	ac 01       	movw	r20, r24
    150e:	0a 2e       	mov	r0, r26
    1510:	06 94       	lsr	r0
    1512:	57 95       	ror	r21
    1514:	47 95       	ror	r20
    1516:	37 95       	ror	r19
    1518:	27 95       	ror	r18
    151a:	ba 95       	dec	r27
    151c:	c9 f7       	brne	.-14     	; 0x1510 <__ultoa_invert+0xa2>
    151e:	62 0f       	add	r22, r18
    1520:	73 1f       	adc	r23, r19
    1522:	84 1f       	adc	r24, r20
    1524:	95 1f       	adc	r25, r21
    1526:	a0 1d       	adc	r26, r0
    1528:	08 95       	ret

0000152a <_exit>:
    152a:	f8 94       	cli

0000152c <__stop_program>:
    152c:	ff cf       	rjmp	.-2      	; 0x152c <__stop_program>
