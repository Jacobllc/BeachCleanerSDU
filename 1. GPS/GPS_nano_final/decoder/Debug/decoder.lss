
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000022  00800100  0000236c  00002400  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000236c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000005b  00800122  00800122  00002422  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002422  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002480  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  000024c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001eec  00000000  00000000  00002688  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f57  00000000  00000000  00004574  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ea4  00000000  00000000  000054cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000052c  00000000  00000000  00006370  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000816  00000000  00000000  0000689c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001365  00000000  00000000  000070b2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00008417  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_1>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 71 08 	jmp	0x10e2	; 0x10e2 <__vector_18>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 7b 04 	jmp	0x8f6	; 0x8f6 <__vector_24>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 05       	cpc	r19, r15
      96:	a8 4c       	sbci	r26, 0xC8	; 200
      98:	cd b2       	in	r12, 0x1d	; 29
      9a:	d4 4e       	sbci	r29, 0xE4	; 228
      9c:	b9 38       	cpi	r27, 0x89	; 137
      9e:	36 a9       	ldd	r19, Z+54	; 0x36
      a0:	02 0c       	add	r0, r2
      a2:	50 b9       	out	0x00, r21	; 0
      a4:	91 86       	std	Z+9, r9	; 0x09
      a6:	88 08       	sbc	r8, r8
      a8:	3c a6       	std	Y+44, r3	; 0x2c
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	2a be       	out	0x3a, r2	; 58
      ae:	00 00       	nop
      b0:	00 80       	ld	r0, Z
      b2:	3f 00       	.word	0x003f	; ????

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ec e6       	ldi	r30, 0x6C	; 108
     1ca:	f3 e2       	ldi	r31, 0x23	; 35
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a2 32       	cpi	r26, 0x22	; 34
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a2 e2       	ldi	r26, 0x22	; 34
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	ad 37       	cpi	r26, 0x7D	; 125
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 c8 04 	call	0x990	; 0x990 <main>
     1ec:	0c 94 b4 11 	jmp	0x2368	; 0x2368 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <GPS_init>:

			usart_send('\r');
			usart_send('\n');
	}
	print_flag=1;
}
     1f4:	52 98       	cbi	0x0a, 2	; 10
     1f6:	8b b1       	in	r24, 0x0b	; 11
     1f8:	8b b9       	out	0x0b, r24	; 11
     1fa:	e8 9a       	sbi	0x1d, 0	; 29
     1fc:	e9 e6       	ldi	r30, 0x69	; 105
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	83 60       	ori	r24, 0x03	; 3
     204:	80 83       	st	Z, r24
     206:	78 94       	sei
     208:	08 95       	ret

0000020a <get_gps_message>:
     20a:	dc 01       	movw	r26, r24
     20c:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <__data_end+0x51>
     210:	90 91 74 01 	lds	r25, 0x0174	; 0x800174 <__data_end+0x52>
     214:	81 30       	cpi	r24, 0x01	; 1
     216:	91 05       	cpc	r25, r1
     218:	61 f4       	brne	.+24     	; 0x232 <get_gps_message+0x28>
     21a:	10 92 74 01 	sts	0x0174, r1	; 0x800174 <__data_end+0x52>
     21e:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <__data_end+0x51>
     222:	20 e5       	ldi	r18, 0x50	; 80
     224:	e3 e2       	ldi	r30, 0x23	; 35
     226:	f1 e0       	ldi	r31, 0x01	; 1
     228:	01 90       	ld	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	2a 95       	dec	r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <get_gps_message+0x1e>
     230:	08 95       	ret
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	08 95       	ret

00000238 <stop_gps_sample>:
     238:	10 92 75 01 	sts	0x0175, r1	; 0x800175 <process>
     23c:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <print_flag>
     240:	08 95       	ret

00000242 <read_gps_data>:
     242:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <process>
     246:	81 30       	cpi	r24, 0x01	; 1
     248:	19 f5       	brne	.+70     	; 0x290 <read_gps_data+0x4e>
     24a:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <print_flag>
     24e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     252:	8a 30       	cpi	r24, 0x0A	; 10
     254:	81 f4       	brne	.+32     	; 0x276 <read_gps_data+0x34>
     256:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <byte>
     25a:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <__data_end>
     25e:	8f ef       	ldi	r24, 0xFF	; 255
     260:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <byte>
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <__data_end+0x52>
     26c:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <__data_end+0x51>
     270:	0e 94 1c 01 	call	0x238	; 0x238 <stop_gps_sample>
     274:	08 95       	ret
     276:	e0 91 76 01 	lds	r30, 0x0176	; 0x800176 <byte>
     27a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	ee 5d       	subi	r30, 0xDE	; 222
     282:	fe 4f       	sbci	r31, 0xFE	; 254
     284:	81 83       	std	Z+1, r24	; 0x01
     286:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <byte>
     28a:	8f 5f       	subi	r24, 0xFF	; 255
     28c:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <byte>
     290:	08 95       	ret

00000292 <__vector_1>:
//gete meassage 



ISR(INT0_vect) //Interrupt every data package start "Blue light" 
{
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	8f 93       	push	r24
	process=1;
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	80 93 75 01 	sts	0x0175, r24	; 0x800175 <process>
	//package=0;
	byte=-1;
     2a4:	8f ef       	ldi	r24, 0xFF	; 255
     2a6:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <byte>
	PORTC &= ~(1<<PORTC0); //Set data_ready_flag LOW When bearing and distance had been send.
     2aa:	40 98       	cbi	0x08, 0	; 8
}
     2ac:	8f 91       	pop	r24
     2ae:	0f 90       	pop	r0
     2b0:	0f be       	out	0x3f, r0	; 63
     2b2:	0f 90       	pop	r0
     2b4:	1f 90       	pop	r1
     2b6:	18 95       	reti

000002b8 <dist_to_wp>:
	float rad;
	rad = ((deg * PI)/180.0);
	return rad;
}

void dist_to_wp(struct DATA *GPS_Data, coor_t WP){
     2b8:	4f 92       	push	r4
     2ba:	5f 92       	push	r5
     2bc:	6f 92       	push	r6
     2be:	7f 92       	push	r7
     2c0:	8f 92       	push	r8
     2c2:	9f 92       	push	r9
     2c4:	af 92       	push	r10
     2c6:	bf 92       	push	r11
     2c8:	cf 92       	push	r12
     2ca:	df 92       	push	r13
     2cc:	ef 92       	push	r14
     2ce:	ff 92       	push	r15
     2d0:	0f 93       	push	r16
     2d2:	1f 93       	push	r17
     2d4:	cf 93       	push	r28
     2d6:	df 93       	push	r29
     2d8:	cd b7       	in	r28, 0x3d	; 61
     2da:	de b7       	in	r29, 0x3e	; 62
     2dc:	64 97       	sbiw	r28, 0x14	; 20
     2de:	0f b6       	in	r0, 0x3f	; 63
     2e0:	f8 94       	cli
     2e2:	de bf       	out	0x3e, r29	; 62
     2e4:	0f be       	out	0x3f, r0	; 63
     2e6:	cd bf       	out	0x3d, r28	; 61
     2e8:	8c 01       	movw	r16, r24
     2ea:	89 82       	std	Y+1, r8	; 0x01
     2ec:	9a 82       	std	Y+2, r9	; 0x02
     2ee:	ab 82       	std	Y+3, r10	; 0x03
     2f0:	bc 82       	std	Y+4, r11	; 0x04
     2f2:	cd 82       	std	Y+5, r12	; 0x05
     2f4:	de 82       	std	Y+6, r13	; 0x06
     2f6:	4d 87       	std	Y+13, r20	; 0x0d
     2f8:	5e 87       	std	Y+14, r21	; 0x0e
     2fa:	c9 80       	ldd	r12, Y+1	; 0x01
     2fc:	da 80       	ldd	r13, Y+2	; 0x02
     2fe:	eb 80       	ldd	r14, Y+3	; 0x03
     300:	fc 80       	ldd	r15, Y+4	; 0x04
	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL )); 
	
	//converting a b to dist in meters using formula for 1deg in m:
	float m_pr_deg_lat = 111.1329*1000;
	float m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     302:	2b ed       	ldi	r18, 0xDB	; 219
     304:	3f e0       	ldi	r19, 0x0F	; 15
     306:	49 e4       	ldi	r20, 0x49	; 73
     308:	50 e4       	ldi	r21, 0x40	; 64
     30a:	c7 01       	movw	r24, r14
     30c:	b6 01       	movw	r22, r12
     30e:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	44 e3       	ldi	r20, 0x34	; 52
     318:	53 e4       	ldi	r21, 0x43	; 67
     31a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     31e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <cos>
     322:	4b 01       	movw	r8, r22
     324:	5c 01       	movw	r10, r24
     326:	20 e0       	ldi	r18, 0x00	; 0
     328:	30 e0       	ldi	r19, 0x00	; 0
     32a:	40 e4       	ldi	r20, 0x40	; 64
     32c:	50 e4       	ldi	r21, 0x40	; 64
     32e:	c7 01       	movw	r24, r14
     330:	b6 01       	movw	r22, r12
     332:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     336:	2b ed       	ldi	r18, 0xDB	; 219
     338:	3f e0       	ldi	r19, 0x0F	; 15
     33a:	49 e4       	ldi	r20, 0x49	; 73
     33c:	50 e4       	ldi	r21, 0x40	; 64
     33e:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     342:	20 e0       	ldi	r18, 0x00	; 0
     344:	30 e0       	ldi	r19, 0x00	; 0
     346:	44 e3       	ldi	r20, 0x34	; 52
     348:	53 e4       	ldi	r21, 0x43	; 67
     34a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     34e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <cos>
     352:	2b 01       	movw	r4, r22
     354:	3c 01       	movw	r6, r24
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	40 ea       	ldi	r20, 0xA0	; 160
     35c:	50 e4       	ldi	r21, 0x40	; 64
     35e:	c7 01       	movw	r24, r14
     360:	b6 01       	movw	r22, r12
     362:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     366:	2b ed       	ldi	r18, 0xDB	; 219
     368:	3f e0       	ldi	r19, 0x0F	; 15
     36a:	49 e4       	ldi	r20, 0x49	; 73
     36c:	50 e4       	ldi	r21, 0x40	; 64
     36e:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	44 e3       	ldi	r20, 0x34	; 52
     378:	53 e4       	ldi	r21, 0x43	; 67
     37a:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     37e:	0e 94 79 09 	call	0x12f2	; 0x12f2 <cos>
     382:	69 8b       	std	Y+17, r22	; 0x11
     384:	7a 8b       	std	Y+18, r23	; 0x12
     386:	8b 8b       	std	Y+19, r24	; 0x13
     388:	9c 8b       	std	Y+20, r25	; 0x14
	
	float c = a * m_pr_deg_lat;
     38a:	6d 81       	ldd	r22, Y+5	; 0x05
     38c:	7e 81       	ldd	r23, Y+6	; 0x06
     38e:	f8 01       	movw	r30, r16
     390:	82 85       	ldd	r24, Z+10	; 0x0a
     392:	93 85       	ldd	r25, Z+11	; 0x0b
     394:	68 1b       	sub	r22, r24
     396:	79 0b       	sbc	r23, r25
     398:	07 2e       	mov	r0, r23
     39a:	00 0c       	add	r0, r0
     39c:	88 0b       	sbc	r24, r24
     39e:	99 0b       	sbc	r25, r25
     3a0:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     3a4:	23 e7       	ldi	r18, 0x73	; 115
     3a6:	3e e0       	ldi	r19, 0x0E	; 14
     3a8:	49 ed       	ldi	r20, 0xD9	; 217
     3aa:	57 e4       	ldi	r21, 0x47	; 71
     3ac:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     3b0:	6b 01       	movw	r12, r22
     3b2:	7c 01       	movw	r14, r24
	float d = b * m_pr_deg_lon;
     3b4:	25 e6       	ldi	r18, 0x65	; 101
     3b6:	33 ed       	ldi	r19, 0xD3	; 211
     3b8:	4e ed       	ldi	r20, 0xDE	; 222
     3ba:	52 e4       	ldi	r21, 0x42	; 66
     3bc:	c5 01       	movw	r24, r10
     3be:	b4 01       	movw	r22, r8
     3c0:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     3c4:	4b 01       	movw	r8, r22
     3c6:	5c 01       	movw	r10, r24
     3c8:	2e ee       	ldi	r18, 0xEE	; 238
     3ca:	3c e7       	ldi	r19, 0x7C	; 124
     3cc:	4f eb       	ldi	r20, 0xBF	; 191
     3ce:	5d e3       	ldi	r21, 0x3D	; 61
     3d0:	c3 01       	movw	r24, r6
     3d2:	b2 01       	movw	r22, r4
     3d4:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     3d8:	9b 01       	movw	r18, r22
     3da:	ac 01       	movw	r20, r24
     3dc:	c5 01       	movw	r24, r10
     3de:	b4 01       	movw	r22, r8
     3e0:	0e 94 95 08 	call	0x112a	; 0x112a <__subsf3>
     3e4:	4b 01       	movw	r8, r22
     3e6:	5c 01       	movw	r10, r24
     3e8:	22 e8       	ldi	r18, 0x82	; 130
     3ea:	38 ea       	ldi	r19, 0xA8	; 168
     3ec:	4b ef       	ldi	r20, 0xFB	; 251
     3ee:	58 e3       	ldi	r21, 0x38	; 56
     3f0:	69 89       	ldd	r22, Y+17	; 0x11
     3f2:	7a 89       	ldd	r23, Y+18	; 0x12
     3f4:	8b 89       	ldd	r24, Y+19	; 0x13
     3f6:	9c 89       	ldd	r25, Y+20	; 0x14
     3f8:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     3fc:	9b 01       	movw	r18, r22
     3fe:	ac 01       	movw	r20, r24
     400:	c5 01       	movw	r24, r10
     402:	b4 01       	movw	r22, r8
     404:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     408:	20 e0       	ldi	r18, 0x00	; 0
     40a:	30 e0       	ldi	r19, 0x00	; 0
     40c:	4a e7       	ldi	r20, 0x7A	; 122
     40e:	54 e4       	ldi	r21, 0x44	; 68
     410:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     414:	4b 01       	movw	r8, r22
     416:	5c 01       	movw	r10, r24
     418:	6d 85       	ldd	r22, Y+13	; 0x0d
     41a:	7e 85       	ldd	r23, Y+14	; 0x0e
     41c:	f8 01       	movw	r30, r16
     41e:	81 8d       	ldd	r24, Z+25	; 0x19
     420:	92 8d       	ldd	r25, Z+26	; 0x1a
     422:	68 1b       	sub	r22, r24
     424:	79 0b       	sbc	r23, r25
     426:	07 2e       	mov	r0, r23
     428:	00 0c       	add	r0, r0
     42a:	88 0b       	sbc	r24, r24
     42c:	99 0b       	sbc	r25, r25
     42e:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     432:	9b 01       	movw	r18, r22
     434:	ac 01       	movw	r20, r24
     436:	c5 01       	movw	r24, r10
     438:	b4 01       	movw	r22, r8
     43a:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     43e:	4b 01       	movw	r8, r22
     440:	5c 01       	movw	r10, r24
	
	//finding dist between pos and wp
	float dist = (sqrt(pow(c,2) + pow(d,2)))/1000000 ;
     442:	a5 01       	movw	r20, r10
     444:	94 01       	movw	r18, r8
     446:	c5 01       	movw	r24, r10
     448:	b4 01       	movw	r22, r8
     44a:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     44e:	4b 01       	movw	r8, r22
     450:	5c 01       	movw	r10, r24
     452:	a7 01       	movw	r20, r14
     454:	96 01       	movw	r18, r12
     456:	c7 01       	movw	r24, r14
     458:	b6 01       	movw	r22, r12
     45a:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     45e:	9b 01       	movw	r18, r22
     460:	ac 01       	movw	r20, r24
     462:	c5 01       	movw	r24, r10
     464:	b4 01       	movw	r22, r8
     466:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     46a:	0e 94 b9 0b 	call	0x1772	; 0x1772 <sqrt>
	
	GPS_Data->dist_wp = dist; 
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	34 e2       	ldi	r19, 0x24	; 36
     472:	44 e7       	ldi	r20, 0x74	; 116
     474:	59 e4       	ldi	r21, 0x49	; 73
     476:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     47a:	f8 01       	movw	r30, r16
     47c:	60 a7       	std	Z+40, r22	; 0x28
     47e:	71 a7       	std	Z+41, r23	; 0x29
     480:	82 a7       	std	Z+42, r24	; 0x2a
     482:	93 a7       	std	Z+43, r25	; 0x2b
}
     484:	64 96       	adiw	r28, 0x14	; 20
     486:	0f b6       	in	r0, 0x3f	; 63
     488:	f8 94       	cli
     48a:	de bf       	out	0x3e, r29	; 62
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	cd bf       	out	0x3d, r28	; 61
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	1f 91       	pop	r17
     496:	0f 91       	pop	r16
     498:	ff 90       	pop	r15
     49a:	ef 90       	pop	r14
     49c:	df 90       	pop	r13
     49e:	cf 90       	pop	r12
     4a0:	bf 90       	pop	r11
     4a2:	af 90       	pop	r10
     4a4:	9f 90       	pop	r9
     4a6:	8f 90       	pop	r8
     4a8:	7f 90       	pop	r7
     4aa:	6f 90       	pop	r6
     4ac:	5f 90       	pop	r5
     4ae:	4f 90       	pop	r4
     4b0:	08 95       	ret

000004b2 <bearing_to_wp>:

void bearing_to_wp(struct DATA *GPS_Data, coor_t WP){
     4b2:	4f 92       	push	r4
     4b4:	5f 92       	push	r5
     4b6:	6f 92       	push	r6
     4b8:	7f 92       	push	r7
     4ba:	8f 92       	push	r8
     4bc:	9f 92       	push	r9
     4be:	af 92       	push	r10
     4c0:	bf 92       	push	r11
     4c2:	cf 92       	push	r12
     4c4:	df 92       	push	r13
     4c6:	ef 92       	push	r14
     4c8:	ff 92       	push	r15
     4ca:	0f 93       	push	r16
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	cd b7       	in	r28, 0x3d	; 61
     4d4:	de b7       	in	r29, 0x3e	; 62
     4d6:	64 97       	sbiw	r28, 0x14	; 20
     4d8:	0f b6       	in	r0, 0x3f	; 63
     4da:	f8 94       	cli
     4dc:	de bf       	out	0x3e, r29	; 62
     4de:	0f be       	out	0x3f, r0	; 63
     4e0:	cd bf       	out	0x3d, r28	; 61
     4e2:	8c 01       	movw	r16, r24
     4e4:	89 82       	std	Y+1, r8	; 0x01
     4e6:	9a 82       	std	Y+2, r9	; 0x02
     4e8:	ab 82       	std	Y+3, r10	; 0x03
     4ea:	bc 82       	std	Y+4, r11	; 0x04
     4ec:	cd 82       	std	Y+5, r12	; 0x05
     4ee:	de 82       	std	Y+6, r13	; 0x06
     4f0:	4d 87       	std	Y+13, r20	; 0x0d
     4f2:	5e 87       	std	Y+14, r21	; 0x0e
     4f4:	c9 80       	ldd	r12, Y+1	; 0x01
     4f6:	da 80       	ldd	r13, Y+2	; 0x02
     4f8:	eb 80       	ldd	r14, Y+3	; 0x03
     4fa:	fc 80       	ldd	r15, Y+4	; 0x04
	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL ));
	
	//converting a b to dist in meters using formula for 1deg in m:
	float m_pr_deg_lat = 111.1329*1000;
	float m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     4fc:	2b ed       	ldi	r18, 0xDB	; 219
     4fe:	3f e0       	ldi	r19, 0x0F	; 15
     500:	49 e4       	ldi	r20, 0x49	; 73
     502:	50 e4       	ldi	r21, 0x40	; 64
     504:	c7 01       	movw	r24, r14
     506:	b6 01       	movw	r22, r12
     508:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     50c:	20 e0       	ldi	r18, 0x00	; 0
     50e:	30 e0       	ldi	r19, 0x00	; 0
     510:	44 e3       	ldi	r20, 0x34	; 52
     512:	53 e4       	ldi	r21, 0x43	; 67
     514:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     518:	0e 94 79 09 	call	0x12f2	; 0x12f2 <cos>
     51c:	4b 01       	movw	r8, r22
     51e:	5c 01       	movw	r10, r24
     520:	20 e0       	ldi	r18, 0x00	; 0
     522:	30 e0       	ldi	r19, 0x00	; 0
     524:	40 e4       	ldi	r20, 0x40	; 64
     526:	50 e4       	ldi	r21, 0x40	; 64
     528:	c7 01       	movw	r24, r14
     52a:	b6 01       	movw	r22, r12
     52c:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     530:	2b ed       	ldi	r18, 0xDB	; 219
     532:	3f e0       	ldi	r19, 0x0F	; 15
     534:	49 e4       	ldi	r20, 0x49	; 73
     536:	50 e4       	ldi	r21, 0x40	; 64
     538:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     53c:	20 e0       	ldi	r18, 0x00	; 0
     53e:	30 e0       	ldi	r19, 0x00	; 0
     540:	44 e3       	ldi	r20, 0x34	; 52
     542:	53 e4       	ldi	r21, 0x43	; 67
     544:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     548:	0e 94 79 09 	call	0x12f2	; 0x12f2 <cos>
     54c:	69 8b       	std	Y+17, r22	; 0x11
     54e:	7a 8b       	std	Y+18, r23	; 0x12
     550:	8b 8b       	std	Y+19, r24	; 0x13
     552:	9c 8b       	std	Y+20, r25	; 0x14
     554:	20 e0       	ldi	r18, 0x00	; 0
     556:	30 e0       	ldi	r19, 0x00	; 0
     558:	40 ea       	ldi	r20, 0xA0	; 160
     55a:	50 e4       	ldi	r21, 0x40	; 64
     55c:	c7 01       	movw	r24, r14
     55e:	b6 01       	movw	r22, r12
     560:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     564:	2b ed       	ldi	r18, 0xDB	; 219
     566:	3f e0       	ldi	r19, 0x0F	; 15
     568:	49 e4       	ldi	r20, 0x49	; 73
     56a:	50 e4       	ldi	r21, 0x40	; 64
     56c:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	44 e3       	ldi	r20, 0x34	; 52
     576:	53 e4       	ldi	r21, 0x43	; 67
     578:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     57c:	0e 94 79 09 	call	0x12f2	; 0x12f2 <cos>
     580:	6b 01       	movw	r12, r22
     582:	7c 01       	movw	r14, r24
	
	float c = a * m_pr_deg_lat;
     584:	6d 81       	ldd	r22, Y+5	; 0x05
     586:	7e 81       	ldd	r23, Y+6	; 0x06
     588:	f8 01       	movw	r30, r16
     58a:	82 85       	ldd	r24, Z+10	; 0x0a
     58c:	93 85       	ldd	r25, Z+11	; 0x0b
     58e:	68 1b       	sub	r22, r24
     590:	79 0b       	sbc	r23, r25
     592:	07 2e       	mov	r0, r23
     594:	00 0c       	add	r0, r0
     596:	88 0b       	sbc	r24, r24
     598:	99 0b       	sbc	r25, r25
     59a:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     59e:	23 e7       	ldi	r18, 0x73	; 115
     5a0:	3e e0       	ldi	r19, 0x0E	; 14
     5a2:	49 ed       	ldi	r20, 0xD9	; 217
     5a4:	57 e4       	ldi	r21, 0x47	; 71
     5a6:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     5aa:	2b 01       	movw	r4, r22
     5ac:	3c 01       	movw	r6, r24
	float d = b * m_pr_deg_lon;
     5ae:	25 e6       	ldi	r18, 0x65	; 101
     5b0:	33 ed       	ldi	r19, 0xD3	; 211
     5b2:	4e ed       	ldi	r20, 0xDE	; 222
     5b4:	52 e4       	ldi	r21, 0x42	; 66
     5b6:	c5 01       	movw	r24, r10
     5b8:	b4 01       	movw	r22, r8
     5ba:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     5be:	4b 01       	movw	r8, r22
     5c0:	5c 01       	movw	r10, r24
     5c2:	2e ee       	ldi	r18, 0xEE	; 238
     5c4:	3c e7       	ldi	r19, 0x7C	; 124
     5c6:	4f eb       	ldi	r20, 0xBF	; 191
     5c8:	5d e3       	ldi	r21, 0x3D	; 61
     5ca:	69 89       	ldd	r22, Y+17	; 0x11
     5cc:	7a 89       	ldd	r23, Y+18	; 0x12
     5ce:	8b 89       	ldd	r24, Y+19	; 0x13
     5d0:	9c 89       	ldd	r25, Y+20	; 0x14
     5d2:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     5d6:	9b 01       	movw	r18, r22
     5d8:	ac 01       	movw	r20, r24
     5da:	c5 01       	movw	r24, r10
     5dc:	b4 01       	movw	r22, r8
     5de:	0e 94 95 08 	call	0x112a	; 0x112a <__subsf3>
     5e2:	4b 01       	movw	r8, r22
     5e4:	5c 01       	movw	r10, r24
     5e6:	22 e8       	ldi	r18, 0x82	; 130
     5e8:	38 ea       	ldi	r19, 0xA8	; 168
     5ea:	4b ef       	ldi	r20, 0xFB	; 251
     5ec:	58 e3       	ldi	r21, 0x38	; 56
     5ee:	c7 01       	movw	r24, r14
     5f0:	b6 01       	movw	r22, r12
     5f2:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     5f6:	9b 01       	movw	r18, r22
     5f8:	ac 01       	movw	r20, r24
     5fa:	c5 01       	movw	r24, r10
     5fc:	b4 01       	movw	r22, r8
     5fe:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     602:	20 e0       	ldi	r18, 0x00	; 0
     604:	30 e0       	ldi	r19, 0x00	; 0
     606:	4a e7       	ldi	r20, 0x7A	; 122
     608:	54 e4       	ldi	r21, 0x44	; 68
     60a:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     60e:	6b 01       	movw	r12, r22
     610:	7c 01       	movw	r14, r24
     612:	6d 85       	ldd	r22, Y+13	; 0x0d
     614:	7e 85       	ldd	r23, Y+14	; 0x0e
     616:	f8 01       	movw	r30, r16
     618:	81 8d       	ldd	r24, Z+25	; 0x19
     61a:	92 8d       	ldd	r25, Z+26	; 0x1a
     61c:	68 1b       	sub	r22, r24
     61e:	79 0b       	sbc	r23, r25
     620:	07 2e       	mov	r0, r23
     622:	00 0c       	add	r0, r0
     624:	88 0b       	sbc	r24, r24
     626:	99 0b       	sbc	r25, r25
     628:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     62c:	9b 01       	movw	r18, r22
     62e:	ac 01       	movw	r20, r24
     630:	c7 01       	movw	r24, r14
     632:	b6 01       	movw	r22, r12
     634:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     638:	6b 01       	movw	r12, r22
     63a:	7c 01       	movw	r14, r24
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     63c:	20 e0       	ldi	r18, 0x00	; 0
     63e:	30 e0       	ldi	r19, 0x00	; 0
     640:	a9 01       	movw	r20, r18
     642:	c3 01       	movw	r24, r6
     644:	b2 01       	movw	r22, r4
     646:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__cmpsf2>
     64a:	88 23       	and	r24, r24
     64c:	09 f4       	brne	.+2      	; 0x650 <bearing_to_wp+0x19e>
     64e:	4b c0       	rjmp	.+150    	; 0x6e6 <bearing_to_wp+0x234>
	if(d==0){ d=0.000001;};
     650:	20 e0       	ldi	r18, 0x00	; 0
     652:	30 e0       	ldi	r19, 0x00	; 0
     654:	a9 01       	movw	r20, r18
     656:	c7 01       	movw	r24, r14
     658:	b6 01       	movw	r22, r12
     65a:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__cmpsf2>
     65e:	81 11       	cpse	r24, r1
     660:	0a c0       	rjmp	.+20     	; 0x676 <bearing_to_wp+0x1c4>
     662:	0f 2e       	mov	r0, r31
     664:	fd eb       	ldi	r31, 0xBD	; 189
     666:	cf 2e       	mov	r12, r31
     668:	f7 e3       	ldi	r31, 0x37	; 55
     66a:	df 2e       	mov	r13, r31
     66c:	f6 e8       	ldi	r31, 0x86	; 134
     66e:	ef 2e       	mov	r14, r31
     670:	f5 e3       	ldi	r31, 0x35	; 53
     672:	ff 2e       	mov	r15, r31
     674:	f0 2d       	mov	r31, r0
	
	float angle = atan2(d, c);
     676:	a3 01       	movw	r20, r6
     678:	92 01       	movw	r18, r4
     67a:	c7 01       	movw	r24, r14
     67c:	b6 01       	movw	r22, r12
     67e:	0e 94 15 09 	call	0x122a	; 0x122a <atan2>
     682:	6b 01       	movw	r12, r22
     684:	7c 01       	movw	r14, r24
	
	if(angle<0){
     686:	20 e0       	ldi	r18, 0x00	; 0
     688:	30 e0       	ldi	r19, 0x00	; 0
     68a:	a9 01       	movw	r20, r18
     68c:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__cmpsf2>
     690:	88 23       	and	r24, r24
     692:	ac f4       	brge	.+42     	; 0x6be <bearing_to_wp+0x20c>
		angle = angle - (PI/2);
     694:	2b ed       	ldi	r18, 0xDB	; 219
     696:	3f e0       	ldi	r19, 0x0F	; 15
     698:	49 ec       	ldi	r20, 0xC9	; 201
     69a:	5f e3       	ldi	r21, 0x3F	; 63
     69c:	c7 01       	movw	r24, r14
     69e:	b6 01       	movw	r22, r12
     6a0:	0e 94 95 08 	call	0x112a	; 0x112a <__subsf3>
     6a4:	6b 01       	movw	r12, r22
     6a6:	7c 01       	movw	r14, r24
     6a8:	0a c0       	rjmp	.+20     	; 0x6be <bearing_to_wp+0x20c>
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
	
	float angle = atan2(d, c);
     6aa:	0f 2e       	mov	r0, r31
     6ac:	fb ed       	ldi	r31, 0xDB	; 219
     6ae:	cf 2e       	mov	r12, r31
     6b0:	ff e0       	ldi	r31, 0x0F	; 15
     6b2:	df 2e       	mov	r13, r31
     6b4:	f9 e4       	ldi	r31, 0x49	; 73
     6b6:	ef 2e       	mov	r14, r31
     6b8:	ff e3       	ldi	r31, 0x3F	; 63
     6ba:	ff 2e       	mov	r15, r31
     6bc:	f0 2d       	mov	r31, r0
	
	if(angle<0){
		angle = angle - (PI/2);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	44 e3       	ldi	r20, 0x34	; 52
     6c4:	53 e4       	ldi	r21, 0x43	; 67
     6c6:	c7 01       	movw	r24, r14
     6c8:	b6 01       	movw	r22, r12
     6ca:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     6ce:	2b ed       	ldi	r18, 0xDB	; 219
     6d0:	3f e0       	ldi	r19, 0x0F	; 15
     6d2:	49 e4       	ldi	r20, 0x49	; 73
     6d4:	50 e4       	ldi	r21, 0x40	; 64
     6d6:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     6da:	f8 01       	movw	r30, r16
     6dc:	64 a7       	std	Z+44, r22	; 0x2c
     6de:	75 a7       	std	Z+45, r23	; 0x2d
     6e0:	86 a7       	std	Z+46, r24	; 0x2e
     6e2:	97 a7       	std	Z+47, r25	; 0x2f
}
     6e4:	14 c0       	rjmp	.+40     	; 0x70e <bearing_to_wp+0x25c>
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
     6e6:	20 e0       	ldi	r18, 0x00	; 0
     6e8:	30 e0       	ldi	r19, 0x00	; 0
     6ea:	a9 01       	movw	r20, r18
     6ec:	c7 01       	movw	r24, r14
     6ee:	b6 01       	movw	r22, r12
     6f0:	0e 94 74 09 	call	0x12e8	; 0x12e8 <__cmpsf2>
     6f4:	88 23       	and	r24, r24
     6f6:	c9 f2       	breq	.-78     	; 0x6aa <bearing_to_wp+0x1f8>
	float m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     6f8:	0f 2e       	mov	r0, r31
     6fa:	fd eb       	ldi	r31, 0xBD	; 189
     6fc:	4f 2e       	mov	r4, r31
     6fe:	f7 e3       	ldi	r31, 0x37	; 55
     700:	5f 2e       	mov	r5, r31
     702:	f6 e8       	ldi	r31, 0x86	; 134
     704:	6f 2e       	mov	r6, r31
     706:	f5 e3       	ldi	r31, 0x35	; 53
     708:	7f 2e       	mov	r7, r31
     70a:	f0 2d       	mov	r31, r0
     70c:	b4 cf       	rjmp	.-152    	; 0x676 <bearing_to_wp+0x1c4>
	if(angle<0){
		angle = angle - (PI/2);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
}
     70e:	64 96       	adiw	r28, 0x14	; 20
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	f8 94       	cli
     714:	de bf       	out	0x3e, r29	; 62
     716:	0f be       	out	0x3f, r0	; 63
     718:	cd bf       	out	0x3d, r28	; 61
     71a:	df 91       	pop	r29
     71c:	cf 91       	pop	r28
     71e:	1f 91       	pop	r17
     720:	0f 91       	pop	r16
     722:	ff 90       	pop	r15
     724:	ef 90       	pop	r14
     726:	df 90       	pop	r13
     728:	cf 90       	pop	r12
     72a:	bf 90       	pop	r11
     72c:	af 90       	pop	r10
     72e:	9f 90       	pop	r9
     730:	8f 90       	pop	r8
     732:	7f 90       	pop	r7
     734:	6f 90       	pop	r6
     736:	5f 90       	pop	r5
     738:	4f 90       	pop	r4
     73a:	08 95       	ret

0000073c <Transmit_dist_bearing_i2C>:




void Transmit_dist_bearing_i2C(struct DATA *GPS_Data){
     73c:	cf 93       	push	r28
     73e:	df 93       	push	r29
     740:	ec 01       	movw	r28, r24
	
	//Convert dist and bearing  
		//Sending dist to DATA struct as long int 
		long dist_send;
		dist_send = (long)((GPS_Data->dist_wp) *1000);
		GPS_Data->dist_sendI2C = dist_send; 
     742:	20 e0       	ldi	r18, 0x00	; 0
     744:	30 e0       	ldi	r19, 0x00	; 0
     746:	4a e7       	ldi	r20, 0x7A	; 122
     748:	54 e4       	ldi	r21, 0x44	; 68
     74a:	68 a5       	ldd	r22, Y+40	; 0x28
     74c:	79 a5       	ldd	r23, Y+41	; 0x29
     74e:	8a a5       	ldd	r24, Y+42	; 0x2a
     750:	9b a5       	ldd	r25, Y+43	; 0x2b
     752:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     756:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__fixsfsi>
     75a:	68 ab       	std	Y+48, r22	; 0x30
     75c:	79 ab       	std	Y+49, r23	; 0x31
     75e:	8a ab       	std	Y+50, r24	; 0x32
     760:	9b ab       	std	Y+51, r25	; 0x33
		
		// Sending bearing to DATA struct as int 
		int bearing_send;
		bearing_send = (int)( (GPS_Data->bearing_wp/360)*32767 );
		GPS_Data->bearing_sendI2C = bearing_send; 
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	44 eb       	ldi	r20, 0xB4	; 180
     768:	53 e4       	ldi	r21, 0x43	; 67
     76a:	6c a5       	ldd	r22, Y+44	; 0x2c
     76c:	7d a5       	ldd	r23, Y+45	; 0x2d
     76e:	8e a5       	ldd	r24, Y+46	; 0x2e
     770:	9f a5       	ldd	r25, Y+47	; 0x2f
     772:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	3e ef       	ldi	r19, 0xFE	; 254
     77a:	4f ef       	ldi	r20, 0xFF	; 255
     77c:	56 e4       	ldi	r21, 0x46	; 70
     77e:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     782:	0e 94 f0 09 	call	0x13e0	; 0x13e0 <__fixsfsi>
     786:	7d ab       	std	Y+53, r23	; 0x35
     788:	6c ab       	std	Y+52, r22	; 0x34
	
	
	//Set data_ready_flag
	if(GPS_Data->quality >= 4){ //If There is a fix
     78a:	8e 8d       	ldd	r24, Y+30	; 0x1e
     78c:	84 30       	cpi	r24, 0x04	; 4
     78e:	08 f0       	brcs	.+2      	; 0x792 <Transmit_dist_bearing_i2C+0x56>
		PORTC |= (1<<PORTC0); //PORT C0 high
     790:	40 9a       	sbi	0x08, 0	; 8
	}
	
     792:	df 91       	pop	r29
     794:	cf 91       	pop	r28
     796:	08 95       	ret

00000798 <init_GPSDATA>:
		bytes=0;
	}
	else
	{
		set_data(status);
		bytes++;
     798:	90 93 7a 01 	sts	0x017A, r25	; 0x80017a <NMEA1+0x1>
     79c:	80 93 79 01 	sts	0x0179, r24	; 0x800179 <NMEA1>
     7a0:	08 95       	ret

000007a2 <cal_checksum>:
     7a2:	fc 01       	movw	r30, r24
     7a4:	70 e0       	ldi	r23, 0x00	; 0
     7a6:	9b 01       	movw	r18, r22
     7a8:	21 50       	subi	r18, 0x01	; 1
     7aa:	31 09       	sbc	r19, r1
     7ac:	16 16       	cp	r1, r22
     7ae:	17 06       	cpc	r1, r23
     7b0:	74 f4       	brge	.+28     	; 0x7ce <cal_checksum+0x2c>
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	af 01       	movw	r20, r30
     7b6:	02 2e       	mov	r0, r18
     7b8:	02 c0       	rjmp	.+4      	; 0x7be <cal_checksum+0x1c>
     7ba:	55 95       	asr	r21
     7bc:	47 95       	ror	r20
     7be:	0a 94       	dec	r0
     7c0:	e2 f7       	brpl	.-8      	; 0x7ba <cal_checksum+0x18>
     7c2:	41 70       	andi	r20, 0x01	; 1
     7c4:	84 27       	eor	r24, r20
     7c6:	21 50       	subi	r18, 0x01	; 1
     7c8:	31 09       	sbc	r19, r1
     7ca:	a0 f7       	brcc	.-24     	; 0x7b4 <cal_checksum+0x12>
     7cc:	01 c0       	rjmp	.+2      	; 0x7d0 <cal_checksum+0x2e>
     7ce:	80 e0       	ldi	r24, 0x00	; 0
     7d0:	90 e0       	ldi	r25, 0x00	; 0
     7d2:	08 95       	ret

000007d4 <set_opcode>:
     7d4:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <opcode>
     7d8:	08 95       	ret

000007da <Gps_send_Direction>:

void Gps_send_Direction(void)
{
	char data;
	
	if (bytes==2)
     7da:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <bytes>
     7de:	82 30       	cpi	r24, 0x02	; 2
     7e0:	71 f4       	brne	.+28     	; 0x7fe <Gps_send_Direction+0x24>
	{
		char checksum;
		
		checksum = cal_checksum(NMEA1->bearing_sendI2C, 16);
     7e2:	e0 91 79 01 	lds	r30, 0x0179	; 0x800179 <NMEA1>
     7e6:	f0 91 7a 01 	lds	r31, 0x017A	; 0x80017a <NMEA1+0x1>
     7ea:	60 e1       	ldi	r22, 0x10	; 16
     7ec:	84 a9       	ldd	r24, Z+52	; 0x34
     7ee:	95 a9       	ldd	r25, Z+53	; 0x35
     7f0:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <cal_checksum>
		set_data(checksum);
     7f4:	0e 94 78 04 	call	0x8f0	; 0x8f0 <set_data>
		bytes=0;
     7f8:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <bytes>
     7fc:	08 95       	ret
	}
	else
	{
		data= NMEA1->bearing_sendI2C>> 8*bytes;
     7fe:	e0 91 79 01 	lds	r30, 0x0179	; 0x800179 <NMEA1>
     802:	f0 91 7a 01 	lds	r31, 0x017A	; 0x80017a <NMEA1+0x1>
		set_data(data);	
     806:	88 0f       	add	r24, r24
     808:	88 0f       	add	r24, r24
     80a:	88 0f       	add	r24, r24
     80c:	24 a9       	ldd	r18, Z+52	; 0x34
     80e:	35 a9       	ldd	r19, Z+53	; 0x35
     810:	a9 01       	movw	r20, r18
     812:	02 c0       	rjmp	.+4      	; 0x818 <Gps_send_Direction+0x3e>
     814:	55 95       	asr	r21
     816:	47 95       	ror	r20
     818:	8a 95       	dec	r24
     81a:	e2 f7       	brpl	.-8      	; 0x814 <Gps_send_Direction+0x3a>
     81c:	ca 01       	movw	r24, r20
     81e:	0e 94 78 04 	call	0x8f0	; 0x8f0 <set_data>
		bytes++;	
     822:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <bytes>
     826:	8f 5f       	subi	r24, 0xFF	; 255
     828:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <bytes>
     82c:	08 95       	ret

0000082e <Gps_send_Distance>:
}

 

void Gps_send_Distance(void)
{
     82e:	0f 93       	push	r16
     830:	1f 93       	push	r17
	char data;
	
	if (bytes==4)
     832:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <bytes>
     836:	84 30       	cpi	r24, 0x04	; 4
     838:	71 f4       	brne	.+28     	; 0x856 <Gps_send_Distance+0x28>
	{
		char checksum;
		checksum = cal_checksum(NMEA1->dist_sendI2C, 32);
     83a:	e0 91 79 01 	lds	r30, 0x0179	; 0x800179 <NMEA1>
     83e:	f0 91 7a 01 	lds	r31, 0x017A	; 0x80017a <NMEA1+0x1>
     842:	60 e2       	ldi	r22, 0x20	; 32
     844:	80 a9       	ldd	r24, Z+48	; 0x30
     846:	91 a9       	ldd	r25, Z+49	; 0x31
     848:	0e 94 d1 03 	call	0x7a2	; 0x7a2 <cal_checksum>
		set_data(checksum);
     84c:	0e 94 78 04 	call	0x8f0	; 0x8f0 <set_data>
		bytes=0;
     850:	10 92 78 01 	sts	0x0178, r1	; 0x800178 <bytes>
     854:	1e c0       	rjmp	.+60     	; 0x892 <Gps_send_Distance+0x64>
		//PORTC &= ~(1<<PORTC0); //Set data_ready_flag LOW When bearing and distance had been send.
	}
	else
	{
		data= NMEA1->dist_sendI2C>> 8*bytes;
     856:	e0 91 79 01 	lds	r30, 0x0179	; 0x800179 <NMEA1>
     85a:	f0 91 7a 01 	lds	r31, 0x017A	; 0x80017a <NMEA1+0x1>
		set_data(data);
     85e:	98 2f       	mov	r25, r24
     860:	99 0f       	add	r25, r25
     862:	99 0f       	add	r25, r25
     864:	99 0f       	add	r25, r25
     866:	40 a9       	ldd	r20, Z+48	; 0x30
     868:	51 a9       	ldd	r21, Z+49	; 0x31
     86a:	62 a9       	ldd	r22, Z+50	; 0x32
     86c:	73 a9       	ldd	r23, Z+51	; 0x33
     86e:	8a 01       	movw	r16, r20
     870:	9b 01       	movw	r18, r22
     872:	04 c0       	rjmp	.+8      	; 0x87c <Gps_send_Distance+0x4e>
     874:	35 95       	asr	r19
     876:	27 95       	ror	r18
     878:	17 95       	ror	r17
     87a:	07 95       	ror	r16
     87c:	9a 95       	dec	r25
     87e:	d2 f7       	brpl	.-12     	; 0x874 <Gps_send_Distance+0x46>
     880:	d9 01       	movw	r26, r18
     882:	c8 01       	movw	r24, r16
     884:	0e 94 78 04 	call	0x8f0	; 0x8f0 <set_data>
		bytes++;	
     888:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <bytes>
     88c:	8f 5f       	subi	r24, 0xFF	; 255
     88e:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <bytes>
	}
	
     892:	1f 91       	pop	r17
     894:	0f 91       	pop	r16
     896:	08 95       	ret

00000898 <i2c_service>:
}


void i2c_service(void)
{
	switch(opcode)
     898:	80 91 7b 01 	lds	r24, 0x017B	; 0x80017b <opcode>
     89c:	81 30       	cpi	r24, 0x01	; 1
     89e:	19 f0       	breq	.+6      	; 0x8a6 <i2c_service+0xe>
     8a0:	82 30       	cpi	r24, 0x02	; 2
     8a2:	21 f0       	breq	.+8      	; 0x8ac <i2c_service+0x14>
     8a4:	08 95       	ret
{	
	
	case 1:
	{
		Gps_send_Direction();
     8a6:	0e 94 ed 03 	call	0x7da	; 0x7da <Gps_send_Direction>
		break;
     8aa:	08 95       	ret
	}
	
	case 2:
	 {
		 Gps_send_Distance();
     8ac:	0e 94 17 04 	call	0x82e	; 0x82e <Gps_send_Distance>
     8b0:	08 95       	ret

000008b2 <I2C_recieve>:
		sei();
}

void i2c_transmit_data(uint8_t data)
{		
	TWDR = data;
     8b2:	cf 93       	push	r28
     8b4:	c8 2f       	mov	r28, r24
     8b6:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <set_opcode>
     8ba:	c0 93 7c 01 	sts	0x017C, r28	; 0x80017c <data>
     8be:	cf 91       	pop	r28
     8c0:	08 95       	ret

000008c2 <I2C_data_ACK_request>:
     8c2:	0e 94 4c 04 	call	0x898	; 0x898 <i2c_service>
     8c6:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <data>
     8ca:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     8ce:	08 95       	ret

000008d0 <I2C_data_NACK_request>:
     8d0:	0e 94 4c 04 	call	0x898	; 0x898 <i2c_service>
     8d4:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <data>
     8d8:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     8dc:	08 95       	ret

000008de <i2c_init>:
     8de:	f8 94       	cli
     8e0:	88 0f       	add	r24, r24
     8e2:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
     8e6:	85 ec       	ldi	r24, 0xC5	; 197
     8e8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     8ec:	78 94       	sei
     8ee:	08 95       	ret

000008f0 <set_data>:
}

void set_data(uint8_t value)
{
	data = value;
     8f0:	80 93 7c 01 	sts	0x017C, r24	; 0x80017c <data>
     8f4:	08 95       	ret

000008f6 <__vector_24>:
}


 
ISR(TWI_vect)
{
     8f6:	1f 92       	push	r1
     8f8:	0f 92       	push	r0
     8fa:	0f b6       	in	r0, 0x3f	; 63
     8fc:	0f 92       	push	r0
     8fe:	11 24       	eor	r1, r1
     900:	2f 93       	push	r18
     902:	3f 93       	push	r19
     904:	4f 93       	push	r20
     906:	5f 93       	push	r21
     908:	6f 93       	push	r22
     90a:	7f 93       	push	r23
     90c:	8f 93       	push	r24
     90e:	9f 93       	push	r25
     910:	af 93       	push	r26
     912:	bf 93       	push	r27
     914:	ef 93       	push	r30
     916:	ff 93       	push	r31
	switch(TW_STATUS)
     918:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     91c:	88 7f       	andi	r24, 0xF8	; 248
     91e:	80 38       	cpi	r24, 0x80	; 128
     920:	49 f0       	breq	.+18     	; 0x934 <__stack+0x35>
     922:	18 f4       	brcc	.+6      	; 0x92a <__stack+0x2b>
     924:	88 23       	and	r24, r24
     926:	d1 f0       	breq	.+52     	; 0x95c <__stack+0x5d>
     928:	1f c0       	rjmp	.+62     	; 0x968 <__stack+0x69>
     92a:	88 3a       	cpi	r24, 0xA8	; 168
     92c:	59 f0       	breq	.+22     	; 0x944 <__stack+0x45>
     92e:	88 3b       	cpi	r24, 0xB8	; 184
     930:	79 f0       	breq	.+30     	; 0x950 <__stack+0x51>
     932:	1a c0       	rjmp	.+52     	; 0x968 <__stack+0x69>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recieve(TWDR);
     934:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     938:	0e 94 59 04 	call	0x8b2	; 0x8b2 <I2C_recieve>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     93c:	85 ec       	ldi	r24, 0xC5	; 197
     93e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     942:	15 c0       	rjmp	.+42     	; 0x96e <__stack+0x6f>
		
		case TW_ST_SLA_ACK:
		// master is requesting data using NACK,master expects only one additional byte. call the request callback
		I2C_data_NACK_request();
     944:	0e 94 68 04 	call	0x8d0	; 0x8d0 <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     948:	85 ec       	ldi	r24, 0xC5	; 197
     94a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     94e:	0f c0       	rjmp	.+30     	; 0x96e <__stack+0x6f>
		
		case TW_ST_DATA_ACK:
		// master is requesting data using ACK, master expects multiple bytes. call the request callback
		I2C_data_ACK_request();
     950:	0e 94 61 04 	call	0x8c2	; 0x8c2 <I2C_data_ACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     954:	85 ec       	ldi	r24, 0xC5	; 197
     956:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     95a:	09 c0       	rjmp	.+18     	; 0x96e <__stack+0x6f>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     95c:	ec eb       	ldi	r30, 0xBC	; 188
     95e:	f0 e0       	ldi	r31, 0x00	; 0
     960:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     962:	85 ec       	ldi	r24, 0xC5	; 197
     964:	80 83       	st	Z, r24
		break;
     966:	03 c0       	rjmp	.+6      	; 0x96e <__stack+0x6f>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     968:	85 ec       	ldi	r24, 0xC5	; 197
     96a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
	}
}
     96e:	ff 91       	pop	r31
     970:	ef 91       	pop	r30
     972:	bf 91       	pop	r27
     974:	af 91       	pop	r26
     976:	9f 91       	pop	r25
     978:	8f 91       	pop	r24
     97a:	7f 91       	pop	r23
     97c:	6f 91       	pop	r22
     97e:	5f 91       	pop	r21
     980:	4f 91       	pop	r20
     982:	3f 91       	pop	r19
     984:	2f 91       	pop	r18
     986:	0f 90       	pop	r0
     988:	0f be       	out	0x3f, r0	; 63
     98a:	0f 90       	pop	r0
     98c:	1f 90       	pop	r1
     98e:	18 95       	reti

00000990 <main>:
#define address 0x40



int main(void)
{	
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	cd b7       	in	r28, 0x3d	; 61
     996:	de b7       	in	r29, 0x3e	; 62
     998:	cb 59       	subi	r28, 0x9B	; 155
     99a:	d1 09       	sbc	r29, r1
     99c:	0f b6       	in	r0, 0x3f	; 63
     99e:	f8 94       	cli
     9a0:	de bf       	out	0x3e, r29	; 62
     9a2:	0f be       	out	0x3f, r0	; 63
     9a4:	cd bf       	out	0x3d, r28	; 61
	DDRC |=(1<<PORTC0); //Setting port C0 as an output 
     9a6:	38 9a       	sbi	0x07, 0	; 7
	i2c_init(address);  //init i2c transmiission 
     9a8:	80 e4       	ldi	r24, 0x40	; 64
     9aa:	0e 94 6f 04 	call	0x8de	; 0x8de <i2c_init>
	GPS_init();         //init GPS decoder
     9ae:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <GPS_init>
	usart_init();
     9b2:	0e 94 65 08 	call	0x10ca	; 0x10ca <usart_init>
//while(1){	
	//Defining waypoint and NMEA, message 
	//coor_t WP  = {54.90, 904558, 9.78, 786864};
	
	coor_t WP  = {54.91, 911290, 9.78, 780456};
     9b6:	80 e1       	ldi	r24, 0x10	; 16
     9b8:	e0 e0       	ldi	r30, 0x00	; 0
     9ba:	f1 e0       	ldi	r31, 0x01	; 1
     9bc:	de 01       	movw	r26, r28
     9be:	11 96       	adiw	r26, 0x01	; 1
     9c0:	01 90       	ld	r0, Z+
     9c2:	0d 92       	st	X+, r0
     9c4:	8a 95       	dec	r24
     9c6:	e1 f7       	brne	.-8      	; 0x9c0 <main+0x30>
	 
	
while(1){	
			//usart_init();
		
			init_GPSDATA(&NMEA1); //to expose NMEA1 to GPS_send.h 
     9c8:	ce 01       	movw	r24, r28
     9ca:	8a 59       	subi	r24, 0x9A	; 154
     9cc:	9f 4f       	sbci	r25, 0xFF	; 255
     9ce:	0e 94 cc 03 	call	0x798	; 0x798 <init_GPSDATA>
		
			//Getting GPGAA from complete data pakage  
			while(!get_gps_message(msg)); 
     9d2:	ce 01       	movw	r24, r28
     9d4:	41 96       	adiw	r24, 0x11	; 17
     9d6:	0e 94 05 01 	call	0x20a	; 0x20a <get_gps_message>
     9da:	89 2b       	or	r24, r25
     9dc:	d1 f3       	breq	.-12     	; 0x9d2 <main+0x42>
			//printing_data(); //Printng message 
	
			//Decoding 
			if(GPS_Decode(msg, &NMEA1))	//Take message as char array and reference to data struct. Returns true if checksum is okay. AND if quality <=4
     9de:	be 01       	movw	r22, r28
     9e0:	6a 59       	subi	r22, 0x9A	; 154
     9e2:	7f 4f       	sbci	r23, 0xFF	; 255
     9e4:	ce 01       	movw	r24, r28
     9e6:	41 96       	adiw	r24, 0x11	; 17
     9e8:	0e 94 c8 06 	call	0xd90	; 0xd90 <GPS_Decode>
     9ec:	89 2b       	or	r24, r25
     9ee:	61 f3       	breq	.-40     	; 0x9c8 <main+0x38>
			{
				dist_to_wp(&NMEA1, WP);  //Calculating dist from pos and WP 
     9f0:	89 80       	ldd	r8, Y+1	; 0x01
     9f2:	9a 80       	ldd	r9, Y+2	; 0x02
     9f4:	ab 80       	ldd	r10, Y+3	; 0x03
     9f6:	bc 80       	ldd	r11, Y+4	; 0x04
     9f8:	cd 80       	ldd	r12, Y+5	; 0x05
     9fa:	de 80       	ldd	r13, Y+6	; 0x06
     9fc:	ef 80       	ldd	r14, Y+7	; 0x07
     9fe:	f8 84       	ldd	r15, Y+8	; 0x08
     a00:	09 85       	ldd	r16, Y+9	; 0x09
     a02:	1a 85       	ldd	r17, Y+10	; 0x0a
     a04:	2b 85       	ldd	r18, Y+11	; 0x0b
     a06:	3c 85       	ldd	r19, Y+12	; 0x0c
     a08:	4d 85       	ldd	r20, Y+13	; 0x0d
     a0a:	5e 85       	ldd	r21, Y+14	; 0x0e
     a0c:	6f 85       	ldd	r22, Y+15	; 0x0f
     a0e:	78 89       	ldd	r23, Y+16	; 0x10
     a10:	ce 01       	movw	r24, r28
     a12:	8a 59       	subi	r24, 0x9A	; 154
     a14:	9f 4f       	sbci	r25, 0xFF	; 255
     a16:	0e 94 5c 01 	call	0x2b8	; 0x2b8 <dist_to_wp>
				bearing_to_wp(&NMEA1, WP); //Calculating bearing from pos and WP 
     a1a:	89 80       	ldd	r8, Y+1	; 0x01
     a1c:	9a 80       	ldd	r9, Y+2	; 0x02
     a1e:	ab 80       	ldd	r10, Y+3	; 0x03
     a20:	bc 80       	ldd	r11, Y+4	; 0x04
     a22:	cd 80       	ldd	r12, Y+5	; 0x05
     a24:	de 80       	ldd	r13, Y+6	; 0x06
     a26:	ef 80       	ldd	r14, Y+7	; 0x07
     a28:	f8 84       	ldd	r15, Y+8	; 0x08
     a2a:	09 85       	ldd	r16, Y+9	; 0x09
     a2c:	1a 85       	ldd	r17, Y+10	; 0x0a
     a2e:	2b 85       	ldd	r18, Y+11	; 0x0b
     a30:	3c 85       	ldd	r19, Y+12	; 0x0c
     a32:	4d 85       	ldd	r20, Y+13	; 0x0d
     a34:	5e 85       	ldd	r21, Y+14	; 0x0e
     a36:	6f 85       	ldd	r22, Y+15	; 0x0f
     a38:	78 89       	ldd	r23, Y+16	; 0x10
     a3a:	ce 01       	movw	r24, r28
     a3c:	8a 59       	subi	r24, 0x9A	; 154
     a3e:	9f 4f       	sbci	r25, 0xFF	; 255
     a40:	0e 94 59 02 	call	0x4b2	; 0x4b2 <bearing_to_wp>
				Transmit_dist_bearing_i2C(&NMEA1); //Transmitting via I2C 
     a44:	ce 01       	movw	r24, r28
     a46:	8a 59       	subi	r24, 0x9A	; 154
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	0e 94 9e 03 	call	0x73c	; 0x73c <Transmit_dist_bearing_i2C>
     a4e:	bc cf       	rjmp	.-136    	; 0x9c8 <main+0x38>

00000a50 <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     a50:	fc 01       	movw	r30, r24
	GPS_Data->LAT_Float=0.0;
     a52:	16 82       	std	Z+6, r1	; 0x06
     a54:	17 82       	std	Z+7, r1	; 0x07
     a56:	10 86       	std	Z+8, r1	; 0x08
     a58:	11 86       	std	Z+9, r1	; 0x09
	GPS_Data->LAT=0;
     a5a:	12 82       	std	Z+2, r1	; 0x02
     a5c:	13 82       	std	Z+3, r1	; 0x03
     a5e:	14 82       	std	Z+4, r1	; 0x04
     a60:	15 82       	std	Z+5, r1	; 0x05
	GPS_Data->LAT_Min=0;
     a62:	11 82       	std	Z+1, r1	; 0x01
	GPS_Data->LAT_Degree=0;
     a64:	10 82       	st	Z, r1
	GPS_Data->LON_Float=0.0;
     a66:	15 8a       	std	Z+21, r1	; 0x15
     a68:	16 8a       	std	Z+22, r1	; 0x16
     a6a:	17 8a       	std	Z+23, r1	; 0x17
     a6c:	10 8e       	std	Z+24, r1	; 0x18
	GPS_Data->LON=0;
     a6e:	11 8a       	std	Z+17, r1	; 0x11
     a70:	12 8a       	std	Z+18, r1	; 0x12
     a72:	13 8a       	std	Z+19, r1	; 0x13
     a74:	14 8a       	std	Z+20, r1	; 0x14
	GPS_Data->LON_Min=0;
     a76:	10 8a       	std	Z+16, r1	; 0x10
	GPS_Data->LON_Degree=0;
     a78:	17 86       	std	Z+15, r1	; 0x0f
	GPS_Data->ageOfCorrection = 0;
     a7a:	17 8e       	std	Z+31, r1	; 0x1f
	GPS_Data->quality=0;
     a7c:	16 8e       	std	Z+30, r1	; 0x1e
	GPS_Data->Speed=0;
     a7e:	14 a2       	std	Z+36, r1	; 0x24
     a80:	15 a2       	std	Z+37, r1	; 0x25
     a82:	16 a2       	std	Z+38, r1	; 0x26
     a84:	17 a2       	std	Z+39, r1	; 0x27
	GPS_Data->bearing_true=0;
     a86:	10 a2       	std	Z+32, r1	; 0x20
     a88:	11 a2       	std	Z+33, r1	; 0x21
     a8a:	12 a2       	std	Z+34, r1	; 0x22
     a8c:	13 a2       	std	Z+35, r1	; 0x23
	GPS_Data->dist_wp=0;
     a8e:	10 a6       	std	Z+40, r1	; 0x28
     a90:	11 a6       	std	Z+41, r1	; 0x29
     a92:	12 a6       	std	Z+42, r1	; 0x2a
     a94:	13 a6       	std	Z+43, r1	; 0x2b
	GPS_Data->bearing_wp=0;
     a96:	14 a6       	std	Z+44, r1	; 0x2c
     a98:	15 a6       	std	Z+45, r1	; 0x2d
     a9a:	16 a6       	std	Z+46, r1	; 0x2e
     a9c:	17 a6       	std	Z+47, r1	; 0x2f
     a9e:	08 95       	ret

00000aa0 <checksum>:
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
     aa0:	fc 01       	movw	r30, r24
     aa2:	20 81       	ld	r18, Z
     aa4:	24 32       	cpi	r18, 0x24	; 36
     aa6:	61 f5       	brne	.+88     	; 0xb00 <checksum+0x60>
	{
		i++;
		while(msg[i] != '*')
     aa8:	21 81       	ldd	r18, Z+1	; 0x01
     aaa:	2a 32       	cpi	r18, 0x2A	; 42
     aac:	59 f1       	breq	.+86     	; 0xb04 <checksum+0x64>
     aae:	dc 01       	movw	r26, r24
     ab0:	12 96       	adiw	r26, 0x02	; 2
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	70 e0       	ldi	r23, 0x00	; 0
     ab6:	41 e0       	ldi	r20, 0x01	; 1
     ab8:	50 e0       	ldi	r21, 0x00	; 0
		{
			checksum ^= (msg[i]-48);
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	20 53       	subi	r18, 0x30	; 48
     abe:	31 09       	sbc	r19, r1
     ac0:	62 27       	eor	r22, r18
     ac2:	73 27       	eor	r23, r19
			i++;
     ac4:	4f 5f       	subi	r20, 0xFF	; 255
     ac6:	5f 4f       	sbci	r21, 0xFF	; 255
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     ac8:	2d 91       	ld	r18, X+
     aca:	2a 32       	cpi	r18, 0x2A	; 42
     acc:	b1 f7       	brne	.-20     	; 0xaba <checksum+0x1a>
     ace:	1e c0       	rjmp	.+60     	; 0xb0c <checksum+0x6c>
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
			{
				nmea_sum += 1*(msg[i]-48);
     ad0:	42 2f       	mov	r20, r18
     ad2:	50 e0       	ldi	r21, 0x00	; 0
     ad4:	40 53       	subi	r20, 0x30	; 48
     ad6:	51 09       	sbc	r21, r1
     ad8:	84 0f       	add	r24, r20
     ada:	95 1f       	adc	r25, r21
			}
			
			if((msg[i]>='A') && (msg[i]<='F'))
     adc:	3f eb       	ldi	r19, 0xBF	; 191
     ade:	32 0f       	add	r19, r18
     ae0:	36 30       	cpi	r19, 0x06	; 6
     ae2:	28 f4       	brcc	.+10     	; 0xaee <checksum+0x4e>
			{
				nmea_sum += 1*(msg[i]-55);
     ae4:	30 e0       	ldi	r19, 0x00	; 0
     ae6:	27 53       	subi	r18, 0x37	; 55
     ae8:	31 09       	sbc	r19, r1
     aea:	82 0f       	add	r24, r18
     aec:	93 1f       	adc	r25, r19
			}
		}
		
		if(checksum==(nmea_sum-(2*48)))
		{
			return 1;
     aee:	9c 01       	movw	r18, r24
     af0:	20 56       	subi	r18, 0x60	; 96
     af2:	31 09       	sbc	r19, r1
     af4:	81 e0       	ldi	r24, 0x01	; 1
     af6:	26 17       	cp	r18, r22
     af8:	37 07       	cpc	r19, r23
     afa:	d1 f0       	breq	.+52     	; 0xb30 <checksum+0x90>
     afc:	80 e0       	ldi	r24, 0x00	; 0
     afe:	08 95       	ret
		{
			return 0;
		}
		
	}
return 0; 
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	08 95       	ret
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     b04:	60 e0       	ldi	r22, 0x00	; 0
     b06:	70 e0       	ldi	r23, 0x00	; 0
     b08:	41 e0       	ldi	r20, 0x01	; 1
     b0a:	50 e0       	ldi	r21, 0x00	; 0
		
		if(msg[i] == '*')
		{
			////////////MSB
			i++;
			nmea_sum = 16*(msg[i]-48);
     b0c:	fc 01       	movw	r30, r24
     b0e:	e4 0f       	add	r30, r20
     b10:	f5 1f       	adc	r31, r21
     b12:	81 81       	ldd	r24, Z+1	; 0x01
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	c0 97       	sbiw	r24, 0x30	; 48
     b18:	82 95       	swap	r24
     b1a:	92 95       	swap	r25
     b1c:	90 7f       	andi	r25, 0xF0	; 240
     b1e:	98 27       	eor	r25, r24
     b20:	80 7f       	andi	r24, 0xF0	; 240
     b22:	98 27       	eor	r25, r24
				
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     b24:	22 81       	ldd	r18, Z+2	; 0x02
     b26:	30 ed       	ldi	r19, 0xD0	; 208
     b28:	32 0f       	add	r19, r18
     b2a:	3a 30       	cpi	r19, 0x0A	; 10
     b2c:	88 f2       	brcs	.-94     	; 0xad0 <checksum+0x30>
     b2e:	d6 cf       	rjmp	.-84     	; 0xadc <checksum+0x3c>
			return 0;
		}
		
	}
return 0; 
}
     b30:	08 95       	ret

00000b32 <MessageType>:

uint8_t MessageType(char* msg){
     b32:	cf 93       	push	r28
     b34:	df 93       	push	r29
     b36:	cd b7       	in	r28, 0x3d	; 61
     b38:	de b7       	in	r29, 0x3e	; 62
     b3a:	64 97       	sbiw	r28, 0x14	; 20
     b3c:	0f b6       	in	r0, 0x3f	; 63
     b3e:	f8 94       	cli
     b40:	de bf       	out	0x3e, r29	; 62
     b42:	0f be       	out	0x3f, r0	; 63
     b44:	cd bf       	out	0x3d, r28	; 61
	if(msg[0]=='$')
     b46:	fc 01       	movw	r30, r24
     b48:	20 81       	ld	r18, Z
     b4a:	24 32       	cpi	r18, 0x24	; 36
     b4c:	09 f0       	breq	.+2      	; 0xb50 <MessageType+0x1e>
     b4e:	55 c0       	rjmp	.+170    	; 0xbfa <MessageType+0xc8>
     b50:	dc 01       	movw	r26, r24
     b52:	11 96       	adiw	r26, 0x01	; 1
     b54:	fe 01       	movw	r30, r28
     b56:	70 96       	adiw	r30, 0x10	; 16
     b58:	9e 01       	movw	r18, r28
     b5a:	2b 5e       	subi	r18, 0xEB	; 235
     b5c:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     b5e:	8d 91       	ld	r24, X+
     b60:	9f eb       	ldi	r25, 0xBF	; 191
     b62:	98 0f       	add	r25, r24
     b64:	9a 31       	cpi	r25, 0x1A	; 26
     b66:	08 f4       	brcc	.+2      	; 0xb6a <MessageType+0x38>
			{
				msg_type[k]	= msg[k+1];
     b68:	80 83       	st	Z, r24
     b6a:	31 96       	adiw	r30, 0x01	; 1

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     b6c:	e2 17       	cp	r30, r18
     b6e:	f3 07       	cpc	r31, r19
     b70:	b1 f7       	brne	.-20     	; 0xb5e <MessageType+0x2c>
			else
			{
				//printf("Failed message type\n");
			}
		}
		char msg_gpgga[5] = "GPGGA";
     b72:	85 e0       	ldi	r24, 0x05	; 5
     b74:	e0 e1       	ldi	r30, 0x10	; 16
     b76:	f1 e0       	ldi	r31, 0x01	; 1
     b78:	de 01       	movw	r26, r28
     b7a:	1b 96       	adiw	r26, 0x0b	; 11
     b7c:	01 90       	ld	r0, Z+
     b7e:	0d 92       	st	X+, r0
     b80:	8a 95       	dec	r24
     b82:	e1 f7       	brne	.-8      	; 0xb7c <MessageType+0x4a>
		char msg_gpvtg[5] = "GPVTG";
     b84:	85 e0       	ldi	r24, 0x05	; 5
     b86:	e6 e1       	ldi	r30, 0x16	; 22
     b88:	f1 e0       	ldi	r31, 0x01	; 1
     b8a:	de 01       	movw	r26, r28
     b8c:	16 96       	adiw	r26, 0x06	; 6
     b8e:	01 90       	ld	r0, Z+
     b90:	0d 92       	st	X+, r0
     b92:	8a 95       	dec	r24
     b94:	e1 f7       	brne	.-8      	; 0xb8e <MessageType+0x5c>
		char msg_gngga[5] = "GNGGA";
     b96:	85 e0       	ldi	r24, 0x05	; 5
     b98:	ec e1       	ldi	r30, 0x1C	; 28
     b9a:	f1 e0       	ldi	r31, 0x01	; 1
     b9c:	de 01       	movw	r26, r28
     b9e:	11 96       	adiw	r26, 0x01	; 1
     ba0:	01 90       	ld	r0, Z+
     ba2:	0d 92       	st	X+, r0
     ba4:	8a 95       	dec	r24
     ba6:	e1 f7       	brne	.-8      	; 0xba0 <MessageType+0x6e>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     ba8:	45 e0       	ldi	r20, 0x05	; 5
     baa:	50 e0       	ldi	r21, 0x00	; 0
     bac:	be 01       	movw	r22, r28
     bae:	65 5f       	subi	r22, 0xF5	; 245
     bb0:	7f 4f       	sbci	r23, 0xFF	; 255
     bb2:	ce 01       	movw	r24, r28
     bb4:	40 96       	adiw	r24, 0x10	; 16
     bb6:	0e 94 01 11 	call	0x2202	; 0x2202 <strncmp>
     bba:	89 2b       	or	r24, r25
     bbc:	c1 f0       	breq	.+48     	; 0xbee <MessageType+0xbc>
		{
			return GPGGA;
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     bbe:	45 e0       	ldi	r20, 0x05	; 5
     bc0:	50 e0       	ldi	r21, 0x00	; 0
     bc2:	be 01       	movw	r22, r28
     bc4:	6a 5f       	subi	r22, 0xFA	; 250
     bc6:	7f 4f       	sbci	r23, 0xFF	; 255
     bc8:	ce 01       	movw	r24, r28
     bca:	40 96       	adiw	r24, 0x10	; 16
     bcc:	0e 94 01 11 	call	0x2202	; 0x2202 <strncmp>
     bd0:	89 2b       	or	r24, r25
     bd2:	79 f0       	breq	.+30     	; 0xbf2 <MessageType+0xc0>
		{
			return GPVTG;
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
     bd4:	45 e0       	ldi	r20, 0x05	; 5
     bd6:	50 e0       	ldi	r21, 0x00	; 0
     bd8:	be 01       	movw	r22, r28
     bda:	6f 5f       	subi	r22, 0xFF	; 255
     bdc:	7f 4f       	sbci	r23, 0xFF	; 255
     bde:	ce 01       	movw	r24, r28
     be0:	40 96       	adiw	r24, 0x10	; 16
     be2:	0e 94 01 11 	call	0x2202	; 0x2202 <strncmp>
     be6:	89 2b       	or	r24, r25
     be8:	31 f0       	breq	.+12     	; 0xbf6 <MessageType+0xc4>
		{
			return GPGGA;
		}
	}
	return 0; 
     bea:	80 e0       	ldi	r24, 0x00	; 0
     bec:	07 c0       	rjmp	.+14     	; 0xbfc <MessageType+0xca>
		char msg_gpvtg[5] = "GPVTG";
		char msg_gngga[5] = "GNGGA";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	05 c0       	rjmp	.+10     	; 0xbfc <MessageType+0xca>
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     bf2:	82 e0       	ldi	r24, 0x02	; 2
     bf4:	03 c0       	rjmp	.+6      	; 0xbfc <MessageType+0xca>
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
		{
			return GPGGA;
     bf6:	81 e0       	ldi	r24, 0x01	; 1
     bf8:	01 c0       	rjmp	.+2      	; 0xbfc <MessageType+0xca>
		}
	}
	return 0; 
     bfa:	80 e0       	ldi	r24, 0x00	; 0
}
     bfc:	64 96       	adiw	r28, 0x14	; 20
     bfe:	0f b6       	in	r0, 0x3f	; 63
     c00:	f8 94       	cli
     c02:	de bf       	out	0x3e, r29	; 62
     c04:	0f be       	out	0x3f, r0	; 63
     c06:	cd bf       	out	0x3d, r28	; 61
     c08:	df 91       	pop	r29
     c0a:	cf 91       	pop	r28
     c0c:	08 95       	ret

00000c0e <convert>:

void convert(struct DATA *GPS_Data)
{
     c0e:	4f 92       	push	r4
     c10:	5f 92       	push	r5
     c12:	6f 92       	push	r6
     c14:	7f 92       	push	r7
     c16:	8f 92       	push	r8
     c18:	9f 92       	push	r9
     c1a:	af 92       	push	r10
     c1c:	bf 92       	push	r11
     c1e:	cf 92       	push	r12
     c20:	df 92       	push	r13
     c22:	ef 92       	push	r14
     c24:	ff 92       	push	r15
     c26:	cf 93       	push	r28
     c28:	df 93       	push	r29
     c2a:	00 d0       	rcall	.+0      	; 0xc2c <convert+0x1e>
     c2c:	00 d0       	rcall	.+0      	; 0xc2e <convert+0x20>
     c2e:	00 d0       	rcall	.+0      	; 0xc30 <convert+0x22>
     c30:	cd b7       	in	r28, 0x3d	; 61
     c32:	de b7       	in	r29, 0x3e	; 62
     c34:	9e 83       	std	Y+6, r25	; 0x06
     c36:	8d 83       	std	Y+5, r24	; 0x05
	GPS_Data->LAT_Float = GPS_Data->LAT_Degree + (GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0);
     c38:	fc 01       	movw	r30, r24
     c3a:	61 81       	ldd	r22, Z+1	; 0x01
     c3c:	70 e0       	ldi	r23, 0x00	; 0
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	90 e0       	ldi	r25, 0x00	; 0
     c42:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     c46:	20 e0       	ldi	r18, 0x00	; 0
     c48:	30 e0       	ldi	r19, 0x00	; 0
     c4a:	40 e7       	ldi	r20, 0x70	; 112
     c4c:	52 e4       	ldi	r21, 0x42	; 66
     c4e:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     c52:	6b 01       	movw	r12, r22
     c54:	7c 01       	movw	r14, r24
     c56:	ed 81       	ldd	r30, Y+5	; 0x05
     c58:	fe 81       	ldd	r31, Y+6	; 0x06
     c5a:	62 81       	ldd	r22, Z+2	; 0x02
     c5c:	73 81       	ldd	r23, Z+3	; 0x03
     c5e:	84 81       	ldd	r24, Z+4	; 0x04
     c60:	95 81       	ldd	r25, Z+5	; 0x05
     c62:	0e 94 26 0a 	call	0x144c	; 0x144c <__floatunsisf>
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	3b e1       	ldi	r19, 0x1B	; 27
     c6a:	47 eb       	ldi	r20, 0xB7	; 183
     c6c:	5a e4       	ldi	r21, 0x4A	; 74
     c6e:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     c72:	69 83       	std	Y+1, r22	; 0x01
     c74:	7a 83       	std	Y+2, r23	; 0x02
     c76:	8b 83       	std	Y+3, r24	; 0x03
     c78:	9c 83       	std	Y+4, r25	; 0x04
     c7a:	ed 81       	ldd	r30, Y+5	; 0x05
     c7c:	fe 81       	ldd	r31, Y+6	; 0x06
     c7e:	60 81       	ld	r22, Z
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     c8a:	a7 01       	movw	r20, r14
     c8c:	96 01       	movw	r18, r12
     c8e:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     c92:	29 81       	ldd	r18, Y+1	; 0x01
     c94:	3a 81       	ldd	r19, Y+2	; 0x02
     c96:	4b 81       	ldd	r20, Y+3	; 0x03
     c98:	5c 81       	ldd	r21, Y+4	; 0x04
     c9a:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     c9e:	ed 81       	ldd	r30, Y+5	; 0x05
     ca0:	fe 81       	ldd	r31, Y+6	; 0x06
     ca2:	66 83       	std	Z+6, r22	; 0x06
     ca4:	77 83       	std	Z+7, r23	; 0x07
     ca6:	80 87       	std	Z+8, r24	; 0x08
     ca8:	91 87       	std	Z+9, r25	; 0x09
	GPS_Data->LON_Float = GPS_Data->LON_Degree + (GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0);
     caa:	60 89       	ldd	r22, Z+16	; 0x10
     cac:	70 e0       	ldi	r23, 0x00	; 0
     cae:	80 e0       	ldi	r24, 0x00	; 0
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     cb6:	20 e0       	ldi	r18, 0x00	; 0
     cb8:	30 e0       	ldi	r19, 0x00	; 0
     cba:	40 e7       	ldi	r20, 0x70	; 112
     cbc:	52 e4       	ldi	r21, 0x42	; 66
     cbe:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     cc2:	4b 01       	movw	r8, r22
     cc4:	5c 01       	movw	r10, r24
     cc6:	ed 81       	ldd	r30, Y+5	; 0x05
     cc8:	fe 81       	ldd	r31, Y+6	; 0x06
     cca:	61 89       	ldd	r22, Z+17	; 0x11
     ccc:	72 89       	ldd	r23, Z+18	; 0x12
     cce:	83 89       	ldd	r24, Z+19	; 0x13
     cd0:	94 89       	ldd	r25, Z+20	; 0x14
     cd2:	0e 94 26 0a 	call	0x144c	; 0x144c <__floatunsisf>
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	3b e1       	ldi	r19, 0x1B	; 27
     cda:	47 eb       	ldi	r20, 0xB7	; 183
     cdc:	5a e4       	ldi	r21, 0x4A	; 74
     cde:	0e 94 7e 09 	call	0x12fc	; 0x12fc <__divsf3>
     ce2:	2b 01       	movw	r4, r22
     ce4:	3c 01       	movw	r6, r24
     ce6:	ed 81       	ldd	r30, Y+5	; 0x05
     ce8:	fe 81       	ldd	r31, Y+6	; 0x06
     cea:	67 85       	ldd	r22, Z+15	; 0x0f
     cec:	70 e0       	ldi	r23, 0x00	; 0
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	0e 94 28 0a 	call	0x1450	; 0x1450 <__floatsisf>
     cf6:	a5 01       	movw	r20, r10
     cf8:	94 01       	movw	r18, r8
     cfa:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     cfe:	a3 01       	movw	r20, r6
     d00:	92 01       	movw	r18, r4
     d02:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     d06:	ed 81       	ldd	r30, Y+5	; 0x05
     d08:	fe 81       	ldd	r31, Y+6	; 0x06
     d0a:	65 8b       	std	Z+21, r22	; 0x15
     d0c:	76 8b       	std	Z+22, r23	; 0x16
     d0e:	87 8b       	std	Z+23, r24	; 0x17
     d10:	90 8f       	std	Z+24, r25	; 0x18
	GPS_Data->LON_FINAL =  ((GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0))  *1000000;
     d12:	a3 01       	movw	r20, r6
     d14:	92 01       	movw	r18, r4
     d16:	c5 01       	movw	r24, r10
     d18:	b4 01       	movw	r22, r8
     d1a:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     d1e:	20 e0       	ldi	r18, 0x00	; 0
     d20:	34 e2       	ldi	r19, 0x24	; 36
     d22:	44 e7       	ldi	r20, 0x74	; 116
     d24:	59 e4       	ldi	r21, 0x49	; 73
     d26:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     d2a:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__fixunssfsi>
     d2e:	ed 81       	ldd	r30, Y+5	; 0x05
     d30:	fe 81       	ldd	r31, Y+6	; 0x06
     d32:	61 8f       	std	Z+25, r22	; 0x19
     d34:	72 8f       	std	Z+26, r23	; 0x1a
     d36:	83 8f       	std	Z+27, r24	; 0x1b
     d38:	94 8f       	std	Z+28, r25	; 0x1c
	GPS_Data->LAT_FINAL = ((GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0)) *1000000;
     d3a:	29 81       	ldd	r18, Y+1	; 0x01
     d3c:	3a 81       	ldd	r19, Y+2	; 0x02
     d3e:	4b 81       	ldd	r20, Y+3	; 0x03
     d40:	5c 81       	ldd	r21, Y+4	; 0x04
     d42:	c7 01       	movw	r24, r14
     d44:	b6 01       	movw	r22, r12
     d46:	0e 94 96 08 	call	0x112c	; 0x112c <__addsf3>
     d4a:	20 e0       	ldi	r18, 0x00	; 0
     d4c:	34 e2       	ldi	r19, 0x24	; 36
     d4e:	44 e7       	ldi	r20, 0x74	; 116
     d50:	59 e4       	ldi	r21, 0x49	; 73
     d52:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
     d56:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__fixunssfsi>
     d5a:	ed 81       	ldd	r30, Y+5	; 0x05
     d5c:	fe 81       	ldd	r31, Y+6	; 0x06
     d5e:	62 87       	std	Z+10, r22	; 0x0a
     d60:	73 87       	std	Z+11, r23	; 0x0b
     d62:	84 87       	std	Z+12, r24	; 0x0c
     d64:	95 87       	std	Z+13, r25	; 0x0d
}
     d66:	26 96       	adiw	r28, 0x06	; 6
     d68:	0f b6       	in	r0, 0x3f	; 63
     d6a:	f8 94       	cli
     d6c:	de bf       	out	0x3e, r29	; 62
     d6e:	0f be       	out	0x3f, r0	; 63
     d70:	cd bf       	out	0x3d, r28	; 61
     d72:	df 91       	pop	r29
     d74:	cf 91       	pop	r28
     d76:	ff 90       	pop	r15
     d78:	ef 90       	pop	r14
     d7a:	df 90       	pop	r13
     d7c:	cf 90       	pop	r12
     d7e:	bf 90       	pop	r11
     d80:	af 90       	pop	r10
     d82:	9f 90       	pop	r9
     d84:	8f 90       	pop	r8
     d86:	7f 90       	pop	r7
     d88:	6f 90       	pop	r6
     d8a:	5f 90       	pop	r5
     d8c:	4f 90       	pop	r4
     d8e:	08 95       	ret

00000d90 <GPS_Decode>:

int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
     d90:	2f 92       	push	r2
     d92:	3f 92       	push	r3
     d94:	4f 92       	push	r4
     d96:	5f 92       	push	r5
     d98:	6f 92       	push	r6
     d9a:	7f 92       	push	r7
     d9c:	8f 92       	push	r8
     d9e:	9f 92       	push	r9
     da0:	af 92       	push	r10
     da2:	bf 92       	push	r11
     da4:	cf 92       	push	r12
     da6:	df 92       	push	r13
     da8:	ef 92       	push	r14
     daa:	ff 92       	push	r15
     dac:	0f 93       	push	r16
     dae:	1f 93       	push	r17
     db0:	cf 93       	push	r28
     db2:	df 93       	push	r29
     db4:	00 d0       	rcall	.+0      	; 0xdb6 <GPS_Decode+0x26>
     db6:	00 d0       	rcall	.+0      	; 0xdb8 <GPS_Decode+0x28>
     db8:	00 d0       	rcall	.+0      	; 0xdba <GPS_Decode+0x2a>
     dba:	cd b7       	in	r28, 0x3d	; 61
     dbc:	de b7       	in	r29, 0x3e	; 62
     dbe:	8c 01       	movw	r16, r24
     dc0:	7b 01       	movw	r14, r22
	///////////////////Checksum////////////////////////
	if(checksum(msg))  //! to disable during testing 
     dc2:	0e 94 50 05 	call	0xaa0	; 0xaa0 <checksum>
     dc6:	88 23       	and	r24, r24
     dc8:	09 f4       	brne	.+2      	; 0xdcc <GPS_Decode+0x3c>
     dca:	64 c1       	rjmp	.+712    	; 0x1094 <GPS_Decode+0x304>
	{
		uint8_t type = MessageType(msg);
     dcc:	c8 01       	movw	r24, r16
     dce:	0e 94 99 05 	call	0xb32	; 0xb32 <MessageType>
     dd2:	89 83       	std	Y+1, r24	; 0x01
		init(GPS_Data);
     dd4:	c7 01       	movw	r24, r14
     dd6:	0e 94 28 05 	call	0xa50	; 0xa50 <init>
		
	switch(type)
     dda:	29 81       	ldd	r18, Y+1	; 0x01
     ddc:	21 30       	cpi	r18, 0x01	; 1
     dde:	09 f0       	breq	.+2      	; 0xde2 <GPS_Decode+0x52>
     de0:	4d c1       	rjmp	.+666    	; 0x107c <GPS_Decode+0x2ec>
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
     de2:	d8 01       	movw	r26, r16
     de4:	16 96       	adiw	r26, 0x06	; 6
     de6:	8c 91       	ld	r24, X
     de8:	8a 32       	cpi	r24, 0x2A	; 42
     dea:	09 f4       	brne	.+2      	; 0xdee <GPS_Decode+0x5e>
     dec:	47 c1       	rjmp	.+654    	; 0x107c <GPS_Decode+0x2ec>
     dee:	0f 2e       	mov	r0, r31
     df0:	f0 e1       	ldi	r31, 0x10	; 16
     df2:	4f 2e       	mov	r4, r31
     df4:	f7 e2       	ldi	r31, 0x27	; 39
     df6:	5f 2e       	mov	r5, r31
     df8:	61 2c       	mov	r6, r1
     dfa:	71 2c       	mov	r7, r1
     dfc:	f0 2d       	mov	r31, r0
     dfe:	ba e0       	ldi	r27, 0x0A	; 10
     e00:	bc 83       	std	Y+4, r27	; 0x04
     e02:	e4 e6       	ldi	r30, 0x64	; 100
     e04:	e9 83       	std	Y+1, r30	; 0x01
     e06:	c1 2c       	mov	r12, r1
     e08:	0f 2e       	mov	r0, r31
     e0a:	f0 e1       	ldi	r31, 0x10	; 16
     e0c:	8f 2e       	mov	r8, r31
     e0e:	f7 e2       	ldi	r31, 0x27	; 39
     e10:	9f 2e       	mov	r9, r31
     e12:	a1 2c       	mov	r10, r1
     e14:	b1 2c       	mov	r11, r1
     e16:	f0 2d       	mov	r31, r0
     e18:	fa e0       	ldi	r31, 0x0A	; 10
     e1a:	fb 83       	std	Y+3, r31	; 0x03
     e1c:	2a e0       	ldi	r18, 0x0A	; 10
     e1e:	2a 83       	std	Y+2, r18	; 0x02
     e20:	d1 2c       	mov	r13, r1
     e22:	0f 2e       	mov	r0, r31
     e24:	fa e0       	ldi	r31, 0x0A	; 10
     e26:	3f 2e       	mov	r3, r31
     e28:	f0 2d       	mov	r31, r0
     e2a:	1e 82       	std	Y+6, r1	; 0x06
     e2c:	96 e0       	ldi	r25, 0x06	; 6
									LonDegree /= 10;
								}
								if((LonCount>=3) && (LonCount<5))
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
									LonHour /= 10;
     e2e:	0f 2e       	mov	r0, r31
     e30:	fd ec       	ldi	r31, 0xCD	; 205
     e32:	2f 2e       	mov	r2, r31
     e34:	f0 2d       	mov	r31, r0
     e36:	9d 83       	std	Y+5, r25	; 0x05
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
				{
					if(msg[i] == ',')
     e38:	8c 32       	cpi	r24, 0x2C	; 44
     e3a:	31 f4       	brne	.+12     	; 0xe48 <GPS_Decode+0xb8>
					{
						CommaCounter++;
     e3c:	be 81       	ldd	r27, Y+6	; 0x06
     e3e:	bf 5f       	subi	r27, 0xFF	; 255
     e40:	be 83       	std	Y+6, r27	; 0x06
						i++;
     e42:	ed 81       	ldd	r30, Y+5	; 0x05
     e44:	ef 5f       	subi	r30, 0xFF	; 255
     e46:	ed 83       	std	Y+5, r30	; 0x05
					}
					
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
     e48:	fe 81       	ldd	r31, Y+6	; 0x06
     e4a:	f4 30       	cpi	r31, 0x04	; 4
     e4c:	09 f4       	brne	.+2      	; 0xe50 <GPS_Decode+0xc0>
     e4e:	7c c0       	rjmp	.+248    	; 0xf48 <GPS_Decode+0x1b8>
     e50:	30 f4       	brcc	.+12     	; 0xe5e <GPS_Decode+0xce>
     e52:	f2 30       	cpi	r31, 0x02	; 2
     e54:	71 f0       	breq	.+28     	; 0xe72 <GPS_Decode+0xe2>
     e56:	f3 30       	cpi	r31, 0x03	; 3
     e58:	09 f4       	brne	.+2      	; 0xe5c <GPS_Decode+0xcc>
     e5a:	68 c0       	rjmp	.+208    	; 0xf2c <GPS_Decode+0x19c>
     e5c:	05 c1       	rjmp	.+522    	; 0x1068 <GPS_Decode+0x2d8>
     e5e:	2e 81       	ldd	r18, Y+6	; 0x06
     e60:	26 30       	cpi	r18, 0x06	; 6
     e62:	09 f4       	brne	.+2      	; 0xe66 <GPS_Decode+0xd6>
     e64:	dd c0       	rjmp	.+442    	; 0x1020 <GPS_Decode+0x290>
     e66:	08 f4       	brcc	.+2      	; 0xe6a <GPS_Decode+0xda>
     e68:	ce c0       	rjmp	.+412    	; 0x1006 <GPS_Decode+0x276>
     e6a:	2d 30       	cpi	r18, 0x0D	; 13
     e6c:	09 f4       	brne	.+2      	; 0xe70 <GPS_Decode+0xe0>
     e6e:	e3 c0       	rjmp	.+454    	; 0x1036 <GPS_Decode+0x2a6>
     e70:	fb c0       	rjmp	.+502    	; 0x1068 <GPS_Decode+0x2d8>
					{
						case 2:		//Latitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     e72:	f8 01       	movw	r30, r16
     e74:	8d 81       	ldd	r24, Y+5	; 0x05
     e76:	e8 0f       	add	r30, r24
     e78:	f1 1d       	adc	r31, r1
     e7a:	80 81       	ld	r24, Z
     e7c:	98 2f       	mov	r25, r24
     e7e:	9d 7f       	andi	r25, 0xFD	; 253
     e80:	9c 32       	cpi	r25, 0x2C	; 44
     e82:	09 f4       	brne	.+2      	; 0xe86 <GPS_Decode+0xf6>
     e84:	f1 c0       	rjmp	.+482    	; 0x1068 <GPS_Decode+0x2d8>
							{
								if(LatCount<2)
     e86:	91 e0       	ldi	r25, 0x01	; 1
     e88:	9d 15       	cp	r25, r13
     e8a:	88 f0       	brcs	.+34     	; 0xeae <GPS_Decode+0x11e>
								{
									GPS_Data->LAT_Degree += (msg[i]-48) * LatDegree;
     e8c:	80 53       	subi	r24, 0x30	; 48
     e8e:	d7 01       	movw	r26, r14
     e90:	9c 91       	ld	r25, X
     e92:	ba 81       	ldd	r27, Y+2	; 0x02
     e94:	8b 9f       	mul	r24, r27
     e96:	90 0d       	add	r25, r0
     e98:	11 24       	eor	r1, r1
     e9a:	d7 01       	movw	r26, r14
     e9c:	9c 93       	st	X, r25
									LatDegree /= 10;
     e9e:	ba 81       	ldd	r27, Y+2	; 0x02
     ea0:	b2 9d       	mul	r27, r2
     ea2:	81 2d       	mov	r24, r1
     ea4:	11 24       	eor	r1, r1
     ea6:	86 95       	lsr	r24
     ea8:	86 95       	lsr	r24
     eaa:	86 95       	lsr	r24
     eac:	8a 83       	std	Y+2, r24	; 0x02
								}
								if((LatCount>=2) && (LatCount<4))
     eae:	8e ef       	ldi	r24, 0xFE	; 254
     eb0:	8d 0d       	add	r24, r13
     eb2:	82 30       	cpi	r24, 0x02	; 2
     eb4:	a0 f4       	brcc	.+40     	; 0xede <GPS_Decode+0x14e>
								{
									GPS_Data->LAT_Min += (msg[i]-48) * LatHour;
     eb6:	90 81       	ld	r25, Z
     eb8:	90 53       	subi	r25, 0x30	; 48
     eba:	d7 01       	movw	r26, r14
     ebc:	11 96       	adiw	r26, 0x01	; 1
     ebe:	8c 91       	ld	r24, X
     ec0:	bb 81       	ldd	r27, Y+3	; 0x03
     ec2:	9b 9f       	mul	r25, r27
     ec4:	80 0d       	add	r24, r0
     ec6:	11 24       	eor	r1, r1
     ec8:	d7 01       	movw	r26, r14
     eca:	11 96       	adiw	r26, 0x01	; 1
     ecc:	8c 93       	st	X, r24
									LatHour /= 10;
     ece:	bb 81       	ldd	r27, Y+3	; 0x03
     ed0:	b2 9d       	mul	r27, r2
     ed2:	81 2d       	mov	r24, r1
     ed4:	11 24       	eor	r1, r1
     ed6:	86 95       	lsr	r24
     ed8:	86 95       	lsr	r24
     eda:	86 95       	lsr	r24
     edc:	8b 83       	std	Y+3, r24	; 0x03
								}
								if((LatCount>=4))
     ede:	23 e0       	ldi	r18, 0x03	; 3
     ee0:	2d 15       	cp	r18, r13
     ee2:	18 f5       	brcc	.+70     	; 0xf2a <GPS_Decode+0x19a>
								{
									GPS_Data->LAT += (msg[i]-48) * LatMin;
     ee4:	a0 81       	ld	r26, Z
     ee6:	b0 e0       	ldi	r27, 0x00	; 0
     ee8:	d0 97       	sbiw	r26, 0x30	; 48
     eea:	a5 01       	movw	r20, r10
     eec:	94 01       	movw	r18, r8
     eee:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <__mulshisi3>
     ef2:	d7 01       	movw	r26, r14
     ef4:	12 96       	adiw	r26, 0x02	; 2
     ef6:	2d 91       	ld	r18, X+
     ef8:	3d 91       	ld	r19, X+
     efa:	4d 91       	ld	r20, X+
     efc:	5c 91       	ld	r21, X
     efe:	15 97       	sbiw	r26, 0x05	; 5
     f00:	dc 01       	movw	r26, r24
     f02:	cb 01       	movw	r24, r22
     f04:	82 0f       	add	r24, r18
     f06:	93 1f       	adc	r25, r19
     f08:	a4 1f       	adc	r26, r20
     f0a:	b5 1f       	adc	r27, r21
     f0c:	f7 01       	movw	r30, r14
     f0e:	82 83       	std	Z+2, r24	; 0x02
     f10:	93 83       	std	Z+3, r25	; 0x03
     f12:	a4 83       	std	Z+4, r26	; 0x04
     f14:	b5 83       	std	Z+5, r27	; 0x05
									LatMin /= 10;
     f16:	c5 01       	movw	r24, r10
     f18:	b4 01       	movw	r22, r8
     f1a:	2a e0       	ldi	r18, 0x0A	; 10
     f1c:	30 e0       	ldi	r19, 0x00	; 0
     f1e:	40 e0       	ldi	r20, 0x00	; 0
     f20:	50 e0       	ldi	r21, 0x00	; 0
     f22:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <__udivmodsi4>
     f26:	49 01       	movw	r8, r18
     f28:	5a 01       	movw	r10, r20
								}
								LatCount++;
     f2a:	d3 94       	inc	r13

						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
						{
							if(msg[i]>='A' && msg[i]<='Z')
     f2c:	f8 01       	movw	r30, r16
     f2e:	2d 81       	ldd	r18, Y+5	; 0x05
     f30:	e2 0f       	add	r30, r18
     f32:	f1 1d       	adc	r31, r1
     f34:	80 81       	ld	r24, Z
     f36:	9f eb       	ldi	r25, 0xBF	; 191
     f38:	98 0f       	add	r25, r24
     f3a:	9a 31       	cpi	r25, 0x1A	; 26
     f3c:	08 f0       	brcs	.+2      	; 0xf40 <GPS_Decode+0x1b0>
     f3e:	94 c0       	rjmp	.+296    	; 0x1068 <GPS_Decode+0x2d8>
							{
								GPS_Data->LATdir = msg[i];
     f40:	d7 01       	movw	r26, r14
     f42:	1e 96       	adiw	r26, 0x0e	; 14
     f44:	8c 93       	st	X, r24
     f46:	90 c0       	rjmp	.+288    	; 0x1068 <GPS_Decode+0x2d8>
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     f48:	f8 01       	movw	r30, r16
     f4a:	bd 81       	ldd	r27, Y+5	; 0x05
     f4c:	eb 0f       	add	r30, r27
     f4e:	f1 1d       	adc	r31, r1
     f50:	80 81       	ld	r24, Z
     f52:	98 2f       	mov	r25, r24
     f54:	9d 7f       	andi	r25, 0xFD	; 253
     f56:	9c 32       	cpi	r25, 0x2C	; 44
     f58:	09 f4       	brne	.+2      	; 0xf5c <GPS_Decode+0x1cc>
     f5a:	86 c0       	rjmp	.+268    	; 0x1068 <GPS_Decode+0x2d8>
							{
								if(LonCount<3)
     f5c:	22 e0       	ldi	r18, 0x02	; 2
     f5e:	2c 15       	cp	r18, r12
     f60:	98 f0       	brcs	.+38     	; 0xf88 <GPS_Decode+0x1f8>
								{
									GPS_Data->LON_Degree += (msg[i]-48) * LonDegree;
     f62:	80 53       	subi	r24, 0x30	; 48
     f64:	d7 01       	movw	r26, r14
     f66:	1f 96       	adiw	r26, 0x0f	; 15
     f68:	9c 91       	ld	r25, X
     f6a:	b9 81       	ldd	r27, Y+1	; 0x01
     f6c:	8b 9f       	mul	r24, r27
     f6e:	90 0d       	add	r25, r0
     f70:	11 24       	eor	r1, r1
     f72:	d7 01       	movw	r26, r14
     f74:	1f 96       	adiw	r26, 0x0f	; 15
     f76:	9c 93       	st	X, r25
									LonDegree /= 10;
     f78:	b9 81       	ldd	r27, Y+1	; 0x01
     f7a:	b2 9d       	mul	r27, r2
     f7c:	81 2d       	mov	r24, r1
     f7e:	11 24       	eor	r1, r1
     f80:	86 95       	lsr	r24
     f82:	86 95       	lsr	r24
     f84:	86 95       	lsr	r24
     f86:	89 83       	std	Y+1, r24	; 0x01
								}
								if((LonCount>=3) && (LonCount<5))
     f88:	8d ef       	ldi	r24, 0xFD	; 253
     f8a:	8c 0d       	add	r24, r12
     f8c:	82 30       	cpi	r24, 0x02	; 2
     f8e:	a0 f4       	brcc	.+40     	; 0xfb8 <GPS_Decode+0x228>
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
     f90:	90 81       	ld	r25, Z
     f92:	90 53       	subi	r25, 0x30	; 48
     f94:	d7 01       	movw	r26, r14
     f96:	50 96       	adiw	r26, 0x10	; 16
     f98:	8c 91       	ld	r24, X
     f9a:	bc 81       	ldd	r27, Y+4	; 0x04
     f9c:	9b 9f       	mul	r25, r27
     f9e:	80 0d       	add	r24, r0
     fa0:	11 24       	eor	r1, r1
     fa2:	d7 01       	movw	r26, r14
     fa4:	50 96       	adiw	r26, 0x10	; 16
     fa6:	8c 93       	st	X, r24
									LonHour /= 10;
     fa8:	bc 81       	ldd	r27, Y+4	; 0x04
     faa:	b2 9d       	mul	r27, r2
     fac:	81 2d       	mov	r24, r1
     fae:	11 24       	eor	r1, r1
     fb0:	86 95       	lsr	r24
     fb2:	86 95       	lsr	r24
     fb4:	86 95       	lsr	r24
     fb6:	8c 83       	std	Y+4, r24	; 0x04
								}
								if((LonCount>=5))
     fb8:	24 e0       	ldi	r18, 0x04	; 4
     fba:	2c 15       	cp	r18, r12
     fbc:	18 f5       	brcc	.+70     	; 0x1004 <GPS_Decode+0x274>
								{
									GPS_Data->LON += (msg[i]-48) * LonMin;
     fbe:	a0 81       	ld	r26, Z
     fc0:	b0 e0       	ldi	r27, 0x00	; 0
     fc2:	d0 97       	sbiw	r26, 0x30	; 48
     fc4:	a3 01       	movw	r20, r6
     fc6:	92 01       	movw	r18, r4
     fc8:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <__mulshisi3>
     fcc:	d7 01       	movw	r26, r14
     fce:	51 96       	adiw	r26, 0x11	; 17
     fd0:	2d 91       	ld	r18, X+
     fd2:	3d 91       	ld	r19, X+
     fd4:	4d 91       	ld	r20, X+
     fd6:	5c 91       	ld	r21, X
     fd8:	54 97       	sbiw	r26, 0x14	; 20
     fda:	dc 01       	movw	r26, r24
     fdc:	cb 01       	movw	r24, r22
     fde:	82 0f       	add	r24, r18
     fe0:	93 1f       	adc	r25, r19
     fe2:	a4 1f       	adc	r26, r20
     fe4:	b5 1f       	adc	r27, r21
     fe6:	f7 01       	movw	r30, r14
     fe8:	81 8b       	std	Z+17, r24	; 0x11
     fea:	92 8b       	std	Z+18, r25	; 0x12
     fec:	a3 8b       	std	Z+19, r26	; 0x13
     fee:	b4 8b       	std	Z+20, r27	; 0x14
									LonMin /= 10;
     ff0:	c3 01       	movw	r24, r6
     ff2:	b2 01       	movw	r22, r4
     ff4:	2a e0       	ldi	r18, 0x0A	; 10
     ff6:	30 e0       	ldi	r19, 0x00	; 0
     ff8:	40 e0       	ldi	r20, 0x00	; 0
     ffa:	50 e0       	ldi	r21, 0x00	; 0
     ffc:	0e 94 a3 0f 	call	0x1f46	; 0x1f46 <__udivmodsi4>
    1000:	29 01       	movw	r4, r18
    1002:	3a 01       	movw	r6, r20
								}
								LonCount++;	
    1004:	c3 94       	inc	r12
							}
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
						{
							if(msg[i]>='A' && msg[i]<='Z')
    1006:	f8 01       	movw	r30, r16
    1008:	2d 81       	ldd	r18, Y+5	; 0x05
    100a:	e2 0f       	add	r30, r18
    100c:	f1 1d       	adc	r31, r1
    100e:	80 81       	ld	r24, Z
    1010:	9f eb       	ldi	r25, 0xBF	; 191
    1012:	98 0f       	add	r25, r24
    1014:	9a 31       	cpi	r25, 0x1A	; 26
    1016:	40 f5       	brcc	.+80     	; 0x1068 <GPS_Decode+0x2d8>
							{
								GPS_Data->LONdir = msg[i];
    1018:	d7 01       	movw	r26, r14
    101a:	5d 96       	adiw	r26, 0x1d	; 29
    101c:	8c 93       	st	X, r24
    101e:	24 c0       	rjmp	.+72     	; 0x1068 <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
    1020:	f8 01       	movw	r30, r16
    1022:	bd 81       	ldd	r27, Y+5	; 0x05
    1024:	eb 0f       	add	r30, r27
    1026:	f1 1d       	adc	r31, r1
    1028:	80 81       	ld	r24, Z
    102a:	80 53       	subi	r24, 0x30	; 48
    102c:	86 30       	cpi	r24, 0x06	; 6
    102e:	e0 f4       	brcc	.+56     	; 0x1068 <GPS_Decode+0x2d8>
							{
								GPS_Data->quality = msg[i] - 48;
    1030:	f7 01       	movw	r30, r14
    1032:	86 8f       	std	Z+30, r24	; 0x1e
    1034:	19 c0       	rjmp	.+50     	; 0x1068 <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 13: //AGE
						{
							if((msg[i] != '.') && (msg[i] != ','))
    1036:	f8 01       	movw	r30, r16
    1038:	2d 81       	ldd	r18, Y+5	; 0x05
    103a:	e2 0f       	add	r30, r18
    103c:	f1 1d       	adc	r31, r1
    103e:	80 81       	ld	r24, Z
    1040:	98 2f       	mov	r25, r24
    1042:	9d 7f       	andi	r25, 0xFD	; 253
    1044:	9c 32       	cpi	r25, 0x2C	; 44
    1046:	81 f0       	breq	.+32     	; 0x1068 <GPS_Decode+0x2d8>
							{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
    1048:	80 53       	subi	r24, 0x30	; 48
    104a:	d7 01       	movw	r26, r14
    104c:	5f 96       	adiw	r26, 0x1f	; 31
    104e:	9c 91       	ld	r25, X
    1050:	5f 97       	sbiw	r26, 0x1f	; 31
    1052:	83 9d       	mul	r24, r3
    1054:	90 0d       	add	r25, r0
    1056:	11 24       	eor	r1, r1
    1058:	5f 96       	adiw	r26, 0x1f	; 31
    105a:	9c 93       	st	X, r25
							age /= 10;
    105c:	32 9c       	mul	r3, r2
    105e:	31 2c       	mov	r3, r1
    1060:	11 24       	eor	r1, r1
    1062:	36 94       	lsr	r3
    1064:	36 94       	lsr	r3
    1066:	36 94       	lsr	r3
							}
							break;
						}
					}
					///////////COMMA SWITCH END!////////////////////////
					i++;
    1068:	bd 81       	ldd	r27, Y+5	; 0x05
    106a:	bf 5f       	subi	r27, 0xFF	; 255
    106c:	bd 83       	std	Y+5, r27	; 0x05
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
    106e:	f8 01       	movw	r30, r16
    1070:	eb 0f       	add	r30, r27
    1072:	f1 1d       	adc	r31, r1
    1074:	80 81       	ld	r24, Z
    1076:	8a 32       	cpi	r24, 0x2A	; 42
    1078:	09 f0       	breq	.+2      	; 0x107c <GPS_Decode+0x2ec>
    107a:	de ce       	rjmp	.-580    	; 0xe38 <GPS_Decode+0xa8>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		convert(GPS_Data);
    107c:	c7 01       	movw	r24, r14
    107e:	0e 94 07 06 	call	0xc0e	; 0xc0e <convert>
		
		if(GPS_Data->quality >= 4) //if fix return 1
		return 1;
    1082:	81 e0       	ldi	r24, 0x01	; 1
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	d7 01       	movw	r26, r14
    1088:	5e 96       	adiw	r26, 0x1e	; 30
    108a:	2c 91       	ld	r18, X
    108c:	24 30       	cpi	r18, 0x04	; 4
    108e:	20 f4       	brcc	.+8      	; 0x1098 <GPS_Decode+0x308>
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	02 c0       	rjmp	.+4      	; 0x1098 <GPS_Decode+0x308>
		
		//return 1;
	}
	else
	{	//if chechsum false return 0
		return 0;
    1094:	80 e0       	ldi	r24, 0x00	; 0
    1096:	90 e0       	ldi	r25, 0x00	; 0
	}
    1098:	26 96       	adiw	r28, 0x06	; 6
    109a:	0f b6       	in	r0, 0x3f	; 63
    109c:	f8 94       	cli
    109e:	de bf       	out	0x3e, r29	; 62
    10a0:	0f be       	out	0x3f, r0	; 63
    10a2:	cd bf       	out	0x3d, r28	; 61
    10a4:	df 91       	pop	r29
    10a6:	cf 91       	pop	r28
    10a8:	1f 91       	pop	r17
    10aa:	0f 91       	pop	r16
    10ac:	ff 90       	pop	r15
    10ae:	ef 90       	pop	r14
    10b0:	df 90       	pop	r13
    10b2:	cf 90       	pop	r12
    10b4:	bf 90       	pop	r11
    10b6:	af 90       	pop	r10
    10b8:	9f 90       	pop	r9
    10ba:	8f 90       	pop	r8
    10bc:	7f 90       	pop	r7
    10be:	6f 90       	pop	r6
    10c0:	5f 90       	pop	r5
    10c2:	4f 90       	pop	r4
    10c4:	3f 90       	pop	r3
    10c6:	2f 90       	pop	r2
    10c8:	08 95       	ret

000010ca <usart_init>:
	UDR0 = data; //data to be sent
}

void usart_init(void)
{
	UBRR0H = (uint8_t)(BAUD_PRESCALER>>8);
    10ca:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALER);
    10ce:	83 e3       	ldi	r24, 0x33	; 51
    10d0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)| (1<<RXCIE0);
    10d4:	88 e9       	ldi	r24, 0x98	; 152
    10d6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = ((1<<UCSZ00)|(1<<UCSZ01));
    10da:	86 e0       	ldi	r24, 0x06	; 6
    10dc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    10e0:	08 95       	ret

000010e2 <__vector_18>:
}


ISR(USART_RX_vect)
{		
    10e2:	1f 92       	push	r1
    10e4:	0f 92       	push	r0
    10e6:	0f b6       	in	r0, 0x3f	; 63
    10e8:	0f 92       	push	r0
    10ea:	11 24       	eor	r1, r1
    10ec:	2f 93       	push	r18
    10ee:	3f 93       	push	r19
    10f0:	4f 93       	push	r20
    10f2:	5f 93       	push	r21
    10f4:	6f 93       	push	r22
    10f6:	7f 93       	push	r23
    10f8:	8f 93       	push	r24
    10fa:	9f 93       	push	r25
    10fc:	af 93       	push	r26
    10fe:	bf 93       	push	r27
    1100:	ef 93       	push	r30
    1102:	ff 93       	push	r31
	read_gps_data();
    1104:	0e 94 21 01 	call	0x242	; 0x242 <read_gps_data>
    1108:	ff 91       	pop	r31
    110a:	ef 91       	pop	r30
    110c:	bf 91       	pop	r27
    110e:	af 91       	pop	r26
    1110:	9f 91       	pop	r25
    1112:	8f 91       	pop	r24
    1114:	7f 91       	pop	r23
    1116:	6f 91       	pop	r22
    1118:	5f 91       	pop	r21
    111a:	4f 91       	pop	r20
    111c:	3f 91       	pop	r19
    111e:	2f 91       	pop	r18
    1120:	0f 90       	pop	r0
    1122:	0f be       	out	0x3f, r0	; 63
    1124:	0f 90       	pop	r0
    1126:	1f 90       	pop	r1
    1128:	18 95       	reti

0000112a <__subsf3>:
    112a:	50 58       	subi	r21, 0x80	; 128

0000112c <__addsf3>:
    112c:	bb 27       	eor	r27, r27
    112e:	aa 27       	eor	r26, r26
    1130:	0e 94 ad 08 	call	0x115a	; 0x115a <__addsf3x>
    1134:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__fp_round>
    1138:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fp_pscA>
    113c:	38 f0       	brcs	.+14     	; 0x114c <__addsf3+0x20>
    113e:	0e 94 be 0a 	call	0x157c	; 0x157c <__fp_pscB>
    1142:	20 f0       	brcs	.+8      	; 0x114c <__addsf3+0x20>
    1144:	39 f4       	brne	.+14     	; 0x1154 <__addsf3+0x28>
    1146:	9f 3f       	cpi	r25, 0xFF	; 255
    1148:	19 f4       	brne	.+6      	; 0x1150 <__addsf3+0x24>
    114a:	26 f4       	brtc	.+8      	; 0x1154 <__addsf3+0x28>
    114c:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__fp_nan>
    1150:	0e f4       	brtc	.+2      	; 0x1154 <__addsf3+0x28>
    1152:	e0 95       	com	r30
    1154:	e7 fb       	bst	r30, 7
    1156:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__fp_inf>

0000115a <__addsf3x>:
    115a:	e9 2f       	mov	r30, r25
    115c:	0e 94 15 0b 	call	0x162a	; 0x162a <__fp_split3>
    1160:	58 f3       	brcs	.-42     	; 0x1138 <__addsf3+0xc>
    1162:	ba 17       	cp	r27, r26
    1164:	62 07       	cpc	r22, r18
    1166:	73 07       	cpc	r23, r19
    1168:	84 07       	cpc	r24, r20
    116a:	95 07       	cpc	r25, r21
    116c:	20 f0       	brcs	.+8      	; 0x1176 <__addsf3x+0x1c>
    116e:	79 f4       	brne	.+30     	; 0x118e <__addsf3x+0x34>
    1170:	a6 f5       	brtc	.+104    	; 0x11da <__addsf3x+0x80>
    1172:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__fp_zero>
    1176:	0e f4       	brtc	.+2      	; 0x117a <__addsf3x+0x20>
    1178:	e0 95       	com	r30
    117a:	0b 2e       	mov	r0, r27
    117c:	ba 2f       	mov	r27, r26
    117e:	a0 2d       	mov	r26, r0
    1180:	0b 01       	movw	r0, r22
    1182:	b9 01       	movw	r22, r18
    1184:	90 01       	movw	r18, r0
    1186:	0c 01       	movw	r0, r24
    1188:	ca 01       	movw	r24, r20
    118a:	a0 01       	movw	r20, r0
    118c:	11 24       	eor	r1, r1
    118e:	ff 27       	eor	r31, r31
    1190:	59 1b       	sub	r21, r25
    1192:	99 f0       	breq	.+38     	; 0x11ba <__addsf3x+0x60>
    1194:	59 3f       	cpi	r21, 0xF9	; 249
    1196:	50 f4       	brcc	.+20     	; 0x11ac <__addsf3x+0x52>
    1198:	50 3e       	cpi	r21, 0xE0	; 224
    119a:	68 f1       	brcs	.+90     	; 0x11f6 <__addsf3x+0x9c>
    119c:	1a 16       	cp	r1, r26
    119e:	f0 40       	sbci	r31, 0x00	; 0
    11a0:	a2 2f       	mov	r26, r18
    11a2:	23 2f       	mov	r18, r19
    11a4:	34 2f       	mov	r19, r20
    11a6:	44 27       	eor	r20, r20
    11a8:	58 5f       	subi	r21, 0xF8	; 248
    11aa:	f3 cf       	rjmp	.-26     	; 0x1192 <__addsf3x+0x38>
    11ac:	46 95       	lsr	r20
    11ae:	37 95       	ror	r19
    11b0:	27 95       	ror	r18
    11b2:	a7 95       	ror	r26
    11b4:	f0 40       	sbci	r31, 0x00	; 0
    11b6:	53 95       	inc	r21
    11b8:	c9 f7       	brne	.-14     	; 0x11ac <__addsf3x+0x52>
    11ba:	7e f4       	brtc	.+30     	; 0x11da <__addsf3x+0x80>
    11bc:	1f 16       	cp	r1, r31
    11be:	ba 0b       	sbc	r27, r26
    11c0:	62 0b       	sbc	r22, r18
    11c2:	73 0b       	sbc	r23, r19
    11c4:	84 0b       	sbc	r24, r20
    11c6:	ba f0       	brmi	.+46     	; 0x11f6 <__addsf3x+0x9c>
    11c8:	91 50       	subi	r25, 0x01	; 1
    11ca:	a1 f0       	breq	.+40     	; 0x11f4 <__addsf3x+0x9a>
    11cc:	ff 0f       	add	r31, r31
    11ce:	bb 1f       	adc	r27, r27
    11d0:	66 1f       	adc	r22, r22
    11d2:	77 1f       	adc	r23, r23
    11d4:	88 1f       	adc	r24, r24
    11d6:	c2 f7       	brpl	.-16     	; 0x11c8 <__addsf3x+0x6e>
    11d8:	0e c0       	rjmp	.+28     	; 0x11f6 <__addsf3x+0x9c>
    11da:	ba 0f       	add	r27, r26
    11dc:	62 1f       	adc	r22, r18
    11de:	73 1f       	adc	r23, r19
    11e0:	84 1f       	adc	r24, r20
    11e2:	48 f4       	brcc	.+18     	; 0x11f6 <__addsf3x+0x9c>
    11e4:	87 95       	ror	r24
    11e6:	77 95       	ror	r23
    11e8:	67 95       	ror	r22
    11ea:	b7 95       	ror	r27
    11ec:	f7 95       	ror	r31
    11ee:	9e 3f       	cpi	r25, 0xFE	; 254
    11f0:	08 f0       	brcs	.+2      	; 0x11f4 <__addsf3x+0x9a>
    11f2:	b0 cf       	rjmp	.-160    	; 0x1154 <__addsf3+0x28>
    11f4:	93 95       	inc	r25
    11f6:	88 0f       	add	r24, r24
    11f8:	08 f0       	brcs	.+2      	; 0x11fc <__addsf3x+0xa2>
    11fa:	99 27       	eor	r25, r25
    11fc:	ee 0f       	add	r30, r30
    11fe:	97 95       	ror	r25
    1200:	87 95       	ror	r24
    1202:	08 95       	ret
    1204:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fp_pscA>
    1208:	60 f0       	brcs	.+24     	; 0x1222 <__addsf3x+0xc8>
    120a:	80 e8       	ldi	r24, 0x80	; 128
    120c:	91 e0       	ldi	r25, 0x01	; 1
    120e:	09 f4       	brne	.+2      	; 0x1212 <__addsf3x+0xb8>
    1210:	9e ef       	ldi	r25, 0xFE	; 254
    1212:	0e 94 be 0a 	call	0x157c	; 0x157c <__fp_pscB>
    1216:	28 f0       	brcs	.+10     	; 0x1222 <__addsf3x+0xc8>
    1218:	40 e8       	ldi	r20, 0x80	; 128
    121a:	51 e0       	ldi	r21, 0x01	; 1
    121c:	71 f4       	brne	.+28     	; 0x123a <atan2+0x10>
    121e:	5e ef       	ldi	r21, 0xFE	; 254
    1220:	0c c0       	rjmp	.+24     	; 0x123a <atan2+0x10>
    1222:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__fp_nan>
    1226:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__fp_zero>

0000122a <atan2>:
    122a:	e9 2f       	mov	r30, r25
    122c:	e0 78       	andi	r30, 0x80	; 128
    122e:	0e 94 15 0b 	call	0x162a	; 0x162a <__fp_split3>
    1232:	40 f3       	brcs	.-48     	; 0x1204 <__addsf3x+0xaa>
    1234:	09 2e       	mov	r0, r25
    1236:	05 2a       	or	r0, r21
    1238:	b1 f3       	breq	.-20     	; 0x1226 <__addsf3x+0xcc>
    123a:	26 17       	cp	r18, r22
    123c:	37 07       	cpc	r19, r23
    123e:	48 07       	cpc	r20, r24
    1240:	59 07       	cpc	r21, r25
    1242:	38 f0       	brcs	.+14     	; 0x1252 <atan2+0x28>
    1244:	0e 2e       	mov	r0, r30
    1246:	07 f8       	bld	r0, 7
    1248:	e0 25       	eor	r30, r0
    124a:	69 f0       	breq	.+26     	; 0x1266 <atan2+0x3c>
    124c:	e0 25       	eor	r30, r0
    124e:	e0 64       	ori	r30, 0x40	; 64
    1250:	0a c0       	rjmp	.+20     	; 0x1266 <atan2+0x3c>
    1252:	ef 63       	ori	r30, 0x3F	; 63
    1254:	07 f8       	bld	r0, 7
    1256:	00 94       	com	r0
    1258:	07 fa       	bst	r0, 7
    125a:	db 01       	movw	r26, r22
    125c:	b9 01       	movw	r22, r18
    125e:	9d 01       	movw	r18, r26
    1260:	dc 01       	movw	r26, r24
    1262:	ca 01       	movw	r24, r20
    1264:	ad 01       	movw	r20, r26
    1266:	ef 93       	push	r30
    1268:	0e 94 95 09 	call	0x132a	; 0x132a <__divsf3_pse>
    126c:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__fp_round>
    1270:	0e 94 45 09 	call	0x128a	; 0x128a <atan>
    1274:	5f 91       	pop	r21
    1276:	55 23       	and	r21, r21
    1278:	39 f0       	breq	.+14     	; 0x1288 <atan2+0x5e>
    127a:	2b ed       	ldi	r18, 0xDB	; 219
    127c:	3f e0       	ldi	r19, 0x0F	; 15
    127e:	49 e4       	ldi	r20, 0x49	; 73
    1280:	50 fd       	sbrc	r21, 0
    1282:	49 ec       	ldi	r20, 0xC9	; 201
    1284:	0c 94 96 08 	jmp	0x112c	; 0x112c <__addsf3>
    1288:	08 95       	ret

0000128a <atan>:
    128a:	df 93       	push	r29
    128c:	dd 27       	eor	r29, r29
    128e:	b9 2f       	mov	r27, r25
    1290:	bf 77       	andi	r27, 0x7F	; 127
    1292:	40 e8       	ldi	r20, 0x80	; 128
    1294:	5f e3       	ldi	r21, 0x3F	; 63
    1296:	16 16       	cp	r1, r22
    1298:	17 06       	cpc	r1, r23
    129a:	48 07       	cpc	r20, r24
    129c:	5b 07       	cpc	r21, r27
    129e:	18 f4       	brcc	.+6      	; 0x12a6 <atan+0x1c>
    12a0:	d9 2f       	mov	r29, r25
    12a2:	0e 94 3e 0b 	call	0x167c	; 0x167c <inverse>
    12a6:	9f 93       	push	r25
    12a8:	8f 93       	push	r24
    12aa:	7f 93       	push	r23
    12ac:	6f 93       	push	r22
    12ae:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <square>
    12b2:	e8 e6       	ldi	r30, 0x68	; 104
    12b4:	f0 e0       	ldi	r31, 0x00	; 0
    12b6:	0e 94 90 0a 	call	0x1520	; 0x1520 <__fp_powser>
    12ba:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__fp_round>
    12be:	2f 91       	pop	r18
    12c0:	3f 91       	pop	r19
    12c2:	4f 91       	pop	r20
    12c4:	5f 91       	pop	r21
    12c6:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__mulsf3x>
    12ca:	dd 23       	and	r29, r29
    12cc:	51 f0       	breq	.+20     	; 0x12e2 <atan+0x58>
    12ce:	90 58       	subi	r25, 0x80	; 128
    12d0:	a2 ea       	ldi	r26, 0xA2	; 162
    12d2:	2a ed       	ldi	r18, 0xDA	; 218
    12d4:	3f e0       	ldi	r19, 0x0F	; 15
    12d6:	49 ec       	ldi	r20, 0xC9	; 201
    12d8:	5f e3       	ldi	r21, 0x3F	; 63
    12da:	d0 78       	andi	r29, 0x80	; 128
    12dc:	5d 27       	eor	r21, r29
    12de:	0e 94 ad 08 	call	0x115a	; 0x115a <__addsf3x>
    12e2:	df 91       	pop	r29
    12e4:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__fp_round>

000012e8 <__cmpsf2>:
    12e8:	0e 94 63 0a 	call	0x14c6	; 0x14c6 <__fp_cmp>
    12ec:	08 f4       	brcc	.+2      	; 0x12f0 <__cmpsf2+0x8>
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	08 95       	ret

000012f2 <cos>:
    12f2:	0e 94 c7 0a 	call	0x158e	; 0x158e <__fp_rempio2>
    12f6:	e3 95       	inc	r30
    12f8:	0c 94 01 0b 	jmp	0x1602	; 0x1602 <__fp_sinus>

000012fc <__divsf3>:
    12fc:	0e 94 92 09 	call	0x1324	; 0x1324 <__divsf3x>
    1300:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__fp_round>
    1304:	0e 94 be 0a 	call	0x157c	; 0x157c <__fp_pscB>
    1308:	58 f0       	brcs	.+22     	; 0x1320 <__divsf3+0x24>
    130a:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fp_pscA>
    130e:	40 f0       	brcs	.+16     	; 0x1320 <__divsf3+0x24>
    1310:	29 f4       	brne	.+10     	; 0x131c <__divsf3+0x20>
    1312:	5f 3f       	cpi	r21, 0xFF	; 255
    1314:	29 f0       	breq	.+10     	; 0x1320 <__divsf3+0x24>
    1316:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__fp_inf>
    131a:	51 11       	cpse	r21, r1
    131c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__fp_szero>
    1320:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__fp_nan>

00001324 <__divsf3x>:
    1324:	0e 94 15 0b 	call	0x162a	; 0x162a <__fp_split3>
    1328:	68 f3       	brcs	.-38     	; 0x1304 <__divsf3+0x8>

0000132a <__divsf3_pse>:
    132a:	99 23       	and	r25, r25
    132c:	b1 f3       	breq	.-20     	; 0x131a <__divsf3+0x1e>
    132e:	55 23       	and	r21, r21
    1330:	91 f3       	breq	.-28     	; 0x1316 <__divsf3+0x1a>
    1332:	95 1b       	sub	r25, r21
    1334:	55 0b       	sbc	r21, r21
    1336:	bb 27       	eor	r27, r27
    1338:	aa 27       	eor	r26, r26
    133a:	62 17       	cp	r22, r18
    133c:	73 07       	cpc	r23, r19
    133e:	84 07       	cpc	r24, r20
    1340:	38 f0       	brcs	.+14     	; 0x1350 <__divsf3_pse+0x26>
    1342:	9f 5f       	subi	r25, 0xFF	; 255
    1344:	5f 4f       	sbci	r21, 0xFF	; 255
    1346:	22 0f       	add	r18, r18
    1348:	33 1f       	adc	r19, r19
    134a:	44 1f       	adc	r20, r20
    134c:	aa 1f       	adc	r26, r26
    134e:	a9 f3       	breq	.-22     	; 0x133a <__divsf3_pse+0x10>
    1350:	35 d0       	rcall	.+106    	; 0x13bc <__divsf3_pse+0x92>
    1352:	0e 2e       	mov	r0, r30
    1354:	3a f0       	brmi	.+14     	; 0x1364 <__divsf3_pse+0x3a>
    1356:	e0 e8       	ldi	r30, 0x80	; 128
    1358:	32 d0       	rcall	.+100    	; 0x13be <__divsf3_pse+0x94>
    135a:	91 50       	subi	r25, 0x01	; 1
    135c:	50 40       	sbci	r21, 0x00	; 0
    135e:	e6 95       	lsr	r30
    1360:	00 1c       	adc	r0, r0
    1362:	ca f7       	brpl	.-14     	; 0x1356 <__divsf3_pse+0x2c>
    1364:	2b d0       	rcall	.+86     	; 0x13bc <__divsf3_pse+0x92>
    1366:	fe 2f       	mov	r31, r30
    1368:	29 d0       	rcall	.+82     	; 0x13bc <__divsf3_pse+0x92>
    136a:	66 0f       	add	r22, r22
    136c:	77 1f       	adc	r23, r23
    136e:	88 1f       	adc	r24, r24
    1370:	bb 1f       	adc	r27, r27
    1372:	26 17       	cp	r18, r22
    1374:	37 07       	cpc	r19, r23
    1376:	48 07       	cpc	r20, r24
    1378:	ab 07       	cpc	r26, r27
    137a:	b0 e8       	ldi	r27, 0x80	; 128
    137c:	09 f0       	breq	.+2      	; 0x1380 <__divsf3_pse+0x56>
    137e:	bb 0b       	sbc	r27, r27
    1380:	80 2d       	mov	r24, r0
    1382:	bf 01       	movw	r22, r30
    1384:	ff 27       	eor	r31, r31
    1386:	93 58       	subi	r25, 0x83	; 131
    1388:	5f 4f       	sbci	r21, 0xFF	; 255
    138a:	3a f0       	brmi	.+14     	; 0x139a <__divsf3_pse+0x70>
    138c:	9e 3f       	cpi	r25, 0xFE	; 254
    138e:	51 05       	cpc	r21, r1
    1390:	78 f0       	brcs	.+30     	; 0x13b0 <__divsf3_pse+0x86>
    1392:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__fp_inf>
    1396:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__fp_szero>
    139a:	5f 3f       	cpi	r21, 0xFF	; 255
    139c:	e4 f3       	brlt	.-8      	; 0x1396 <__divsf3_pse+0x6c>
    139e:	98 3e       	cpi	r25, 0xE8	; 232
    13a0:	d4 f3       	brlt	.-12     	; 0x1396 <__divsf3_pse+0x6c>
    13a2:	86 95       	lsr	r24
    13a4:	77 95       	ror	r23
    13a6:	67 95       	ror	r22
    13a8:	b7 95       	ror	r27
    13aa:	f7 95       	ror	r31
    13ac:	9f 5f       	subi	r25, 0xFF	; 255
    13ae:	c9 f7       	brne	.-14     	; 0x13a2 <__divsf3_pse+0x78>
    13b0:	88 0f       	add	r24, r24
    13b2:	91 1d       	adc	r25, r1
    13b4:	96 95       	lsr	r25
    13b6:	87 95       	ror	r24
    13b8:	97 f9       	bld	r25, 7
    13ba:	08 95       	ret
    13bc:	e1 e0       	ldi	r30, 0x01	; 1
    13be:	66 0f       	add	r22, r22
    13c0:	77 1f       	adc	r23, r23
    13c2:	88 1f       	adc	r24, r24
    13c4:	bb 1f       	adc	r27, r27
    13c6:	62 17       	cp	r22, r18
    13c8:	73 07       	cpc	r23, r19
    13ca:	84 07       	cpc	r24, r20
    13cc:	ba 07       	cpc	r27, r26
    13ce:	20 f0       	brcs	.+8      	; 0x13d8 <__divsf3_pse+0xae>
    13d0:	62 1b       	sub	r22, r18
    13d2:	73 0b       	sbc	r23, r19
    13d4:	84 0b       	sbc	r24, r20
    13d6:	ba 0b       	sbc	r27, r26
    13d8:	ee 1f       	adc	r30, r30
    13da:	88 f7       	brcc	.-30     	; 0x13be <__divsf3_pse+0x94>
    13dc:	e0 95       	com	r30
    13de:	08 95       	ret

000013e0 <__fixsfsi>:
    13e0:	0e 94 f7 09 	call	0x13ee	; 0x13ee <__fixunssfsi>
    13e4:	68 94       	set
    13e6:	b1 11       	cpse	r27, r1
    13e8:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__fp_szero>
    13ec:	08 95       	ret

000013ee <__fixunssfsi>:
    13ee:	0e 94 1d 0b 	call	0x163a	; 0x163a <__fp_splitA>
    13f2:	88 f0       	brcs	.+34     	; 0x1416 <__fixunssfsi+0x28>
    13f4:	9f 57       	subi	r25, 0x7F	; 127
    13f6:	98 f0       	brcs	.+38     	; 0x141e <__fixunssfsi+0x30>
    13f8:	b9 2f       	mov	r27, r25
    13fa:	99 27       	eor	r25, r25
    13fc:	b7 51       	subi	r27, 0x17	; 23
    13fe:	b0 f0       	brcs	.+44     	; 0x142c <__fixunssfsi+0x3e>
    1400:	e1 f0       	breq	.+56     	; 0x143a <__fixunssfsi+0x4c>
    1402:	66 0f       	add	r22, r22
    1404:	77 1f       	adc	r23, r23
    1406:	88 1f       	adc	r24, r24
    1408:	99 1f       	adc	r25, r25
    140a:	1a f0       	brmi	.+6      	; 0x1412 <__fixunssfsi+0x24>
    140c:	ba 95       	dec	r27
    140e:	c9 f7       	brne	.-14     	; 0x1402 <__fixunssfsi+0x14>
    1410:	14 c0       	rjmp	.+40     	; 0x143a <__fixunssfsi+0x4c>
    1412:	b1 30       	cpi	r27, 0x01	; 1
    1414:	91 f0       	breq	.+36     	; 0x143a <__fixunssfsi+0x4c>
    1416:	0e 94 37 0b 	call	0x166e	; 0x166e <__fp_zero>
    141a:	b1 e0       	ldi	r27, 0x01	; 1
    141c:	08 95       	ret
    141e:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__fp_zero>
    1422:	67 2f       	mov	r22, r23
    1424:	78 2f       	mov	r23, r24
    1426:	88 27       	eor	r24, r24
    1428:	b8 5f       	subi	r27, 0xF8	; 248
    142a:	39 f0       	breq	.+14     	; 0x143a <__fixunssfsi+0x4c>
    142c:	b9 3f       	cpi	r27, 0xF9	; 249
    142e:	cc f3       	brlt	.-14     	; 0x1422 <__fixunssfsi+0x34>
    1430:	86 95       	lsr	r24
    1432:	77 95       	ror	r23
    1434:	67 95       	ror	r22
    1436:	b3 95       	inc	r27
    1438:	d9 f7       	brne	.-10     	; 0x1430 <__fixunssfsi+0x42>
    143a:	3e f4       	brtc	.+14     	; 0x144a <__fixunssfsi+0x5c>
    143c:	90 95       	com	r25
    143e:	80 95       	com	r24
    1440:	70 95       	com	r23
    1442:	61 95       	neg	r22
    1444:	7f 4f       	sbci	r23, 0xFF	; 255
    1446:	8f 4f       	sbci	r24, 0xFF	; 255
    1448:	9f 4f       	sbci	r25, 0xFF	; 255
    144a:	08 95       	ret

0000144c <__floatunsisf>:
    144c:	e8 94       	clt
    144e:	09 c0       	rjmp	.+18     	; 0x1462 <__floatsisf+0x12>

00001450 <__floatsisf>:
    1450:	97 fb       	bst	r25, 7
    1452:	3e f4       	brtc	.+14     	; 0x1462 <__floatsisf+0x12>
    1454:	90 95       	com	r25
    1456:	80 95       	com	r24
    1458:	70 95       	com	r23
    145a:	61 95       	neg	r22
    145c:	7f 4f       	sbci	r23, 0xFF	; 255
    145e:	8f 4f       	sbci	r24, 0xFF	; 255
    1460:	9f 4f       	sbci	r25, 0xFF	; 255
    1462:	99 23       	and	r25, r25
    1464:	a9 f0       	breq	.+42     	; 0x1490 <__floatsisf+0x40>
    1466:	f9 2f       	mov	r31, r25
    1468:	96 e9       	ldi	r25, 0x96	; 150
    146a:	bb 27       	eor	r27, r27
    146c:	93 95       	inc	r25
    146e:	f6 95       	lsr	r31
    1470:	87 95       	ror	r24
    1472:	77 95       	ror	r23
    1474:	67 95       	ror	r22
    1476:	b7 95       	ror	r27
    1478:	f1 11       	cpse	r31, r1
    147a:	f8 cf       	rjmp	.-16     	; 0x146c <__floatsisf+0x1c>
    147c:	fa f4       	brpl	.+62     	; 0x14bc <__floatsisf+0x6c>
    147e:	bb 0f       	add	r27, r27
    1480:	11 f4       	brne	.+4      	; 0x1486 <__floatsisf+0x36>
    1482:	60 ff       	sbrs	r22, 0
    1484:	1b c0       	rjmp	.+54     	; 0x14bc <__floatsisf+0x6c>
    1486:	6f 5f       	subi	r22, 0xFF	; 255
    1488:	7f 4f       	sbci	r23, 0xFF	; 255
    148a:	8f 4f       	sbci	r24, 0xFF	; 255
    148c:	9f 4f       	sbci	r25, 0xFF	; 255
    148e:	16 c0       	rjmp	.+44     	; 0x14bc <__floatsisf+0x6c>
    1490:	88 23       	and	r24, r24
    1492:	11 f0       	breq	.+4      	; 0x1498 <__floatsisf+0x48>
    1494:	96 e9       	ldi	r25, 0x96	; 150
    1496:	11 c0       	rjmp	.+34     	; 0x14ba <__floatsisf+0x6a>
    1498:	77 23       	and	r23, r23
    149a:	21 f0       	breq	.+8      	; 0x14a4 <__floatsisf+0x54>
    149c:	9e e8       	ldi	r25, 0x8E	; 142
    149e:	87 2f       	mov	r24, r23
    14a0:	76 2f       	mov	r23, r22
    14a2:	05 c0       	rjmp	.+10     	; 0x14ae <__floatsisf+0x5e>
    14a4:	66 23       	and	r22, r22
    14a6:	71 f0       	breq	.+28     	; 0x14c4 <__floatsisf+0x74>
    14a8:	96 e8       	ldi	r25, 0x86	; 134
    14aa:	86 2f       	mov	r24, r22
    14ac:	70 e0       	ldi	r23, 0x00	; 0
    14ae:	60 e0       	ldi	r22, 0x00	; 0
    14b0:	2a f0       	brmi	.+10     	; 0x14bc <__floatsisf+0x6c>
    14b2:	9a 95       	dec	r25
    14b4:	66 0f       	add	r22, r22
    14b6:	77 1f       	adc	r23, r23
    14b8:	88 1f       	adc	r24, r24
    14ba:	da f7       	brpl	.-10     	; 0x14b2 <__floatsisf+0x62>
    14bc:	88 0f       	add	r24, r24
    14be:	96 95       	lsr	r25
    14c0:	87 95       	ror	r24
    14c2:	97 f9       	bld	r25, 7
    14c4:	08 95       	ret

000014c6 <__fp_cmp>:
    14c6:	99 0f       	add	r25, r25
    14c8:	00 08       	sbc	r0, r0
    14ca:	55 0f       	add	r21, r21
    14cc:	aa 0b       	sbc	r26, r26
    14ce:	e0 e8       	ldi	r30, 0x80	; 128
    14d0:	fe ef       	ldi	r31, 0xFE	; 254
    14d2:	16 16       	cp	r1, r22
    14d4:	17 06       	cpc	r1, r23
    14d6:	e8 07       	cpc	r30, r24
    14d8:	f9 07       	cpc	r31, r25
    14da:	c0 f0       	brcs	.+48     	; 0x150c <__fp_cmp+0x46>
    14dc:	12 16       	cp	r1, r18
    14de:	13 06       	cpc	r1, r19
    14e0:	e4 07       	cpc	r30, r20
    14e2:	f5 07       	cpc	r31, r21
    14e4:	98 f0       	brcs	.+38     	; 0x150c <__fp_cmp+0x46>
    14e6:	62 1b       	sub	r22, r18
    14e8:	73 0b       	sbc	r23, r19
    14ea:	84 0b       	sbc	r24, r20
    14ec:	95 0b       	sbc	r25, r21
    14ee:	39 f4       	brne	.+14     	; 0x14fe <__fp_cmp+0x38>
    14f0:	0a 26       	eor	r0, r26
    14f2:	61 f0       	breq	.+24     	; 0x150c <__fp_cmp+0x46>
    14f4:	23 2b       	or	r18, r19
    14f6:	24 2b       	or	r18, r20
    14f8:	25 2b       	or	r18, r21
    14fa:	21 f4       	brne	.+8      	; 0x1504 <__fp_cmp+0x3e>
    14fc:	08 95       	ret
    14fe:	0a 26       	eor	r0, r26
    1500:	09 f4       	brne	.+2      	; 0x1504 <__fp_cmp+0x3e>
    1502:	a1 40       	sbci	r26, 0x01	; 1
    1504:	a6 95       	lsr	r26
    1506:	8f ef       	ldi	r24, 0xFF	; 255
    1508:	81 1d       	adc	r24, r1
    150a:	81 1d       	adc	r24, r1
    150c:	08 95       	ret

0000150e <__fp_inf>:
    150e:	97 f9       	bld	r25, 7
    1510:	9f 67       	ori	r25, 0x7F	; 127
    1512:	80 e8       	ldi	r24, 0x80	; 128
    1514:	70 e0       	ldi	r23, 0x00	; 0
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	08 95       	ret

0000151a <__fp_nan>:
    151a:	9f ef       	ldi	r25, 0xFF	; 255
    151c:	80 ec       	ldi	r24, 0xC0	; 192
    151e:	08 95       	ret

00001520 <__fp_powser>:
    1520:	df 93       	push	r29
    1522:	cf 93       	push	r28
    1524:	1f 93       	push	r17
    1526:	0f 93       	push	r16
    1528:	ff 92       	push	r15
    152a:	ef 92       	push	r14
    152c:	df 92       	push	r13
    152e:	7b 01       	movw	r14, r22
    1530:	8c 01       	movw	r16, r24
    1532:	68 94       	set
    1534:	06 c0       	rjmp	.+12     	; 0x1542 <__fp_powser+0x22>
    1536:	da 2e       	mov	r13, r26
    1538:	ef 01       	movw	r28, r30
    153a:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__mulsf3x>
    153e:	fe 01       	movw	r30, r28
    1540:	e8 94       	clt
    1542:	a5 91       	lpm	r26, Z+
    1544:	25 91       	lpm	r18, Z+
    1546:	35 91       	lpm	r19, Z+
    1548:	45 91       	lpm	r20, Z+
    154a:	55 91       	lpm	r21, Z+
    154c:	a6 f3       	brts	.-24     	; 0x1536 <__fp_powser+0x16>
    154e:	ef 01       	movw	r28, r30
    1550:	0e 94 ad 08 	call	0x115a	; 0x115a <__addsf3x>
    1554:	fe 01       	movw	r30, r28
    1556:	97 01       	movw	r18, r14
    1558:	a8 01       	movw	r20, r16
    155a:	da 94       	dec	r13
    155c:	69 f7       	brne	.-38     	; 0x1538 <__fp_powser+0x18>
    155e:	df 90       	pop	r13
    1560:	ef 90       	pop	r14
    1562:	ff 90       	pop	r15
    1564:	0f 91       	pop	r16
    1566:	1f 91       	pop	r17
    1568:	cf 91       	pop	r28
    156a:	df 91       	pop	r29
    156c:	08 95       	ret

0000156e <__fp_pscA>:
    156e:	00 24       	eor	r0, r0
    1570:	0a 94       	dec	r0
    1572:	16 16       	cp	r1, r22
    1574:	17 06       	cpc	r1, r23
    1576:	18 06       	cpc	r1, r24
    1578:	09 06       	cpc	r0, r25
    157a:	08 95       	ret

0000157c <__fp_pscB>:
    157c:	00 24       	eor	r0, r0
    157e:	0a 94       	dec	r0
    1580:	12 16       	cp	r1, r18
    1582:	13 06       	cpc	r1, r19
    1584:	14 06       	cpc	r1, r20
    1586:	05 06       	cpc	r0, r21
    1588:	08 95       	ret
    158a:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__fp_nan>

0000158e <__fp_rempio2>:
    158e:	0e 94 1d 0b 	call	0x163a	; 0x163a <__fp_splitA>
    1592:	d8 f3       	brcs	.-10     	; 0x158a <__fp_pscB+0xe>
    1594:	e8 94       	clt
    1596:	e0 e0       	ldi	r30, 0x00	; 0
    1598:	bb 27       	eor	r27, r27
    159a:	9f 57       	subi	r25, 0x7F	; 127
    159c:	f0 f0       	brcs	.+60     	; 0x15da <__fp_rempio2+0x4c>
    159e:	2a ed       	ldi	r18, 0xDA	; 218
    15a0:	3f e0       	ldi	r19, 0x0F	; 15
    15a2:	49 ec       	ldi	r20, 0xC9	; 201
    15a4:	06 c0       	rjmp	.+12     	; 0x15b2 <__fp_rempio2+0x24>
    15a6:	ee 0f       	add	r30, r30
    15a8:	bb 0f       	add	r27, r27
    15aa:	66 1f       	adc	r22, r22
    15ac:	77 1f       	adc	r23, r23
    15ae:	88 1f       	adc	r24, r24
    15b0:	28 f0       	brcs	.+10     	; 0x15bc <__fp_rempio2+0x2e>
    15b2:	b2 3a       	cpi	r27, 0xA2	; 162
    15b4:	62 07       	cpc	r22, r18
    15b6:	73 07       	cpc	r23, r19
    15b8:	84 07       	cpc	r24, r20
    15ba:	28 f0       	brcs	.+10     	; 0x15c6 <__fp_rempio2+0x38>
    15bc:	b2 5a       	subi	r27, 0xA2	; 162
    15be:	62 0b       	sbc	r22, r18
    15c0:	73 0b       	sbc	r23, r19
    15c2:	84 0b       	sbc	r24, r20
    15c4:	e3 95       	inc	r30
    15c6:	9a 95       	dec	r25
    15c8:	72 f7       	brpl	.-36     	; 0x15a6 <__fp_rempio2+0x18>
    15ca:	80 38       	cpi	r24, 0x80	; 128
    15cc:	30 f4       	brcc	.+12     	; 0x15da <__fp_rempio2+0x4c>
    15ce:	9a 95       	dec	r25
    15d0:	bb 0f       	add	r27, r27
    15d2:	66 1f       	adc	r22, r22
    15d4:	77 1f       	adc	r23, r23
    15d6:	88 1f       	adc	r24, r24
    15d8:	d2 f7       	brpl	.-12     	; 0x15ce <__fp_rempio2+0x40>
    15da:	90 48       	sbci	r25, 0x80	; 128
    15dc:	0c 94 ff 0b 	jmp	0x17fe	; 0x17fe <__fp_mpack_finite>

000015e0 <__fp_round>:
    15e0:	09 2e       	mov	r0, r25
    15e2:	03 94       	inc	r0
    15e4:	00 0c       	add	r0, r0
    15e6:	11 f4       	brne	.+4      	; 0x15ec <__fp_round+0xc>
    15e8:	88 23       	and	r24, r24
    15ea:	52 f0       	brmi	.+20     	; 0x1600 <__fp_round+0x20>
    15ec:	bb 0f       	add	r27, r27
    15ee:	40 f4       	brcc	.+16     	; 0x1600 <__fp_round+0x20>
    15f0:	bf 2b       	or	r27, r31
    15f2:	11 f4       	brne	.+4      	; 0x15f8 <__fp_round+0x18>
    15f4:	60 ff       	sbrs	r22, 0
    15f6:	04 c0       	rjmp	.+8      	; 0x1600 <__fp_round+0x20>
    15f8:	6f 5f       	subi	r22, 0xFF	; 255
    15fa:	7f 4f       	sbci	r23, 0xFF	; 255
    15fc:	8f 4f       	sbci	r24, 0xFF	; 255
    15fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1600:	08 95       	ret

00001602 <__fp_sinus>:
    1602:	ef 93       	push	r30
    1604:	e0 ff       	sbrs	r30, 0
    1606:	07 c0       	rjmp	.+14     	; 0x1616 <__fp_sinus+0x14>
    1608:	a2 ea       	ldi	r26, 0xA2	; 162
    160a:	2a ed       	ldi	r18, 0xDA	; 218
    160c:	3f e0       	ldi	r19, 0x0F	; 15
    160e:	49 ec       	ldi	r20, 0xC9	; 201
    1610:	5f eb       	ldi	r21, 0xBF	; 191
    1612:	0e 94 ad 08 	call	0x115a	; 0x115a <__addsf3x>
    1616:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__fp_round>
    161a:	0f 90       	pop	r0
    161c:	03 94       	inc	r0
    161e:	01 fc       	sbrc	r0, 1
    1620:	90 58       	subi	r25, 0x80	; 128
    1622:	e5 e9       	ldi	r30, 0x95	; 149
    1624:	f0 e0       	ldi	r31, 0x00	; 0
    1626:	0c 94 12 0c 	jmp	0x1824	; 0x1824 <__fp_powsodd>

0000162a <__fp_split3>:
    162a:	57 fd       	sbrc	r21, 7
    162c:	90 58       	subi	r25, 0x80	; 128
    162e:	44 0f       	add	r20, r20
    1630:	55 1f       	adc	r21, r21
    1632:	59 f0       	breq	.+22     	; 0x164a <__fp_splitA+0x10>
    1634:	5f 3f       	cpi	r21, 0xFF	; 255
    1636:	71 f0       	breq	.+28     	; 0x1654 <__fp_splitA+0x1a>
    1638:	47 95       	ror	r20

0000163a <__fp_splitA>:
    163a:	88 0f       	add	r24, r24
    163c:	97 fb       	bst	r25, 7
    163e:	99 1f       	adc	r25, r25
    1640:	61 f0       	breq	.+24     	; 0x165a <__fp_splitA+0x20>
    1642:	9f 3f       	cpi	r25, 0xFF	; 255
    1644:	79 f0       	breq	.+30     	; 0x1664 <__fp_splitA+0x2a>
    1646:	87 95       	ror	r24
    1648:	08 95       	ret
    164a:	12 16       	cp	r1, r18
    164c:	13 06       	cpc	r1, r19
    164e:	14 06       	cpc	r1, r20
    1650:	55 1f       	adc	r21, r21
    1652:	f2 cf       	rjmp	.-28     	; 0x1638 <__fp_split3+0xe>
    1654:	46 95       	lsr	r20
    1656:	f1 df       	rcall	.-30     	; 0x163a <__fp_splitA>
    1658:	08 c0       	rjmp	.+16     	; 0x166a <__fp_splitA+0x30>
    165a:	16 16       	cp	r1, r22
    165c:	17 06       	cpc	r1, r23
    165e:	18 06       	cpc	r1, r24
    1660:	99 1f       	adc	r25, r25
    1662:	f1 cf       	rjmp	.-30     	; 0x1646 <__fp_splitA+0xc>
    1664:	86 95       	lsr	r24
    1666:	71 05       	cpc	r23, r1
    1668:	61 05       	cpc	r22, r1
    166a:	08 94       	sec
    166c:	08 95       	ret

0000166e <__fp_zero>:
    166e:	e8 94       	clt

00001670 <__fp_szero>:
    1670:	bb 27       	eor	r27, r27
    1672:	66 27       	eor	r22, r22
    1674:	77 27       	eor	r23, r23
    1676:	cb 01       	movw	r24, r22
    1678:	97 f9       	bld	r25, 7
    167a:	08 95       	ret

0000167c <inverse>:
    167c:	9b 01       	movw	r18, r22
    167e:	ac 01       	movw	r20, r24
    1680:	60 e0       	ldi	r22, 0x00	; 0
    1682:	70 e0       	ldi	r23, 0x00	; 0
    1684:	80 e8       	ldi	r24, 0x80	; 128
    1686:	9f e3       	ldi	r25, 0x3F	; 63
    1688:	0c 94 7e 09 	jmp	0x12fc	; 0x12fc <__divsf3>

0000168c <__mulsf3>:
    168c:	0e 94 59 0b 	call	0x16b2	; 0x16b2 <__mulsf3x>
    1690:	0c 94 f0 0a 	jmp	0x15e0	; 0x15e0 <__fp_round>
    1694:	0e 94 b7 0a 	call	0x156e	; 0x156e <__fp_pscA>
    1698:	38 f0       	brcs	.+14     	; 0x16a8 <__mulsf3+0x1c>
    169a:	0e 94 be 0a 	call	0x157c	; 0x157c <__fp_pscB>
    169e:	20 f0       	brcs	.+8      	; 0x16a8 <__mulsf3+0x1c>
    16a0:	95 23       	and	r25, r21
    16a2:	11 f0       	breq	.+4      	; 0x16a8 <__mulsf3+0x1c>
    16a4:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__fp_inf>
    16a8:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__fp_nan>
    16ac:	11 24       	eor	r1, r1
    16ae:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__fp_szero>

000016b2 <__mulsf3x>:
    16b2:	0e 94 15 0b 	call	0x162a	; 0x162a <__fp_split3>
    16b6:	70 f3       	brcs	.-36     	; 0x1694 <__mulsf3+0x8>

000016b8 <__mulsf3_pse>:
    16b8:	95 9f       	mul	r25, r21
    16ba:	c1 f3       	breq	.-16     	; 0x16ac <__mulsf3+0x20>
    16bc:	95 0f       	add	r25, r21
    16be:	50 e0       	ldi	r21, 0x00	; 0
    16c0:	55 1f       	adc	r21, r21
    16c2:	62 9f       	mul	r22, r18
    16c4:	f0 01       	movw	r30, r0
    16c6:	72 9f       	mul	r23, r18
    16c8:	bb 27       	eor	r27, r27
    16ca:	f0 0d       	add	r31, r0
    16cc:	b1 1d       	adc	r27, r1
    16ce:	63 9f       	mul	r22, r19
    16d0:	aa 27       	eor	r26, r26
    16d2:	f0 0d       	add	r31, r0
    16d4:	b1 1d       	adc	r27, r1
    16d6:	aa 1f       	adc	r26, r26
    16d8:	64 9f       	mul	r22, r20
    16da:	66 27       	eor	r22, r22
    16dc:	b0 0d       	add	r27, r0
    16de:	a1 1d       	adc	r26, r1
    16e0:	66 1f       	adc	r22, r22
    16e2:	82 9f       	mul	r24, r18
    16e4:	22 27       	eor	r18, r18
    16e6:	b0 0d       	add	r27, r0
    16e8:	a1 1d       	adc	r26, r1
    16ea:	62 1f       	adc	r22, r18
    16ec:	73 9f       	mul	r23, r19
    16ee:	b0 0d       	add	r27, r0
    16f0:	a1 1d       	adc	r26, r1
    16f2:	62 1f       	adc	r22, r18
    16f4:	83 9f       	mul	r24, r19
    16f6:	a0 0d       	add	r26, r0
    16f8:	61 1d       	adc	r22, r1
    16fa:	22 1f       	adc	r18, r18
    16fc:	74 9f       	mul	r23, r20
    16fe:	33 27       	eor	r19, r19
    1700:	a0 0d       	add	r26, r0
    1702:	61 1d       	adc	r22, r1
    1704:	23 1f       	adc	r18, r19
    1706:	84 9f       	mul	r24, r20
    1708:	60 0d       	add	r22, r0
    170a:	21 1d       	adc	r18, r1
    170c:	82 2f       	mov	r24, r18
    170e:	76 2f       	mov	r23, r22
    1710:	6a 2f       	mov	r22, r26
    1712:	11 24       	eor	r1, r1
    1714:	9f 57       	subi	r25, 0x7F	; 127
    1716:	50 40       	sbci	r21, 0x00	; 0
    1718:	9a f0       	brmi	.+38     	; 0x1740 <__mulsf3_pse+0x88>
    171a:	f1 f0       	breq	.+60     	; 0x1758 <__mulsf3_pse+0xa0>
    171c:	88 23       	and	r24, r24
    171e:	4a f0       	brmi	.+18     	; 0x1732 <__mulsf3_pse+0x7a>
    1720:	ee 0f       	add	r30, r30
    1722:	ff 1f       	adc	r31, r31
    1724:	bb 1f       	adc	r27, r27
    1726:	66 1f       	adc	r22, r22
    1728:	77 1f       	adc	r23, r23
    172a:	88 1f       	adc	r24, r24
    172c:	91 50       	subi	r25, 0x01	; 1
    172e:	50 40       	sbci	r21, 0x00	; 0
    1730:	a9 f7       	brne	.-22     	; 0x171c <__mulsf3_pse+0x64>
    1732:	9e 3f       	cpi	r25, 0xFE	; 254
    1734:	51 05       	cpc	r21, r1
    1736:	80 f0       	brcs	.+32     	; 0x1758 <__mulsf3_pse+0xa0>
    1738:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__fp_inf>
    173c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__fp_szero>
    1740:	5f 3f       	cpi	r21, 0xFF	; 255
    1742:	e4 f3       	brlt	.-8      	; 0x173c <__mulsf3_pse+0x84>
    1744:	98 3e       	cpi	r25, 0xE8	; 232
    1746:	d4 f3       	brlt	.-12     	; 0x173c <__mulsf3_pse+0x84>
    1748:	86 95       	lsr	r24
    174a:	77 95       	ror	r23
    174c:	67 95       	ror	r22
    174e:	b7 95       	ror	r27
    1750:	f7 95       	ror	r31
    1752:	e7 95       	ror	r30
    1754:	9f 5f       	subi	r25, 0xFF	; 255
    1756:	c1 f7       	brne	.-16     	; 0x1748 <__mulsf3_pse+0x90>
    1758:	fe 2b       	or	r31, r30
    175a:	88 0f       	add	r24, r24
    175c:	91 1d       	adc	r25, r1
    175e:	96 95       	lsr	r25
    1760:	87 95       	ror	r24
    1762:	97 f9       	bld	r25, 7
    1764:	08 95       	ret
    1766:	19 f4       	brne	.+6      	; 0x176e <__mulsf3_pse+0xb6>
    1768:	16 f4       	brtc	.+4      	; 0x176e <__mulsf3_pse+0xb6>
    176a:	0c 94 8d 0a 	jmp	0x151a	; 0x151a <__fp_nan>
    176e:	0c 94 fd 0b 	jmp	0x17fa	; 0x17fa <__fp_mpack>

00001772 <sqrt>:
    1772:	0e 94 1d 0b 	call	0x163a	; 0x163a <__fp_splitA>
    1776:	b8 f3       	brcs	.-18     	; 0x1766 <__mulsf3_pse+0xae>
    1778:	99 23       	and	r25, r25
    177a:	c9 f3       	breq	.-14     	; 0x176e <__mulsf3_pse+0xb6>
    177c:	b6 f3       	brts	.-20     	; 0x176a <__mulsf3_pse+0xb2>
    177e:	9f 57       	subi	r25, 0x7F	; 127
    1780:	55 0b       	sbc	r21, r21
    1782:	87 ff       	sbrs	r24, 7
    1784:	0e 94 0b 0c 	call	0x1816	; 0x1816 <__fp_norm2>
    1788:	00 24       	eor	r0, r0
    178a:	a0 e6       	ldi	r26, 0x60	; 96
    178c:	40 ea       	ldi	r20, 0xA0	; 160
    178e:	90 01       	movw	r18, r0
    1790:	80 58       	subi	r24, 0x80	; 128
    1792:	56 95       	lsr	r21
    1794:	97 95       	ror	r25
    1796:	28 f4       	brcc	.+10     	; 0x17a2 <sqrt+0x30>
    1798:	80 5c       	subi	r24, 0xC0	; 192
    179a:	66 0f       	add	r22, r22
    179c:	77 1f       	adc	r23, r23
    179e:	88 1f       	adc	r24, r24
    17a0:	20 f0       	brcs	.+8      	; 0x17aa <sqrt+0x38>
    17a2:	26 17       	cp	r18, r22
    17a4:	37 07       	cpc	r19, r23
    17a6:	48 07       	cpc	r20, r24
    17a8:	30 f4       	brcc	.+12     	; 0x17b6 <sqrt+0x44>
    17aa:	62 1b       	sub	r22, r18
    17ac:	73 0b       	sbc	r23, r19
    17ae:	84 0b       	sbc	r24, r20
    17b0:	20 29       	or	r18, r0
    17b2:	31 29       	or	r19, r1
    17b4:	4a 2b       	or	r20, r26
    17b6:	a6 95       	lsr	r26
    17b8:	17 94       	ror	r1
    17ba:	07 94       	ror	r0
    17bc:	20 25       	eor	r18, r0
    17be:	31 25       	eor	r19, r1
    17c0:	4a 27       	eor	r20, r26
    17c2:	58 f7       	brcc	.-42     	; 0x179a <sqrt+0x28>
    17c4:	66 0f       	add	r22, r22
    17c6:	77 1f       	adc	r23, r23
    17c8:	88 1f       	adc	r24, r24
    17ca:	20 f0       	brcs	.+8      	; 0x17d4 <sqrt+0x62>
    17cc:	26 17       	cp	r18, r22
    17ce:	37 07       	cpc	r19, r23
    17d0:	48 07       	cpc	r20, r24
    17d2:	30 f4       	brcc	.+12     	; 0x17e0 <sqrt+0x6e>
    17d4:	62 0b       	sbc	r22, r18
    17d6:	73 0b       	sbc	r23, r19
    17d8:	84 0b       	sbc	r24, r20
    17da:	20 0d       	add	r18, r0
    17dc:	31 1d       	adc	r19, r1
    17de:	41 1d       	adc	r20, r1
    17e0:	a0 95       	com	r26
    17e2:	81 f7       	brne	.-32     	; 0x17c4 <sqrt+0x52>
    17e4:	b9 01       	movw	r22, r18
    17e6:	84 2f       	mov	r24, r20
    17e8:	91 58       	subi	r25, 0x81	; 129
    17ea:	88 0f       	add	r24, r24
    17ec:	96 95       	lsr	r25
    17ee:	87 95       	ror	r24
    17f0:	08 95       	ret

000017f2 <square>:
    17f2:	9b 01       	movw	r18, r22
    17f4:	ac 01       	movw	r20, r24
    17f6:	0c 94 46 0b 	jmp	0x168c	; 0x168c <__mulsf3>

000017fa <__fp_mpack>:
    17fa:	9f 3f       	cpi	r25, 0xFF	; 255
    17fc:	31 f0       	breq	.+12     	; 0x180a <__fp_mpack_finite+0xc>

000017fe <__fp_mpack_finite>:
    17fe:	91 50       	subi	r25, 0x01	; 1
    1800:	20 f4       	brcc	.+8      	; 0x180a <__fp_mpack_finite+0xc>
    1802:	87 95       	ror	r24
    1804:	77 95       	ror	r23
    1806:	67 95       	ror	r22
    1808:	b7 95       	ror	r27
    180a:	88 0f       	add	r24, r24
    180c:	91 1d       	adc	r25, r1
    180e:	96 95       	lsr	r25
    1810:	87 95       	ror	r24
    1812:	97 f9       	bld	r25, 7
    1814:	08 95       	ret

00001816 <__fp_norm2>:
    1816:	91 50       	subi	r25, 0x01	; 1
    1818:	50 40       	sbci	r21, 0x00	; 0
    181a:	66 0f       	add	r22, r22
    181c:	77 1f       	adc	r23, r23
    181e:	88 1f       	adc	r24, r24
    1820:	d2 f7       	brpl	.-12     	; 0x1816 <__fp_norm2>
    1822:	08 95       	ret

00001824 <__fp_powsodd>:
    1824:	9f 93       	push	r25
    1826:	8f 93       	push	r24
    1828:	7f 93       	push	r23
    182a:	6f 93       	push	r22
    182c:	ff 93       	push	r31
    182e:	ef 93       	push	r30
    1830:	9b 01       	movw	r18, r22
    1832:	ac 01       	movw	r20, r24
    1834:	0e 94 46 0b 	call	0x168c	; 0x168c <__mulsf3>
    1838:	ef 91       	pop	r30
    183a:	ff 91       	pop	r31
    183c:	0e 94 90 0a 	call	0x1520	; 0x1520 <__fp_powser>
    1840:	2f 91       	pop	r18
    1842:	3f 91       	pop	r19
    1844:	4f 91       	pop	r20
    1846:	5f 91       	pop	r21
    1848:	0c 94 46 0b 	jmp	0x168c	; 0x168c <__mulsf3>

0000184c <vfprintf>:
    184c:	a0 e1       	ldi	r26, 0x10	; 16
    184e:	b0 e0       	ldi	r27, 0x00	; 0
    1850:	ec e2       	ldi	r30, 0x2C	; 44
    1852:	fc e0       	ldi	r31, 0x0C	; 12
    1854:	0c 94 cd 0f 	jmp	0x1f9a	; 0x1f9a <__prologue_saves__>
    1858:	7c 01       	movw	r14, r24
    185a:	1b 01       	movw	r2, r22
    185c:	6a 01       	movw	r12, r20
    185e:	fc 01       	movw	r30, r24
    1860:	17 82       	std	Z+7, r1	; 0x07
    1862:	16 82       	std	Z+6, r1	; 0x06
    1864:	83 81       	ldd	r24, Z+3	; 0x03
    1866:	81 ff       	sbrs	r24, 1
    1868:	44 c3       	rjmp	.+1672   	; 0x1ef2 <vfprintf+0x6a6>
    186a:	9e 01       	movw	r18, r28
    186c:	2f 5f       	subi	r18, 0xFF	; 255
    186e:	3f 4f       	sbci	r19, 0xFF	; 255
    1870:	39 01       	movw	r6, r18
    1872:	f7 01       	movw	r30, r14
    1874:	93 81       	ldd	r25, Z+3	; 0x03
    1876:	f1 01       	movw	r30, r2
    1878:	93 fd       	sbrc	r25, 3
    187a:	85 91       	lpm	r24, Z+
    187c:	93 ff       	sbrs	r25, 3
    187e:	81 91       	ld	r24, Z+
    1880:	1f 01       	movw	r2, r30
    1882:	88 23       	and	r24, r24
    1884:	09 f4       	brne	.+2      	; 0x1888 <vfprintf+0x3c>
    1886:	31 c3       	rjmp	.+1634   	; 0x1eea <vfprintf+0x69e>
    1888:	85 32       	cpi	r24, 0x25	; 37
    188a:	39 f4       	brne	.+14     	; 0x189a <vfprintf+0x4e>
    188c:	93 fd       	sbrc	r25, 3
    188e:	85 91       	lpm	r24, Z+
    1890:	93 ff       	sbrs	r25, 3
    1892:	81 91       	ld	r24, Z+
    1894:	1f 01       	movw	r2, r30
    1896:	85 32       	cpi	r24, 0x25	; 37
    1898:	39 f4       	brne	.+14     	; 0x18a8 <vfprintf+0x5c>
    189a:	b7 01       	movw	r22, r14
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    18a2:	56 01       	movw	r10, r12
    18a4:	65 01       	movw	r12, r10
    18a6:	e5 cf       	rjmp	.-54     	; 0x1872 <vfprintf+0x26>
    18a8:	10 e0       	ldi	r17, 0x00	; 0
    18aa:	51 2c       	mov	r5, r1
    18ac:	91 2c       	mov	r9, r1
    18ae:	ff e1       	ldi	r31, 0x1F	; 31
    18b0:	f9 15       	cp	r31, r9
    18b2:	d8 f0       	brcs	.+54     	; 0x18ea <vfprintf+0x9e>
    18b4:	8b 32       	cpi	r24, 0x2B	; 43
    18b6:	79 f0       	breq	.+30     	; 0x18d6 <vfprintf+0x8a>
    18b8:	38 f4       	brcc	.+14     	; 0x18c8 <vfprintf+0x7c>
    18ba:	80 32       	cpi	r24, 0x20	; 32
    18bc:	79 f0       	breq	.+30     	; 0x18dc <vfprintf+0x90>
    18be:	83 32       	cpi	r24, 0x23	; 35
    18c0:	a1 f4       	brne	.+40     	; 0x18ea <vfprintf+0x9e>
    18c2:	f9 2d       	mov	r31, r9
    18c4:	f0 61       	ori	r31, 0x10	; 16
    18c6:	2e c0       	rjmp	.+92     	; 0x1924 <vfprintf+0xd8>
    18c8:	8d 32       	cpi	r24, 0x2D	; 45
    18ca:	61 f0       	breq	.+24     	; 0x18e4 <vfprintf+0x98>
    18cc:	80 33       	cpi	r24, 0x30	; 48
    18ce:	69 f4       	brne	.+26     	; 0x18ea <vfprintf+0x9e>
    18d0:	29 2d       	mov	r18, r9
    18d2:	21 60       	ori	r18, 0x01	; 1
    18d4:	2d c0       	rjmp	.+90     	; 0x1930 <vfprintf+0xe4>
    18d6:	39 2d       	mov	r19, r9
    18d8:	32 60       	ori	r19, 0x02	; 2
    18da:	93 2e       	mov	r9, r19
    18dc:	89 2d       	mov	r24, r9
    18de:	84 60       	ori	r24, 0x04	; 4
    18e0:	98 2e       	mov	r9, r24
    18e2:	2a c0       	rjmp	.+84     	; 0x1938 <vfprintf+0xec>
    18e4:	e9 2d       	mov	r30, r9
    18e6:	e8 60       	ori	r30, 0x08	; 8
    18e8:	15 c0       	rjmp	.+42     	; 0x1914 <vfprintf+0xc8>
    18ea:	97 fc       	sbrc	r9, 7
    18ec:	2d c0       	rjmp	.+90     	; 0x1948 <vfprintf+0xfc>
    18ee:	20 ed       	ldi	r18, 0xD0	; 208
    18f0:	28 0f       	add	r18, r24
    18f2:	2a 30       	cpi	r18, 0x0A	; 10
    18f4:	88 f4       	brcc	.+34     	; 0x1918 <vfprintf+0xcc>
    18f6:	96 fe       	sbrs	r9, 6
    18f8:	06 c0       	rjmp	.+12     	; 0x1906 <vfprintf+0xba>
    18fa:	3a e0       	ldi	r19, 0x0A	; 10
    18fc:	13 9f       	mul	r17, r19
    18fe:	20 0d       	add	r18, r0
    1900:	11 24       	eor	r1, r1
    1902:	12 2f       	mov	r17, r18
    1904:	19 c0       	rjmp	.+50     	; 0x1938 <vfprintf+0xec>
    1906:	8a e0       	ldi	r24, 0x0A	; 10
    1908:	58 9e       	mul	r5, r24
    190a:	20 0d       	add	r18, r0
    190c:	11 24       	eor	r1, r1
    190e:	52 2e       	mov	r5, r18
    1910:	e9 2d       	mov	r30, r9
    1912:	e0 62       	ori	r30, 0x20	; 32
    1914:	9e 2e       	mov	r9, r30
    1916:	10 c0       	rjmp	.+32     	; 0x1938 <vfprintf+0xec>
    1918:	8e 32       	cpi	r24, 0x2E	; 46
    191a:	31 f4       	brne	.+12     	; 0x1928 <vfprintf+0xdc>
    191c:	96 fc       	sbrc	r9, 6
    191e:	e5 c2       	rjmp	.+1482   	; 0x1eea <vfprintf+0x69e>
    1920:	f9 2d       	mov	r31, r9
    1922:	f0 64       	ori	r31, 0x40	; 64
    1924:	9f 2e       	mov	r9, r31
    1926:	08 c0       	rjmp	.+16     	; 0x1938 <vfprintf+0xec>
    1928:	8c 36       	cpi	r24, 0x6C	; 108
    192a:	21 f4       	brne	.+8      	; 0x1934 <vfprintf+0xe8>
    192c:	29 2d       	mov	r18, r9
    192e:	20 68       	ori	r18, 0x80	; 128
    1930:	92 2e       	mov	r9, r18
    1932:	02 c0       	rjmp	.+4      	; 0x1938 <vfprintf+0xec>
    1934:	88 36       	cpi	r24, 0x68	; 104
    1936:	41 f4       	brne	.+16     	; 0x1948 <vfprintf+0xfc>
    1938:	f1 01       	movw	r30, r2
    193a:	93 fd       	sbrc	r25, 3
    193c:	85 91       	lpm	r24, Z+
    193e:	93 ff       	sbrs	r25, 3
    1940:	81 91       	ld	r24, Z+
    1942:	1f 01       	movw	r2, r30
    1944:	81 11       	cpse	r24, r1
    1946:	b3 cf       	rjmp	.-154    	; 0x18ae <vfprintf+0x62>
    1948:	9b eb       	ldi	r25, 0xBB	; 187
    194a:	98 0f       	add	r25, r24
    194c:	93 30       	cpi	r25, 0x03	; 3
    194e:	20 f4       	brcc	.+8      	; 0x1958 <vfprintf+0x10c>
    1950:	99 2d       	mov	r25, r9
    1952:	90 61       	ori	r25, 0x10	; 16
    1954:	80 5e       	subi	r24, 0xE0	; 224
    1956:	07 c0       	rjmp	.+14     	; 0x1966 <vfprintf+0x11a>
    1958:	9b e9       	ldi	r25, 0x9B	; 155
    195a:	98 0f       	add	r25, r24
    195c:	93 30       	cpi	r25, 0x03	; 3
    195e:	08 f0       	brcs	.+2      	; 0x1962 <vfprintf+0x116>
    1960:	66 c1       	rjmp	.+716    	; 0x1c2e <vfprintf+0x3e2>
    1962:	99 2d       	mov	r25, r9
    1964:	9f 7e       	andi	r25, 0xEF	; 239
    1966:	96 ff       	sbrs	r25, 6
    1968:	16 e0       	ldi	r17, 0x06	; 6
    196a:	9f 73       	andi	r25, 0x3F	; 63
    196c:	99 2e       	mov	r9, r25
    196e:	85 36       	cpi	r24, 0x65	; 101
    1970:	19 f4       	brne	.+6      	; 0x1978 <vfprintf+0x12c>
    1972:	90 64       	ori	r25, 0x40	; 64
    1974:	99 2e       	mov	r9, r25
    1976:	08 c0       	rjmp	.+16     	; 0x1988 <vfprintf+0x13c>
    1978:	86 36       	cpi	r24, 0x66	; 102
    197a:	21 f4       	brne	.+8      	; 0x1984 <vfprintf+0x138>
    197c:	39 2f       	mov	r19, r25
    197e:	30 68       	ori	r19, 0x80	; 128
    1980:	93 2e       	mov	r9, r19
    1982:	02 c0       	rjmp	.+4      	; 0x1988 <vfprintf+0x13c>
    1984:	11 11       	cpse	r17, r1
    1986:	11 50       	subi	r17, 0x01	; 1
    1988:	97 fe       	sbrs	r9, 7
    198a:	07 c0       	rjmp	.+14     	; 0x199a <vfprintf+0x14e>
    198c:	1c 33       	cpi	r17, 0x3C	; 60
    198e:	50 f4       	brcc	.+20     	; 0x19a4 <vfprintf+0x158>
    1990:	44 24       	eor	r4, r4
    1992:	43 94       	inc	r4
    1994:	41 0e       	add	r4, r17
    1996:	27 e0       	ldi	r18, 0x07	; 7
    1998:	0b c0       	rjmp	.+22     	; 0x19b0 <vfprintf+0x164>
    199a:	18 30       	cpi	r17, 0x08	; 8
    199c:	38 f0       	brcs	.+14     	; 0x19ac <vfprintf+0x160>
    199e:	27 e0       	ldi	r18, 0x07	; 7
    19a0:	17 e0       	ldi	r17, 0x07	; 7
    19a2:	05 c0       	rjmp	.+10     	; 0x19ae <vfprintf+0x162>
    19a4:	27 e0       	ldi	r18, 0x07	; 7
    19a6:	9c e3       	ldi	r25, 0x3C	; 60
    19a8:	49 2e       	mov	r4, r25
    19aa:	02 c0       	rjmp	.+4      	; 0x19b0 <vfprintf+0x164>
    19ac:	21 2f       	mov	r18, r17
    19ae:	41 2c       	mov	r4, r1
    19b0:	56 01       	movw	r10, r12
    19b2:	84 e0       	ldi	r24, 0x04	; 4
    19b4:	a8 0e       	add	r10, r24
    19b6:	b1 1c       	adc	r11, r1
    19b8:	f6 01       	movw	r30, r12
    19ba:	60 81       	ld	r22, Z
    19bc:	71 81       	ldd	r23, Z+1	; 0x01
    19be:	82 81       	ldd	r24, Z+2	; 0x02
    19c0:	93 81       	ldd	r25, Z+3	; 0x03
    19c2:	04 2d       	mov	r16, r4
    19c4:	a3 01       	movw	r20, r6
    19c6:	0e 94 1e 10 	call	0x203c	; 0x203c <__ftoa_engine>
    19ca:	6c 01       	movw	r12, r24
    19cc:	f9 81       	ldd	r31, Y+1	; 0x01
    19ce:	fc 87       	std	Y+12, r31	; 0x0c
    19d0:	f0 ff       	sbrs	r31, 0
    19d2:	02 c0       	rjmp	.+4      	; 0x19d8 <vfprintf+0x18c>
    19d4:	f3 ff       	sbrs	r31, 3
    19d6:	06 c0       	rjmp	.+12     	; 0x19e4 <vfprintf+0x198>
    19d8:	91 fc       	sbrc	r9, 1
    19da:	06 c0       	rjmp	.+12     	; 0x19e8 <vfprintf+0x19c>
    19dc:	92 fe       	sbrs	r9, 2
    19de:	06 c0       	rjmp	.+12     	; 0x19ec <vfprintf+0x1a0>
    19e0:	00 e2       	ldi	r16, 0x20	; 32
    19e2:	05 c0       	rjmp	.+10     	; 0x19ee <vfprintf+0x1a2>
    19e4:	0d e2       	ldi	r16, 0x2D	; 45
    19e6:	03 c0       	rjmp	.+6      	; 0x19ee <vfprintf+0x1a2>
    19e8:	0b e2       	ldi	r16, 0x2B	; 43
    19ea:	01 c0       	rjmp	.+2      	; 0x19ee <vfprintf+0x1a2>
    19ec:	00 e0       	ldi	r16, 0x00	; 0
    19ee:	8c 85       	ldd	r24, Y+12	; 0x0c
    19f0:	8c 70       	andi	r24, 0x0C	; 12
    19f2:	19 f0       	breq	.+6      	; 0x19fa <vfprintf+0x1ae>
    19f4:	01 11       	cpse	r16, r1
    19f6:	5a c2       	rjmp	.+1204   	; 0x1eac <vfprintf+0x660>
    19f8:	9b c2       	rjmp	.+1334   	; 0x1f30 <vfprintf+0x6e4>
    19fa:	97 fe       	sbrs	r9, 7
    19fc:	10 c0       	rjmp	.+32     	; 0x1a1e <vfprintf+0x1d2>
    19fe:	4c 0c       	add	r4, r12
    1a00:	fc 85       	ldd	r31, Y+12	; 0x0c
    1a02:	f4 ff       	sbrs	r31, 4
    1a04:	04 c0       	rjmp	.+8      	; 0x1a0e <vfprintf+0x1c2>
    1a06:	8a 81       	ldd	r24, Y+2	; 0x02
    1a08:	81 33       	cpi	r24, 0x31	; 49
    1a0a:	09 f4       	brne	.+2      	; 0x1a0e <vfprintf+0x1c2>
    1a0c:	4a 94       	dec	r4
    1a0e:	14 14       	cp	r1, r4
    1a10:	74 f5       	brge	.+92     	; 0x1a6e <vfprintf+0x222>
    1a12:	28 e0       	ldi	r18, 0x08	; 8
    1a14:	24 15       	cp	r18, r4
    1a16:	78 f5       	brcc	.+94     	; 0x1a76 <vfprintf+0x22a>
    1a18:	88 e0       	ldi	r24, 0x08	; 8
    1a1a:	48 2e       	mov	r4, r24
    1a1c:	2c c0       	rjmp	.+88     	; 0x1a76 <vfprintf+0x22a>
    1a1e:	96 fc       	sbrc	r9, 6
    1a20:	2a c0       	rjmp	.+84     	; 0x1a76 <vfprintf+0x22a>
    1a22:	81 2f       	mov	r24, r17
    1a24:	90 e0       	ldi	r25, 0x00	; 0
    1a26:	8c 15       	cp	r24, r12
    1a28:	9d 05       	cpc	r25, r13
    1a2a:	9c f0       	brlt	.+38     	; 0x1a52 <vfprintf+0x206>
    1a2c:	3c ef       	ldi	r19, 0xFC	; 252
    1a2e:	c3 16       	cp	r12, r19
    1a30:	3f ef       	ldi	r19, 0xFF	; 255
    1a32:	d3 06       	cpc	r13, r19
    1a34:	74 f0       	brlt	.+28     	; 0x1a52 <vfprintf+0x206>
    1a36:	89 2d       	mov	r24, r9
    1a38:	80 68       	ori	r24, 0x80	; 128
    1a3a:	98 2e       	mov	r9, r24
    1a3c:	0a c0       	rjmp	.+20     	; 0x1a52 <vfprintf+0x206>
    1a3e:	e2 e0       	ldi	r30, 0x02	; 2
    1a40:	f0 e0       	ldi	r31, 0x00	; 0
    1a42:	ec 0f       	add	r30, r28
    1a44:	fd 1f       	adc	r31, r29
    1a46:	e1 0f       	add	r30, r17
    1a48:	f1 1d       	adc	r31, r1
    1a4a:	80 81       	ld	r24, Z
    1a4c:	80 33       	cpi	r24, 0x30	; 48
    1a4e:	19 f4       	brne	.+6      	; 0x1a56 <vfprintf+0x20a>
    1a50:	11 50       	subi	r17, 0x01	; 1
    1a52:	11 11       	cpse	r17, r1
    1a54:	f4 cf       	rjmp	.-24     	; 0x1a3e <vfprintf+0x1f2>
    1a56:	97 fe       	sbrs	r9, 7
    1a58:	0e c0       	rjmp	.+28     	; 0x1a76 <vfprintf+0x22a>
    1a5a:	44 24       	eor	r4, r4
    1a5c:	43 94       	inc	r4
    1a5e:	41 0e       	add	r4, r17
    1a60:	81 2f       	mov	r24, r17
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	c8 16       	cp	r12, r24
    1a66:	d9 06       	cpc	r13, r25
    1a68:	2c f4       	brge	.+10     	; 0x1a74 <vfprintf+0x228>
    1a6a:	1c 19       	sub	r17, r12
    1a6c:	04 c0       	rjmp	.+8      	; 0x1a76 <vfprintf+0x22a>
    1a6e:	44 24       	eor	r4, r4
    1a70:	43 94       	inc	r4
    1a72:	01 c0       	rjmp	.+2      	; 0x1a76 <vfprintf+0x22a>
    1a74:	10 e0       	ldi	r17, 0x00	; 0
    1a76:	97 fe       	sbrs	r9, 7
    1a78:	06 c0       	rjmp	.+12     	; 0x1a86 <vfprintf+0x23a>
    1a7a:	1c 14       	cp	r1, r12
    1a7c:	1d 04       	cpc	r1, r13
    1a7e:	34 f4       	brge	.+12     	; 0x1a8c <vfprintf+0x240>
    1a80:	c6 01       	movw	r24, r12
    1a82:	01 96       	adiw	r24, 0x01	; 1
    1a84:	05 c0       	rjmp	.+10     	; 0x1a90 <vfprintf+0x244>
    1a86:	85 e0       	ldi	r24, 0x05	; 5
    1a88:	90 e0       	ldi	r25, 0x00	; 0
    1a8a:	02 c0       	rjmp	.+4      	; 0x1a90 <vfprintf+0x244>
    1a8c:	81 e0       	ldi	r24, 0x01	; 1
    1a8e:	90 e0       	ldi	r25, 0x00	; 0
    1a90:	01 11       	cpse	r16, r1
    1a92:	01 96       	adiw	r24, 0x01	; 1
    1a94:	11 23       	and	r17, r17
    1a96:	31 f0       	breq	.+12     	; 0x1aa4 <vfprintf+0x258>
    1a98:	21 2f       	mov	r18, r17
    1a9a:	30 e0       	ldi	r19, 0x00	; 0
    1a9c:	2f 5f       	subi	r18, 0xFF	; 255
    1a9e:	3f 4f       	sbci	r19, 0xFF	; 255
    1aa0:	82 0f       	add	r24, r18
    1aa2:	93 1f       	adc	r25, r19
    1aa4:	25 2d       	mov	r18, r5
    1aa6:	30 e0       	ldi	r19, 0x00	; 0
    1aa8:	82 17       	cp	r24, r18
    1aaa:	93 07       	cpc	r25, r19
    1aac:	14 f4       	brge	.+4      	; 0x1ab2 <vfprintf+0x266>
    1aae:	58 1a       	sub	r5, r24
    1ab0:	01 c0       	rjmp	.+2      	; 0x1ab4 <vfprintf+0x268>
    1ab2:	51 2c       	mov	r5, r1
    1ab4:	89 2d       	mov	r24, r9
    1ab6:	89 70       	andi	r24, 0x09	; 9
    1ab8:	49 f4       	brne	.+18     	; 0x1acc <vfprintf+0x280>
    1aba:	55 20       	and	r5, r5
    1abc:	39 f0       	breq	.+14     	; 0x1acc <vfprintf+0x280>
    1abe:	b7 01       	movw	r22, r14
    1ac0:	80 e2       	ldi	r24, 0x20	; 32
    1ac2:	90 e0       	ldi	r25, 0x00	; 0
    1ac4:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1ac8:	5a 94       	dec	r5
    1aca:	f7 cf       	rjmp	.-18     	; 0x1aba <vfprintf+0x26e>
    1acc:	00 23       	and	r16, r16
    1ace:	29 f0       	breq	.+10     	; 0x1ada <vfprintf+0x28e>
    1ad0:	b7 01       	movw	r22, r14
    1ad2:	80 2f       	mov	r24, r16
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1ada:	93 fc       	sbrc	r9, 3
    1adc:	09 c0       	rjmp	.+18     	; 0x1af0 <vfprintf+0x2a4>
    1ade:	55 20       	and	r5, r5
    1ae0:	39 f0       	breq	.+14     	; 0x1af0 <vfprintf+0x2a4>
    1ae2:	b7 01       	movw	r22, r14
    1ae4:	80 e3       	ldi	r24, 0x30	; 48
    1ae6:	90 e0       	ldi	r25, 0x00	; 0
    1ae8:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1aec:	5a 94       	dec	r5
    1aee:	f7 cf       	rjmp	.-18     	; 0x1ade <vfprintf+0x292>
    1af0:	97 fe       	sbrs	r9, 7
    1af2:	4c c0       	rjmp	.+152    	; 0x1b8c <vfprintf+0x340>
    1af4:	46 01       	movw	r8, r12
    1af6:	d7 fe       	sbrs	r13, 7
    1af8:	02 c0       	rjmp	.+4      	; 0x1afe <vfprintf+0x2b2>
    1afa:	81 2c       	mov	r8, r1
    1afc:	91 2c       	mov	r9, r1
    1afe:	c6 01       	movw	r24, r12
    1b00:	88 19       	sub	r24, r8
    1b02:	99 09       	sbc	r25, r9
    1b04:	f3 01       	movw	r30, r6
    1b06:	e8 0f       	add	r30, r24
    1b08:	f9 1f       	adc	r31, r25
    1b0a:	fe 87       	std	Y+14, r31	; 0x0e
    1b0c:	ed 87       	std	Y+13, r30	; 0x0d
    1b0e:	96 01       	movw	r18, r12
    1b10:	24 19       	sub	r18, r4
    1b12:	31 09       	sbc	r19, r1
    1b14:	38 8b       	std	Y+16, r19	; 0x10
    1b16:	2f 87       	std	Y+15, r18	; 0x0f
    1b18:	01 2f       	mov	r16, r17
    1b1a:	10 e0       	ldi	r17, 0x00	; 0
    1b1c:	11 95       	neg	r17
    1b1e:	01 95       	neg	r16
    1b20:	11 09       	sbc	r17, r1
    1b22:	3f ef       	ldi	r19, 0xFF	; 255
    1b24:	83 16       	cp	r8, r19
    1b26:	93 06       	cpc	r9, r19
    1b28:	29 f4       	brne	.+10     	; 0x1b34 <vfprintf+0x2e8>
    1b2a:	b7 01       	movw	r22, r14
    1b2c:	8e e2       	ldi	r24, 0x2E	; 46
    1b2e:	90 e0       	ldi	r25, 0x00	; 0
    1b30:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1b34:	c8 14       	cp	r12, r8
    1b36:	d9 04       	cpc	r13, r9
    1b38:	4c f0       	brlt	.+18     	; 0x1b4c <vfprintf+0x300>
    1b3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b3c:	98 89       	ldd	r25, Y+16	; 0x10
    1b3e:	88 15       	cp	r24, r8
    1b40:	99 05       	cpc	r25, r9
    1b42:	24 f4       	brge	.+8      	; 0x1b4c <vfprintf+0x300>
    1b44:	ed 85       	ldd	r30, Y+13	; 0x0d
    1b46:	fe 85       	ldd	r31, Y+14	; 0x0e
    1b48:	81 81       	ldd	r24, Z+1	; 0x01
    1b4a:	01 c0       	rjmp	.+2      	; 0x1b4e <vfprintf+0x302>
    1b4c:	80 e3       	ldi	r24, 0x30	; 48
    1b4e:	f1 e0       	ldi	r31, 0x01	; 1
    1b50:	8f 1a       	sub	r8, r31
    1b52:	91 08       	sbc	r9, r1
    1b54:	2d 85       	ldd	r18, Y+13	; 0x0d
    1b56:	3e 85       	ldd	r19, Y+14	; 0x0e
    1b58:	2f 5f       	subi	r18, 0xFF	; 255
    1b5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b5c:	3e 87       	std	Y+14, r19	; 0x0e
    1b5e:	2d 87       	std	Y+13, r18	; 0x0d
    1b60:	80 16       	cp	r8, r16
    1b62:	91 06       	cpc	r9, r17
    1b64:	2c f0       	brlt	.+10     	; 0x1b70 <vfprintf+0x324>
    1b66:	b7 01       	movw	r22, r14
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1b6e:	d9 cf       	rjmp	.-78     	; 0x1b22 <vfprintf+0x2d6>
    1b70:	c8 14       	cp	r12, r8
    1b72:	d9 04       	cpc	r13, r9
    1b74:	41 f4       	brne	.+16     	; 0x1b86 <vfprintf+0x33a>
    1b76:	9a 81       	ldd	r25, Y+2	; 0x02
    1b78:	96 33       	cpi	r25, 0x36	; 54
    1b7a:	20 f4       	brcc	.+8      	; 0x1b84 <vfprintf+0x338>
    1b7c:	95 33       	cpi	r25, 0x35	; 53
    1b7e:	19 f4       	brne	.+6      	; 0x1b86 <vfprintf+0x33a>
    1b80:	3c 85       	ldd	r19, Y+12	; 0x0c
    1b82:	34 ff       	sbrs	r19, 4
    1b84:	81 e3       	ldi	r24, 0x31	; 49
    1b86:	b7 01       	movw	r22, r14
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	4e c0       	rjmp	.+156    	; 0x1c28 <vfprintf+0x3dc>
    1b8c:	8a 81       	ldd	r24, Y+2	; 0x02
    1b8e:	81 33       	cpi	r24, 0x31	; 49
    1b90:	19 f0       	breq	.+6      	; 0x1b98 <vfprintf+0x34c>
    1b92:	9c 85       	ldd	r25, Y+12	; 0x0c
    1b94:	9f 7e       	andi	r25, 0xEF	; 239
    1b96:	9c 87       	std	Y+12, r25	; 0x0c
    1b98:	b7 01       	movw	r22, r14
    1b9a:	90 e0       	ldi	r25, 0x00	; 0
    1b9c:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1ba0:	11 11       	cpse	r17, r1
    1ba2:	05 c0       	rjmp	.+10     	; 0x1bae <vfprintf+0x362>
    1ba4:	94 fc       	sbrc	r9, 4
    1ba6:	18 c0       	rjmp	.+48     	; 0x1bd8 <vfprintf+0x38c>
    1ba8:	85 e6       	ldi	r24, 0x65	; 101
    1baa:	90 e0       	ldi	r25, 0x00	; 0
    1bac:	17 c0       	rjmp	.+46     	; 0x1bdc <vfprintf+0x390>
    1bae:	b7 01       	movw	r22, r14
    1bb0:	8e e2       	ldi	r24, 0x2E	; 46
    1bb2:	90 e0       	ldi	r25, 0x00	; 0
    1bb4:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1bb8:	1e 5f       	subi	r17, 0xFE	; 254
    1bba:	82 e0       	ldi	r24, 0x02	; 2
    1bbc:	01 e0       	ldi	r16, 0x01	; 1
    1bbe:	08 0f       	add	r16, r24
    1bc0:	f3 01       	movw	r30, r6
    1bc2:	e8 0f       	add	r30, r24
    1bc4:	f1 1d       	adc	r31, r1
    1bc6:	80 81       	ld	r24, Z
    1bc8:	b7 01       	movw	r22, r14
    1bca:	90 e0       	ldi	r25, 0x00	; 0
    1bcc:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1bd0:	80 2f       	mov	r24, r16
    1bd2:	01 13       	cpse	r16, r17
    1bd4:	f3 cf       	rjmp	.-26     	; 0x1bbc <vfprintf+0x370>
    1bd6:	e6 cf       	rjmp	.-52     	; 0x1ba4 <vfprintf+0x358>
    1bd8:	85 e4       	ldi	r24, 0x45	; 69
    1bda:	90 e0       	ldi	r25, 0x00	; 0
    1bdc:	b7 01       	movw	r22, r14
    1bde:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1be2:	d7 fc       	sbrc	r13, 7
    1be4:	06 c0       	rjmp	.+12     	; 0x1bf2 <vfprintf+0x3a6>
    1be6:	c1 14       	cp	r12, r1
    1be8:	d1 04       	cpc	r13, r1
    1bea:	41 f4       	brne	.+16     	; 0x1bfc <vfprintf+0x3b0>
    1bec:	ec 85       	ldd	r30, Y+12	; 0x0c
    1bee:	e4 ff       	sbrs	r30, 4
    1bf0:	05 c0       	rjmp	.+10     	; 0x1bfc <vfprintf+0x3b0>
    1bf2:	d1 94       	neg	r13
    1bf4:	c1 94       	neg	r12
    1bf6:	d1 08       	sbc	r13, r1
    1bf8:	8d e2       	ldi	r24, 0x2D	; 45
    1bfa:	01 c0       	rjmp	.+2      	; 0x1bfe <vfprintf+0x3b2>
    1bfc:	8b e2       	ldi	r24, 0x2B	; 43
    1bfe:	b7 01       	movw	r22, r14
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1c06:	80 e3       	ldi	r24, 0x30	; 48
    1c08:	2a e0       	ldi	r18, 0x0A	; 10
    1c0a:	c2 16       	cp	r12, r18
    1c0c:	d1 04       	cpc	r13, r1
    1c0e:	2c f0       	brlt	.+10     	; 0x1c1a <vfprintf+0x3ce>
    1c10:	8f 5f       	subi	r24, 0xFF	; 255
    1c12:	fa e0       	ldi	r31, 0x0A	; 10
    1c14:	cf 1a       	sub	r12, r31
    1c16:	d1 08       	sbc	r13, r1
    1c18:	f7 cf       	rjmp	.-18     	; 0x1c08 <vfprintf+0x3bc>
    1c1a:	b7 01       	movw	r22, r14
    1c1c:	90 e0       	ldi	r25, 0x00	; 0
    1c1e:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1c22:	b7 01       	movw	r22, r14
    1c24:	c6 01       	movw	r24, r12
    1c26:	c0 96       	adiw	r24, 0x30	; 48
    1c28:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1c2c:	54 c1       	rjmp	.+680    	; 0x1ed6 <vfprintf+0x68a>
    1c2e:	83 36       	cpi	r24, 0x63	; 99
    1c30:	31 f0       	breq	.+12     	; 0x1c3e <vfprintf+0x3f2>
    1c32:	83 37       	cpi	r24, 0x73	; 115
    1c34:	79 f0       	breq	.+30     	; 0x1c54 <vfprintf+0x408>
    1c36:	83 35       	cpi	r24, 0x53	; 83
    1c38:	09 f0       	breq	.+2      	; 0x1c3c <vfprintf+0x3f0>
    1c3a:	56 c0       	rjmp	.+172    	; 0x1ce8 <vfprintf+0x49c>
    1c3c:	20 c0       	rjmp	.+64     	; 0x1c7e <vfprintf+0x432>
    1c3e:	56 01       	movw	r10, r12
    1c40:	32 e0       	ldi	r19, 0x02	; 2
    1c42:	a3 0e       	add	r10, r19
    1c44:	b1 1c       	adc	r11, r1
    1c46:	f6 01       	movw	r30, r12
    1c48:	80 81       	ld	r24, Z
    1c4a:	89 83       	std	Y+1, r24	; 0x01
    1c4c:	01 e0       	ldi	r16, 0x01	; 1
    1c4e:	10 e0       	ldi	r17, 0x00	; 0
    1c50:	63 01       	movw	r12, r6
    1c52:	12 c0       	rjmp	.+36     	; 0x1c78 <vfprintf+0x42c>
    1c54:	56 01       	movw	r10, r12
    1c56:	f2 e0       	ldi	r31, 0x02	; 2
    1c58:	af 0e       	add	r10, r31
    1c5a:	b1 1c       	adc	r11, r1
    1c5c:	f6 01       	movw	r30, r12
    1c5e:	c0 80       	ld	r12, Z
    1c60:	d1 80       	ldd	r13, Z+1	; 0x01
    1c62:	96 fe       	sbrs	r9, 6
    1c64:	03 c0       	rjmp	.+6      	; 0x1c6c <vfprintf+0x420>
    1c66:	61 2f       	mov	r22, r17
    1c68:	70 e0       	ldi	r23, 0x00	; 0
    1c6a:	02 c0       	rjmp	.+4      	; 0x1c70 <vfprintf+0x424>
    1c6c:	6f ef       	ldi	r22, 0xFF	; 255
    1c6e:	7f ef       	ldi	r23, 0xFF	; 255
    1c70:	c6 01       	movw	r24, r12
    1c72:	0e 94 0f 11 	call	0x221e	; 0x221e <strnlen>
    1c76:	8c 01       	movw	r16, r24
    1c78:	f9 2d       	mov	r31, r9
    1c7a:	ff 77       	andi	r31, 0x7F	; 127
    1c7c:	14 c0       	rjmp	.+40     	; 0x1ca6 <vfprintf+0x45a>
    1c7e:	56 01       	movw	r10, r12
    1c80:	22 e0       	ldi	r18, 0x02	; 2
    1c82:	a2 0e       	add	r10, r18
    1c84:	b1 1c       	adc	r11, r1
    1c86:	f6 01       	movw	r30, r12
    1c88:	c0 80       	ld	r12, Z
    1c8a:	d1 80       	ldd	r13, Z+1	; 0x01
    1c8c:	96 fe       	sbrs	r9, 6
    1c8e:	03 c0       	rjmp	.+6      	; 0x1c96 <vfprintf+0x44a>
    1c90:	61 2f       	mov	r22, r17
    1c92:	70 e0       	ldi	r23, 0x00	; 0
    1c94:	02 c0       	rjmp	.+4      	; 0x1c9a <vfprintf+0x44e>
    1c96:	6f ef       	ldi	r22, 0xFF	; 255
    1c98:	7f ef       	ldi	r23, 0xFF	; 255
    1c9a:	c6 01       	movw	r24, r12
    1c9c:	0e 94 f6 10 	call	0x21ec	; 0x21ec <strnlen_P>
    1ca0:	8c 01       	movw	r16, r24
    1ca2:	f9 2d       	mov	r31, r9
    1ca4:	f0 68       	ori	r31, 0x80	; 128
    1ca6:	9f 2e       	mov	r9, r31
    1ca8:	f3 fd       	sbrc	r31, 3
    1caa:	1a c0       	rjmp	.+52     	; 0x1ce0 <vfprintf+0x494>
    1cac:	85 2d       	mov	r24, r5
    1cae:	90 e0       	ldi	r25, 0x00	; 0
    1cb0:	08 17       	cp	r16, r24
    1cb2:	19 07       	cpc	r17, r25
    1cb4:	a8 f4       	brcc	.+42     	; 0x1ce0 <vfprintf+0x494>
    1cb6:	b7 01       	movw	r22, r14
    1cb8:	80 e2       	ldi	r24, 0x20	; 32
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1cc0:	5a 94       	dec	r5
    1cc2:	f4 cf       	rjmp	.-24     	; 0x1cac <vfprintf+0x460>
    1cc4:	f6 01       	movw	r30, r12
    1cc6:	97 fc       	sbrc	r9, 7
    1cc8:	85 91       	lpm	r24, Z+
    1cca:	97 fe       	sbrs	r9, 7
    1ccc:	81 91       	ld	r24, Z+
    1cce:	6f 01       	movw	r12, r30
    1cd0:	b7 01       	movw	r22, r14
    1cd2:	90 e0       	ldi	r25, 0x00	; 0
    1cd4:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1cd8:	51 10       	cpse	r5, r1
    1cda:	5a 94       	dec	r5
    1cdc:	01 50       	subi	r16, 0x01	; 1
    1cde:	11 09       	sbc	r17, r1
    1ce0:	01 15       	cp	r16, r1
    1ce2:	11 05       	cpc	r17, r1
    1ce4:	79 f7       	brne	.-34     	; 0x1cc4 <vfprintf+0x478>
    1ce6:	f7 c0       	rjmp	.+494    	; 0x1ed6 <vfprintf+0x68a>
    1ce8:	84 36       	cpi	r24, 0x64	; 100
    1cea:	11 f0       	breq	.+4      	; 0x1cf0 <vfprintf+0x4a4>
    1cec:	89 36       	cpi	r24, 0x69	; 105
    1cee:	61 f5       	brne	.+88     	; 0x1d48 <vfprintf+0x4fc>
    1cf0:	56 01       	movw	r10, r12
    1cf2:	97 fe       	sbrs	r9, 7
    1cf4:	09 c0       	rjmp	.+18     	; 0x1d08 <vfprintf+0x4bc>
    1cf6:	24 e0       	ldi	r18, 0x04	; 4
    1cf8:	a2 0e       	add	r10, r18
    1cfa:	b1 1c       	adc	r11, r1
    1cfc:	f6 01       	movw	r30, r12
    1cfe:	60 81       	ld	r22, Z
    1d00:	71 81       	ldd	r23, Z+1	; 0x01
    1d02:	82 81       	ldd	r24, Z+2	; 0x02
    1d04:	93 81       	ldd	r25, Z+3	; 0x03
    1d06:	0a c0       	rjmp	.+20     	; 0x1d1c <vfprintf+0x4d0>
    1d08:	f2 e0       	ldi	r31, 0x02	; 2
    1d0a:	af 0e       	add	r10, r31
    1d0c:	b1 1c       	adc	r11, r1
    1d0e:	f6 01       	movw	r30, r12
    1d10:	60 81       	ld	r22, Z
    1d12:	71 81       	ldd	r23, Z+1	; 0x01
    1d14:	07 2e       	mov	r0, r23
    1d16:	00 0c       	add	r0, r0
    1d18:	88 0b       	sbc	r24, r24
    1d1a:	99 0b       	sbc	r25, r25
    1d1c:	f9 2d       	mov	r31, r9
    1d1e:	ff 76       	andi	r31, 0x6F	; 111
    1d20:	9f 2e       	mov	r9, r31
    1d22:	97 ff       	sbrs	r25, 7
    1d24:	09 c0       	rjmp	.+18     	; 0x1d38 <vfprintf+0x4ec>
    1d26:	90 95       	com	r25
    1d28:	80 95       	com	r24
    1d2a:	70 95       	com	r23
    1d2c:	61 95       	neg	r22
    1d2e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d30:	8f 4f       	sbci	r24, 0xFF	; 255
    1d32:	9f 4f       	sbci	r25, 0xFF	; 255
    1d34:	f0 68       	ori	r31, 0x80	; 128
    1d36:	9f 2e       	mov	r9, r31
    1d38:	2a e0       	ldi	r18, 0x0A	; 10
    1d3a:	30 e0       	ldi	r19, 0x00	; 0
    1d3c:	a3 01       	movw	r20, r6
    1d3e:	0e 94 56 11 	call	0x22ac	; 0x22ac <__ultoa_invert>
    1d42:	c8 2e       	mov	r12, r24
    1d44:	c6 18       	sub	r12, r6
    1d46:	3f c0       	rjmp	.+126    	; 0x1dc6 <vfprintf+0x57a>
    1d48:	09 2d       	mov	r16, r9
    1d4a:	85 37       	cpi	r24, 0x75	; 117
    1d4c:	21 f4       	brne	.+8      	; 0x1d56 <vfprintf+0x50a>
    1d4e:	0f 7e       	andi	r16, 0xEF	; 239
    1d50:	2a e0       	ldi	r18, 0x0A	; 10
    1d52:	30 e0       	ldi	r19, 0x00	; 0
    1d54:	1d c0       	rjmp	.+58     	; 0x1d90 <vfprintf+0x544>
    1d56:	09 7f       	andi	r16, 0xF9	; 249
    1d58:	8f 36       	cpi	r24, 0x6F	; 111
    1d5a:	91 f0       	breq	.+36     	; 0x1d80 <vfprintf+0x534>
    1d5c:	18 f4       	brcc	.+6      	; 0x1d64 <vfprintf+0x518>
    1d5e:	88 35       	cpi	r24, 0x58	; 88
    1d60:	59 f0       	breq	.+22     	; 0x1d78 <vfprintf+0x52c>
    1d62:	c3 c0       	rjmp	.+390    	; 0x1eea <vfprintf+0x69e>
    1d64:	80 37       	cpi	r24, 0x70	; 112
    1d66:	19 f0       	breq	.+6      	; 0x1d6e <vfprintf+0x522>
    1d68:	88 37       	cpi	r24, 0x78	; 120
    1d6a:	11 f0       	breq	.+4      	; 0x1d70 <vfprintf+0x524>
    1d6c:	be c0       	rjmp	.+380    	; 0x1eea <vfprintf+0x69e>
    1d6e:	00 61       	ori	r16, 0x10	; 16
    1d70:	04 ff       	sbrs	r16, 4
    1d72:	09 c0       	rjmp	.+18     	; 0x1d86 <vfprintf+0x53a>
    1d74:	04 60       	ori	r16, 0x04	; 4
    1d76:	07 c0       	rjmp	.+14     	; 0x1d86 <vfprintf+0x53a>
    1d78:	94 fe       	sbrs	r9, 4
    1d7a:	08 c0       	rjmp	.+16     	; 0x1d8c <vfprintf+0x540>
    1d7c:	06 60       	ori	r16, 0x06	; 6
    1d7e:	06 c0       	rjmp	.+12     	; 0x1d8c <vfprintf+0x540>
    1d80:	28 e0       	ldi	r18, 0x08	; 8
    1d82:	30 e0       	ldi	r19, 0x00	; 0
    1d84:	05 c0       	rjmp	.+10     	; 0x1d90 <vfprintf+0x544>
    1d86:	20 e1       	ldi	r18, 0x10	; 16
    1d88:	30 e0       	ldi	r19, 0x00	; 0
    1d8a:	02 c0       	rjmp	.+4      	; 0x1d90 <vfprintf+0x544>
    1d8c:	20 e1       	ldi	r18, 0x10	; 16
    1d8e:	32 e0       	ldi	r19, 0x02	; 2
    1d90:	56 01       	movw	r10, r12
    1d92:	07 ff       	sbrs	r16, 7
    1d94:	09 c0       	rjmp	.+18     	; 0x1da8 <vfprintf+0x55c>
    1d96:	84 e0       	ldi	r24, 0x04	; 4
    1d98:	a8 0e       	add	r10, r24
    1d9a:	b1 1c       	adc	r11, r1
    1d9c:	f6 01       	movw	r30, r12
    1d9e:	60 81       	ld	r22, Z
    1da0:	71 81       	ldd	r23, Z+1	; 0x01
    1da2:	82 81       	ldd	r24, Z+2	; 0x02
    1da4:	93 81       	ldd	r25, Z+3	; 0x03
    1da6:	08 c0       	rjmp	.+16     	; 0x1db8 <vfprintf+0x56c>
    1da8:	f2 e0       	ldi	r31, 0x02	; 2
    1daa:	af 0e       	add	r10, r31
    1dac:	b1 1c       	adc	r11, r1
    1dae:	f6 01       	movw	r30, r12
    1db0:	60 81       	ld	r22, Z
    1db2:	71 81       	ldd	r23, Z+1	; 0x01
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	a3 01       	movw	r20, r6
    1dba:	0e 94 56 11 	call	0x22ac	; 0x22ac <__ultoa_invert>
    1dbe:	c8 2e       	mov	r12, r24
    1dc0:	c6 18       	sub	r12, r6
    1dc2:	0f 77       	andi	r16, 0x7F	; 127
    1dc4:	90 2e       	mov	r9, r16
    1dc6:	96 fe       	sbrs	r9, 6
    1dc8:	0b c0       	rjmp	.+22     	; 0x1de0 <vfprintf+0x594>
    1dca:	09 2d       	mov	r16, r9
    1dcc:	0e 7f       	andi	r16, 0xFE	; 254
    1dce:	c1 16       	cp	r12, r17
    1dd0:	50 f4       	brcc	.+20     	; 0x1de6 <vfprintf+0x59a>
    1dd2:	94 fe       	sbrs	r9, 4
    1dd4:	0a c0       	rjmp	.+20     	; 0x1dea <vfprintf+0x59e>
    1dd6:	92 fc       	sbrc	r9, 2
    1dd8:	08 c0       	rjmp	.+16     	; 0x1dea <vfprintf+0x59e>
    1dda:	09 2d       	mov	r16, r9
    1ddc:	0e 7e       	andi	r16, 0xEE	; 238
    1dde:	05 c0       	rjmp	.+10     	; 0x1dea <vfprintf+0x59e>
    1de0:	dc 2c       	mov	r13, r12
    1de2:	09 2d       	mov	r16, r9
    1de4:	03 c0       	rjmp	.+6      	; 0x1dec <vfprintf+0x5a0>
    1de6:	dc 2c       	mov	r13, r12
    1de8:	01 c0       	rjmp	.+2      	; 0x1dec <vfprintf+0x5a0>
    1dea:	d1 2e       	mov	r13, r17
    1dec:	04 ff       	sbrs	r16, 4
    1dee:	0d c0       	rjmp	.+26     	; 0x1e0a <vfprintf+0x5be>
    1df0:	fe 01       	movw	r30, r28
    1df2:	ec 0d       	add	r30, r12
    1df4:	f1 1d       	adc	r31, r1
    1df6:	80 81       	ld	r24, Z
    1df8:	80 33       	cpi	r24, 0x30	; 48
    1dfa:	11 f4       	brne	.+4      	; 0x1e00 <vfprintf+0x5b4>
    1dfc:	09 7e       	andi	r16, 0xE9	; 233
    1dfe:	09 c0       	rjmp	.+18     	; 0x1e12 <vfprintf+0x5c6>
    1e00:	02 ff       	sbrs	r16, 2
    1e02:	06 c0       	rjmp	.+12     	; 0x1e10 <vfprintf+0x5c4>
    1e04:	d3 94       	inc	r13
    1e06:	d3 94       	inc	r13
    1e08:	04 c0       	rjmp	.+8      	; 0x1e12 <vfprintf+0x5c6>
    1e0a:	80 2f       	mov	r24, r16
    1e0c:	86 78       	andi	r24, 0x86	; 134
    1e0e:	09 f0       	breq	.+2      	; 0x1e12 <vfprintf+0x5c6>
    1e10:	d3 94       	inc	r13
    1e12:	03 fd       	sbrc	r16, 3
    1e14:	11 c0       	rjmp	.+34     	; 0x1e38 <vfprintf+0x5ec>
    1e16:	00 ff       	sbrs	r16, 0
    1e18:	06 c0       	rjmp	.+12     	; 0x1e26 <vfprintf+0x5da>
    1e1a:	1c 2d       	mov	r17, r12
    1e1c:	d5 14       	cp	r13, r5
    1e1e:	80 f4       	brcc	.+32     	; 0x1e40 <vfprintf+0x5f4>
    1e20:	15 0d       	add	r17, r5
    1e22:	1d 19       	sub	r17, r13
    1e24:	0d c0       	rjmp	.+26     	; 0x1e40 <vfprintf+0x5f4>
    1e26:	d5 14       	cp	r13, r5
    1e28:	58 f4       	brcc	.+22     	; 0x1e40 <vfprintf+0x5f4>
    1e2a:	b7 01       	movw	r22, r14
    1e2c:	80 e2       	ldi	r24, 0x20	; 32
    1e2e:	90 e0       	ldi	r25, 0x00	; 0
    1e30:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1e34:	d3 94       	inc	r13
    1e36:	f7 cf       	rjmp	.-18     	; 0x1e26 <vfprintf+0x5da>
    1e38:	d5 14       	cp	r13, r5
    1e3a:	10 f4       	brcc	.+4      	; 0x1e40 <vfprintf+0x5f4>
    1e3c:	5d 18       	sub	r5, r13
    1e3e:	01 c0       	rjmp	.+2      	; 0x1e42 <vfprintf+0x5f6>
    1e40:	51 2c       	mov	r5, r1
    1e42:	04 ff       	sbrs	r16, 4
    1e44:	10 c0       	rjmp	.+32     	; 0x1e66 <vfprintf+0x61a>
    1e46:	b7 01       	movw	r22, r14
    1e48:	80 e3       	ldi	r24, 0x30	; 48
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1e50:	02 ff       	sbrs	r16, 2
    1e52:	17 c0       	rjmp	.+46     	; 0x1e82 <vfprintf+0x636>
    1e54:	01 fd       	sbrc	r16, 1
    1e56:	03 c0       	rjmp	.+6      	; 0x1e5e <vfprintf+0x612>
    1e58:	88 e7       	ldi	r24, 0x78	; 120
    1e5a:	90 e0       	ldi	r25, 0x00	; 0
    1e5c:	02 c0       	rjmp	.+4      	; 0x1e62 <vfprintf+0x616>
    1e5e:	88 e5       	ldi	r24, 0x58	; 88
    1e60:	90 e0       	ldi	r25, 0x00	; 0
    1e62:	b7 01       	movw	r22, r14
    1e64:	0c c0       	rjmp	.+24     	; 0x1e7e <vfprintf+0x632>
    1e66:	80 2f       	mov	r24, r16
    1e68:	86 78       	andi	r24, 0x86	; 134
    1e6a:	59 f0       	breq	.+22     	; 0x1e82 <vfprintf+0x636>
    1e6c:	01 ff       	sbrs	r16, 1
    1e6e:	02 c0       	rjmp	.+4      	; 0x1e74 <vfprintf+0x628>
    1e70:	8b e2       	ldi	r24, 0x2B	; 43
    1e72:	01 c0       	rjmp	.+2      	; 0x1e76 <vfprintf+0x62a>
    1e74:	80 e2       	ldi	r24, 0x20	; 32
    1e76:	07 fd       	sbrc	r16, 7
    1e78:	8d e2       	ldi	r24, 0x2D	; 45
    1e7a:	b7 01       	movw	r22, r14
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1e82:	c1 16       	cp	r12, r17
    1e84:	38 f4       	brcc	.+14     	; 0x1e94 <vfprintf+0x648>
    1e86:	b7 01       	movw	r22, r14
    1e88:	80 e3       	ldi	r24, 0x30	; 48
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1e90:	11 50       	subi	r17, 0x01	; 1
    1e92:	f7 cf       	rjmp	.-18     	; 0x1e82 <vfprintf+0x636>
    1e94:	ca 94       	dec	r12
    1e96:	f3 01       	movw	r30, r6
    1e98:	ec 0d       	add	r30, r12
    1e9a:	f1 1d       	adc	r31, r1
    1e9c:	80 81       	ld	r24, Z
    1e9e:	b7 01       	movw	r22, r14
    1ea0:	90 e0       	ldi	r25, 0x00	; 0
    1ea2:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1ea6:	c1 10       	cpse	r12, r1
    1ea8:	f5 cf       	rjmp	.-22     	; 0x1e94 <vfprintf+0x648>
    1eaa:	15 c0       	rjmp	.+42     	; 0x1ed6 <vfprintf+0x68a>
    1eac:	f4 e0       	ldi	r31, 0x04	; 4
    1eae:	f5 15       	cp	r31, r5
    1eb0:	60 f5       	brcc	.+88     	; 0x1f0a <vfprintf+0x6be>
    1eb2:	84 e0       	ldi	r24, 0x04	; 4
    1eb4:	58 1a       	sub	r5, r24
    1eb6:	93 fe       	sbrs	r9, 3
    1eb8:	1f c0       	rjmp	.+62     	; 0x1ef8 <vfprintf+0x6ac>
    1eba:	01 11       	cpse	r16, r1
    1ebc:	27 c0       	rjmp	.+78     	; 0x1f0c <vfprintf+0x6c0>
    1ebe:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ec0:	23 ff       	sbrs	r18, 3
    1ec2:	2a c0       	rjmp	.+84     	; 0x1f18 <vfprintf+0x6cc>
    1ec4:	04 eb       	ldi	r16, 0xB4	; 180
    1ec6:	10 e0       	ldi	r17, 0x00	; 0
    1ec8:	39 2d       	mov	r19, r9
    1eca:	30 71       	andi	r19, 0x10	; 16
    1ecc:	93 2e       	mov	r9, r19
    1ece:	f8 01       	movw	r30, r16
    1ed0:	84 91       	lpm	r24, Z
    1ed2:	81 11       	cpse	r24, r1
    1ed4:	24 c0       	rjmp	.+72     	; 0x1f1e <vfprintf+0x6d2>
    1ed6:	55 20       	and	r5, r5
    1ed8:	09 f4       	brne	.+2      	; 0x1edc <vfprintf+0x690>
    1eda:	e4 cc       	rjmp	.-1592   	; 0x18a4 <vfprintf+0x58>
    1edc:	b7 01       	movw	r22, r14
    1ede:	80 e2       	ldi	r24, 0x20	; 32
    1ee0:	90 e0       	ldi	r25, 0x00	; 0
    1ee2:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1ee6:	5a 94       	dec	r5
    1ee8:	f6 cf       	rjmp	.-20     	; 0x1ed6 <vfprintf+0x68a>
    1eea:	f7 01       	movw	r30, r14
    1eec:	86 81       	ldd	r24, Z+6	; 0x06
    1eee:	97 81       	ldd	r25, Z+7	; 0x07
    1ef0:	26 c0       	rjmp	.+76     	; 0x1f3e <vfprintf+0x6f2>
    1ef2:	8f ef       	ldi	r24, 0xFF	; 255
    1ef4:	9f ef       	ldi	r25, 0xFF	; 255
    1ef6:	23 c0       	rjmp	.+70     	; 0x1f3e <vfprintf+0x6f2>
    1ef8:	b7 01       	movw	r22, r14
    1efa:	80 e2       	ldi	r24, 0x20	; 32
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1f02:	5a 94       	dec	r5
    1f04:	51 10       	cpse	r5, r1
    1f06:	f8 cf       	rjmp	.-16     	; 0x1ef8 <vfprintf+0x6ac>
    1f08:	d8 cf       	rjmp	.-80     	; 0x1eba <vfprintf+0x66e>
    1f0a:	51 2c       	mov	r5, r1
    1f0c:	b7 01       	movw	r22, r14
    1f0e:	80 2f       	mov	r24, r16
    1f10:	90 e0       	ldi	r25, 0x00	; 0
    1f12:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1f16:	d3 cf       	rjmp	.-90     	; 0x1ebe <vfprintf+0x672>
    1f18:	08 eb       	ldi	r16, 0xB8	; 184
    1f1a:	10 e0       	ldi	r17, 0x00	; 0
    1f1c:	d5 cf       	rjmp	.-86     	; 0x1ec8 <vfprintf+0x67c>
    1f1e:	91 10       	cpse	r9, r1
    1f20:	80 52       	subi	r24, 0x20	; 32
    1f22:	b7 01       	movw	r22, r14
    1f24:	90 e0       	ldi	r25, 0x00	; 0
    1f26:	0e 94 1a 11 	call	0x2234	; 0x2234 <fputc>
    1f2a:	0f 5f       	subi	r16, 0xFF	; 255
    1f2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f2e:	cf cf       	rjmp	.-98     	; 0x1ece <vfprintf+0x682>
    1f30:	23 e0       	ldi	r18, 0x03	; 3
    1f32:	25 15       	cp	r18, r5
    1f34:	10 f4       	brcc	.+4      	; 0x1f3a <vfprintf+0x6ee>
    1f36:	83 e0       	ldi	r24, 0x03	; 3
    1f38:	bd cf       	rjmp	.-134    	; 0x1eb4 <vfprintf+0x668>
    1f3a:	51 2c       	mov	r5, r1
    1f3c:	c0 cf       	rjmp	.-128    	; 0x1ebe <vfprintf+0x672>
    1f3e:	60 96       	adiw	r28, 0x10	; 16
    1f40:	e2 e1       	ldi	r30, 0x12	; 18
    1f42:	0c 94 e9 0f 	jmp	0x1fd2	; 0x1fd2 <__epilogue_restores__>

00001f46 <__udivmodsi4>:
    1f46:	a1 e2       	ldi	r26, 0x21	; 33
    1f48:	1a 2e       	mov	r1, r26
    1f4a:	aa 1b       	sub	r26, r26
    1f4c:	bb 1b       	sub	r27, r27
    1f4e:	fd 01       	movw	r30, r26
    1f50:	0d c0       	rjmp	.+26     	; 0x1f6c <__udivmodsi4_ep>

00001f52 <__udivmodsi4_loop>:
    1f52:	aa 1f       	adc	r26, r26
    1f54:	bb 1f       	adc	r27, r27
    1f56:	ee 1f       	adc	r30, r30
    1f58:	ff 1f       	adc	r31, r31
    1f5a:	a2 17       	cp	r26, r18
    1f5c:	b3 07       	cpc	r27, r19
    1f5e:	e4 07       	cpc	r30, r20
    1f60:	f5 07       	cpc	r31, r21
    1f62:	20 f0       	brcs	.+8      	; 0x1f6c <__udivmodsi4_ep>
    1f64:	a2 1b       	sub	r26, r18
    1f66:	b3 0b       	sbc	r27, r19
    1f68:	e4 0b       	sbc	r30, r20
    1f6a:	f5 0b       	sbc	r31, r21

00001f6c <__udivmodsi4_ep>:
    1f6c:	66 1f       	adc	r22, r22
    1f6e:	77 1f       	adc	r23, r23
    1f70:	88 1f       	adc	r24, r24
    1f72:	99 1f       	adc	r25, r25
    1f74:	1a 94       	dec	r1
    1f76:	69 f7       	brne	.-38     	; 0x1f52 <__udivmodsi4_loop>
    1f78:	60 95       	com	r22
    1f7a:	70 95       	com	r23
    1f7c:	80 95       	com	r24
    1f7e:	90 95       	com	r25
    1f80:	9b 01       	movw	r18, r22
    1f82:	ac 01       	movw	r20, r24
    1f84:	bd 01       	movw	r22, r26
    1f86:	cf 01       	movw	r24, r30
    1f88:	08 95       	ret

00001f8a <__mulshisi3>:
    1f8a:	b7 ff       	sbrs	r27, 7
    1f8c:	0c 94 04 10 	jmp	0x2008	; 0x2008 <__muluhisi3>

00001f90 <__mulohisi3>:
    1f90:	0e 94 04 10 	call	0x2008	; 0x2008 <__muluhisi3>
    1f94:	82 1b       	sub	r24, r18
    1f96:	93 0b       	sbc	r25, r19
    1f98:	08 95       	ret

00001f9a <__prologue_saves__>:
    1f9a:	2f 92       	push	r2
    1f9c:	3f 92       	push	r3
    1f9e:	4f 92       	push	r4
    1fa0:	5f 92       	push	r5
    1fa2:	6f 92       	push	r6
    1fa4:	7f 92       	push	r7
    1fa6:	8f 92       	push	r8
    1fa8:	9f 92       	push	r9
    1faa:	af 92       	push	r10
    1fac:	bf 92       	push	r11
    1fae:	cf 92       	push	r12
    1fb0:	df 92       	push	r13
    1fb2:	ef 92       	push	r14
    1fb4:	ff 92       	push	r15
    1fb6:	0f 93       	push	r16
    1fb8:	1f 93       	push	r17
    1fba:	cf 93       	push	r28
    1fbc:	df 93       	push	r29
    1fbe:	cd b7       	in	r28, 0x3d	; 61
    1fc0:	de b7       	in	r29, 0x3e	; 62
    1fc2:	ca 1b       	sub	r28, r26
    1fc4:	db 0b       	sbc	r29, r27
    1fc6:	0f b6       	in	r0, 0x3f	; 63
    1fc8:	f8 94       	cli
    1fca:	de bf       	out	0x3e, r29	; 62
    1fcc:	0f be       	out	0x3f, r0	; 63
    1fce:	cd bf       	out	0x3d, r28	; 61
    1fd0:	09 94       	ijmp

00001fd2 <__epilogue_restores__>:
    1fd2:	2a 88       	ldd	r2, Y+18	; 0x12
    1fd4:	39 88       	ldd	r3, Y+17	; 0x11
    1fd6:	48 88       	ldd	r4, Y+16	; 0x10
    1fd8:	5f 84       	ldd	r5, Y+15	; 0x0f
    1fda:	6e 84       	ldd	r6, Y+14	; 0x0e
    1fdc:	7d 84       	ldd	r7, Y+13	; 0x0d
    1fde:	8c 84       	ldd	r8, Y+12	; 0x0c
    1fe0:	9b 84       	ldd	r9, Y+11	; 0x0b
    1fe2:	aa 84       	ldd	r10, Y+10	; 0x0a
    1fe4:	b9 84       	ldd	r11, Y+9	; 0x09
    1fe6:	c8 84       	ldd	r12, Y+8	; 0x08
    1fe8:	df 80       	ldd	r13, Y+7	; 0x07
    1fea:	ee 80       	ldd	r14, Y+6	; 0x06
    1fec:	fd 80       	ldd	r15, Y+5	; 0x05
    1fee:	0c 81       	ldd	r16, Y+4	; 0x04
    1ff0:	1b 81       	ldd	r17, Y+3	; 0x03
    1ff2:	aa 81       	ldd	r26, Y+2	; 0x02
    1ff4:	b9 81       	ldd	r27, Y+1	; 0x01
    1ff6:	ce 0f       	add	r28, r30
    1ff8:	d1 1d       	adc	r29, r1
    1ffa:	0f b6       	in	r0, 0x3f	; 63
    1ffc:	f8 94       	cli
    1ffe:	de bf       	out	0x3e, r29	; 62
    2000:	0f be       	out	0x3f, r0	; 63
    2002:	cd bf       	out	0x3d, r28	; 61
    2004:	ed 01       	movw	r28, r26
    2006:	08 95       	ret

00002008 <__muluhisi3>:
    2008:	0e 94 0f 10 	call	0x201e	; 0x201e <__umulhisi3>
    200c:	a5 9f       	mul	r26, r21
    200e:	90 0d       	add	r25, r0
    2010:	b4 9f       	mul	r27, r20
    2012:	90 0d       	add	r25, r0
    2014:	a4 9f       	mul	r26, r20
    2016:	80 0d       	add	r24, r0
    2018:	91 1d       	adc	r25, r1
    201a:	11 24       	eor	r1, r1
    201c:	08 95       	ret

0000201e <__umulhisi3>:
    201e:	a2 9f       	mul	r26, r18
    2020:	b0 01       	movw	r22, r0
    2022:	b3 9f       	mul	r27, r19
    2024:	c0 01       	movw	r24, r0
    2026:	a3 9f       	mul	r26, r19
    2028:	70 0d       	add	r23, r0
    202a:	81 1d       	adc	r24, r1
    202c:	11 24       	eor	r1, r1
    202e:	91 1d       	adc	r25, r1
    2030:	b2 9f       	mul	r27, r18
    2032:	70 0d       	add	r23, r0
    2034:	81 1d       	adc	r24, r1
    2036:	11 24       	eor	r1, r1
    2038:	91 1d       	adc	r25, r1
    203a:	08 95       	ret

0000203c <__ftoa_engine>:
    203c:	28 30       	cpi	r18, 0x08	; 8
    203e:	08 f0       	brcs	.+2      	; 0x2042 <__ftoa_engine+0x6>
    2040:	27 e0       	ldi	r18, 0x07	; 7
    2042:	33 27       	eor	r19, r19
    2044:	da 01       	movw	r26, r20
    2046:	99 0f       	add	r25, r25
    2048:	31 1d       	adc	r19, r1
    204a:	87 fd       	sbrc	r24, 7
    204c:	91 60       	ori	r25, 0x01	; 1
    204e:	00 96       	adiw	r24, 0x00	; 0
    2050:	61 05       	cpc	r22, r1
    2052:	71 05       	cpc	r23, r1
    2054:	39 f4       	brne	.+14     	; 0x2064 <__ftoa_engine+0x28>
    2056:	32 60       	ori	r19, 0x02	; 2
    2058:	2e 5f       	subi	r18, 0xFE	; 254
    205a:	3d 93       	st	X+, r19
    205c:	30 e3       	ldi	r19, 0x30	; 48
    205e:	2a 95       	dec	r18
    2060:	e1 f7       	brne	.-8      	; 0x205a <__ftoa_engine+0x1e>
    2062:	08 95       	ret
    2064:	9f 3f       	cpi	r25, 0xFF	; 255
    2066:	30 f0       	brcs	.+12     	; 0x2074 <__ftoa_engine+0x38>
    2068:	80 38       	cpi	r24, 0x80	; 128
    206a:	71 05       	cpc	r23, r1
    206c:	61 05       	cpc	r22, r1
    206e:	09 f0       	breq	.+2      	; 0x2072 <__ftoa_engine+0x36>
    2070:	3c 5f       	subi	r19, 0xFC	; 252
    2072:	3c 5f       	subi	r19, 0xFC	; 252
    2074:	3d 93       	st	X+, r19
    2076:	91 30       	cpi	r25, 0x01	; 1
    2078:	08 f0       	brcs	.+2      	; 0x207c <__ftoa_engine+0x40>
    207a:	80 68       	ori	r24, 0x80	; 128
    207c:	91 1d       	adc	r25, r1
    207e:	df 93       	push	r29
    2080:	cf 93       	push	r28
    2082:	1f 93       	push	r17
    2084:	0f 93       	push	r16
    2086:	ff 92       	push	r15
    2088:	ef 92       	push	r14
    208a:	19 2f       	mov	r17, r25
    208c:	98 7f       	andi	r25, 0xF8	; 248
    208e:	96 95       	lsr	r25
    2090:	e9 2f       	mov	r30, r25
    2092:	96 95       	lsr	r25
    2094:	96 95       	lsr	r25
    2096:	e9 0f       	add	r30, r25
    2098:	ff 27       	eor	r31, r31
    209a:	ea 5e       	subi	r30, 0xEA	; 234
    209c:	fe 4f       	sbci	r31, 0xFE	; 254
    209e:	99 27       	eor	r25, r25
    20a0:	33 27       	eor	r19, r19
    20a2:	ee 24       	eor	r14, r14
    20a4:	ff 24       	eor	r15, r15
    20a6:	a7 01       	movw	r20, r14
    20a8:	e7 01       	movw	r28, r14
    20aa:	05 90       	lpm	r0, Z+
    20ac:	08 94       	sec
    20ae:	07 94       	ror	r0
    20b0:	28 f4       	brcc	.+10     	; 0x20bc <__ftoa_engine+0x80>
    20b2:	36 0f       	add	r19, r22
    20b4:	e7 1e       	adc	r14, r23
    20b6:	f8 1e       	adc	r15, r24
    20b8:	49 1f       	adc	r20, r25
    20ba:	51 1d       	adc	r21, r1
    20bc:	66 0f       	add	r22, r22
    20be:	77 1f       	adc	r23, r23
    20c0:	88 1f       	adc	r24, r24
    20c2:	99 1f       	adc	r25, r25
    20c4:	06 94       	lsr	r0
    20c6:	a1 f7       	brne	.-24     	; 0x20b0 <__ftoa_engine+0x74>
    20c8:	05 90       	lpm	r0, Z+
    20ca:	07 94       	ror	r0
    20cc:	28 f4       	brcc	.+10     	; 0x20d8 <__ftoa_engine+0x9c>
    20ce:	e7 0e       	add	r14, r23
    20d0:	f8 1e       	adc	r15, r24
    20d2:	49 1f       	adc	r20, r25
    20d4:	56 1f       	adc	r21, r22
    20d6:	c1 1d       	adc	r28, r1
    20d8:	77 0f       	add	r23, r23
    20da:	88 1f       	adc	r24, r24
    20dc:	99 1f       	adc	r25, r25
    20de:	66 1f       	adc	r22, r22
    20e0:	06 94       	lsr	r0
    20e2:	a1 f7       	brne	.-24     	; 0x20cc <__ftoa_engine+0x90>
    20e4:	05 90       	lpm	r0, Z+
    20e6:	07 94       	ror	r0
    20e8:	28 f4       	brcc	.+10     	; 0x20f4 <__ftoa_engine+0xb8>
    20ea:	f8 0e       	add	r15, r24
    20ec:	49 1f       	adc	r20, r25
    20ee:	56 1f       	adc	r21, r22
    20f0:	c7 1f       	adc	r28, r23
    20f2:	d1 1d       	adc	r29, r1
    20f4:	88 0f       	add	r24, r24
    20f6:	99 1f       	adc	r25, r25
    20f8:	66 1f       	adc	r22, r22
    20fa:	77 1f       	adc	r23, r23
    20fc:	06 94       	lsr	r0
    20fe:	a1 f7       	brne	.-24     	; 0x20e8 <__ftoa_engine+0xac>
    2100:	05 90       	lpm	r0, Z+
    2102:	07 94       	ror	r0
    2104:	20 f4       	brcc	.+8      	; 0x210e <__ftoa_engine+0xd2>
    2106:	49 0f       	add	r20, r25
    2108:	56 1f       	adc	r21, r22
    210a:	c7 1f       	adc	r28, r23
    210c:	d8 1f       	adc	r29, r24
    210e:	99 0f       	add	r25, r25
    2110:	66 1f       	adc	r22, r22
    2112:	77 1f       	adc	r23, r23
    2114:	88 1f       	adc	r24, r24
    2116:	06 94       	lsr	r0
    2118:	a9 f7       	brne	.-22     	; 0x2104 <__ftoa_engine+0xc8>
    211a:	84 91       	lpm	r24, Z
    211c:	10 95       	com	r17
    211e:	17 70       	andi	r17, 0x07	; 7
    2120:	41 f0       	breq	.+16     	; 0x2132 <__ftoa_engine+0xf6>
    2122:	d6 95       	lsr	r29
    2124:	c7 95       	ror	r28
    2126:	57 95       	ror	r21
    2128:	47 95       	ror	r20
    212a:	f7 94       	ror	r15
    212c:	e7 94       	ror	r14
    212e:	1a 95       	dec	r17
    2130:	c1 f7       	brne	.-16     	; 0x2122 <__ftoa_engine+0xe6>
    2132:	ec eb       	ldi	r30, 0xBC	; 188
    2134:	f0 e0       	ldi	r31, 0x00	; 0
    2136:	68 94       	set
    2138:	15 90       	lpm	r1, Z+
    213a:	15 91       	lpm	r17, Z+
    213c:	35 91       	lpm	r19, Z+
    213e:	65 91       	lpm	r22, Z+
    2140:	95 91       	lpm	r25, Z+
    2142:	05 90       	lpm	r0, Z+
    2144:	7f e2       	ldi	r23, 0x2F	; 47
    2146:	73 95       	inc	r23
    2148:	e1 18       	sub	r14, r1
    214a:	f1 0a       	sbc	r15, r17
    214c:	43 0b       	sbc	r20, r19
    214e:	56 0b       	sbc	r21, r22
    2150:	c9 0b       	sbc	r28, r25
    2152:	d0 09       	sbc	r29, r0
    2154:	c0 f7       	brcc	.-16     	; 0x2146 <__ftoa_engine+0x10a>
    2156:	e1 0c       	add	r14, r1
    2158:	f1 1e       	adc	r15, r17
    215a:	43 1f       	adc	r20, r19
    215c:	56 1f       	adc	r21, r22
    215e:	c9 1f       	adc	r28, r25
    2160:	d0 1d       	adc	r29, r0
    2162:	7e f4       	brtc	.+30     	; 0x2182 <__ftoa_engine+0x146>
    2164:	70 33       	cpi	r23, 0x30	; 48
    2166:	11 f4       	brne	.+4      	; 0x216c <__ftoa_engine+0x130>
    2168:	8a 95       	dec	r24
    216a:	e6 cf       	rjmp	.-52     	; 0x2138 <__ftoa_engine+0xfc>
    216c:	e8 94       	clt
    216e:	01 50       	subi	r16, 0x01	; 1
    2170:	30 f0       	brcs	.+12     	; 0x217e <__ftoa_engine+0x142>
    2172:	08 0f       	add	r16, r24
    2174:	0a f4       	brpl	.+2      	; 0x2178 <__ftoa_engine+0x13c>
    2176:	00 27       	eor	r16, r16
    2178:	02 17       	cp	r16, r18
    217a:	08 f4       	brcc	.+2      	; 0x217e <__ftoa_engine+0x142>
    217c:	20 2f       	mov	r18, r16
    217e:	23 95       	inc	r18
    2180:	02 2f       	mov	r16, r18
    2182:	7a 33       	cpi	r23, 0x3A	; 58
    2184:	28 f0       	brcs	.+10     	; 0x2190 <__ftoa_engine+0x154>
    2186:	79 e3       	ldi	r23, 0x39	; 57
    2188:	7d 93       	st	X+, r23
    218a:	2a 95       	dec	r18
    218c:	e9 f7       	brne	.-6      	; 0x2188 <__ftoa_engine+0x14c>
    218e:	10 c0       	rjmp	.+32     	; 0x21b0 <__ftoa_engine+0x174>
    2190:	7d 93       	st	X+, r23
    2192:	2a 95       	dec	r18
    2194:	89 f6       	brne	.-94     	; 0x2138 <__ftoa_engine+0xfc>
    2196:	06 94       	lsr	r0
    2198:	97 95       	ror	r25
    219a:	67 95       	ror	r22
    219c:	37 95       	ror	r19
    219e:	17 95       	ror	r17
    21a0:	17 94       	ror	r1
    21a2:	e1 18       	sub	r14, r1
    21a4:	f1 0a       	sbc	r15, r17
    21a6:	43 0b       	sbc	r20, r19
    21a8:	56 0b       	sbc	r21, r22
    21aa:	c9 0b       	sbc	r28, r25
    21ac:	d0 09       	sbc	r29, r0
    21ae:	98 f0       	brcs	.+38     	; 0x21d6 <__ftoa_engine+0x19a>
    21b0:	23 95       	inc	r18
    21b2:	7e 91       	ld	r23, -X
    21b4:	73 95       	inc	r23
    21b6:	7a 33       	cpi	r23, 0x3A	; 58
    21b8:	08 f0       	brcs	.+2      	; 0x21bc <__ftoa_engine+0x180>
    21ba:	70 e3       	ldi	r23, 0x30	; 48
    21bc:	7c 93       	st	X, r23
    21be:	20 13       	cpse	r18, r16
    21c0:	b8 f7       	brcc	.-18     	; 0x21b0 <__ftoa_engine+0x174>
    21c2:	7e 91       	ld	r23, -X
    21c4:	70 61       	ori	r23, 0x10	; 16
    21c6:	7d 93       	st	X+, r23
    21c8:	30 f0       	brcs	.+12     	; 0x21d6 <__ftoa_engine+0x19a>
    21ca:	83 95       	inc	r24
    21cc:	71 e3       	ldi	r23, 0x31	; 49
    21ce:	7d 93       	st	X+, r23
    21d0:	70 e3       	ldi	r23, 0x30	; 48
    21d2:	2a 95       	dec	r18
    21d4:	e1 f7       	brne	.-8      	; 0x21ce <__ftoa_engine+0x192>
    21d6:	11 24       	eor	r1, r1
    21d8:	ef 90       	pop	r14
    21da:	ff 90       	pop	r15
    21dc:	0f 91       	pop	r16
    21de:	1f 91       	pop	r17
    21e0:	cf 91       	pop	r28
    21e2:	df 91       	pop	r29
    21e4:	99 27       	eor	r25, r25
    21e6:	87 fd       	sbrc	r24, 7
    21e8:	90 95       	com	r25
    21ea:	08 95       	ret

000021ec <strnlen_P>:
    21ec:	fc 01       	movw	r30, r24
    21ee:	05 90       	lpm	r0, Z+
    21f0:	61 50       	subi	r22, 0x01	; 1
    21f2:	70 40       	sbci	r23, 0x00	; 0
    21f4:	01 10       	cpse	r0, r1
    21f6:	d8 f7       	brcc	.-10     	; 0x21ee <strnlen_P+0x2>
    21f8:	80 95       	com	r24
    21fa:	90 95       	com	r25
    21fc:	8e 0f       	add	r24, r30
    21fe:	9f 1f       	adc	r25, r31
    2200:	08 95       	ret

00002202 <strncmp>:
    2202:	fb 01       	movw	r30, r22
    2204:	dc 01       	movw	r26, r24
    2206:	41 50       	subi	r20, 0x01	; 1
    2208:	50 40       	sbci	r21, 0x00	; 0
    220a:	30 f0       	brcs	.+12     	; 0x2218 <strncmp+0x16>
    220c:	8d 91       	ld	r24, X+
    220e:	01 90       	ld	r0, Z+
    2210:	80 19       	sub	r24, r0
    2212:	19 f4       	brne	.+6      	; 0x221a <strncmp+0x18>
    2214:	00 20       	and	r0, r0
    2216:	b9 f7       	brne	.-18     	; 0x2206 <strncmp+0x4>
    2218:	88 1b       	sub	r24, r24
    221a:	99 0b       	sbc	r25, r25
    221c:	08 95       	ret

0000221e <strnlen>:
    221e:	fc 01       	movw	r30, r24
    2220:	61 50       	subi	r22, 0x01	; 1
    2222:	70 40       	sbci	r23, 0x00	; 0
    2224:	01 90       	ld	r0, Z+
    2226:	01 10       	cpse	r0, r1
    2228:	d8 f7       	brcc	.-10     	; 0x2220 <strnlen+0x2>
    222a:	80 95       	com	r24
    222c:	90 95       	com	r25
    222e:	8e 0f       	add	r24, r30
    2230:	9f 1f       	adc	r25, r31
    2232:	08 95       	ret

00002234 <fputc>:
    2234:	0f 93       	push	r16
    2236:	1f 93       	push	r17
    2238:	cf 93       	push	r28
    223a:	df 93       	push	r29
    223c:	fb 01       	movw	r30, r22
    223e:	23 81       	ldd	r18, Z+3	; 0x03
    2240:	21 fd       	sbrc	r18, 1
    2242:	03 c0       	rjmp	.+6      	; 0x224a <fputc+0x16>
    2244:	8f ef       	ldi	r24, 0xFF	; 255
    2246:	9f ef       	ldi	r25, 0xFF	; 255
    2248:	2c c0       	rjmp	.+88     	; 0x22a2 <fputc+0x6e>
    224a:	22 ff       	sbrs	r18, 2
    224c:	16 c0       	rjmp	.+44     	; 0x227a <fputc+0x46>
    224e:	46 81       	ldd	r20, Z+6	; 0x06
    2250:	57 81       	ldd	r21, Z+7	; 0x07
    2252:	24 81       	ldd	r18, Z+4	; 0x04
    2254:	35 81       	ldd	r19, Z+5	; 0x05
    2256:	42 17       	cp	r20, r18
    2258:	53 07       	cpc	r21, r19
    225a:	44 f4       	brge	.+16     	; 0x226c <fputc+0x38>
    225c:	a0 81       	ld	r26, Z
    225e:	b1 81       	ldd	r27, Z+1	; 0x01
    2260:	9d 01       	movw	r18, r26
    2262:	2f 5f       	subi	r18, 0xFF	; 255
    2264:	3f 4f       	sbci	r19, 0xFF	; 255
    2266:	31 83       	std	Z+1, r19	; 0x01
    2268:	20 83       	st	Z, r18
    226a:	8c 93       	st	X, r24
    226c:	26 81       	ldd	r18, Z+6	; 0x06
    226e:	37 81       	ldd	r19, Z+7	; 0x07
    2270:	2f 5f       	subi	r18, 0xFF	; 255
    2272:	3f 4f       	sbci	r19, 0xFF	; 255
    2274:	37 83       	std	Z+7, r19	; 0x07
    2276:	26 83       	std	Z+6, r18	; 0x06
    2278:	14 c0       	rjmp	.+40     	; 0x22a2 <fputc+0x6e>
    227a:	8b 01       	movw	r16, r22
    227c:	ec 01       	movw	r28, r24
    227e:	fb 01       	movw	r30, r22
    2280:	00 84       	ldd	r0, Z+8	; 0x08
    2282:	f1 85       	ldd	r31, Z+9	; 0x09
    2284:	e0 2d       	mov	r30, r0
    2286:	09 95       	icall
    2288:	89 2b       	or	r24, r25
    228a:	e1 f6       	brne	.-72     	; 0x2244 <fputc+0x10>
    228c:	d8 01       	movw	r26, r16
    228e:	16 96       	adiw	r26, 0x06	; 6
    2290:	8d 91       	ld	r24, X+
    2292:	9c 91       	ld	r25, X
    2294:	17 97       	sbiw	r26, 0x07	; 7
    2296:	01 96       	adiw	r24, 0x01	; 1
    2298:	17 96       	adiw	r26, 0x07	; 7
    229a:	9c 93       	st	X, r25
    229c:	8e 93       	st	-X, r24
    229e:	16 97       	sbiw	r26, 0x06	; 6
    22a0:	ce 01       	movw	r24, r28
    22a2:	df 91       	pop	r29
    22a4:	cf 91       	pop	r28
    22a6:	1f 91       	pop	r17
    22a8:	0f 91       	pop	r16
    22aa:	08 95       	ret

000022ac <__ultoa_invert>:
    22ac:	fa 01       	movw	r30, r20
    22ae:	aa 27       	eor	r26, r26
    22b0:	28 30       	cpi	r18, 0x08	; 8
    22b2:	51 f1       	breq	.+84     	; 0x2308 <__ultoa_invert+0x5c>
    22b4:	20 31       	cpi	r18, 0x10	; 16
    22b6:	81 f1       	breq	.+96     	; 0x2318 <__ultoa_invert+0x6c>
    22b8:	e8 94       	clt
    22ba:	6f 93       	push	r22
    22bc:	6e 7f       	andi	r22, 0xFE	; 254
    22be:	6e 5f       	subi	r22, 0xFE	; 254
    22c0:	7f 4f       	sbci	r23, 0xFF	; 255
    22c2:	8f 4f       	sbci	r24, 0xFF	; 255
    22c4:	9f 4f       	sbci	r25, 0xFF	; 255
    22c6:	af 4f       	sbci	r26, 0xFF	; 255
    22c8:	b1 e0       	ldi	r27, 0x01	; 1
    22ca:	3e d0       	rcall	.+124    	; 0x2348 <__ultoa_invert+0x9c>
    22cc:	b4 e0       	ldi	r27, 0x04	; 4
    22ce:	3c d0       	rcall	.+120    	; 0x2348 <__ultoa_invert+0x9c>
    22d0:	67 0f       	add	r22, r23
    22d2:	78 1f       	adc	r23, r24
    22d4:	89 1f       	adc	r24, r25
    22d6:	9a 1f       	adc	r25, r26
    22d8:	a1 1d       	adc	r26, r1
    22da:	68 0f       	add	r22, r24
    22dc:	79 1f       	adc	r23, r25
    22de:	8a 1f       	adc	r24, r26
    22e0:	91 1d       	adc	r25, r1
    22e2:	a1 1d       	adc	r26, r1
    22e4:	6a 0f       	add	r22, r26
    22e6:	71 1d       	adc	r23, r1
    22e8:	81 1d       	adc	r24, r1
    22ea:	91 1d       	adc	r25, r1
    22ec:	a1 1d       	adc	r26, r1
    22ee:	20 d0       	rcall	.+64     	; 0x2330 <__ultoa_invert+0x84>
    22f0:	09 f4       	brne	.+2      	; 0x22f4 <__ultoa_invert+0x48>
    22f2:	68 94       	set
    22f4:	3f 91       	pop	r19
    22f6:	2a e0       	ldi	r18, 0x0A	; 10
    22f8:	26 9f       	mul	r18, r22
    22fa:	11 24       	eor	r1, r1
    22fc:	30 19       	sub	r19, r0
    22fe:	30 5d       	subi	r19, 0xD0	; 208
    2300:	31 93       	st	Z+, r19
    2302:	de f6       	brtc	.-74     	; 0x22ba <__ultoa_invert+0xe>
    2304:	cf 01       	movw	r24, r30
    2306:	08 95       	ret
    2308:	46 2f       	mov	r20, r22
    230a:	47 70       	andi	r20, 0x07	; 7
    230c:	40 5d       	subi	r20, 0xD0	; 208
    230e:	41 93       	st	Z+, r20
    2310:	b3 e0       	ldi	r27, 0x03	; 3
    2312:	0f d0       	rcall	.+30     	; 0x2332 <__ultoa_invert+0x86>
    2314:	c9 f7       	brne	.-14     	; 0x2308 <__ultoa_invert+0x5c>
    2316:	f6 cf       	rjmp	.-20     	; 0x2304 <__ultoa_invert+0x58>
    2318:	46 2f       	mov	r20, r22
    231a:	4f 70       	andi	r20, 0x0F	; 15
    231c:	40 5d       	subi	r20, 0xD0	; 208
    231e:	4a 33       	cpi	r20, 0x3A	; 58
    2320:	18 f0       	brcs	.+6      	; 0x2328 <__ultoa_invert+0x7c>
    2322:	49 5d       	subi	r20, 0xD9	; 217
    2324:	31 fd       	sbrc	r19, 1
    2326:	40 52       	subi	r20, 0x20	; 32
    2328:	41 93       	st	Z+, r20
    232a:	02 d0       	rcall	.+4      	; 0x2330 <__ultoa_invert+0x84>
    232c:	a9 f7       	brne	.-22     	; 0x2318 <__ultoa_invert+0x6c>
    232e:	ea cf       	rjmp	.-44     	; 0x2304 <__ultoa_invert+0x58>
    2330:	b4 e0       	ldi	r27, 0x04	; 4
    2332:	a6 95       	lsr	r26
    2334:	97 95       	ror	r25
    2336:	87 95       	ror	r24
    2338:	77 95       	ror	r23
    233a:	67 95       	ror	r22
    233c:	ba 95       	dec	r27
    233e:	c9 f7       	brne	.-14     	; 0x2332 <__ultoa_invert+0x86>
    2340:	00 97       	sbiw	r24, 0x00	; 0
    2342:	61 05       	cpc	r22, r1
    2344:	71 05       	cpc	r23, r1
    2346:	08 95       	ret
    2348:	9b 01       	movw	r18, r22
    234a:	ac 01       	movw	r20, r24
    234c:	0a 2e       	mov	r0, r26
    234e:	06 94       	lsr	r0
    2350:	57 95       	ror	r21
    2352:	47 95       	ror	r20
    2354:	37 95       	ror	r19
    2356:	27 95       	ror	r18
    2358:	ba 95       	dec	r27
    235a:	c9 f7       	brne	.-14     	; 0x234e <__ultoa_invert+0xa2>
    235c:	62 0f       	add	r22, r18
    235e:	73 1f       	adc	r23, r19
    2360:	84 1f       	adc	r24, r20
    2362:	95 1f       	adc	r25, r21
    2364:	a0 1d       	adc	r26, r0
    2366:	08 95       	ret

00002368 <_exit>:
    2368:	f8 94       	cli

0000236a <__stop_program>:
    236a:	ff cf       	rjmp	.-2      	; 0x236a <__stop_program>
