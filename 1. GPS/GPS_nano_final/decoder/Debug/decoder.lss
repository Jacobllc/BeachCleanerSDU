
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000025ec  00002680  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000025ec  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000063  00800112  00800112  00002692  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002692  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00002730  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000201f  00000000  00000000  000028f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f5b  00000000  00000000  00004917  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f9d  00000000  00000000  00005872  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000053c  00000000  00000000  00006810  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007be  00000000  00000000  00006d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001229  00000000  00000000  0000750a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00008733  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_1>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <__vector_18>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 24 05 	jmp	0xa48	; 0xa48 <__vector_24>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 05       	cpc	r19, r15
      96:	a8 4c       	sbci	r26, 0xC8	; 200
      98:	cd b2       	in	r12, 0x1d	; 29
      9a:	d4 4e       	sbci	r29, 0xE4	; 228
      9c:	b9 38       	cpi	r27, 0x89	; 137
      9e:	36 a9       	ldd	r19, Z+54	; 0x36
      a0:	02 0c       	add	r0, r2
      a2:	50 b9       	out	0x00, r21	; 0
      a4:	91 86       	std	Z+9, r9	; 0x09
      a6:	88 08       	sbc	r8, r8
      a8:	3c a6       	std	Y+44, r3	; 0x2c
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	2a be       	out	0x3a, r2	; 58
      ae:	00 00       	nop
      b0:	00 80       	ld	r0, Z
      b2:	3f 00       	.word	0x003f	; ????

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ec ee       	ldi	r30, 0xEC	; 236
     1ca:	f5 e2       	ldi	r31, 0x25	; 37
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a2 31       	cpi	r26, 0x12	; 18
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a2 e1       	ldi	r26, 0x12	; 18
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a5 37       	cpi	r26, 0x75	; 117
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 71 05 	call	0xae2	; 0xae2 <main>
     1ec:	0c 94 f4 12 	jmp	0x25e8	; 0x25e8 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <GPS_init>:

			usart_send('\r');
			usart_send('\n');
	}
	print_flag=1;
}
     1f4:	52 98       	cbi	0x0a, 2	; 10
     1f6:	8b b1       	in	r24, 0x0b	; 11
     1f8:	8b b9       	out	0x0b, r24	; 11
     1fa:	e8 9a       	sbi	0x1d, 0	; 29
     1fc:	e9 e6       	ldi	r30, 0x69	; 105
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	83 60       	ori	r24, 0x03	; 3
     204:	80 83       	st	Z, r24
     206:	78 94       	sei
     208:	08 95       	ret

0000020a <get_gps_message>:
     20a:	dc 01       	movw	r26, r24
     20c:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <Gps_data+0x51>
     210:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <Gps_data+0x52>
     214:	81 30       	cpi	r24, 0x01	; 1
     216:	91 05       	cpc	r25, r1
     218:	61 f4       	brne	.+24     	; 0x232 <get_gps_message+0x28>
     21a:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <Gps_data+0x52>
     21e:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <Gps_data+0x51>
     222:	20 e5       	ldi	r18, 0x50	; 80
     224:	e7 e1       	ldi	r30, 0x17	; 23
     226:	f1 e0       	ldi	r31, 0x01	; 1
     228:	01 90       	ld	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	2a 95       	dec	r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <get_gps_message+0x1e>
     230:	08 95       	ret
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	08 95       	ret

00000238 <stop_gps_sample>:
     238:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <process>
     23c:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <print_flag>
     240:	08 95       	ret

00000242 <read_gps_data>:
     242:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <process>
     246:	81 30       	cpi	r24, 0x01	; 1
     248:	19 f5       	brne	.+70     	; 0x290 <read_gps_data+0x4e>
     24a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <print_flag>
     24e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     252:	8a 30       	cpi	r24, 0x0A	; 10
     254:	81 f4       	brne	.+32     	; 0x276 <read_gps_data+0x34>
     256:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <byte>
     25a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <Gps_data>
     25e:	8f ef       	ldi	r24, 0xFF	; 255
     260:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <byte>
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 68 01 	sts	0x0168, r25	; 0x800168 <Gps_data+0x52>
     26c:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <Gps_data+0x51>
     270:	0e 94 1c 01 	call	0x238	; 0x238 <stop_gps_sample>
     274:	08 95       	ret
     276:	e0 91 6a 01 	lds	r30, 0x016A	; 0x80016a <byte>
     27a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	ea 5e       	subi	r30, 0xEA	; 234
     282:	fe 4f       	sbci	r31, 0xFE	; 254
     284:	81 83       	std	Z+1, r24	; 0x01
     286:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <byte>
     28a:	8f 5f       	subi	r24, 0xFF	; 255
     28c:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <byte>
     290:	08 95       	ret

00000292 <__vector_1>:


ISR(INT0_vect) //Interrupt every data package start "Blue light" 
{
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	8f 93       	push	r24
	process=1;
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <process>
	byte=-1;
     2a4:	8f ef       	ldi	r24, 0xFF	; 255
     2a6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <byte>
}
     2aa:	8f 91       	pop	r24
     2ac:	0f 90       	pop	r0
     2ae:	0f be       	out	0x3f, r0	; 63
     2b0:	0f 90       	pop	r0
     2b2:	1f 90       	pop	r1
     2b4:	18 95       	reti

000002b6 <dist_to_wp>:
	float rad;
	rad = ((deg * PI)/180.0);
	return rad;
}

void dist_to_wp(struct DATA *GPS_Data, coor_t WP){
     2b6:	2f 92       	push	r2
     2b8:	3f 92       	push	r3
     2ba:	4f 92       	push	r4
     2bc:	5f 92       	push	r5
     2be:	6f 92       	push	r6
     2c0:	7f 92       	push	r7
     2c2:	8f 92       	push	r8
     2c4:	9f 92       	push	r9
     2c6:	af 92       	push	r10
     2c8:	bf 92       	push	r11
     2ca:	cf 92       	push	r12
     2cc:	df 92       	push	r13
     2ce:	ef 92       	push	r14
     2d0:	ff 92       	push	r15
     2d2:	0f 93       	push	r16
     2d4:	1f 93       	push	r17
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	64 97       	sbiw	r28, 0x14	; 20
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	8c 01       	movw	r16, r24
     2ec:	89 82       	std	Y+1, r8	; 0x01
     2ee:	9a 82       	std	Y+2, r9	; 0x02
     2f0:	ab 82       	std	Y+3, r10	; 0x03
     2f2:	bc 82       	std	Y+4, r11	; 0x04
     2f4:	cd 82       	std	Y+5, r12	; 0x05
     2f6:	de 82       	std	Y+6, r13	; 0x06
     2f8:	4d 87       	std	Y+13, r20	; 0x0d
     2fa:	5e 87       	std	Y+14, r21	; 0x0e

	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
     2fc:	2d 80       	ldd	r2, Y+5	; 0x05
     2fe:	3e 80       	ldd	r3, Y+6	; 0x06
     300:	fc 01       	movw	r30, r24
     302:	82 85       	ldd	r24, Z+10	; 0x0a
     304:	93 85       	ldd	r25, Z+11	; 0x0b
     306:	28 1a       	sub	r2, r24
     308:	39 0a       	sbc	r3, r25
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL )); 
     30a:	6d 85       	ldd	r22, Y+13	; 0x0d
     30c:	7e 85       	ldd	r23, Y+14	; 0x0e
     30e:	81 8d       	ldd	r24, Z+25	; 0x19
     310:	92 8d       	ldd	r25, Z+26	; 0x1a
     312:	3b 01       	movw	r6, r22
     314:	68 1a       	sub	r6, r24
     316:	79 0a       	sbc	r7, r25
	
	//converting a b to dist in meters using formula for 1deg in m:
	if(first_dist==0){
     318:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <first_dist>
     31c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <first_dist+0x1>
     320:	89 2b       	or	r24, r25
     322:	09 f0       	breq	.+2      	; 0x326 <dist_to_wp+0x70>
     324:	8a c0       	rjmp	.+276    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     326:	c9 80       	ldd	r12, Y+1	; 0x01
     328:	da 80       	ldd	r13, Y+2	; 0x02
     32a:	eb 80       	ldd	r14, Y+3	; 0x03
     32c:	fc 80       	ldd	r15, Y+4	; 0x04
	m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     32e:	2b ed       	ldi	r18, 0xDB	; 219
     330:	3f e0       	ldi	r19, 0x0F	; 15
     332:	49 e4       	ldi	r20, 0x49	; 73
     334:	50 e4       	ldi	r21, 0x40	; 64
     336:	c7 01       	movw	r24, r14
     338:	b6 01       	movw	r22, r12
     33a:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	30 e0       	ldi	r19, 0x00	; 0
     342:	44 e3       	ldi	r20, 0x34	; 52
     344:	53 e4       	ldi	r21, 0x43	; 67
     346:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     34a:	0e 94 b4 0a 	call	0x1568	; 0x1568 <cos>
     34e:	69 8b       	std	Y+17, r22	; 0x11
     350:	7a 8b       	std	Y+18, r23	; 0x12
     352:	8b 8b       	std	Y+19, r24	; 0x13
     354:	9c 8b       	std	Y+20, r25	; 0x14
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	40 e4       	ldi	r20, 0x40	; 64
     35c:	50 e4       	ldi	r21, 0x40	; 64
     35e:	c7 01       	movw	r24, r14
     360:	b6 01       	movw	r22, r12
     362:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     366:	2b ed       	ldi	r18, 0xDB	; 219
     368:	3f e0       	ldi	r19, 0x0F	; 15
     36a:	49 e4       	ldi	r20, 0x49	; 73
     36c:	50 e4       	ldi	r21, 0x40	; 64
     36e:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	44 e3       	ldi	r20, 0x34	; 52
     378:	53 e4       	ldi	r21, 0x43	; 67
     37a:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     37e:	0e 94 b4 0a 	call	0x1568	; 0x1568 <cos>
     382:	4b 01       	movw	r8, r22
     384:	5c 01       	movw	r10, r24
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	40 ea       	ldi	r20, 0xA0	; 160
     38c:	50 e4       	ldi	r21, 0x40	; 64
     38e:	c7 01       	movw	r24, r14
     390:	b6 01       	movw	r22, r12
     392:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     396:	2b ed       	ldi	r18, 0xDB	; 219
     398:	3f e0       	ldi	r19, 0x0F	; 15
     39a:	49 e4       	ldi	r20, 0x49	; 73
     39c:	50 e4       	ldi	r21, 0x40	; 64
     39e:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	44 e3       	ldi	r20, 0x34	; 52
     3a8:	53 e4       	ldi	r21, 0x43	; 67
     3aa:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     3ae:	0e 94 b4 0a 	call	0x1568	; 0x1568 <cos>
     3b2:	6b 01       	movw	r12, r22
     3b4:	7c 01       	movw	r14, r24
     3b6:	25 e6       	ldi	r18, 0x65	; 101
     3b8:	33 ed       	ldi	r19, 0xD3	; 211
     3ba:	4e ed       	ldi	r20, 0xDE	; 222
     3bc:	52 e4       	ldi	r21, 0x42	; 66
     3be:	69 89       	ldd	r22, Y+17	; 0x11
     3c0:	7a 89       	ldd	r23, Y+18	; 0x12
     3c2:	8b 89       	ldd	r24, Y+19	; 0x13
     3c4:	9c 89       	ldd	r25, Y+20	; 0x14
     3c6:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     3ca:	69 8b       	std	Y+17, r22	; 0x11
     3cc:	7a 8b       	std	Y+18, r23	; 0x12
     3ce:	8b 8b       	std	Y+19, r24	; 0x13
     3d0:	9c 8b       	std	Y+20, r25	; 0x14
     3d2:	2e ee       	ldi	r18, 0xEE	; 238
     3d4:	3c e7       	ldi	r19, 0x7C	; 124
     3d6:	4f eb       	ldi	r20, 0xBF	; 191
     3d8:	5d e3       	ldi	r21, 0x3D	; 61
     3da:	c5 01       	movw	r24, r10
     3dc:	b4 01       	movw	r22, r8
     3de:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     3e2:	9b 01       	movw	r18, r22
     3e4:	ac 01       	movw	r20, r24
     3e6:	69 89       	ldd	r22, Y+17	; 0x11
     3e8:	7a 89       	ldd	r23, Y+18	; 0x12
     3ea:	8b 89       	ldd	r24, Y+19	; 0x13
     3ec:	9c 89       	ldd	r25, Y+20	; 0x14
     3ee:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <__subsf3>
     3f2:	4b 01       	movw	r8, r22
     3f4:	5c 01       	movw	r10, r24
     3f6:	22 e8       	ldi	r18, 0x82	; 130
     3f8:	38 ea       	ldi	r19, 0xA8	; 168
     3fa:	4b ef       	ldi	r20, 0xFB	; 251
     3fc:	58 e3       	ldi	r21, 0x38	; 56
     3fe:	c7 01       	movw	r24, r14
     400:	b6 01       	movw	r22, r12
     402:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     406:	9b 01       	movw	r18, r22
     408:	ac 01       	movw	r20, r24
     40a:	c5 01       	movw	r24, r10
     40c:	b4 01       	movw	r22, r8
     40e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     412:	20 e0       	ldi	r18, 0x00	; 0
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	4a e7       	ldi	r20, 0x7A	; 122
     418:	54 e4       	ldi	r21, 0x44	; 68
     41a:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     41e:	60 93 6c 01 	sts	0x016C, r22	; 0x80016c <m_pr_deg_lon>
     422:	70 93 6d 01 	sts	0x016D, r23	; 0x80016d <m_pr_deg_lon+0x1>
     426:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <m_pr_deg_lon+0x2>
     42a:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <m_pr_deg_lon+0x3>
	first_dist++;
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <first_dist+0x1>
     436:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <first_dist>
	}
	
	float c = a * m_pr_deg_lat;
     43a:	b1 01       	movw	r22, r2
     43c:	33 0c       	add	r3, r3
     43e:	88 0b       	sbc	r24, r24
     440:	99 0b       	sbc	r25, r25
     442:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     446:	23 e7       	ldi	r18, 0x73	; 115
     448:	3e e0       	ldi	r19, 0x0E	; 14
     44a:	49 ed       	ldi	r20, 0xD9	; 217
     44c:	57 e4       	ldi	r21, 0x47	; 71
     44e:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     452:	4b 01       	movw	r8, r22
     454:	5c 01       	movw	r10, r24
	float d = b * m_pr_deg_lon;
     456:	b3 01       	movw	r22, r6
     458:	77 0c       	add	r7, r7
     45a:	88 0b       	sbc	r24, r24
     45c:	99 0b       	sbc	r25, r25
     45e:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     462:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <m_pr_deg_lon>
     466:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <m_pr_deg_lon+0x1>
     46a:	40 91 6e 01 	lds	r20, 0x016E	; 0x80016e <m_pr_deg_lon+0x2>
     46e:	50 91 6f 01 	lds	r21, 0x016F	; 0x80016f <m_pr_deg_lon+0x3>
     472:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     476:	6b 01       	movw	r12, r22
     478:	7c 01       	movw	r14, r24
	
	//finding dist between pos and wp
	float dist = (sqrt(pow(c,2) + pow(d,2)))/1000 ;
     47a:	a5 01       	movw	r20, r10
     47c:	94 01       	movw	r18, r8
     47e:	c5 01       	movw	r24, r10
     480:	b4 01       	movw	r22, r8
     482:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     486:	4b 01       	movw	r8, r22
     488:	5c 01       	movw	r10, r24
     48a:	a7 01       	movw	r20, r14
     48c:	96 01       	movw	r18, r12
     48e:	c7 01       	movw	r24, r14
     490:	b6 01       	movw	r22, r12
     492:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     496:	9b 01       	movw	r18, r22
     498:	ac 01       	movw	r20, r24
     49a:	c5 01       	movw	r24, r10
     49c:	b4 01       	movw	r22, r8
     49e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     4a2:	0e 94 f9 0c 	call	0x19f2	; 0x19f2 <sqrt>
	
	GPS_Data->dist_wp = dist; 
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	30 e0       	ldi	r19, 0x00	; 0
     4aa:	4a e7       	ldi	r20, 0x7A	; 122
     4ac:	54 e4       	ldi	r21, 0x44	; 68
     4ae:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     4b2:	f8 01       	movw	r30, r16
     4b4:	60 a7       	std	Z+40, r22	; 0x28
     4b6:	71 a7       	std	Z+41, r23	; 0x29
     4b8:	82 a7       	std	Z+42, r24	; 0x2a
     4ba:	93 a7       	std	Z+43, r25	; 0x2b
}
     4bc:	64 96       	adiw	r28, 0x14	; 20
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	ff 90       	pop	r15
     4d2:	ef 90       	pop	r14
     4d4:	df 90       	pop	r13
     4d6:	cf 90       	pop	r12
     4d8:	bf 90       	pop	r11
     4da:	af 90       	pop	r10
     4dc:	9f 90       	pop	r9
     4de:	8f 90       	pop	r8
     4e0:	7f 90       	pop	r7
     4e2:	6f 90       	pop	r6
     4e4:	5f 90       	pop	r5
     4e6:	4f 90       	pop	r4
     4e8:	3f 90       	pop	r3
     4ea:	2f 90       	pop	r2
     4ec:	08 95       	ret

000004ee <bearing_to_wp>:

void bearing_to_wp(struct DATA *GPS_Data, coor_t WP){
     4ee:	2f 92       	push	r2
     4f0:	3f 92       	push	r3
     4f2:	4f 92       	push	r4
     4f4:	5f 92       	push	r5
     4f6:	6f 92       	push	r6
     4f8:	7f 92       	push	r7
     4fa:	8f 92       	push	r8
     4fc:	9f 92       	push	r9
     4fe:	af 92       	push	r10
     500:	bf 92       	push	r11
     502:	cf 92       	push	r12
     504:	df 92       	push	r13
     506:	ef 92       	push	r14
     508:	ff 92       	push	r15
     50a:	0f 93       	push	r16
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	6c 97       	sbiw	r28, 0x1c	; 28
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	cd bf       	out	0x3d, r28	; 61
     522:	8c 01       	movw	r16, r24
     524:	89 82       	std	Y+1, r8	; 0x01
     526:	9a 82       	std	Y+2, r9	; 0x02
     528:	ab 82       	std	Y+3, r10	; 0x03
     52a:	bc 82       	std	Y+4, r11	; 0x04
     52c:	cd 82       	std	Y+5, r12	; 0x05
     52e:	de 82       	std	Y+6, r13	; 0x06
     530:	4d 87       	std	Y+13, r20	; 0x0d
     532:	5e 87       	std	Y+14, r21	; 0x0e
	
	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
     534:	2d 80       	ldd	r2, Y+5	; 0x05
     536:	3e 80       	ldd	r3, Y+6	; 0x06
     538:	fc 01       	movw	r30, r24
     53a:	82 85       	ldd	r24, Z+10	; 0x0a
     53c:	93 85       	ldd	r25, Z+11	; 0x0b
     53e:	28 1a       	sub	r2, r24
     540:	39 0a       	sbc	r3, r25
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL ));
     542:	6d 85       	ldd	r22, Y+13	; 0x0d
     544:	7e 85       	ldd	r23, Y+14	; 0x0e
     546:	81 8d       	ldd	r24, Z+25	; 0x19
     548:	92 8d       	ldd	r25, Z+26	; 0x1a
     54a:	5b 01       	movw	r10, r22
     54c:	a8 1a       	sub	r10, r24
     54e:	b9 0a       	sbc	r11, r25
	
	//converting a b to dist in meters using formula for 1deg in m:
	if(first_bearing==0){
     550:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
     554:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
     558:	89 2b       	or	r24, r25
     55a:	09 f0       	breq	.+2      	; 0x55e <bearing_to_wp+0x70>
     55c:	8e c0       	rjmp	.+284    	; 0x67a <bearing_to_wp+0x18c>
     55e:	c9 80       	ldd	r12, Y+1	; 0x01
     560:	da 80       	ldd	r13, Y+2	; 0x02
     562:	eb 80       	ldd	r14, Y+3	; 0x03
     564:	fc 80       	ldd	r15, Y+4	; 0x04
	m_pr_deg_lon = ((111.41288*cos(deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     566:	2b ed       	ldi	r18, 0xDB	; 219
     568:	3f e0       	ldi	r19, 0x0F	; 15
     56a:	49 e4       	ldi	r20, 0x49	; 73
     56c:	50 e4       	ldi	r21, 0x40	; 64
     56e:	c7 01       	movw	r24, r14
     570:	b6 01       	movw	r22, r12
     572:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	44 e3       	ldi	r20, 0x34	; 52
     57c:	53 e4       	ldi	r21, 0x43	; 67
     57e:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     582:	0e 94 b4 0a 	call	0x1568	; 0x1568 <cos>
     586:	69 8b       	std	Y+17, r22	; 0x11
     588:	7a 8b       	std	Y+18, r23	; 0x12
     58a:	8b 8b       	std	Y+19, r24	; 0x13
     58c:	9c 8b       	std	Y+20, r25	; 0x14
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	40 e4       	ldi	r20, 0x40	; 64
     594:	50 e4       	ldi	r21, 0x40	; 64
     596:	c7 01       	movw	r24, r14
     598:	b6 01       	movw	r22, r12
     59a:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     59e:	2b ed       	ldi	r18, 0xDB	; 219
     5a0:	3f e0       	ldi	r19, 0x0F	; 15
     5a2:	49 e4       	ldi	r20, 0x49	; 73
     5a4:	50 e4       	ldi	r21, 0x40	; 64
     5a6:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     5aa:	20 e0       	ldi	r18, 0x00	; 0
     5ac:	30 e0       	ldi	r19, 0x00	; 0
     5ae:	44 e3       	ldi	r20, 0x34	; 52
     5b0:	53 e4       	ldi	r21, 0x43	; 67
     5b2:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     5b6:	0e 94 b4 0a 	call	0x1568	; 0x1568 <cos>
     5ba:	6d 8b       	std	Y+21, r22	; 0x15
     5bc:	7e 8b       	std	Y+22, r23	; 0x16
     5be:	8f 8b       	std	Y+23, r24	; 0x17
     5c0:	98 8f       	std	Y+24, r25	; 0x18
     5c2:	20 e0       	ldi	r18, 0x00	; 0
     5c4:	30 e0       	ldi	r19, 0x00	; 0
     5c6:	40 ea       	ldi	r20, 0xA0	; 160
     5c8:	50 e4       	ldi	r21, 0x40	; 64
     5ca:	c7 01       	movw	r24, r14
     5cc:	b6 01       	movw	r22, r12
     5ce:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     5d2:	2b ed       	ldi	r18, 0xDB	; 219
     5d4:	3f e0       	ldi	r19, 0x0F	; 15
     5d6:	49 e4       	ldi	r20, 0x49	; 73
     5d8:	50 e4       	ldi	r21, 0x40	; 64
     5da:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     5de:	20 e0       	ldi	r18, 0x00	; 0
     5e0:	30 e0       	ldi	r19, 0x00	; 0
     5e2:	44 e3       	ldi	r20, 0x34	; 52
     5e4:	53 e4       	ldi	r21, 0x43	; 67
     5e6:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     5ea:	0e 94 b4 0a 	call	0x1568	; 0x1568 <cos>
     5ee:	69 8f       	std	Y+25, r22	; 0x19
     5f0:	7a 8f       	std	Y+26, r23	; 0x1a
     5f2:	8b 8f       	std	Y+27, r24	; 0x1b
     5f4:	9c 8f       	std	Y+28, r25	; 0x1c
     5f6:	25 e6       	ldi	r18, 0x65	; 101
     5f8:	33 ed       	ldi	r19, 0xD3	; 211
     5fa:	4e ed       	ldi	r20, 0xDE	; 222
     5fc:	52 e4       	ldi	r21, 0x42	; 66
     5fe:	69 89       	ldd	r22, Y+17	; 0x11
     600:	7a 89       	ldd	r23, Y+18	; 0x12
     602:	8b 89       	ldd	r24, Y+19	; 0x13
     604:	9c 89       	ldd	r25, Y+20	; 0x14
     606:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     60a:	6b 01       	movw	r12, r22
     60c:	7c 01       	movw	r14, r24
     60e:	2e ee       	ldi	r18, 0xEE	; 238
     610:	3c e7       	ldi	r19, 0x7C	; 124
     612:	4f eb       	ldi	r20, 0xBF	; 191
     614:	5d e3       	ldi	r21, 0x3D	; 61
     616:	6d 89       	ldd	r22, Y+21	; 0x15
     618:	7e 89       	ldd	r23, Y+22	; 0x16
     61a:	8f 89       	ldd	r24, Y+23	; 0x17
     61c:	98 8d       	ldd	r25, Y+24	; 0x18
     61e:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     622:	9b 01       	movw	r18, r22
     624:	ac 01       	movw	r20, r24
     626:	c7 01       	movw	r24, r14
     628:	b6 01       	movw	r22, r12
     62a:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <__subsf3>
     62e:	6b 01       	movw	r12, r22
     630:	7c 01       	movw	r14, r24
     632:	22 e8       	ldi	r18, 0x82	; 130
     634:	38 ea       	ldi	r19, 0xA8	; 168
     636:	4b ef       	ldi	r20, 0xFB	; 251
     638:	58 e3       	ldi	r21, 0x38	; 56
     63a:	69 8d       	ldd	r22, Y+25	; 0x19
     63c:	7a 8d       	ldd	r23, Y+26	; 0x1a
     63e:	8b 8d       	ldd	r24, Y+27	; 0x1b
     640:	9c 8d       	ldd	r25, Y+28	; 0x1c
     642:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     646:	9b 01       	movw	r18, r22
     648:	ac 01       	movw	r20, r24
     64a:	c7 01       	movw	r24, r14
     64c:	b6 01       	movw	r22, r12
     64e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     652:	20 e0       	ldi	r18, 0x00	; 0
     654:	30 e0       	ldi	r19, 0x00	; 0
     656:	4a e7       	ldi	r20, 0x7A	; 122
     658:	54 e4       	ldi	r21, 0x44	; 68
     65a:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     65e:	60 93 6c 01 	sts	0x016C, r22	; 0x80016c <m_pr_deg_lon>
     662:	70 93 6d 01 	sts	0x016D, r23	; 0x80016d <m_pr_deg_lon+0x1>
     666:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <m_pr_deg_lon+0x2>
     66a:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <m_pr_deg_lon+0x3>
	first_bearing++;
     66e:	81 e0       	ldi	r24, 0x01	; 1
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
     676:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	}
	
	float c = a * m_pr_deg_lat;
     67a:	b1 01       	movw	r22, r2
     67c:	33 0c       	add	r3, r3
     67e:	88 0b       	sbc	r24, r24
     680:	99 0b       	sbc	r25, r25
     682:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     686:	23 e7       	ldi	r18, 0x73	; 115
     688:	3e e0       	ldi	r19, 0x0E	; 14
     68a:	49 ed       	ldi	r20, 0xD9	; 217
     68c:	57 e4       	ldi	r21, 0x47	; 71
     68e:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     692:	6b 01       	movw	r12, r22
     694:	7c 01       	movw	r14, r24
	float d = b * m_pr_deg_lon;
     696:	b5 01       	movw	r22, r10
     698:	bb 0c       	add	r11, r11
     69a:	88 0b       	sbc	r24, r24
     69c:	99 0b       	sbc	r25, r25
     69e:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     6a2:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <m_pr_deg_lon>
     6a6:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <m_pr_deg_lon+0x1>
     6aa:	40 91 6e 01 	lds	r20, 0x016E	; 0x80016e <m_pr_deg_lon+0x2>
     6ae:	50 91 6f 01 	lds	r21, 0x016F	; 0x80016f <m_pr_deg_lon+0x3>
     6b2:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     6b6:	4b 01       	movw	r8, r22
     6b8:	5c 01       	movw	r10, r24
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     6ba:	20 e0       	ldi	r18, 0x00	; 0
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	a9 01       	movw	r20, r18
     6c0:	c7 01       	movw	r24, r14
     6c2:	b6 01       	movw	r22, r12
     6c4:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     6c8:	81 11       	cpse	r24, r1
     6ca:	0a c0       	rjmp	.+20     	; 0x6e0 <bearing_to_wp+0x1f2>
     6cc:	0f 2e       	mov	r0, r31
     6ce:	fd eb       	ldi	r31, 0xBD	; 189
     6d0:	cf 2e       	mov	r12, r31
     6d2:	f7 e3       	ldi	r31, 0x37	; 55
     6d4:	df 2e       	mov	r13, r31
     6d6:	f6 e8       	ldi	r31, 0x86	; 134
     6d8:	ef 2e       	mov	r14, r31
     6da:	f5 e3       	ldi	r31, 0x35	; 53
     6dc:	ff 2e       	mov	r15, r31
     6de:	f0 2d       	mov	r31, r0
	if(d==0){ d=0.000001;};
     6e0:	20 e0       	ldi	r18, 0x00	; 0
     6e2:	30 e0       	ldi	r19, 0x00	; 0
     6e4:	a9 01       	movw	r20, r18
     6e6:	c5 01       	movw	r24, r10
     6e8:	b4 01       	movw	r22, r8
     6ea:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     6ee:	88 23       	and	r24, r24
     6f0:	09 f4       	brne	.+2      	; 0x6f4 <bearing_to_wp+0x206>
     6f2:	b6 c0       	rjmp	.+364    	; 0x860 <bearing_to_wp+0x372>
	
	float angle;
	if(d>0 && c>0){ //1. quadrant
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	a9 01       	movw	r20, r18
     6fa:	c5 01       	movw	r24, r10
     6fc:	b4 01       	movw	r22, r8
     6fe:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     702:	18 16       	cp	r1, r24
     704:	dc f4       	brge	.+54     	; 0x73c <bearing_to_wp+0x24e>
     706:	20 e0       	ldi	r18, 0x00	; 0
     708:	30 e0       	ldi	r19, 0x00	; 0
     70a:	a9 01       	movw	r20, r18
     70c:	c7 01       	movw	r24, r14
     70e:	b6 01       	movw	r22, r12
     710:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     714:	18 16       	cp	r1, r24
     716:	94 f4       	brge	.+36     	; 0x73c <bearing_to_wp+0x24e>
		angle = atan2(d, c);
     718:	a7 01       	movw	r20, r14
     71a:	96 01       	movw	r18, r12
     71c:	c5 01       	movw	r24, r10
     71e:	b4 01       	movw	r22, r8
     720:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <atan2>
     724:	2b 01       	movw	r4, r22
     726:	3c 01       	movw	r6, r24
	}
	if(d<0 && c>0){ //2. quadrant
     728:	20 e0       	ldi	r18, 0x00	; 0
     72a:	30 e0       	ldi	r19, 0x00	; 0
     72c:	a9 01       	movw	r20, r18
     72e:	c5 01       	movw	r24, r10
     730:	b4 01       	movw	r22, r8
     732:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     736:	88 23       	and	r24, r24
     738:	9c f0       	brlt	.+38     	; 0x760 <bearing_to_wp+0x272>
     73a:	21 c0       	rjmp	.+66     	; 0x77e <bearing_to_wp+0x290>
     73c:	20 e0       	ldi	r18, 0x00	; 0
     73e:	30 e0       	ldi	r19, 0x00	; 0
     740:	a9 01       	movw	r20, r18
     742:	c5 01       	movw	r24, r10
     744:	b4 01       	movw	r22, r8
     746:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     74a:	88 23       	and	r24, r24
     74c:	c4 f4       	brge	.+48     	; 0x77e <bearing_to_wp+0x290>
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	a9 01       	movw	r20, r18
     754:	c7 01       	movw	r24, r14
     756:	b6 01       	movw	r22, r12
     758:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     75c:	18 16       	cp	r1, r24
     75e:	c4 f4       	brge	.+48     	; 0x790 <bearing_to_wp+0x2a2>
		angle = atan2(d, c);
     760:	a7 01       	movw	r20, r14
     762:	96 01       	movw	r18, r12
     764:	c5 01       	movw	r24, r10
     766:	b4 01       	movw	r22, r8
     768:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <atan2>
		angle = (angle) + (2*PI);
     76c:	2b ed       	ldi	r18, 0xDB	; 219
     76e:	3f e0       	ldi	r19, 0x0F	; 15
     770:	49 ec       	ldi	r20, 0xC9	; 201
     772:	50 e4       	ldi	r21, 0x40	; 64
     774:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     778:	2b 01       	movw	r4, r22
     77a:	3c 01       	movw	r6, r24
     77c:	09 c0       	rjmp	.+18     	; 0x790 <bearing_to_wp+0x2a2>
	}
	if(d<0 && c<0){ //3. quadrant
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	a9 01       	movw	r20, r18
     784:	c5 01       	movw	r24, r10
     786:	b4 01       	movw	r22, r8
     788:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     78c:	88 23       	and	r24, r24
     78e:	2c f5       	brge	.+74     	; 0x7da <bearing_to_wp+0x2ec>
     790:	20 e0       	ldi	r18, 0x00	; 0
     792:	30 e0       	ldi	r19, 0x00	; 0
     794:	a9 01       	movw	r20, r18
     796:	c7 01       	movw	r24, r14
     798:	b6 01       	movw	r22, r12
     79a:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     79e:	88 23       	and	r24, r24
     7a0:	e4 f4       	brge	.+56     	; 0x7da <bearing_to_wp+0x2ec>
		angle = atan2(d, c);
     7a2:	a7 01       	movw	r20, r14
     7a4:	96 01       	movw	r18, r12
     7a6:	c5 01       	movw	r24, r10
     7a8:	b4 01       	movw	r22, r8
     7aa:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <atan2>
     7ae:	2b 01       	movw	r4, r22
     7b0:	3c 01       	movw	r6, r24
		angle = (angle) + (2*PI);
	}
	if(d>0 && c<0){ //4. quadrant
     7b2:	20 e0       	ldi	r18, 0x00	; 0
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	a9 01       	movw	r20, r18
     7b8:	c5 01       	movw	r24, r10
     7ba:	b4 01       	movw	r22, r8
     7bc:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     7c0:	18 16       	cp	r1, r24
     7c2:	ec f0       	brlt	.+58     	; 0x7fe <bearing_to_wp+0x310>
		angle = atan2(d, c);
		angle = (angle) + (2*PI);
	}
	if(d<0 && c<0){ //3. quadrant
		angle = atan2(d, c);
		angle = (angle) + (2*PI);
     7c4:	2b ed       	ldi	r18, 0xDB	; 219
     7c6:	3f e0       	ldi	r19, 0x0F	; 15
     7c8:	49 ec       	ldi	r20, 0xC9	; 201
     7ca:	50 e4       	ldi	r21, 0x40	; 64
     7cc:	c3 01       	movw	r24, r6
     7ce:	b2 01       	movw	r22, r4
     7d0:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     7d4:	2b 01       	movw	r4, r22
     7d6:	3c 01       	movw	r6, r24
     7d8:	1a c0       	rjmp	.+52     	; 0x80e <bearing_to_wp+0x320>
	}
	if(d>0 && c<0){ //4. quadrant
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	a9 01       	movw	r20, r18
     7e0:	c5 01       	movw	r24, r10
     7e2:	b4 01       	movw	r22, r8
     7e4:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     7e8:	18 16       	cp	r1, r24
     7ea:	8c f4       	brge	.+34     	; 0x80e <bearing_to_wp+0x320>
     7ec:	20 e0       	ldi	r18, 0x00	; 0
     7ee:	30 e0       	ldi	r19, 0x00	; 0
     7f0:	a9 01       	movw	r20, r18
     7f2:	c7 01       	movw	r24, r14
     7f4:	b6 01       	movw	r22, r12
     7f6:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     7fa:	88 23       	and	r24, r24
     7fc:	44 f4       	brge	.+16     	; 0x80e <bearing_to_wp+0x320>
		angle = atan2(d, c);
     7fe:	a7 01       	movw	r20, r14
     800:	96 01       	movw	r18, r12
     802:	c5 01       	movw	r24, r10
     804:	b4 01       	movw	r22, r8
     806:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <atan2>
     80a:	2b 01       	movw	r4, r22
     80c:	3c 01       	movw	r6, r24
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
     80e:	20 e0       	ldi	r18, 0x00	; 0
     810:	30 e0       	ldi	r19, 0x00	; 0
     812:	44 e3       	ldi	r20, 0x34	; 52
     814:	53 e4       	ldi	r21, 0x43	; 67
     816:	c3 01       	movw	r24, r6
     818:	b2 01       	movw	r22, r4
     81a:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     81e:	2b ed       	ldi	r18, 0xDB	; 219
     820:	3f e0       	ldi	r19, 0x0F	; 15
     822:	49 e4       	ldi	r20, 0x49	; 73
     824:	50 e4       	ldi	r21, 0x40	; 64
     826:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     82a:	f8 01       	movw	r30, r16
     82c:	64 a7       	std	Z+44, r22	; 0x2c
     82e:	75 a7       	std	Z+45, r23	; 0x2d
     830:	86 a7       	std	Z+46, r24	; 0x2e
     832:	97 a7       	std	Z+47, r25	; 0x2f
}
     834:	29 c0       	rjmp	.+82     	; 0x888 <bearing_to_wp+0x39a>
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
	
	float angle;
	if(d>0 && c>0){ //1. quadrant
		angle = atan2(d, c);
     836:	a7 01       	movw	r20, r14
     838:	96 01       	movw	r18, r12
     83a:	6d eb       	ldi	r22, 0xBD	; 189
     83c:	77 e3       	ldi	r23, 0x37	; 55
     83e:	86 e8       	ldi	r24, 0x86	; 134
     840:	95 e3       	ldi	r25, 0x35	; 53
     842:	0e 94 50 0a 	call	0x14a0	; 0x14a0 <atan2>
     846:	2b 01       	movw	r4, r22
     848:	3c 01       	movw	r6, r24
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
     84a:	0f 2e       	mov	r0, r31
     84c:	fd eb       	ldi	r31, 0xBD	; 189
     84e:	8f 2e       	mov	r8, r31
     850:	f7 e3       	ldi	r31, 0x37	; 55
     852:	9f 2e       	mov	r9, r31
     854:	f6 e8       	ldi	r31, 0x86	; 134
     856:	af 2e       	mov	r10, r31
     858:	f5 e3       	ldi	r31, 0x35	; 53
     85a:	bf 2e       	mov	r11, r31
     85c:	f0 2d       	mov	r31, r0
     85e:	8f cf       	rjmp	.-226    	; 0x77e <bearing_to_wp+0x290>
	
	float angle;
	if(d>0 && c>0){ //1. quadrant
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	a9 01       	movw	r20, r18
     866:	c7 01       	movw	r24, r14
     868:	b6 01       	movw	r22, r12
     86a:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     86e:	18 16       	cp	r1, r24
     870:	14 f3       	brlt	.-60     	; 0x836 <bearing_to_wp+0x348>
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
     872:	0f 2e       	mov	r0, r31
     874:	fd eb       	ldi	r31, 0xBD	; 189
     876:	8f 2e       	mov	r8, r31
     878:	f7 e3       	ldi	r31, 0x37	; 55
     87a:	9f 2e       	mov	r9, r31
     87c:	f6 e8       	ldi	r31, 0x86	; 134
     87e:	af 2e       	mov	r10, r31
     880:	f5 e3       	ldi	r31, 0x35	; 53
     882:	bf 2e       	mov	r11, r31
     884:	f0 2d       	mov	r31, r0
     886:	5a cf       	rjmp	.-332    	; 0x73c <bearing_to_wp+0x24e>
	if(d>0 && c<0){ //4. quadrant
		angle = atan2(d, c);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
}
     888:	6c 96       	adiw	r28, 0x1c	; 28
     88a:	0f b6       	in	r0, 0x3f	; 63
     88c:	f8 94       	cli
     88e:	de bf       	out	0x3e, r29	; 62
     890:	0f be       	out	0x3f, r0	; 63
     892:	cd bf       	out	0x3d, r28	; 61
     894:	df 91       	pop	r29
     896:	cf 91       	pop	r28
     898:	1f 91       	pop	r17
     89a:	0f 91       	pop	r16
     89c:	ff 90       	pop	r15
     89e:	ef 90       	pop	r14
     8a0:	df 90       	pop	r13
     8a2:	cf 90       	pop	r12
     8a4:	bf 90       	pop	r11
     8a6:	af 90       	pop	r10
     8a8:	9f 90       	pop	r9
     8aa:	8f 90       	pop	r8
     8ac:	7f 90       	pop	r7
     8ae:	6f 90       	pop	r6
     8b0:	5f 90       	pop	r5
     8b2:	4f 90       	pop	r4
     8b4:	3f 90       	pop	r3
     8b6:	2f 90       	pop	r2
     8b8:	08 95       	ret

000008ba <Transmit_dist_bearing_i2C>:

void Transmit_dist_bearing_i2C(struct DATA *GPS_Data)
{
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	ec 01       	movw	r28, r24
		//Convert dist and bearing  
		//Sending dist to DATA struct as long int 
		long dist_send;
		dist_send = (long)((GPS_Data->dist_wp));
		GPS_Data->dist_sendI2C = dist_send; 
     8c0:	68 a5       	ldd	r22, Y+40	; 0x28
     8c2:	79 a5       	ldd	r23, Y+41	; 0x29
     8c4:	8a a5       	ldd	r24, Y+42	; 0x2a
     8c6:	9b a5       	ldd	r25, Y+43	; 0x2b
     8c8:	0e 94 2b 0b 	call	0x1656	; 0x1656 <__fixsfsi>
     8cc:	68 ab       	std	Y+48, r22	; 0x30
     8ce:	79 ab       	std	Y+49, r23	; 0x31
     8d0:	8a ab       	std	Y+50, r24	; 0x32
     8d2:	9b ab       	std	Y+51, r25	; 0x33
		
		// Sending bearing to DATA struct as int 
		int bearing_send;
		bearing_send = (int) (GPS_Data->bearing_wp);
		GPS_Data->bearing_sendI2C = bearing_send; 
     8d4:	6c a5       	ldd	r22, Y+44	; 0x2c
     8d6:	7d a5       	ldd	r23, Y+45	; 0x2d
     8d8:	8e a5       	ldd	r24, Y+46	; 0x2e
     8da:	9f a5       	ldd	r25, Y+47	; 0x2f
     8dc:	0e 94 2b 0b 	call	0x1656	; 0x1656 <__fixsfsi>
     8e0:	7d ab       	std	Y+53, r23	; 0x35
     8e2:	6c ab       	std	Y+52, r22	; 0x34
     8e4:	df 91       	pop	r29
     8e6:	cf 91       	pop	r28
     8e8:	08 95       	ret

000008ea <init_GPSDATA>:
		bytes=0;
	}
	else
	{
		set_data(status);
		bytes++;
     8ea:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <NMEA1+0x1>
     8ee:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <NMEA1>
     8f2:	08 95       	ret

000008f4 <cal_checksum>:
     8f4:	fc 01       	movw	r30, r24
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	9b 01       	movw	r18, r22
     8fa:	21 50       	subi	r18, 0x01	; 1
     8fc:	31 09       	sbc	r19, r1
     8fe:	16 16       	cp	r1, r22
     900:	17 06       	cpc	r1, r23
     902:	74 f4       	brge	.+28     	; 0x920 <__stack+0x21>
     904:	80 e0       	ldi	r24, 0x00	; 0
     906:	af 01       	movw	r20, r30
     908:	02 2e       	mov	r0, r18
     90a:	02 c0       	rjmp	.+4      	; 0x910 <__stack+0x11>
     90c:	55 95       	asr	r21
     90e:	47 95       	ror	r20
     910:	0a 94       	dec	r0
     912:	e2 f7       	brpl	.-8      	; 0x90c <__stack+0xd>
     914:	41 70       	andi	r20, 0x01	; 1
     916:	84 27       	eor	r24, r20
     918:	21 50       	subi	r18, 0x01	; 1
     91a:	31 09       	sbc	r19, r1
     91c:	a0 f7       	brcc	.-24     	; 0x906 <__stack+0x7>
     91e:	01 c0       	rjmp	.+2      	; 0x922 <__stack+0x23>
     920:	80 e0       	ldi	r24, 0x00	; 0
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	08 95       	ret

00000926 <set_opcode>:
     926:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <opcode>
     92a:	08 95       	ret

0000092c <Gps_send_Direction>:

void Gps_send_Direction(void)
{
	char data;
	
	if (bytes==2)
     92c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     930:	82 30       	cpi	r24, 0x02	; 2
     932:	71 f4       	brne	.+28     	; 0x950 <Gps_send_Direction+0x24>
	{
		char checksum;
		
		checksum = cal_checksum(NMEA1->bearing_sendI2C, 16);
     934:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     938:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
     93c:	60 e1       	ldi	r22, 0x10	; 16
     93e:	84 a9       	ldd	r24, Z+52	; 0x34
     940:	95 a9       	ldd	r25, Z+53	; 0x35
     942:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <cal_checksum>
		set_data(checksum);
     946:	0e 94 21 05 	call	0xa42	; 0xa42 <set_data>
		bytes=0;
     94a:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <bytes>
     94e:	08 95       	ret
	}
	else
	{
		data= NMEA1->bearing_sendI2C>> 8*bytes;
     950:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     954:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
		set_data(data);	
     958:	88 0f       	add	r24, r24
     95a:	88 0f       	add	r24, r24
     95c:	88 0f       	add	r24, r24
     95e:	24 a9       	ldd	r18, Z+52	; 0x34
     960:	35 a9       	ldd	r19, Z+53	; 0x35
     962:	a9 01       	movw	r20, r18
     964:	02 c0       	rjmp	.+4      	; 0x96a <Gps_send_Direction+0x3e>
     966:	55 95       	asr	r21
     968:	47 95       	ror	r20
     96a:	8a 95       	dec	r24
     96c:	e2 f7       	brpl	.-8      	; 0x966 <Gps_send_Direction+0x3a>
     96e:	ca 01       	movw	r24, r20
     970:	0e 94 21 05 	call	0xa42	; 0xa42 <set_data>
		bytes++;	
     974:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     978:	8f 5f       	subi	r24, 0xFF	; 255
     97a:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <bytes>
     97e:	08 95       	ret

00000980 <Gps_send_Distance>:
}

 

void Gps_send_Distance(void)
{
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
	char data;
	
	if (bytes==4)
     984:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     988:	84 30       	cpi	r24, 0x04	; 4
     98a:	71 f4       	brne	.+28     	; 0x9a8 <Gps_send_Distance+0x28>
	{
		char checksum;
		checksum = cal_checksum(NMEA1->dist_sendI2C, 32);
     98c:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     990:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
     994:	60 e2       	ldi	r22, 0x20	; 32
     996:	80 a9       	ldd	r24, Z+48	; 0x30
     998:	91 a9       	ldd	r25, Z+49	; 0x31
     99a:	0e 94 7a 04 	call	0x8f4	; 0x8f4 <cal_checksum>
		set_data(checksum);
     99e:	0e 94 21 05 	call	0xa42	; 0xa42 <set_data>
		bytes=0;
     9a2:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <bytes>
     9a6:	1e c0       	rjmp	.+60     	; 0x9e4 <Gps_send_Distance+0x64>
	}
	else
	{
		data= NMEA1->dist_sendI2C>> 8*bytes;
     9a8:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     9ac:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
		set_data(data);
     9b0:	98 2f       	mov	r25, r24
     9b2:	99 0f       	add	r25, r25
     9b4:	99 0f       	add	r25, r25
     9b6:	99 0f       	add	r25, r25
     9b8:	40 a9       	ldd	r20, Z+48	; 0x30
     9ba:	51 a9       	ldd	r21, Z+49	; 0x31
     9bc:	62 a9       	ldd	r22, Z+50	; 0x32
     9be:	73 a9       	ldd	r23, Z+51	; 0x33
     9c0:	8a 01       	movw	r16, r20
     9c2:	9b 01       	movw	r18, r22
     9c4:	04 c0       	rjmp	.+8      	; 0x9ce <Gps_send_Distance+0x4e>
     9c6:	35 95       	asr	r19
     9c8:	27 95       	ror	r18
     9ca:	17 95       	ror	r17
     9cc:	07 95       	ror	r16
     9ce:	9a 95       	dec	r25
     9d0:	d2 f7       	brpl	.-12     	; 0x9c6 <Gps_send_Distance+0x46>
     9d2:	d9 01       	movw	r26, r18
     9d4:	c8 01       	movw	r24, r16
     9d6:	0e 94 21 05 	call	0xa42	; 0xa42 <set_data>
		bytes++;	
     9da:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     9de:	8f 5f       	subi	r24, 0xFF	; 255
     9e0:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <bytes>
	}
	
     9e4:	1f 91       	pop	r17
     9e6:	0f 91       	pop	r16
     9e8:	08 95       	ret

000009ea <i2c_service>:
}


void i2c_service(void)
{
	switch(opcode)
     9ea:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <opcode>
     9ee:	81 30       	cpi	r24, 0x01	; 1
     9f0:	19 f0       	breq	.+6      	; 0x9f8 <i2c_service+0xe>
     9f2:	82 30       	cpi	r24, 0x02	; 2
     9f4:	21 f0       	breq	.+8      	; 0x9fe <i2c_service+0x14>
     9f6:	08 95       	ret
{	
	
	case 1:
	{
		Gps_send_Direction();
     9f8:	0e 94 96 04 	call	0x92c	; 0x92c <Gps_send_Direction>
		break;
     9fc:	08 95       	ret
	}
	
	case 2:
	 {
		 Gps_send_Distance();
     9fe:	0e 94 c0 04 	call	0x980	; 0x980 <Gps_send_Distance>
     a02:	08 95       	ret

00000a04 <I2C_recieve>:
		sei();
}

void i2c_transmit_data(uint8_t data)
{		
	TWDR = data;
     a04:	cf 93       	push	r28
     a06:	c8 2f       	mov	r28, r24
     a08:	0e 94 93 04 	call	0x926	; 0x926 <set_opcode>
     a0c:	c0 93 74 01 	sts	0x0174, r28	; 0x800174 <data>
     a10:	cf 91       	pop	r28
     a12:	08 95       	ret

00000a14 <I2C_data_ACK_request>:
     a14:	0e 94 f5 04 	call	0x9ea	; 0x9ea <i2c_service>
     a18:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <data>
     a1c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     a20:	08 95       	ret

00000a22 <I2C_data_NACK_request>:
     a22:	0e 94 f5 04 	call	0x9ea	; 0x9ea <i2c_service>
     a26:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <data>
     a2a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     a2e:	08 95       	ret

00000a30 <i2c_init>:
     a30:	f8 94       	cli
     a32:	88 0f       	add	r24, r24
     a34:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
     a38:	85 ec       	ldi	r24, 0xC5	; 197
     a3a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     a3e:	78 94       	sei
     a40:	08 95       	ret

00000a42 <set_data>:
}

void set_data(uint8_t value)
{
	data = value;
     a42:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <data>
     a46:	08 95       	ret

00000a48 <__vector_24>:
}


 
ISR(TWI_vect)
{
     a48:	1f 92       	push	r1
     a4a:	0f 92       	push	r0
     a4c:	0f b6       	in	r0, 0x3f	; 63
     a4e:	0f 92       	push	r0
     a50:	11 24       	eor	r1, r1
     a52:	2f 93       	push	r18
     a54:	3f 93       	push	r19
     a56:	4f 93       	push	r20
     a58:	5f 93       	push	r21
     a5a:	6f 93       	push	r22
     a5c:	7f 93       	push	r23
     a5e:	8f 93       	push	r24
     a60:	9f 93       	push	r25
     a62:	af 93       	push	r26
     a64:	bf 93       	push	r27
     a66:	ef 93       	push	r30
     a68:	ff 93       	push	r31
	switch(TW_STATUS)
     a6a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     a6e:	88 7f       	andi	r24, 0xF8	; 248
     a70:	80 38       	cpi	r24, 0x80	; 128
     a72:	49 f0       	breq	.+18     	; 0xa86 <__vector_24+0x3e>
     a74:	18 f4       	brcc	.+6      	; 0xa7c <__vector_24+0x34>
     a76:	88 23       	and	r24, r24
     a78:	d1 f0       	breq	.+52     	; 0xaae <__vector_24+0x66>
     a7a:	1f c0       	rjmp	.+62     	; 0xaba <__vector_24+0x72>
     a7c:	88 3a       	cpi	r24, 0xA8	; 168
     a7e:	59 f0       	breq	.+22     	; 0xa96 <__vector_24+0x4e>
     a80:	88 3b       	cpi	r24, 0xB8	; 184
     a82:	79 f0       	breq	.+30     	; 0xaa2 <__vector_24+0x5a>
     a84:	1a c0       	rjmp	.+52     	; 0xaba <__vector_24+0x72>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recieve(TWDR);
     a86:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     a8a:	0e 94 02 05 	call	0xa04	; 0xa04 <I2C_recieve>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     a8e:	85 ec       	ldi	r24, 0xC5	; 197
     a90:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     a94:	15 c0       	rjmp	.+42     	; 0xac0 <__vector_24+0x78>
		
		case TW_ST_SLA_ACK:
		// master is requesting data using NACK,master expects only one additional byte. call the request callback
		I2C_data_NACK_request();
     a96:	0e 94 11 05 	call	0xa22	; 0xa22 <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     a9a:	85 ec       	ldi	r24, 0xC5	; 197
     a9c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     aa0:	0f c0       	rjmp	.+30     	; 0xac0 <__vector_24+0x78>
		
		case TW_ST_DATA_ACK:
		// master is requesting data using ACK, master expects multiple bytes. call the request callback
		I2C_data_ACK_request();
     aa2:	0e 94 0a 05 	call	0xa14	; 0xa14 <I2C_data_ACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     aa6:	85 ec       	ldi	r24, 0xC5	; 197
     aa8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     aac:	09 c0       	rjmp	.+18     	; 0xac0 <__vector_24+0x78>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     aae:	ec eb       	ldi	r30, 0xBC	; 188
     ab0:	f0 e0       	ldi	r31, 0x00	; 0
     ab2:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     ab4:	85 ec       	ldi	r24, 0xC5	; 197
     ab6:	80 83       	st	Z, r24
		break;
     ab8:	03 c0       	rjmp	.+6      	; 0xac0 <__vector_24+0x78>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     aba:	85 ec       	ldi	r24, 0xC5	; 197
     abc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
	}
}
     ac0:	ff 91       	pop	r31
     ac2:	ef 91       	pop	r30
     ac4:	bf 91       	pop	r27
     ac6:	af 91       	pop	r26
     ac8:	9f 91       	pop	r25
     aca:	8f 91       	pop	r24
     acc:	7f 91       	pop	r23
     ace:	6f 91       	pop	r22
     ad0:	5f 91       	pop	r21
     ad2:	4f 91       	pop	r20
     ad4:	3f 91       	pop	r19
     ad6:	2f 91       	pop	r18
     ad8:	0f 90       	pop	r0
     ada:	0f be       	out	0x3f, r0	; 63
     adc:	0f 90       	pop	r0
     ade:	1f 90       	pop	r1
     ae0:	18 95       	reti

00000ae2 <main>:
#include "Gps_send.h"
#include "i2c_atmega_328p_slave.h"
#define address 0x40

int main(void)
{
     ae2:	cf 93       	push	r28
     ae4:	df 93       	push	r29
     ae6:	cd b7       	in	r28, 0x3d	; 61
     ae8:	de b7       	in	r29, 0x3e	; 62
     aea:	cb 5d       	subi	r28, 0xDB	; 219
     aec:	d1 09       	sbc	r29, r1
     aee:	0f b6       	in	r0, 0x3f	; 63
     af0:	f8 94       	cli
     af2:	de bf       	out	0x3e, r29	; 62
     af4:	0f be       	out	0x3f, r0	; 63
     af6:	cd bf       	out	0x3d, r28	; 61
	DDRC |=(1<<PORTC0); //Setting port C0 as an output
     af8:	38 9a       	sbi	0x07, 0	; 7
	i2c_init(address);  //init i2c transmiission
     afa:	80 e4       	ldi	r24, 0x40	; 64
     afc:	0e 94 18 05 	call	0xa30	; 0xa30 <i2c_init>
	GPS_init();         //init GPS decoder
     b00:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <GPS_init>
	usart_init();       //INT USART to recieve data from c94-MP8 
     b04:	0e 94 a0 09 	call	0x1340	; 0x1340 <usart_init>

	coor_t WP[5];  //Struct defined in gps_func.h 

	// Waypoint definitions
	WP[1].LAT = 54.91;
     b08:	87 ed       	ldi	r24, 0xD7	; 215
     b0a:	93 ea       	ldi	r25, 0xA3	; 163
     b0c:	ab e5       	ldi	r26, 0x5B	; 91
     b0e:	b2 e4       	ldi	r27, 0x42	; 66
     b10:	89 8b       	std	Y+17, r24	; 0x11
     b12:	9a 8b       	std	Y+18, r25	; 0x12
     b14:	ab 8b       	std	Y+19, r26	; 0x13
     b16:	bc 8b       	std	Y+20, r27	; 0x14
	WP[1].LON = 9.78;
     b18:	81 ee       	ldi	r24, 0xE1	; 225
     b1a:	9a e7       	ldi	r25, 0x7A	; 122
     b1c:	ac e1       	ldi	r26, 0x1C	; 28
     b1e:	b1 e4       	ldi	r27, 0x41	; 65
     b20:	89 8f       	std	Y+25, r24	; 0x19
     b22:	9a 8f       	std	Y+26, r25	; 0x1a
     b24:	ab 8f       	std	Y+27, r26	; 0x1b
     b26:	bc 8f       	std	Y+28, r27	; 0x1c
	WP[1].LAT_int = 911963;
     b28:	8b e5       	ldi	r24, 0x5B	; 91
     b2a:	9a ee       	ldi	r25, 0xEA	; 234
     b2c:	ad e0       	ldi	r26, 0x0D	; 13
     b2e:	b0 e0       	ldi	r27, 0x00	; 0
     b30:	8d 8b       	std	Y+21, r24	; 0x15
     b32:	9e 8b       	std	Y+22, r25	; 0x16
     b34:	af 8b       	std	Y+23, r26	; 0x17
     b36:	b8 8f       	std	Y+24, r27	; 0x18
	WP[1].LON_int = 780645;
     b38:	85 e6       	ldi	r24, 0x65	; 101
     b3a:	99 ee       	ldi	r25, 0xE9	; 233
     b3c:	ab e0       	ldi	r26, 0x0B	; 11
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	8d 8f       	std	Y+29, r24	; 0x1d
     b42:	9e 8f       	std	Y+30, r25	; 0x1e
     b44:	af 8f       	std	Y+31, r26	; 0x1f
     b46:	b8 a3       	std	Y+32, r27	; 0x20
	
	WP[2].LAT_int = 911838;
     b48:	8e ed       	ldi	r24, 0xDE	; 222
     b4a:	99 ee       	ldi	r25, 0xE9	; 233
     b4c:	ad e0       	ldi	r26, 0x0D	; 13
     b4e:	b0 e0       	ldi	r27, 0x00	; 0
     b50:	8d a3       	std	Y+37, r24	; 0x25
     b52:	9e a3       	std	Y+38, r25	; 0x26
     b54:	af a3       	std	Y+39, r26	; 0x27
     b56:	b8 a7       	std	Y+40, r27	; 0x28
	WP[2].LON_int = 780816;
     b58:	80 e1       	ldi	r24, 0x10	; 16
     b5a:	9a ee       	ldi	r25, 0xEA	; 234
     b5c:	ab e0       	ldi	r26, 0x0B	; 11
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	8d a7       	std	Y+45, r24	; 0x2d
     b62:	9e a7       	std	Y+46, r25	; 0x2e
     b64:	af a7       	std	Y+47, r26	; 0x2f
     b66:	b8 ab       	std	Y+48, r27	; 0x30
	
	WP[3].LAT_int = 911701;
     b68:	85 e5       	ldi	r24, 0x55	; 85
     b6a:	99 ee       	ldi	r25, 0xE9	; 233
     b6c:	ad e0       	ldi	r26, 0x0D	; 13
     b6e:	b0 e0       	ldi	r27, 0x00	; 0
     b70:	8d ab       	std	Y+53, r24	; 0x35
     b72:	9e ab       	std	Y+54, r25	; 0x36
     b74:	af ab       	std	Y+55, r26	; 0x37
     b76:	b8 af       	std	Y+56, r27	; 0x38
	WP[3].LON_int = 780981;
     b78:	85 eb       	ldi	r24, 0xB5	; 181
     b7a:	9a ee       	ldi	r25, 0xEA	; 234
     b7c:	ab e0       	ldi	r26, 0x0B	; 11
     b7e:	b0 e0       	ldi	r27, 0x00	; 0
     b80:	21 96       	adiw	r28, 0x01	; 1
     b82:	8c af       	std	Y+60, r24	; 0x3c
     b84:	9d af       	std	Y+61, r25	; 0x3d
     b86:	ae af       	std	Y+62, r26	; 0x3e
     b88:	bf af       	std	Y+63, r27	; 0x3f
     b8a:	21 97       	sbiw	r28, 0x01	; 1
	
	WP[4].LAT_int = 911290;
     b8c:	8a eb       	ldi	r24, 0xBA	; 186
     b8e:	97 ee       	ldi	r25, 0xE7	; 231
     b90:	ad e0       	ldi	r26, 0x0D	; 13
     b92:	b0 e0       	ldi	r27, 0x00	; 0
     b94:	29 96       	adiw	r28, 0x09	; 9
     b96:	8c af       	std	Y+60, r24	; 0x3c
     b98:	9d af       	std	Y+61, r25	; 0x3d
     b9a:	ae af       	std	Y+62, r26	; 0x3e
     b9c:	bf af       	std	Y+63, r27	; 0x3f
     b9e:	29 97       	sbiw	r28, 0x09	; 9
	WP[4].LON_int = 780456;
     ba0:	88 ea       	ldi	r24, 0xA8	; 168
     ba2:	98 ee       	ldi	r25, 0xE8	; 232
     ba4:	ab e0       	ldi	r26, 0x0B	; 11
     ba6:	b0 e0       	ldi	r27, 0x00	; 0
     ba8:	61 96       	adiw	r28, 0x11	; 17
     baa:	8c af       	std	Y+60, r24	; 0x3c
     bac:	9d af       	std	Y+61, r25	; 0x3d
     bae:	ae af       	std	Y+62, r26	; 0x3e
     bb0:	bf af       	std	Y+63, r27	; 0x3f
     bb2:	61 97       	sbiw	r28, 0x11	; 17
	
	int WP_NUM=1;   //Current WP number 
	char msg[85];  //GPGAA message from module
	DATA NMEA1;    //struct containing relevant data; LAT LON etc.
	
	init(&NMEA1); //INIT GPS_Data struct  
     bb4:	ce 01       	movw	r24, r28
     bb6:	8a 55       	subi	r24, 0x5A	; 90
     bb8:	9f 4f       	sbci	r25, 0xFF	; 255
     bba:	0e 94 63 06 	call	0xcc6	; 0xcc6 <init>
	WP[3].LON_int = 780981;
	
	WP[4].LAT_int = 911290;
	WP[4].LON_int = 780456;
	
	int WP_NUM=1;   //Current WP number 
     bbe:	44 24       	eor	r4, r4
     bc0:	43 94       	inc	r4
     bc2:	51 2c       	mov	r5, r1
	
	init(&NMEA1); //INIT GPS_Data struct  
	
	while(1)
	{
		usart_init(); 
     bc4:	0e 94 a0 09 	call	0x1340	; 0x1340 <usart_init>
		
		init_GPSDATA(&NMEA1);							//to expose NMEA1 to GPS_send.h
     bc8:	ce 01       	movw	r24, r28
     bca:	8a 55       	subi	r24, 0x5A	; 90
     bcc:	9f 4f       	sbci	r25, 0xFF	; 255
     bce:	0e 94 75 04 	call	0x8ea	; 0x8ea <init_GPSDATA>
		
		while(!get_gps_message(msg));
     bd2:	ce 01       	movw	r24, r28
     bd4:	8f 5a       	subi	r24, 0xAF	; 175
     bd6:	9f 4f       	sbci	r25, 0xFF	; 255
     bd8:	0e 94 05 01 	call	0x20a	; 0x20a <get_gps_message>
     bdc:	89 2b       	or	r24, r25
     bde:	c9 f3       	breq	.-14     	; 0xbd2 <main+0xf0>
		
		PORTC &= ~(1<<PORTC0);							//Set data_ready_flag LOW When bearing and distance is being recieved and caluculated.
     be0:	40 98       	cbi	0x08, 0	; 8
		
		if(GPS_Decode(msg, &NMEA1))						//Take message as char array and reference to data struct. Returns true if checksum is okay. AND if quality <=4
     be2:	be 01       	movw	r22, r28
     be4:	6a 55       	subi	r22, 0x5A	; 90
     be6:	7f 4f       	sbci	r23, 0xFF	; 255
     be8:	ce 01       	movw	r24, r28
     bea:	8f 5a       	subi	r24, 0xAF	; 175
     bec:	9f 4f       	sbci	r25, 0xFF	; 255
     bee:	0e 94 03 08 	call	0x1006	; 0x1006 <GPS_Decode>
     bf2:	89 2b       	or	r24, r25
     bf4:	09 f4       	brne	.+2      	; 0xbf8 <main+0x116>
     bf6:	40 c0       	rjmp	.+128    	; 0xc78 <main+0x196>
		{
			dist_to_wp(&NMEA1, WP[WP_NUM]);				//Calculating dist from pos and WP
     bf8:	32 01       	movw	r6, r4
     bfa:	66 0c       	add	r6, r6
     bfc:	77 1c       	adc	r7, r7
     bfe:	66 0c       	add	r6, r6
     c00:	77 1c       	adc	r7, r7
     c02:	66 0c       	add	r6, r6
     c04:	77 1c       	adc	r7, r7
     c06:	66 0c       	add	r6, r6
     c08:	77 1c       	adc	r7, r7
     c0a:	81 e0       	ldi	r24, 0x01	; 1
     c0c:	90 e0       	ldi	r25, 0x00	; 0
     c0e:	8c 0f       	add	r24, r28
     c10:	9d 1f       	adc	r25, r29
     c12:	68 0e       	add	r6, r24
     c14:	79 1e       	adc	r7, r25
     c16:	f3 01       	movw	r30, r6
     c18:	80 80       	ld	r8, Z
     c1a:	91 80       	ldd	r9, Z+1	; 0x01
     c1c:	a2 80       	ldd	r10, Z+2	; 0x02
     c1e:	b3 80       	ldd	r11, Z+3	; 0x03
     c20:	c4 80       	ldd	r12, Z+4	; 0x04
     c22:	d5 80       	ldd	r13, Z+5	; 0x05
     c24:	e6 80       	ldd	r14, Z+6	; 0x06
     c26:	f7 80       	ldd	r15, Z+7	; 0x07
     c28:	00 85       	ldd	r16, Z+8	; 0x08
     c2a:	11 85       	ldd	r17, Z+9	; 0x09
     c2c:	22 85       	ldd	r18, Z+10	; 0x0a
     c2e:	33 85       	ldd	r19, Z+11	; 0x0b
     c30:	44 85       	ldd	r20, Z+12	; 0x0c
     c32:	55 85       	ldd	r21, Z+13	; 0x0d
     c34:	66 85       	ldd	r22, Z+14	; 0x0e
     c36:	77 85       	ldd	r23, Z+15	; 0x0f
     c38:	8b 55       	subi	r24, 0x5B	; 91
     c3a:	9f 4f       	sbci	r25, 0xFF	; 255
     c3c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <dist_to_wp>
			bearing_to_wp(&NMEA1, WP[WP_NUM]);			//Calculating bearing from pos and WP
     c40:	f3 01       	movw	r30, r6
     c42:	80 80       	ld	r8, Z
     c44:	91 80       	ldd	r9, Z+1	; 0x01
     c46:	a2 80       	ldd	r10, Z+2	; 0x02
     c48:	b3 80       	ldd	r11, Z+3	; 0x03
     c4a:	c4 80       	ldd	r12, Z+4	; 0x04
     c4c:	d5 80       	ldd	r13, Z+5	; 0x05
     c4e:	e6 80       	ldd	r14, Z+6	; 0x06
     c50:	f7 80       	ldd	r15, Z+7	; 0x07
     c52:	00 85       	ldd	r16, Z+8	; 0x08
     c54:	11 85       	ldd	r17, Z+9	; 0x09
     c56:	22 85       	ldd	r18, Z+10	; 0x0a
     c58:	33 85       	ldd	r19, Z+11	; 0x0b
     c5a:	44 85       	ldd	r20, Z+12	; 0x0c
     c5c:	55 85       	ldd	r21, Z+13	; 0x0d
     c5e:	66 85       	ldd	r22, Z+14	; 0x0e
     c60:	77 85       	ldd	r23, Z+15	; 0x0f
     c62:	ce 01       	movw	r24, r28
     c64:	8a 55       	subi	r24, 0x5A	; 90
     c66:	9f 4f       	sbci	r25, 0xFF	; 255
     c68:	0e 94 77 02 	call	0x4ee	; 0x4ee <bearing_to_wp>
			Transmit_dist_bearing_i2C(&NMEA1);			//Transmitting via I2C
     c6c:	ce 01       	movw	r24, r28
     c6e:	8a 55       	subi	r24, 0x5A	; 90
     c70:	9f 4f       	sbci	r25, 0xFF	; 255
     c72:	0e 94 5d 04 	call	0x8ba	; 0x8ba <Transmit_dist_bearing_i2C>
			
			PORTC |= (1<<PORTC0);						//Set data_ready_flag HIGH When bearing and distance is ready to be recieved by master
     c76:	40 9a       	sbi	0x08, 0	; 8
		}
		
		if(NMEA1.dist_wp<1000 && NMEA1.dist_wp>10 && WP_NUM<4)   //change to new way-point when closer than 1m  
     c78:	c2 53       	subi	r28, 0x32	; 50
     c7a:	df 4f       	sbci	r29, 0xFF	; 255
     c7c:	c8 80       	ld	r12, Y
     c7e:	d9 80       	ldd	r13, Y+1	; 0x01
     c80:	ea 80       	ldd	r14, Y+2	; 0x02
     c82:	fb 80       	ldd	r15, Y+3	; 0x03
     c84:	ce 5c       	subi	r28, 0xCE	; 206
     c86:	d0 40       	sbci	r29, 0x00	; 0
     c88:	20 e0       	ldi	r18, 0x00	; 0
     c8a:	30 e0       	ldi	r19, 0x00	; 0
     c8c:	4a e7       	ldi	r20, 0x7A	; 122
     c8e:	54 e4       	ldi	r21, 0x44	; 68
     c90:	c7 01       	movw	r24, r14
     c92:	b6 01       	movw	r22, r12
     c94:	0e 94 af 0a 	call	0x155e	; 0x155e <__cmpsf2>
     c98:	88 23       	and	r24, r24
     c9a:	0c f0       	brlt	.+2      	; 0xc9e <main+0x1bc>
     c9c:	93 cf       	rjmp	.-218    	; 0xbc4 <main+0xe2>
     c9e:	20 e0       	ldi	r18, 0x00	; 0
     ca0:	30 e0       	ldi	r19, 0x00	; 0
     ca2:	40 e2       	ldi	r20, 0x20	; 32
     ca4:	51 e4       	ldi	r21, 0x41	; 65
     ca6:	c7 01       	movw	r24, r14
     ca8:	b6 01       	movw	r22, r12
     caa:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <__gesf2>
     cae:	18 16       	cp	r1, r24
     cb0:	0c f0       	brlt	.+2      	; 0xcb4 <main+0x1d2>
     cb2:	88 cf       	rjmp	.-240    	; 0xbc4 <main+0xe2>
     cb4:	f4 e0       	ldi	r31, 0x04	; 4
     cb6:	4f 16       	cp	r4, r31
     cb8:	51 04       	cpc	r5, r1
     cba:	0c f0       	brlt	.+2      	; 0xcbe <main+0x1dc>
     cbc:	83 cf       	rjmp	.-250    	; 0xbc4 <main+0xe2>
		WP_NUM++;
     cbe:	8f ef       	ldi	r24, 0xFF	; 255
     cc0:	48 1a       	sub	r4, r24
     cc2:	58 0a       	sbc	r5, r24
     cc4:	7f cf       	rjmp	.-258    	; 0xbc4 <main+0xe2>

00000cc6 <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     cc6:	fc 01       	movw	r30, r24
	GPS_Data->LAT_Float=0.0;
     cc8:	16 82       	std	Z+6, r1	; 0x06
     cca:	17 82       	std	Z+7, r1	; 0x07
     ccc:	10 86       	std	Z+8, r1	; 0x08
     cce:	11 86       	std	Z+9, r1	; 0x09
	GPS_Data->LAT=0;
     cd0:	12 82       	std	Z+2, r1	; 0x02
     cd2:	13 82       	std	Z+3, r1	; 0x03
     cd4:	14 82       	std	Z+4, r1	; 0x04
     cd6:	15 82       	std	Z+5, r1	; 0x05
	GPS_Data->LAT_Min=0;
     cd8:	11 82       	std	Z+1, r1	; 0x01
	GPS_Data->LAT_Degree=0;
     cda:	10 82       	st	Z, r1
	GPS_Data->LON_Float=0.0;
     cdc:	15 8a       	std	Z+21, r1	; 0x15
     cde:	16 8a       	std	Z+22, r1	; 0x16
     ce0:	17 8a       	std	Z+23, r1	; 0x17
     ce2:	10 8e       	std	Z+24, r1	; 0x18
	GPS_Data->LON=0;
     ce4:	11 8a       	std	Z+17, r1	; 0x11
     ce6:	12 8a       	std	Z+18, r1	; 0x12
     ce8:	13 8a       	std	Z+19, r1	; 0x13
     cea:	14 8a       	std	Z+20, r1	; 0x14
	GPS_Data->LON_Min=0;
     cec:	10 8a       	std	Z+16, r1	; 0x10
	GPS_Data->LON_Degree=0;
     cee:	17 86       	std	Z+15, r1	; 0x0f
	GPS_Data->ageOfCorrection = 0;
     cf0:	17 8e       	std	Z+31, r1	; 0x1f
	GPS_Data->quality=0;
     cf2:	16 8e       	std	Z+30, r1	; 0x1e
	GPS_Data->Speed=0;
     cf4:	14 a2       	std	Z+36, r1	; 0x24
     cf6:	15 a2       	std	Z+37, r1	; 0x25
     cf8:	16 a2       	std	Z+38, r1	; 0x26
     cfa:	17 a2       	std	Z+39, r1	; 0x27
	GPS_Data->bearing_true=0;
     cfc:	10 a2       	std	Z+32, r1	; 0x20
     cfe:	11 a2       	std	Z+33, r1	; 0x21
     d00:	12 a2       	std	Z+34, r1	; 0x22
     d02:	13 a2       	std	Z+35, r1	; 0x23
	GPS_Data->bearing_sendI2C=0; 
     d04:	10 a6       	std	Z+40, r1	; 0x28
     d06:	11 a6       	std	Z+41, r1	; 0x29
     d08:	12 a6       	std	Z+42, r1	; 0x2a
     d0a:	13 a6       	std	Z+43, r1	; 0x2b
	GPS_Data->dist_wp=0;
     d0c:	14 a6       	std	Z+44, r1	; 0x2c
     d0e:	15 a6       	std	Z+45, r1	; 0x2d
     d10:	16 a6       	std	Z+46, r1	; 0x2e
     d12:	17 a6       	std	Z+47, r1	; 0x2f
     d14:	08 95       	ret

00000d16 <checksum>:

uint8_t checksum(char* msg)
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
     d16:	fc 01       	movw	r30, r24
     d18:	20 81       	ld	r18, Z
     d1a:	24 32       	cpi	r18, 0x24	; 36
     d1c:	61 f5       	brne	.+88     	; 0xd76 <checksum+0x60>
	
	if(msg[0] == '$')
	{
     d1e:	21 81       	ldd	r18, Z+1	; 0x01
     d20:	2a 32       	cpi	r18, 0x2A	; 42
     d22:	59 f1       	breq	.+86     	; 0xd7a <checksum+0x64>
     d24:	dc 01       	movw	r26, r24
     d26:	12 96       	adiw	r26, 0x02	; 2
     d28:	60 e0       	ldi	r22, 0x00	; 0
     d2a:	70 e0       	ldi	r23, 0x00	; 0
     d2c:	41 e0       	ldi	r20, 0x01	; 1
     d2e:	50 e0       	ldi	r21, 0x00	; 0
		i++;
		while(msg[i] != '*')
     d30:	30 e0       	ldi	r19, 0x00	; 0
     d32:	20 53       	subi	r18, 0x30	; 48
     d34:	31 09       	sbc	r19, r1
     d36:	62 27       	eor	r22, r18
     d38:	73 27       	eor	r23, r19
		{
     d3a:	4f 5f       	subi	r20, 0xFF	; 255
     d3c:	5f 4f       	sbci	r21, 0xFF	; 255
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
     d3e:	2d 91       	ld	r18, X+
     d40:	2a 32       	cpi	r18, 0x2A	; 42
     d42:	b1 f7       	brne	.-20     	; 0xd30 <checksum+0x1a>
     d44:	1e c0       	rjmp	.+60     	; 0xd82 <checksum+0x6c>
			nmea_sum = 16*(msg[i]-48);
				
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     d46:	42 2f       	mov	r20, r18
     d48:	50 e0       	ldi	r21, 0x00	; 0
     d4a:	40 53       	subi	r20, 0x30	; 48
     d4c:	51 09       	sbc	r21, r1
     d4e:	84 0f       	add	r24, r20
     d50:	95 1f       	adc	r25, r21
			{
				nmea_sum += 1*(msg[i]-48);
			}
     d52:	3f eb       	ldi	r19, 0xBF	; 191
     d54:	32 0f       	add	r19, r18
     d56:	36 30       	cpi	r19, 0x06	; 6
     d58:	28 f4       	brcc	.+10     	; 0xd64 <checksum+0x4e>
			
			if((msg[i]>='A') && (msg[i]<='F'))
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	27 53       	subi	r18, 0x37	; 55
     d5e:	31 09       	sbc	r19, r1
     d60:	82 0f       	add	r24, r18
     d62:	93 1f       	adc	r25, r19
			{
				nmea_sum += 1*(msg[i]-55);
			}
		}
		
		if(checksum==(nmea_sum-(2*48)))
     d64:	9c 01       	movw	r18, r24
     d66:	20 56       	subi	r18, 0x60	; 96
     d68:	31 09       	sbc	r19, r1
     d6a:	81 e0       	ldi	r24, 0x01	; 1
     d6c:	26 17       	cp	r18, r22
     d6e:	37 07       	cpc	r19, r23
     d70:	d1 f0       	breq	.+52     	; 0xda6 <checksum+0x90>
     d72:	80 e0       	ldi	r24, 0x00	; 0
     d74:	08 95       	ret
		}
		else
		{
			return 0;
		}
		
     d76:	80 e0       	ldi	r24, 0x00	; 0
     d78:	08 95       	ret
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
     d7a:	60 e0       	ldi	r22, 0x00	; 0
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	41 e0       	ldi	r20, 0x01	; 1
     d80:	50 e0       	ldi	r21, 0x00	; 0
			i++;
		}
		
		if(msg[i] == '*')
		{
			////////////MSB
     d82:	fc 01       	movw	r30, r24
     d84:	e4 0f       	add	r30, r20
     d86:	f5 1f       	adc	r31, r21
     d88:	81 81       	ldd	r24, Z+1	; 0x01
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	c0 97       	sbiw	r24, 0x30	; 48
     d8e:	82 95       	swap	r24
     d90:	92 95       	swap	r25
     d92:	90 7f       	andi	r25, 0xF0	; 240
     d94:	98 27       	eor	r25, r24
     d96:	80 7f       	andi	r24, 0xF0	; 240
     d98:	98 27       	eor	r25, r24
			i++;
			nmea_sum = 16*(msg[i]-48);
				
			////////////LSB
			i++;
     d9a:	22 81       	ldd	r18, Z+2	; 0x02
     d9c:	30 ed       	ldi	r19, 0xD0	; 208
     d9e:	32 0f       	add	r19, r18
     da0:	3a 30       	cpi	r19, 0x0A	; 10
     da2:	88 f2       	brcs	.-94     	; 0xd46 <checksum+0x30>
     da4:	d6 cf       	rjmp	.-84     	; 0xd52 <checksum+0x3c>
		else
		{
			return 0;
		}
		
	}
     da6:	08 95       	ret

00000da8 <MessageType>:
return 0; 
}
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	cd b7       	in	r28, 0x3d	; 61
     dae:	de b7       	in	r29, 0x3e	; 62
     db0:	64 97       	sbiw	r28, 0x14	; 20
     db2:	0f b6       	in	r0, 0x3f	; 63
     db4:	f8 94       	cli
     db6:	de bf       	out	0x3e, r29	; 62
     db8:	0f be       	out	0x3f, r0	; 63
     dba:	cd bf       	out	0x3d, r28	; 61

     dbc:	fc 01       	movw	r30, r24
     dbe:	20 81       	ld	r18, Z
     dc0:	24 32       	cpi	r18, 0x24	; 36
     dc2:	09 f0       	breq	.+2      	; 0xdc6 <MessageType+0x1e>
     dc4:	55 c0       	rjmp	.+170    	; 0xe70 <MessageType+0xc8>
     dc6:	dc 01       	movw	r26, r24
     dc8:	11 96       	adiw	r26, 0x01	; 1
     dca:	fe 01       	movw	r30, r28
     dcc:	70 96       	adiw	r30, 0x10	; 16
     dce:	9e 01       	movw	r18, r28
     dd0:	2b 5e       	subi	r18, 0xEB	; 235
     dd2:	3f 4f       	sbci	r19, 0xFF	; 255
uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     dd4:	8d 91       	ld	r24, X+
     dd6:	9f eb       	ldi	r25, 0xBF	; 191
     dd8:	98 0f       	add	r25, r24
     dda:	9a 31       	cpi	r25, 0x1A	; 26
     ddc:	08 f4       	brcc	.+2      	; 0xde0 <MessageType+0x38>
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     dde:	80 83       	st	Z, r24
     de0:	31 96       	adiw	r30, 0x01	; 1
return 0; 
}

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
     de2:	e2 17       	cp	r30, r18
     de4:	f3 07       	cpc	r31, r19
     de6:	b1 f7       	brne	.-20     	; 0xdd4 <MessageType+0x2c>
				//printf("%c", msg_type[k]);		//Print message to therminal
			}
			else
			{
				//printf("Failed message type\n");
			}
     de8:	85 e0       	ldi	r24, 0x05	; 5
     dea:	e0 e0       	ldi	r30, 0x00	; 0
     dec:	f1 e0       	ldi	r31, 0x01	; 1
     dee:	de 01       	movw	r26, r28
     df0:	1b 96       	adiw	r26, 0x0b	; 11
     df2:	01 90       	ld	r0, Z+
     df4:	0d 92       	st	X+, r0
     df6:	8a 95       	dec	r24
     df8:	e1 f7       	brne	.-8      	; 0xdf2 <MessageType+0x4a>
		}
     dfa:	85 e0       	ldi	r24, 0x05	; 5
     dfc:	e6 e0       	ldi	r30, 0x06	; 6
     dfe:	f1 e0       	ldi	r31, 0x01	; 1
     e00:	de 01       	movw	r26, r28
     e02:	16 96       	adiw	r26, 0x06	; 6
     e04:	01 90       	ld	r0, Z+
     e06:	0d 92       	st	X+, r0
     e08:	8a 95       	dec	r24
     e0a:	e1 f7       	brne	.-8      	; 0xe04 <MessageType+0x5c>
		char msg_gpgga[5] = "GPGGA";
     e0c:	85 e0       	ldi	r24, 0x05	; 5
     e0e:	ec e0       	ldi	r30, 0x0C	; 12
     e10:	f1 e0       	ldi	r31, 0x01	; 1
     e12:	de 01       	movw	r26, r28
     e14:	11 96       	adiw	r26, 0x01	; 1
     e16:	01 90       	ld	r0, Z+
     e18:	0d 92       	st	X+, r0
     e1a:	8a 95       	dec	r24
     e1c:	e1 f7       	brne	.-8      	; 0xe16 <MessageType+0x6e>
		char msg_gpvtg[5] = "GPVTG";
		char msg_gngga[5] = "GNGGA";
     e1e:	45 e0       	ldi	r20, 0x05	; 5
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	be 01       	movw	r22, r28
     e24:	65 5f       	subi	r22, 0xF5	; 245
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	ce 01       	movw	r24, r28
     e2a:	40 96       	adiw	r24, 0x10	; 16
     e2c:	0e 94 41 12 	call	0x2482	; 0x2482 <strncmp>
     e30:	89 2b       	or	r24, r25
     e32:	c1 f0       	breq	.+48     	; 0xe64 <MessageType+0xbc>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     e34:	45 e0       	ldi	r20, 0x05	; 5
     e36:	50 e0       	ldi	r21, 0x00	; 0
     e38:	be 01       	movw	r22, r28
     e3a:	6a 5f       	subi	r22, 0xFA	; 250
     e3c:	7f 4f       	sbci	r23, 0xFF	; 255
     e3e:	ce 01       	movw	r24, r28
     e40:	40 96       	adiw	r24, 0x10	; 16
     e42:	0e 94 41 12 	call	0x2482	; 0x2482 <strncmp>
     e46:	89 2b       	or	r24, r25
     e48:	79 f0       	breq	.+30     	; 0xe68 <MessageType+0xc0>
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     e4a:	45 e0       	ldi	r20, 0x05	; 5
     e4c:	50 e0       	ldi	r21, 0x00	; 0
     e4e:	be 01       	movw	r22, r28
     e50:	6f 5f       	subi	r22, 0xFF	; 255
     e52:	7f 4f       	sbci	r23, 0xFF	; 255
     e54:	ce 01       	movw	r24, r28
     e56:	40 96       	adiw	r24, 0x10	; 16
     e58:	0e 94 41 12 	call	0x2482	; 0x2482 <strncmp>
     e5c:	89 2b       	or	r24, r25
     e5e:	31 f0       	breq	.+12     	; 0xe6c <MessageType+0xc4>
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
		{
			return GPGGA;
		}
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	07 c0       	rjmp	.+14     	; 0xe72 <MessageType+0xca>
		}
		char msg_gpgga[5] = "GPGGA";
		char msg_gpvtg[5] = "GPVTG";
		char msg_gngga[5] = "GNGGA";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     e64:	81 e0       	ldi	r24, 0x01	; 1
     e66:	05 c0       	rjmp	.+10     	; 0xe72 <MessageType+0xca>
		{
			return GPGGA;
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     e68:	82 e0       	ldi	r24, 0x02	; 2
     e6a:	03 c0       	rjmp	.+6      	; 0xe72 <MessageType+0xca>
		{
			return GPVTG;
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
     e6c:	81 e0       	ldi	r24, 0x01	; 1
     e6e:	01 c0       	rjmp	.+2      	; 0xe72 <MessageType+0xca>
		{
			return GPGGA;
		}
     e70:	80 e0       	ldi	r24, 0x00	; 0
	}
     e72:	64 96       	adiw	r28, 0x14	; 20
     e74:	0f b6       	in	r0, 0x3f	; 63
     e76:	f8 94       	cli
     e78:	de bf       	out	0x3e, r29	; 62
     e7a:	0f be       	out	0x3f, r0	; 63
     e7c:	cd bf       	out	0x3d, r28	; 61
     e7e:	df 91       	pop	r29
     e80:	cf 91       	pop	r28
     e82:	08 95       	ret

00000e84 <convert>:
	return 0; 
}

     e84:	4f 92       	push	r4
     e86:	5f 92       	push	r5
     e88:	6f 92       	push	r6
     e8a:	7f 92       	push	r7
     e8c:	8f 92       	push	r8
     e8e:	9f 92       	push	r9
     e90:	af 92       	push	r10
     e92:	bf 92       	push	r11
     e94:	cf 92       	push	r12
     e96:	df 92       	push	r13
     e98:	ef 92       	push	r14
     e9a:	ff 92       	push	r15
     e9c:	cf 93       	push	r28
     e9e:	df 93       	push	r29
     ea0:	00 d0       	rcall	.+0      	; 0xea2 <convert+0x1e>
     ea2:	00 d0       	rcall	.+0      	; 0xea4 <convert+0x20>
     ea4:	00 d0       	rcall	.+0      	; 0xea6 <convert+0x22>
     ea6:	cd b7       	in	r28, 0x3d	; 61
     ea8:	de b7       	in	r29, 0x3e	; 62
     eaa:	9e 83       	std	Y+6, r25	; 0x06
     eac:	8d 83       	std	Y+5, r24	; 0x05
void convert(struct DATA *GPS_Data)
     eae:	fc 01       	movw	r30, r24
     eb0:	61 81       	ldd	r22, Z+1	; 0x01
     eb2:	70 e0       	ldi	r23, 0x00	; 0
     eb4:	80 e0       	ldi	r24, 0x00	; 0
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     ebc:	20 e0       	ldi	r18, 0x00	; 0
     ebe:	30 e0       	ldi	r19, 0x00	; 0
     ec0:	40 e7       	ldi	r20, 0x70	; 112
     ec2:	52 e4       	ldi	r21, 0x42	; 66
     ec4:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     ec8:	6b 01       	movw	r12, r22
     eca:	7c 01       	movw	r14, r24
     ecc:	ed 81       	ldd	r30, Y+5	; 0x05
     ece:	fe 81       	ldd	r31, Y+6	; 0x06
     ed0:	62 81       	ldd	r22, Z+2	; 0x02
     ed2:	73 81       	ldd	r23, Z+3	; 0x03
     ed4:	84 81       	ldd	r24, Z+4	; 0x04
     ed6:	95 81       	ldd	r25, Z+5	; 0x05
     ed8:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__floatunsisf>
     edc:	20 e0       	ldi	r18, 0x00	; 0
     ede:	3b e1       	ldi	r19, 0x1B	; 27
     ee0:	47 eb       	ldi	r20, 0xB7	; 183
     ee2:	5a e4       	ldi	r21, 0x4A	; 74
     ee4:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     ee8:	69 83       	std	Y+1, r22	; 0x01
     eea:	7a 83       	std	Y+2, r23	; 0x02
     eec:	8b 83       	std	Y+3, r24	; 0x03
     eee:	9c 83       	std	Y+4, r25	; 0x04
     ef0:	ed 81       	ldd	r30, Y+5	; 0x05
     ef2:	fe 81       	ldd	r31, Y+6	; 0x06
     ef4:	60 81       	ld	r22, Z
     ef6:	70 e0       	ldi	r23, 0x00	; 0
     ef8:	80 e0       	ldi	r24, 0x00	; 0
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     f00:	a7 01       	movw	r20, r14
     f02:	96 01       	movw	r18, r12
     f04:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     f08:	29 81       	ldd	r18, Y+1	; 0x01
     f0a:	3a 81       	ldd	r19, Y+2	; 0x02
     f0c:	4b 81       	ldd	r20, Y+3	; 0x03
     f0e:	5c 81       	ldd	r21, Y+4	; 0x04
     f10:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     f14:	ed 81       	ldd	r30, Y+5	; 0x05
     f16:	fe 81       	ldd	r31, Y+6	; 0x06
     f18:	66 83       	std	Z+6, r22	; 0x06
     f1a:	77 83       	std	Z+7, r23	; 0x07
     f1c:	80 87       	std	Z+8, r24	; 0x08
     f1e:	91 87       	std	Z+9, r25	; 0x09
{
     f20:	60 89       	ldd	r22, Z+16	; 0x10
     f22:	70 e0       	ldi	r23, 0x00	; 0
     f24:	80 e0       	ldi	r24, 0x00	; 0
     f26:	90 e0       	ldi	r25, 0x00	; 0
     f28:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     f2c:	20 e0       	ldi	r18, 0x00	; 0
     f2e:	30 e0       	ldi	r19, 0x00	; 0
     f30:	40 e7       	ldi	r20, 0x70	; 112
     f32:	52 e4       	ldi	r21, 0x42	; 66
     f34:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     f38:	4b 01       	movw	r8, r22
     f3a:	5c 01       	movw	r10, r24
     f3c:	ed 81       	ldd	r30, Y+5	; 0x05
     f3e:	fe 81       	ldd	r31, Y+6	; 0x06
     f40:	61 89       	ldd	r22, Z+17	; 0x11
     f42:	72 89       	ldd	r23, Z+18	; 0x12
     f44:	83 89       	ldd	r24, Z+19	; 0x13
     f46:	94 89       	ldd	r25, Z+20	; 0x14
     f48:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <__floatunsisf>
     f4c:	20 e0       	ldi	r18, 0x00	; 0
     f4e:	3b e1       	ldi	r19, 0x1B	; 27
     f50:	47 eb       	ldi	r20, 0xB7	; 183
     f52:	5a e4       	ldi	r21, 0x4A	; 74
     f54:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__divsf3>
     f58:	2b 01       	movw	r4, r22
     f5a:	3c 01       	movw	r6, r24
     f5c:	ed 81       	ldd	r30, Y+5	; 0x05
     f5e:	fe 81       	ldd	r31, Y+6	; 0x06
     f60:	67 85       	ldd	r22, Z+15	; 0x0f
     f62:	70 e0       	ldi	r23, 0x00	; 0
     f64:	80 e0       	ldi	r24, 0x00	; 0
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	0e 94 63 0b 	call	0x16c6	; 0x16c6 <__floatsisf>
     f6c:	a5 01       	movw	r20, r10
     f6e:	94 01       	movw	r18, r8
     f70:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     f74:	a3 01       	movw	r20, r6
     f76:	92 01       	movw	r18, r4
     f78:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     f7c:	ed 81       	ldd	r30, Y+5	; 0x05
     f7e:	fe 81       	ldd	r31, Y+6	; 0x06
     f80:	65 8b       	std	Z+21, r22	; 0x15
     f82:	76 8b       	std	Z+22, r23	; 0x16
     f84:	87 8b       	std	Z+23, r24	; 0x17
     f86:	90 8f       	std	Z+24, r25	; 0x18
	GPS_Data->LAT_Float = GPS_Data->LAT_Degree + (GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0);
     f88:	a3 01       	movw	r20, r6
     f8a:	92 01       	movw	r18, r4
     f8c:	c5 01       	movw	r24, r10
     f8e:	b4 01       	movw	r22, r8
     f90:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     f94:	20 e0       	ldi	r18, 0x00	; 0
     f96:	34 e2       	ldi	r19, 0x24	; 36
     f98:	44 e7       	ldi	r20, 0x74	; 116
     f9a:	59 e4       	ldi	r21, 0x49	; 73
     f9c:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     fa0:	0e 94 32 0b 	call	0x1664	; 0x1664 <__fixunssfsi>
     fa4:	ed 81       	ldd	r30, Y+5	; 0x05
     fa6:	fe 81       	ldd	r31, Y+6	; 0x06
     fa8:	61 8f       	std	Z+25, r22	; 0x19
     faa:	72 8f       	std	Z+26, r23	; 0x1a
     fac:	83 8f       	std	Z+27, r24	; 0x1b
     fae:	94 8f       	std	Z+28, r25	; 0x1c
	GPS_Data->LON_Float = GPS_Data->LON_Degree + (GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0);
     fb0:	29 81       	ldd	r18, Y+1	; 0x01
     fb2:	3a 81       	ldd	r19, Y+2	; 0x02
     fb4:	4b 81       	ldd	r20, Y+3	; 0x03
     fb6:	5c 81       	ldd	r21, Y+4	; 0x04
     fb8:	c7 01       	movw	r24, r14
     fba:	b6 01       	movw	r22, r12
     fbc:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__addsf3>
     fc0:	20 e0       	ldi	r18, 0x00	; 0
     fc2:	34 e2       	ldi	r19, 0x24	; 36
     fc4:	44 e7       	ldi	r20, 0x74	; 116
     fc6:	59 e4       	ldi	r21, 0x49	; 73
     fc8:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
     fcc:	0e 94 32 0b 	call	0x1664	; 0x1664 <__fixunssfsi>
     fd0:	ed 81       	ldd	r30, Y+5	; 0x05
     fd2:	fe 81       	ldd	r31, Y+6	; 0x06
     fd4:	62 87       	std	Z+10, r22	; 0x0a
     fd6:	73 87       	std	Z+11, r23	; 0x0b
     fd8:	84 87       	std	Z+12, r24	; 0x0c
     fda:	95 87       	std	Z+13, r25	; 0x0d
	GPS_Data->LON_FINAL =  ((GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0))  *1000000;
     fdc:	26 96       	adiw	r28, 0x06	; 6
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	f8 94       	cli
     fe2:	de bf       	out	0x3e, r29	; 62
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	cd bf       	out	0x3d, r28	; 61
     fe8:	df 91       	pop	r29
     fea:	cf 91       	pop	r28
     fec:	ff 90       	pop	r15
     fee:	ef 90       	pop	r14
     ff0:	df 90       	pop	r13
     ff2:	cf 90       	pop	r12
     ff4:	bf 90       	pop	r11
     ff6:	af 90       	pop	r10
     ff8:	9f 90       	pop	r9
     ffa:	8f 90       	pop	r8
     ffc:	7f 90       	pop	r7
     ffe:	6f 90       	pop	r6
    1000:	5f 90       	pop	r5
    1002:	4f 90       	pop	r4
    1004:	08 95       	ret

00001006 <GPS_Decode>:
	GPS_Data->LAT_FINAL = ((GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0)) *1000000;
}

    1006:	2f 92       	push	r2
    1008:	3f 92       	push	r3
    100a:	4f 92       	push	r4
    100c:	5f 92       	push	r5
    100e:	6f 92       	push	r6
    1010:	7f 92       	push	r7
    1012:	8f 92       	push	r8
    1014:	9f 92       	push	r9
    1016:	af 92       	push	r10
    1018:	bf 92       	push	r11
    101a:	cf 92       	push	r12
    101c:	df 92       	push	r13
    101e:	ef 92       	push	r14
    1020:	ff 92       	push	r15
    1022:	0f 93       	push	r16
    1024:	1f 93       	push	r17
    1026:	cf 93       	push	r28
    1028:	df 93       	push	r29
    102a:	00 d0       	rcall	.+0      	; 0x102c <GPS_Decode+0x26>
    102c:	00 d0       	rcall	.+0      	; 0x102e <GPS_Decode+0x28>
    102e:	00 d0       	rcall	.+0      	; 0x1030 <GPS_Decode+0x2a>
    1030:	cd b7       	in	r28, 0x3d	; 61
    1032:	de b7       	in	r29, 0x3e	; 62
    1034:	8c 01       	movw	r16, r24
    1036:	7b 01       	movw	r14, r22
int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
    1038:	0e 94 8b 06 	call	0xd16	; 0xd16 <checksum>
    103c:	88 23       	and	r24, r24
    103e:	09 f4       	brne	.+2      	; 0x1042 <GPS_Decode+0x3c>
    1040:	64 c1       	rjmp	.+712    	; 0x130a <GPS_Decode+0x304>
	///////////////////Checksum////////////////////////
	if(checksum(msg))  //! to disable during testing 
    1042:	c8 01       	movw	r24, r16
    1044:	0e 94 d4 06 	call	0xda8	; 0xda8 <MessageType>
    1048:	89 83       	std	Y+1, r24	; 0x01
	{
    104a:	c7 01       	movw	r24, r14
    104c:	0e 94 63 06 	call	0xcc6	; 0xcc6 <init>
		uint8_t type = MessageType(msg);
		init(GPS_Data);
    1050:	29 81       	ldd	r18, Y+1	; 0x01
    1052:	21 30       	cpi	r18, 0x01	; 1
    1054:	09 f0       	breq	.+2      	; 0x1058 <GPS_Decode+0x52>
    1056:	4d c1       	rjmp	.+666    	; 0x12f2 <GPS_Decode+0x2ec>
				uint32_t LatMin = 10000;
				
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
    1058:	d8 01       	movw	r26, r16
    105a:	16 96       	adiw	r26, 0x06	; 6
    105c:	8c 91       	ld	r24, X
    105e:	8a 32       	cpi	r24, 0x2A	; 42
    1060:	09 f4       	brne	.+2      	; 0x1064 <GPS_Decode+0x5e>
    1062:	47 c1       	rjmp	.+654    	; 0x12f2 <GPS_Decode+0x2ec>
    1064:	0f 2e       	mov	r0, r31
    1066:	f0 e1       	ldi	r31, 0x10	; 16
    1068:	4f 2e       	mov	r4, r31
    106a:	f7 e2       	ldi	r31, 0x27	; 39
    106c:	5f 2e       	mov	r5, r31
    106e:	61 2c       	mov	r6, r1
    1070:	71 2c       	mov	r7, r1
    1072:	f0 2d       	mov	r31, r0
    1074:	ba e0       	ldi	r27, 0x0A	; 10
    1076:	bc 83       	std	Y+4, r27	; 0x04
    1078:	e4 e6       	ldi	r30, 0x64	; 100
    107a:	e9 83       	std	Y+1, r30	; 0x01
    107c:	c1 2c       	mov	r12, r1
    107e:	0f 2e       	mov	r0, r31
    1080:	f0 e1       	ldi	r31, 0x10	; 16
    1082:	8f 2e       	mov	r8, r31
    1084:	f7 e2       	ldi	r31, 0x27	; 39
    1086:	9f 2e       	mov	r9, r31
    1088:	a1 2c       	mov	r10, r1
    108a:	b1 2c       	mov	r11, r1
    108c:	f0 2d       	mov	r31, r0
    108e:	fa e0       	ldi	r31, 0x0A	; 10
    1090:	fb 83       	std	Y+3, r31	; 0x03
    1092:	2a e0       	ldi	r18, 0x0A	; 10
    1094:	2a 83       	std	Y+2, r18	; 0x02
    1096:	d1 2c       	mov	r13, r1
    1098:	0f 2e       	mov	r0, r31
    109a:	fa e0       	ldi	r31, 0x0A	; 10
    109c:	3f 2e       	mov	r3, r31
    109e:	f0 2d       	mov	r31, r0
    10a0:	1e 82       	std	Y+6, r1	; 0x06
    10a2:	96 e0       	ldi	r25, 0x06	; 6
								{
									GPS_Data->LON_Degree += (msg[i]-48) * LonDegree;
									LonDegree /= 10;
								}
								if((LonCount>=3) && (LonCount<5))
								{
    10a4:	0f 2e       	mov	r0, r31
    10a6:	fd ec       	ldi	r31, 0xCD	; 205
    10a8:	2f 2e       	mov	r2, r31
    10aa:	f0 2d       	mov	r31, r0
    10ac:	9d 83       	std	Y+5, r25	; 0x05
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
    10ae:	8c 32       	cpi	r24, 0x2C	; 44
    10b0:	31 f4       	brne	.+12     	; 0x10be <GPS_Decode+0xb8>
				{
					if(msg[i] == ',')
    10b2:	be 81       	ldd	r27, Y+6	; 0x06
    10b4:	bf 5f       	subi	r27, 0xFF	; 255
    10b6:	be 83       	std	Y+6, r27	; 0x06
					{
    10b8:	ed 81       	ldd	r30, Y+5	; 0x05
    10ba:	ef 5f       	subi	r30, 0xFF	; 255
    10bc:	ed 83       	std	Y+5, r30	; 0x05
						CommaCounter++;
						i++;
					}
					
    10be:	fe 81       	ldd	r31, Y+6	; 0x06
    10c0:	f4 30       	cpi	r31, 0x04	; 4
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <GPS_Decode+0xc0>
    10c4:	7c c0       	rjmp	.+248    	; 0x11be <GPS_Decode+0x1b8>
    10c6:	30 f4       	brcc	.+12     	; 0x10d4 <GPS_Decode+0xce>
    10c8:	f2 30       	cpi	r31, 0x02	; 2
    10ca:	71 f0       	breq	.+28     	; 0x10e8 <GPS_Decode+0xe2>
    10cc:	f3 30       	cpi	r31, 0x03	; 3
    10ce:	09 f4       	brne	.+2      	; 0x10d2 <GPS_Decode+0xcc>
    10d0:	68 c0       	rjmp	.+208    	; 0x11a2 <GPS_Decode+0x19c>
    10d2:	05 c1       	rjmp	.+522    	; 0x12de <GPS_Decode+0x2d8>
    10d4:	2e 81       	ldd	r18, Y+6	; 0x06
    10d6:	26 30       	cpi	r18, 0x06	; 6
    10d8:	09 f4       	brne	.+2      	; 0x10dc <GPS_Decode+0xd6>
    10da:	dd c0       	rjmp	.+442    	; 0x1296 <GPS_Decode+0x290>
    10dc:	08 f4       	brcc	.+2      	; 0x10e0 <GPS_Decode+0xda>
    10de:	ce c0       	rjmp	.+412    	; 0x127c <GPS_Decode+0x276>
    10e0:	2d 30       	cpi	r18, 0x0D	; 13
    10e2:	09 f4       	brne	.+2      	; 0x10e6 <GPS_Decode+0xe0>
    10e4:	e3 c0       	rjmp	.+454    	; 0x12ac <GPS_Decode+0x2a6>
    10e6:	fb c0       	rjmp	.+502    	; 0x12de <GPS_Decode+0x2d8>
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
					{
						case 2:		//Latitude
    10e8:	f8 01       	movw	r30, r16
    10ea:	8d 81       	ldd	r24, Y+5	; 0x05
    10ec:	e8 0f       	add	r30, r24
    10ee:	f1 1d       	adc	r31, r1
    10f0:	80 81       	ld	r24, Z
    10f2:	98 2f       	mov	r25, r24
    10f4:	9d 7f       	andi	r25, 0xFD	; 253
    10f6:	9c 32       	cpi	r25, 0x2C	; 44
    10f8:	09 f4       	brne	.+2      	; 0x10fc <GPS_Decode+0xf6>
    10fa:	f1 c0       	rjmp	.+482    	; 0x12de <GPS_Decode+0x2d8>
						{
							if((msg[i] != '.') && (msg[i] != ','))
    10fc:	91 e0       	ldi	r25, 0x01	; 1
    10fe:	9d 15       	cp	r25, r13
    1100:	88 f0       	brcs	.+34     	; 0x1124 <GPS_Decode+0x11e>
							{
								if(LatCount<2)
    1102:	80 53       	subi	r24, 0x30	; 48
    1104:	d7 01       	movw	r26, r14
    1106:	9c 91       	ld	r25, X
    1108:	ba 81       	ldd	r27, Y+2	; 0x02
    110a:	8b 9f       	mul	r24, r27
    110c:	90 0d       	add	r25, r0
    110e:	11 24       	eor	r1, r1
    1110:	d7 01       	movw	r26, r14
    1112:	9c 93       	st	X, r25
								{
    1114:	ba 81       	ldd	r27, Y+2	; 0x02
    1116:	b2 9d       	mul	r27, r2
    1118:	81 2d       	mov	r24, r1
    111a:	11 24       	eor	r1, r1
    111c:	86 95       	lsr	r24
    111e:	86 95       	lsr	r24
    1120:	86 95       	lsr	r24
    1122:	8a 83       	std	Y+2, r24	; 0x02
									GPS_Data->LAT_Degree += (msg[i]-48) * LatDegree;
									LatDegree /= 10;
    1124:	8e ef       	ldi	r24, 0xFE	; 254
    1126:	8d 0d       	add	r24, r13
    1128:	82 30       	cpi	r24, 0x02	; 2
    112a:	a0 f4       	brcc	.+40     	; 0x1154 <GPS_Decode+0x14e>
								}
								if((LatCount>=2) && (LatCount<4))
    112c:	90 81       	ld	r25, Z
    112e:	90 53       	subi	r25, 0x30	; 48
    1130:	d7 01       	movw	r26, r14
    1132:	11 96       	adiw	r26, 0x01	; 1
    1134:	8c 91       	ld	r24, X
    1136:	bb 81       	ldd	r27, Y+3	; 0x03
    1138:	9b 9f       	mul	r25, r27
    113a:	80 0d       	add	r24, r0
    113c:	11 24       	eor	r1, r1
    113e:	d7 01       	movw	r26, r14
    1140:	11 96       	adiw	r26, 0x01	; 1
    1142:	8c 93       	st	X, r24
								{
    1144:	bb 81       	ldd	r27, Y+3	; 0x03
    1146:	b2 9d       	mul	r27, r2
    1148:	81 2d       	mov	r24, r1
    114a:	11 24       	eor	r1, r1
    114c:	86 95       	lsr	r24
    114e:	86 95       	lsr	r24
    1150:	86 95       	lsr	r24
    1152:	8b 83       	std	Y+3, r24	; 0x03
									GPS_Data->LAT_Min += (msg[i]-48) * LatHour;
									LatHour /= 10;
    1154:	23 e0       	ldi	r18, 0x03	; 3
    1156:	2d 15       	cp	r18, r13
    1158:	18 f5       	brcc	.+70     	; 0x11a0 <GPS_Decode+0x19a>
								}
								if((LatCount>=4))
    115a:	a0 81       	ld	r26, Z
    115c:	b0 e0       	ldi	r27, 0x00	; 0
    115e:	d0 97       	sbiw	r26, 0x30	; 48
    1160:	a5 01       	movw	r20, r10
    1162:	94 01       	movw	r18, r8
    1164:	0e 94 05 11 	call	0x220a	; 0x220a <__mulshisi3>
    1168:	d7 01       	movw	r26, r14
    116a:	12 96       	adiw	r26, 0x02	; 2
    116c:	2d 91       	ld	r18, X+
    116e:	3d 91       	ld	r19, X+
    1170:	4d 91       	ld	r20, X+
    1172:	5c 91       	ld	r21, X
    1174:	15 97       	sbiw	r26, 0x05	; 5
    1176:	dc 01       	movw	r26, r24
    1178:	cb 01       	movw	r24, r22
    117a:	82 0f       	add	r24, r18
    117c:	93 1f       	adc	r25, r19
    117e:	a4 1f       	adc	r26, r20
    1180:	b5 1f       	adc	r27, r21
    1182:	f7 01       	movw	r30, r14
    1184:	82 83       	std	Z+2, r24	; 0x02
    1186:	93 83       	std	Z+3, r25	; 0x03
    1188:	a4 83       	std	Z+4, r26	; 0x04
    118a:	b5 83       	std	Z+5, r27	; 0x05
								{
    118c:	c5 01       	movw	r24, r10
    118e:	b4 01       	movw	r22, r8
    1190:	2a e0       	ldi	r18, 0x0A	; 10
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	40 e0       	ldi	r20, 0x00	; 0
    1196:	50 e0       	ldi	r21, 0x00	; 0
    1198:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__udivmodsi4>
    119c:	49 01       	movw	r8, r18
    119e:	5a 01       	movw	r10, r20
									GPS_Data->LAT += (msg[i]-48) * LatMin;
									LatMin /= 10;
    11a0:	d3 94       	inc	r13
								LatCount++;
							}

						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
    11a2:	f8 01       	movw	r30, r16
    11a4:	2d 81       	ldd	r18, Y+5	; 0x05
    11a6:	e2 0f       	add	r30, r18
    11a8:	f1 1d       	adc	r31, r1
    11aa:	80 81       	ld	r24, Z
    11ac:	9f eb       	ldi	r25, 0xBF	; 191
    11ae:	98 0f       	add	r25, r24
    11b0:	9a 31       	cpi	r25, 0x1A	; 26
    11b2:	08 f0       	brcs	.+2      	; 0x11b6 <GPS_Decode+0x1b0>
    11b4:	94 c0       	rjmp	.+296    	; 0x12de <GPS_Decode+0x2d8>
						{
							if(msg[i]>='A' && msg[i]<='Z')
    11b6:	d7 01       	movw	r26, r14
    11b8:	1e 96       	adiw	r26, 0x0e	; 14
    11ba:	8c 93       	st	X, r24
    11bc:	90 c0       	rjmp	.+288    	; 0x12de <GPS_Decode+0x2d8>
								GPS_Data->LATdir = msg[i];
							}
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
    11be:	f8 01       	movw	r30, r16
    11c0:	bd 81       	ldd	r27, Y+5	; 0x05
    11c2:	eb 0f       	add	r30, r27
    11c4:	f1 1d       	adc	r31, r1
    11c6:	80 81       	ld	r24, Z
    11c8:	98 2f       	mov	r25, r24
    11ca:	9d 7f       	andi	r25, 0xFD	; 253
    11cc:	9c 32       	cpi	r25, 0x2C	; 44
    11ce:	09 f4       	brne	.+2      	; 0x11d2 <GPS_Decode+0x1cc>
    11d0:	86 c0       	rjmp	.+268    	; 0x12de <GPS_Decode+0x2d8>
						{
							if((msg[i] != '.') && (msg[i] != ','))
    11d2:	22 e0       	ldi	r18, 0x02	; 2
    11d4:	2c 15       	cp	r18, r12
    11d6:	98 f0       	brcs	.+38     	; 0x11fe <GPS_Decode+0x1f8>
							{
								if(LonCount<3)
    11d8:	80 53       	subi	r24, 0x30	; 48
    11da:	d7 01       	movw	r26, r14
    11dc:	1f 96       	adiw	r26, 0x0f	; 15
    11de:	9c 91       	ld	r25, X
    11e0:	b9 81       	ldd	r27, Y+1	; 0x01
    11e2:	8b 9f       	mul	r24, r27
    11e4:	90 0d       	add	r25, r0
    11e6:	11 24       	eor	r1, r1
    11e8:	d7 01       	movw	r26, r14
    11ea:	1f 96       	adiw	r26, 0x0f	; 15
    11ec:	9c 93       	st	X, r25
								{
    11ee:	b9 81       	ldd	r27, Y+1	; 0x01
    11f0:	b2 9d       	mul	r27, r2
    11f2:	81 2d       	mov	r24, r1
    11f4:	11 24       	eor	r1, r1
    11f6:	86 95       	lsr	r24
    11f8:	86 95       	lsr	r24
    11fa:	86 95       	lsr	r24
    11fc:	89 83       	std	Y+1, r24	; 0x01
									GPS_Data->LON_Degree += (msg[i]-48) * LonDegree;
									LonDegree /= 10;
    11fe:	8d ef       	ldi	r24, 0xFD	; 253
    1200:	8c 0d       	add	r24, r12
    1202:	82 30       	cpi	r24, 0x02	; 2
    1204:	a0 f4       	brcc	.+40     	; 0x122e <GPS_Decode+0x228>
								}
								if((LonCount>=3) && (LonCount<5))
    1206:	90 81       	ld	r25, Z
    1208:	90 53       	subi	r25, 0x30	; 48
    120a:	d7 01       	movw	r26, r14
    120c:	50 96       	adiw	r26, 0x10	; 16
    120e:	8c 91       	ld	r24, X
    1210:	bc 81       	ldd	r27, Y+4	; 0x04
    1212:	9b 9f       	mul	r25, r27
    1214:	80 0d       	add	r24, r0
    1216:	11 24       	eor	r1, r1
    1218:	d7 01       	movw	r26, r14
    121a:	50 96       	adiw	r26, 0x10	; 16
    121c:	8c 93       	st	X, r24
								{
    121e:	bc 81       	ldd	r27, Y+4	; 0x04
    1220:	b2 9d       	mul	r27, r2
    1222:	81 2d       	mov	r24, r1
    1224:	11 24       	eor	r1, r1
    1226:	86 95       	lsr	r24
    1228:	86 95       	lsr	r24
    122a:	86 95       	lsr	r24
    122c:	8c 83       	std	Y+4, r24	; 0x04
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
									LonHour /= 10;
    122e:	24 e0       	ldi	r18, 0x04	; 4
    1230:	2c 15       	cp	r18, r12
    1232:	18 f5       	brcc	.+70     	; 0x127a <GPS_Decode+0x274>
								}
								if((LonCount>=5))
    1234:	a0 81       	ld	r26, Z
    1236:	b0 e0       	ldi	r27, 0x00	; 0
    1238:	d0 97       	sbiw	r26, 0x30	; 48
    123a:	a3 01       	movw	r20, r6
    123c:	92 01       	movw	r18, r4
    123e:	0e 94 05 11 	call	0x220a	; 0x220a <__mulshisi3>
    1242:	d7 01       	movw	r26, r14
    1244:	51 96       	adiw	r26, 0x11	; 17
    1246:	2d 91       	ld	r18, X+
    1248:	3d 91       	ld	r19, X+
    124a:	4d 91       	ld	r20, X+
    124c:	5c 91       	ld	r21, X
    124e:	54 97       	sbiw	r26, 0x14	; 20
    1250:	dc 01       	movw	r26, r24
    1252:	cb 01       	movw	r24, r22
    1254:	82 0f       	add	r24, r18
    1256:	93 1f       	adc	r25, r19
    1258:	a4 1f       	adc	r26, r20
    125a:	b5 1f       	adc	r27, r21
    125c:	f7 01       	movw	r30, r14
    125e:	81 8b       	std	Z+17, r24	; 0x11
    1260:	92 8b       	std	Z+18, r25	; 0x12
    1262:	a3 8b       	std	Z+19, r26	; 0x13
    1264:	b4 8b       	std	Z+20, r27	; 0x14
								{
    1266:	c3 01       	movw	r24, r6
    1268:	b2 01       	movw	r22, r4
    126a:	2a e0       	ldi	r18, 0x0A	; 10
    126c:	30 e0       	ldi	r19, 0x00	; 0
    126e:	40 e0       	ldi	r20, 0x00	; 0
    1270:	50 e0       	ldi	r21, 0x00	; 0
    1272:	0e 94 e3 10 	call	0x21c6	; 0x21c6 <__udivmodsi4>
    1276:	29 01       	movw	r4, r18
    1278:	3a 01       	movw	r6, r20
									GPS_Data->LON += (msg[i]-48) * LonMin;
									LonMin /= 10;
    127a:	c3 94       	inc	r12
								}
								LonCount++;	
							}
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
    127c:	f8 01       	movw	r30, r16
    127e:	2d 81       	ldd	r18, Y+5	; 0x05
    1280:	e2 0f       	add	r30, r18
    1282:	f1 1d       	adc	r31, r1
    1284:	80 81       	ld	r24, Z
    1286:	9f eb       	ldi	r25, 0xBF	; 191
    1288:	98 0f       	add	r25, r24
    128a:	9a 31       	cpi	r25, 0x1A	; 26
    128c:	40 f5       	brcc	.+80     	; 0x12de <GPS_Decode+0x2d8>
						{
							if(msg[i]>='A' && msg[i]<='Z')
    128e:	d7 01       	movw	r26, r14
    1290:	5d 96       	adiw	r26, 0x1d	; 29
    1292:	8c 93       	st	X, r24
    1294:	24 c0       	rjmp	.+72     	; 0x12de <GPS_Decode+0x2d8>
								GPS_Data->LONdir = msg[i];
							}
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
    1296:	f8 01       	movw	r30, r16
    1298:	bd 81       	ldd	r27, Y+5	; 0x05
    129a:	eb 0f       	add	r30, r27
    129c:	f1 1d       	adc	r31, r1
    129e:	80 81       	ld	r24, Z
    12a0:	80 53       	subi	r24, 0x30	; 48
    12a2:	86 30       	cpi	r24, 0x06	; 6
    12a4:	e0 f4       	brcc	.+56     	; 0x12de <GPS_Decode+0x2d8>
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
    12a6:	f7 01       	movw	r30, r14
    12a8:	86 8f       	std	Z+30, r24	; 0x1e
    12aa:	19 c0       	rjmp	.+50     	; 0x12de <GPS_Decode+0x2d8>
							}
							
							break;
						}
						//////////////////////////////////////////////////
						case 13: //AGE
    12ac:	f8 01       	movw	r30, r16
    12ae:	2d 81       	ldd	r18, Y+5	; 0x05
    12b0:	e2 0f       	add	r30, r18
    12b2:	f1 1d       	adc	r31, r1
    12b4:	80 81       	ld	r24, Z
    12b6:	98 2f       	mov	r25, r24
    12b8:	9d 7f       	andi	r25, 0xFD	; 253
    12ba:	9c 32       	cpi	r25, 0x2C	; 44
    12bc:	81 f0       	breq	.+32     	; 0x12de <GPS_Decode+0x2d8>
						{
							if((msg[i] != '.') && (msg[i] != ','))
    12be:	80 53       	subi	r24, 0x30	; 48
    12c0:	d7 01       	movw	r26, r14
    12c2:	5f 96       	adiw	r26, 0x1f	; 31
    12c4:	9c 91       	ld	r25, X
    12c6:	5f 97       	sbiw	r26, 0x1f	; 31
    12c8:	83 9d       	mul	r24, r3
    12ca:	90 0d       	add	r25, r0
    12cc:	11 24       	eor	r1, r1
    12ce:	5f 96       	adiw	r26, 0x1f	; 31
    12d0:	9c 93       	st	X, r25
							{
    12d2:	32 9c       	mul	r3, r2
    12d4:	31 2c       	mov	r3, r1
    12d6:	11 24       	eor	r1, r1
    12d8:	36 94       	lsr	r3
    12da:	36 94       	lsr	r3
    12dc:	36 94       	lsr	r3
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
							age /= 10;
							}
							break;
						}
					}
    12de:	bd 81       	ldd	r27, Y+5	; 0x05
    12e0:	bf 5f       	subi	r27, 0xFF	; 255
    12e2:	bd 83       	std	Y+5, r27	; 0x05
				uint32_t LatMin = 10000;
				
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
    12e4:	f8 01       	movw	r30, r16
    12e6:	eb 0f       	add	r30, r27
    12e8:	f1 1d       	adc	r31, r1
    12ea:	80 81       	ld	r24, Z
    12ec:	8a 32       	cpi	r24, 0x2A	; 42
    12ee:	09 f0       	breq	.+2      	; 0x12f2 <GPS_Decode+0x2ec>
    12f0:	de ce       	rjmp	.-580    	; 0x10ae <GPS_Decode+0xa8>
			///////////////////////////END GGA////////////////////////////////
			case GPVTG:
			{
				
			}	
		}			//End switch type
    12f2:	c7 01       	movw	r24, r14
    12f4:	0e 94 42 07 	call	0xe84	; 0xe84 <convert>
		////////////////////////////////////////////////////////
		convert(GPS_Data);
		
    12f8:	81 e0       	ldi	r24, 0x01	; 1
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	d7 01       	movw	r26, r14
    12fe:	5e 96       	adiw	r26, 0x1e	; 30
    1300:	2c 91       	ld	r18, X
    1302:	24 30       	cpi	r18, 0x04	; 4
    1304:	20 f4       	brcc	.+8      	; 0x130e <GPS_Decode+0x308>
    1306:	80 e0       	ldi	r24, 0x00	; 0
    1308:	02 c0       	rjmp	.+4      	; 0x130e <GPS_Decode+0x308>
		else
		return 0;
		
		//return 1;
	}
	else
    130a:	80 e0       	ldi	r24, 0x00	; 0
    130c:	90 e0       	ldi	r25, 0x00	; 0
	{	//if chechsum false return 0
		return 0;
    130e:	26 96       	adiw	r28, 0x06	; 6
    1310:	0f b6       	in	r0, 0x3f	; 63
    1312:	f8 94       	cli
    1314:	de bf       	out	0x3e, r29	; 62
    1316:	0f be       	out	0x3f, r0	; 63
    1318:	cd bf       	out	0x3d, r28	; 61
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	ff 90       	pop	r15
    1324:	ef 90       	pop	r14
    1326:	df 90       	pop	r13
    1328:	cf 90       	pop	r12
    132a:	bf 90       	pop	r11
    132c:	af 90       	pop	r10
    132e:	9f 90       	pop	r9
    1330:	8f 90       	pop	r8
    1332:	7f 90       	pop	r7
    1334:	6f 90       	pop	r6
    1336:	5f 90       	pop	r5
    1338:	4f 90       	pop	r4
    133a:	3f 90       	pop	r3
    133c:	2f 90       	pop	r2
    133e:	08 95       	ret

00001340 <usart_init>:
	UDR0 = data; //data to be sent
}

void usart_init(void)
{
	UBRR0H = (uint8_t)(BAUD_PRESCALER>>8);
    1340:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALER);
    1344:	83 e3       	ldi	r24, 0x33	; 51
    1346:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)| (1<<RXCIE0);
    134a:	88 e9       	ldi	r24, 0x98	; 152
    134c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = ((1<<UCSZ00)|(1<<UCSZ01));
    1350:	86 e0       	ldi	r24, 0x06	; 6
    1352:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    1356:	08 95       	ret

00001358 <__vector_18>:
}


ISR(USART_RX_vect)
{		
    1358:	1f 92       	push	r1
    135a:	0f 92       	push	r0
    135c:	0f b6       	in	r0, 0x3f	; 63
    135e:	0f 92       	push	r0
    1360:	11 24       	eor	r1, r1
    1362:	2f 93       	push	r18
    1364:	3f 93       	push	r19
    1366:	4f 93       	push	r20
    1368:	5f 93       	push	r21
    136a:	6f 93       	push	r22
    136c:	7f 93       	push	r23
    136e:	8f 93       	push	r24
    1370:	9f 93       	push	r25
    1372:	af 93       	push	r26
    1374:	bf 93       	push	r27
    1376:	ef 93       	push	r30
    1378:	ff 93       	push	r31
	read_gps_data();
    137a:	0e 94 21 01 	call	0x242	; 0x242 <read_gps_data>
    137e:	ff 91       	pop	r31
    1380:	ef 91       	pop	r30
    1382:	bf 91       	pop	r27
    1384:	af 91       	pop	r26
    1386:	9f 91       	pop	r25
    1388:	8f 91       	pop	r24
    138a:	7f 91       	pop	r23
    138c:	6f 91       	pop	r22
    138e:	5f 91       	pop	r21
    1390:	4f 91       	pop	r20
    1392:	3f 91       	pop	r19
    1394:	2f 91       	pop	r18
    1396:	0f 90       	pop	r0
    1398:	0f be       	out	0x3f, r0	; 63
    139a:	0f 90       	pop	r0
    139c:	1f 90       	pop	r1
    139e:	18 95       	reti

000013a0 <__subsf3>:
    13a0:	50 58       	subi	r21, 0x80	; 128

000013a2 <__addsf3>:
    13a2:	bb 27       	eor	r27, r27
    13a4:	aa 27       	eor	r26, r26
    13a6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__addsf3x>
    13aa:	0c 94 2b 0c 	jmp	0x1856	; 0x1856 <__fp_round>
    13ae:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__fp_pscA>
    13b2:	38 f0       	brcs	.+14     	; 0x13c2 <__addsf3+0x20>
    13b4:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__fp_pscB>
    13b8:	20 f0       	brcs	.+8      	; 0x13c2 <__addsf3+0x20>
    13ba:	39 f4       	brne	.+14     	; 0x13ca <__addsf3+0x28>
    13bc:	9f 3f       	cpi	r25, 0xFF	; 255
    13be:	19 f4       	brne	.+6      	; 0x13c6 <__addsf3+0x24>
    13c0:	26 f4       	brtc	.+8      	; 0x13ca <__addsf3+0x28>
    13c2:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__fp_nan>
    13c6:	0e f4       	brtc	.+2      	; 0x13ca <__addsf3+0x28>
    13c8:	e0 95       	com	r30
    13ca:	e7 fb       	bst	r30, 7
    13cc:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__fp_inf>

000013d0 <__addsf3x>:
    13d0:	e9 2f       	mov	r30, r25
    13d2:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fp_split3>
    13d6:	58 f3       	brcs	.-42     	; 0x13ae <__addsf3+0xc>
    13d8:	ba 17       	cp	r27, r26
    13da:	62 07       	cpc	r22, r18
    13dc:	73 07       	cpc	r23, r19
    13de:	84 07       	cpc	r24, r20
    13e0:	95 07       	cpc	r25, r21
    13e2:	20 f0       	brcs	.+8      	; 0x13ec <__addsf3x+0x1c>
    13e4:	79 f4       	brne	.+30     	; 0x1404 <__addsf3x+0x34>
    13e6:	a6 f5       	brtc	.+104    	; 0x1450 <__addsf3x+0x80>
    13e8:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__fp_zero>
    13ec:	0e f4       	brtc	.+2      	; 0x13f0 <__addsf3x+0x20>
    13ee:	e0 95       	com	r30
    13f0:	0b 2e       	mov	r0, r27
    13f2:	ba 2f       	mov	r27, r26
    13f4:	a0 2d       	mov	r26, r0
    13f6:	0b 01       	movw	r0, r22
    13f8:	b9 01       	movw	r22, r18
    13fa:	90 01       	movw	r18, r0
    13fc:	0c 01       	movw	r0, r24
    13fe:	ca 01       	movw	r24, r20
    1400:	a0 01       	movw	r20, r0
    1402:	11 24       	eor	r1, r1
    1404:	ff 27       	eor	r31, r31
    1406:	59 1b       	sub	r21, r25
    1408:	99 f0       	breq	.+38     	; 0x1430 <__addsf3x+0x60>
    140a:	59 3f       	cpi	r21, 0xF9	; 249
    140c:	50 f4       	brcc	.+20     	; 0x1422 <__addsf3x+0x52>
    140e:	50 3e       	cpi	r21, 0xE0	; 224
    1410:	68 f1       	brcs	.+90     	; 0x146c <__addsf3x+0x9c>
    1412:	1a 16       	cp	r1, r26
    1414:	f0 40       	sbci	r31, 0x00	; 0
    1416:	a2 2f       	mov	r26, r18
    1418:	23 2f       	mov	r18, r19
    141a:	34 2f       	mov	r19, r20
    141c:	44 27       	eor	r20, r20
    141e:	58 5f       	subi	r21, 0xF8	; 248
    1420:	f3 cf       	rjmp	.-26     	; 0x1408 <__addsf3x+0x38>
    1422:	46 95       	lsr	r20
    1424:	37 95       	ror	r19
    1426:	27 95       	ror	r18
    1428:	a7 95       	ror	r26
    142a:	f0 40       	sbci	r31, 0x00	; 0
    142c:	53 95       	inc	r21
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__addsf3x+0x52>
    1430:	7e f4       	brtc	.+30     	; 0x1450 <__addsf3x+0x80>
    1432:	1f 16       	cp	r1, r31
    1434:	ba 0b       	sbc	r27, r26
    1436:	62 0b       	sbc	r22, r18
    1438:	73 0b       	sbc	r23, r19
    143a:	84 0b       	sbc	r24, r20
    143c:	ba f0       	brmi	.+46     	; 0x146c <__addsf3x+0x9c>
    143e:	91 50       	subi	r25, 0x01	; 1
    1440:	a1 f0       	breq	.+40     	; 0x146a <__addsf3x+0x9a>
    1442:	ff 0f       	add	r31, r31
    1444:	bb 1f       	adc	r27, r27
    1446:	66 1f       	adc	r22, r22
    1448:	77 1f       	adc	r23, r23
    144a:	88 1f       	adc	r24, r24
    144c:	c2 f7       	brpl	.-16     	; 0x143e <__addsf3x+0x6e>
    144e:	0e c0       	rjmp	.+28     	; 0x146c <__addsf3x+0x9c>
    1450:	ba 0f       	add	r27, r26
    1452:	62 1f       	adc	r22, r18
    1454:	73 1f       	adc	r23, r19
    1456:	84 1f       	adc	r24, r20
    1458:	48 f4       	brcc	.+18     	; 0x146c <__addsf3x+0x9c>
    145a:	87 95       	ror	r24
    145c:	77 95       	ror	r23
    145e:	67 95       	ror	r22
    1460:	b7 95       	ror	r27
    1462:	f7 95       	ror	r31
    1464:	9e 3f       	cpi	r25, 0xFE	; 254
    1466:	08 f0       	brcs	.+2      	; 0x146a <__addsf3x+0x9a>
    1468:	b0 cf       	rjmp	.-160    	; 0x13ca <__addsf3+0x28>
    146a:	93 95       	inc	r25
    146c:	88 0f       	add	r24, r24
    146e:	08 f0       	brcs	.+2      	; 0x1472 <__addsf3x+0xa2>
    1470:	99 27       	eor	r25, r25
    1472:	ee 0f       	add	r30, r30
    1474:	97 95       	ror	r25
    1476:	87 95       	ror	r24
    1478:	08 95       	ret
    147a:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__fp_pscA>
    147e:	60 f0       	brcs	.+24     	; 0x1498 <__addsf3x+0xc8>
    1480:	80 e8       	ldi	r24, 0x80	; 128
    1482:	91 e0       	ldi	r25, 0x01	; 1
    1484:	09 f4       	brne	.+2      	; 0x1488 <__addsf3x+0xb8>
    1486:	9e ef       	ldi	r25, 0xFE	; 254
    1488:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__fp_pscB>
    148c:	28 f0       	brcs	.+10     	; 0x1498 <__addsf3x+0xc8>
    148e:	40 e8       	ldi	r20, 0x80	; 128
    1490:	51 e0       	ldi	r21, 0x01	; 1
    1492:	71 f4       	brne	.+28     	; 0x14b0 <atan2+0x10>
    1494:	5e ef       	ldi	r21, 0xFE	; 254
    1496:	0c c0       	rjmp	.+24     	; 0x14b0 <atan2+0x10>
    1498:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__fp_nan>
    149c:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__fp_zero>

000014a0 <atan2>:
    14a0:	e9 2f       	mov	r30, r25
    14a2:	e0 78       	andi	r30, 0x80	; 128
    14a4:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fp_split3>
    14a8:	40 f3       	brcs	.-48     	; 0x147a <__addsf3x+0xaa>
    14aa:	09 2e       	mov	r0, r25
    14ac:	05 2a       	or	r0, r21
    14ae:	b1 f3       	breq	.-20     	; 0x149c <__addsf3x+0xcc>
    14b0:	26 17       	cp	r18, r22
    14b2:	37 07       	cpc	r19, r23
    14b4:	48 07       	cpc	r20, r24
    14b6:	59 07       	cpc	r21, r25
    14b8:	38 f0       	brcs	.+14     	; 0x14c8 <atan2+0x28>
    14ba:	0e 2e       	mov	r0, r30
    14bc:	07 f8       	bld	r0, 7
    14be:	e0 25       	eor	r30, r0
    14c0:	69 f0       	breq	.+26     	; 0x14dc <atan2+0x3c>
    14c2:	e0 25       	eor	r30, r0
    14c4:	e0 64       	ori	r30, 0x40	; 64
    14c6:	0a c0       	rjmp	.+20     	; 0x14dc <atan2+0x3c>
    14c8:	ef 63       	ori	r30, 0x3F	; 63
    14ca:	07 f8       	bld	r0, 7
    14cc:	00 94       	com	r0
    14ce:	07 fa       	bst	r0, 7
    14d0:	db 01       	movw	r26, r22
    14d2:	b9 01       	movw	r22, r18
    14d4:	9d 01       	movw	r18, r26
    14d6:	dc 01       	movw	r26, r24
    14d8:	ca 01       	movw	r24, r20
    14da:	ad 01       	movw	r20, r26
    14dc:	ef 93       	push	r30
    14de:	0e 94 d0 0a 	call	0x15a0	; 0x15a0 <__divsf3_pse>
    14e2:	0e 94 2b 0c 	call	0x1856	; 0x1856 <__fp_round>
    14e6:	0e 94 80 0a 	call	0x1500	; 0x1500 <atan>
    14ea:	5f 91       	pop	r21
    14ec:	55 23       	and	r21, r21
    14ee:	39 f0       	breq	.+14     	; 0x14fe <atan2+0x5e>
    14f0:	2b ed       	ldi	r18, 0xDB	; 219
    14f2:	3f e0       	ldi	r19, 0x0F	; 15
    14f4:	49 e4       	ldi	r20, 0x49	; 73
    14f6:	50 fd       	sbrc	r21, 0
    14f8:	49 ec       	ldi	r20, 0xC9	; 201
    14fa:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <__addsf3>
    14fe:	08 95       	ret

00001500 <atan>:
    1500:	df 93       	push	r29
    1502:	dd 27       	eor	r29, r29
    1504:	b9 2f       	mov	r27, r25
    1506:	bf 77       	andi	r27, 0x7F	; 127
    1508:	40 e8       	ldi	r20, 0x80	; 128
    150a:	5f e3       	ldi	r21, 0x3F	; 63
    150c:	16 16       	cp	r1, r22
    150e:	17 06       	cpc	r1, r23
    1510:	48 07       	cpc	r20, r24
    1512:	5b 07       	cpc	r21, r27
    1514:	18 f4       	brcc	.+6      	; 0x151c <atan+0x1c>
    1516:	d9 2f       	mov	r29, r25
    1518:	0e 94 7e 0c 	call	0x18fc	; 0x18fc <inverse>
    151c:	9f 93       	push	r25
    151e:	8f 93       	push	r24
    1520:	7f 93       	push	r23
    1522:	6f 93       	push	r22
    1524:	0e 94 39 0d 	call	0x1a72	; 0x1a72 <square>
    1528:	e8 e6       	ldi	r30, 0x68	; 104
    152a:	f0 e0       	ldi	r31, 0x00	; 0
    152c:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fp_powser>
    1530:	0e 94 2b 0c 	call	0x1856	; 0x1856 <__fp_round>
    1534:	2f 91       	pop	r18
    1536:	3f 91       	pop	r19
    1538:	4f 91       	pop	r20
    153a:	5f 91       	pop	r21
    153c:	0e 94 99 0c 	call	0x1932	; 0x1932 <__mulsf3x>
    1540:	dd 23       	and	r29, r29
    1542:	51 f0       	breq	.+20     	; 0x1558 <atan+0x58>
    1544:	90 58       	subi	r25, 0x80	; 128
    1546:	a2 ea       	ldi	r26, 0xA2	; 162
    1548:	2a ed       	ldi	r18, 0xDA	; 218
    154a:	3f e0       	ldi	r19, 0x0F	; 15
    154c:	49 ec       	ldi	r20, 0xC9	; 201
    154e:	5f e3       	ldi	r21, 0x3F	; 63
    1550:	d0 78       	andi	r29, 0x80	; 128
    1552:	5d 27       	eor	r21, r29
    1554:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__addsf3x>
    1558:	df 91       	pop	r29
    155a:	0c 94 2b 0c 	jmp	0x1856	; 0x1856 <__fp_round>

0000155e <__cmpsf2>:
    155e:	0e 94 9e 0b 	call	0x173c	; 0x173c <__fp_cmp>
    1562:	08 f4       	brcc	.+2      	; 0x1566 <__cmpsf2+0x8>
    1564:	81 e0       	ldi	r24, 0x01	; 1
    1566:	08 95       	ret

00001568 <cos>:
    1568:	0e 94 02 0c 	call	0x1804	; 0x1804 <__fp_rempio2>
    156c:	e3 95       	inc	r30
    156e:	0c 94 3c 0c 	jmp	0x1878	; 0x1878 <__fp_sinus>

00001572 <__divsf3>:
    1572:	0e 94 cd 0a 	call	0x159a	; 0x159a <__divsf3x>
    1576:	0c 94 2b 0c 	jmp	0x1856	; 0x1856 <__fp_round>
    157a:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__fp_pscB>
    157e:	58 f0       	brcs	.+22     	; 0x1596 <__divsf3+0x24>
    1580:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__fp_pscA>
    1584:	40 f0       	brcs	.+16     	; 0x1596 <__divsf3+0x24>
    1586:	29 f4       	brne	.+10     	; 0x1592 <__divsf3+0x20>
    1588:	5f 3f       	cpi	r21, 0xFF	; 255
    158a:	29 f0       	breq	.+10     	; 0x1596 <__divsf3+0x24>
    158c:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__fp_inf>
    1590:	51 11       	cpse	r21, r1
    1592:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__fp_szero>
    1596:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__fp_nan>

0000159a <__divsf3x>:
    159a:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fp_split3>
    159e:	68 f3       	brcs	.-38     	; 0x157a <__divsf3+0x8>

000015a0 <__divsf3_pse>:
    15a0:	99 23       	and	r25, r25
    15a2:	b1 f3       	breq	.-20     	; 0x1590 <__divsf3+0x1e>
    15a4:	55 23       	and	r21, r21
    15a6:	91 f3       	breq	.-28     	; 0x158c <__divsf3+0x1a>
    15a8:	95 1b       	sub	r25, r21
    15aa:	55 0b       	sbc	r21, r21
    15ac:	bb 27       	eor	r27, r27
    15ae:	aa 27       	eor	r26, r26
    15b0:	62 17       	cp	r22, r18
    15b2:	73 07       	cpc	r23, r19
    15b4:	84 07       	cpc	r24, r20
    15b6:	38 f0       	brcs	.+14     	; 0x15c6 <__divsf3_pse+0x26>
    15b8:	9f 5f       	subi	r25, 0xFF	; 255
    15ba:	5f 4f       	sbci	r21, 0xFF	; 255
    15bc:	22 0f       	add	r18, r18
    15be:	33 1f       	adc	r19, r19
    15c0:	44 1f       	adc	r20, r20
    15c2:	aa 1f       	adc	r26, r26
    15c4:	a9 f3       	breq	.-22     	; 0x15b0 <__divsf3_pse+0x10>
    15c6:	35 d0       	rcall	.+106    	; 0x1632 <__divsf3_pse+0x92>
    15c8:	0e 2e       	mov	r0, r30
    15ca:	3a f0       	brmi	.+14     	; 0x15da <__divsf3_pse+0x3a>
    15cc:	e0 e8       	ldi	r30, 0x80	; 128
    15ce:	32 d0       	rcall	.+100    	; 0x1634 <__divsf3_pse+0x94>
    15d0:	91 50       	subi	r25, 0x01	; 1
    15d2:	50 40       	sbci	r21, 0x00	; 0
    15d4:	e6 95       	lsr	r30
    15d6:	00 1c       	adc	r0, r0
    15d8:	ca f7       	brpl	.-14     	; 0x15cc <__divsf3_pse+0x2c>
    15da:	2b d0       	rcall	.+86     	; 0x1632 <__divsf3_pse+0x92>
    15dc:	fe 2f       	mov	r31, r30
    15de:	29 d0       	rcall	.+82     	; 0x1632 <__divsf3_pse+0x92>
    15e0:	66 0f       	add	r22, r22
    15e2:	77 1f       	adc	r23, r23
    15e4:	88 1f       	adc	r24, r24
    15e6:	bb 1f       	adc	r27, r27
    15e8:	26 17       	cp	r18, r22
    15ea:	37 07       	cpc	r19, r23
    15ec:	48 07       	cpc	r20, r24
    15ee:	ab 07       	cpc	r26, r27
    15f0:	b0 e8       	ldi	r27, 0x80	; 128
    15f2:	09 f0       	breq	.+2      	; 0x15f6 <__divsf3_pse+0x56>
    15f4:	bb 0b       	sbc	r27, r27
    15f6:	80 2d       	mov	r24, r0
    15f8:	bf 01       	movw	r22, r30
    15fa:	ff 27       	eor	r31, r31
    15fc:	93 58       	subi	r25, 0x83	; 131
    15fe:	5f 4f       	sbci	r21, 0xFF	; 255
    1600:	3a f0       	brmi	.+14     	; 0x1610 <__divsf3_pse+0x70>
    1602:	9e 3f       	cpi	r25, 0xFE	; 254
    1604:	51 05       	cpc	r21, r1
    1606:	78 f0       	brcs	.+30     	; 0x1626 <__divsf3_pse+0x86>
    1608:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__fp_inf>
    160c:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__fp_szero>
    1610:	5f 3f       	cpi	r21, 0xFF	; 255
    1612:	e4 f3       	brlt	.-8      	; 0x160c <__divsf3_pse+0x6c>
    1614:	98 3e       	cpi	r25, 0xE8	; 232
    1616:	d4 f3       	brlt	.-12     	; 0x160c <__divsf3_pse+0x6c>
    1618:	86 95       	lsr	r24
    161a:	77 95       	ror	r23
    161c:	67 95       	ror	r22
    161e:	b7 95       	ror	r27
    1620:	f7 95       	ror	r31
    1622:	9f 5f       	subi	r25, 0xFF	; 255
    1624:	c9 f7       	brne	.-14     	; 0x1618 <__divsf3_pse+0x78>
    1626:	88 0f       	add	r24, r24
    1628:	91 1d       	adc	r25, r1
    162a:	96 95       	lsr	r25
    162c:	87 95       	ror	r24
    162e:	97 f9       	bld	r25, 7
    1630:	08 95       	ret
    1632:	e1 e0       	ldi	r30, 0x01	; 1
    1634:	66 0f       	add	r22, r22
    1636:	77 1f       	adc	r23, r23
    1638:	88 1f       	adc	r24, r24
    163a:	bb 1f       	adc	r27, r27
    163c:	62 17       	cp	r22, r18
    163e:	73 07       	cpc	r23, r19
    1640:	84 07       	cpc	r24, r20
    1642:	ba 07       	cpc	r27, r26
    1644:	20 f0       	brcs	.+8      	; 0x164e <__divsf3_pse+0xae>
    1646:	62 1b       	sub	r22, r18
    1648:	73 0b       	sbc	r23, r19
    164a:	84 0b       	sbc	r24, r20
    164c:	ba 0b       	sbc	r27, r26
    164e:	ee 1f       	adc	r30, r30
    1650:	88 f7       	brcc	.-30     	; 0x1634 <__divsf3_pse+0x94>
    1652:	e0 95       	com	r30
    1654:	08 95       	ret

00001656 <__fixsfsi>:
    1656:	0e 94 32 0b 	call	0x1664	; 0x1664 <__fixunssfsi>
    165a:	68 94       	set
    165c:	b1 11       	cpse	r27, r1
    165e:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__fp_szero>
    1662:	08 95       	ret

00001664 <__fixunssfsi>:
    1664:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__fp_splitA>
    1668:	88 f0       	brcs	.+34     	; 0x168c <__fixunssfsi+0x28>
    166a:	9f 57       	subi	r25, 0x7F	; 127
    166c:	98 f0       	brcs	.+38     	; 0x1694 <__fixunssfsi+0x30>
    166e:	b9 2f       	mov	r27, r25
    1670:	99 27       	eor	r25, r25
    1672:	b7 51       	subi	r27, 0x17	; 23
    1674:	b0 f0       	brcs	.+44     	; 0x16a2 <__fixunssfsi+0x3e>
    1676:	e1 f0       	breq	.+56     	; 0x16b0 <__fixunssfsi+0x4c>
    1678:	66 0f       	add	r22, r22
    167a:	77 1f       	adc	r23, r23
    167c:	88 1f       	adc	r24, r24
    167e:	99 1f       	adc	r25, r25
    1680:	1a f0       	brmi	.+6      	; 0x1688 <__fixunssfsi+0x24>
    1682:	ba 95       	dec	r27
    1684:	c9 f7       	brne	.-14     	; 0x1678 <__fixunssfsi+0x14>
    1686:	14 c0       	rjmp	.+40     	; 0x16b0 <__fixunssfsi+0x4c>
    1688:	b1 30       	cpi	r27, 0x01	; 1
    168a:	91 f0       	breq	.+36     	; 0x16b0 <__fixunssfsi+0x4c>
    168c:	0e 94 72 0c 	call	0x18e4	; 0x18e4 <__fp_zero>
    1690:	b1 e0       	ldi	r27, 0x01	; 1
    1692:	08 95       	ret
    1694:	0c 94 72 0c 	jmp	0x18e4	; 0x18e4 <__fp_zero>
    1698:	67 2f       	mov	r22, r23
    169a:	78 2f       	mov	r23, r24
    169c:	88 27       	eor	r24, r24
    169e:	b8 5f       	subi	r27, 0xF8	; 248
    16a0:	39 f0       	breq	.+14     	; 0x16b0 <__fixunssfsi+0x4c>
    16a2:	b9 3f       	cpi	r27, 0xF9	; 249
    16a4:	cc f3       	brlt	.-14     	; 0x1698 <__fixunssfsi+0x34>
    16a6:	86 95       	lsr	r24
    16a8:	77 95       	ror	r23
    16aa:	67 95       	ror	r22
    16ac:	b3 95       	inc	r27
    16ae:	d9 f7       	brne	.-10     	; 0x16a6 <__fixunssfsi+0x42>
    16b0:	3e f4       	brtc	.+14     	; 0x16c0 <__fixunssfsi+0x5c>
    16b2:	90 95       	com	r25
    16b4:	80 95       	com	r24
    16b6:	70 95       	com	r23
    16b8:	61 95       	neg	r22
    16ba:	7f 4f       	sbci	r23, 0xFF	; 255
    16bc:	8f 4f       	sbci	r24, 0xFF	; 255
    16be:	9f 4f       	sbci	r25, 0xFF	; 255
    16c0:	08 95       	ret

000016c2 <__floatunsisf>:
    16c2:	e8 94       	clt
    16c4:	09 c0       	rjmp	.+18     	; 0x16d8 <__floatsisf+0x12>

000016c6 <__floatsisf>:
    16c6:	97 fb       	bst	r25, 7
    16c8:	3e f4       	brtc	.+14     	; 0x16d8 <__floatsisf+0x12>
    16ca:	90 95       	com	r25
    16cc:	80 95       	com	r24
    16ce:	70 95       	com	r23
    16d0:	61 95       	neg	r22
    16d2:	7f 4f       	sbci	r23, 0xFF	; 255
    16d4:	8f 4f       	sbci	r24, 0xFF	; 255
    16d6:	9f 4f       	sbci	r25, 0xFF	; 255
    16d8:	99 23       	and	r25, r25
    16da:	a9 f0       	breq	.+42     	; 0x1706 <__floatsisf+0x40>
    16dc:	f9 2f       	mov	r31, r25
    16de:	96 e9       	ldi	r25, 0x96	; 150
    16e0:	bb 27       	eor	r27, r27
    16e2:	93 95       	inc	r25
    16e4:	f6 95       	lsr	r31
    16e6:	87 95       	ror	r24
    16e8:	77 95       	ror	r23
    16ea:	67 95       	ror	r22
    16ec:	b7 95       	ror	r27
    16ee:	f1 11       	cpse	r31, r1
    16f0:	f8 cf       	rjmp	.-16     	; 0x16e2 <__floatsisf+0x1c>
    16f2:	fa f4       	brpl	.+62     	; 0x1732 <__floatsisf+0x6c>
    16f4:	bb 0f       	add	r27, r27
    16f6:	11 f4       	brne	.+4      	; 0x16fc <__floatsisf+0x36>
    16f8:	60 ff       	sbrs	r22, 0
    16fa:	1b c0       	rjmp	.+54     	; 0x1732 <__floatsisf+0x6c>
    16fc:	6f 5f       	subi	r22, 0xFF	; 255
    16fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1700:	8f 4f       	sbci	r24, 0xFF	; 255
    1702:	9f 4f       	sbci	r25, 0xFF	; 255
    1704:	16 c0       	rjmp	.+44     	; 0x1732 <__floatsisf+0x6c>
    1706:	88 23       	and	r24, r24
    1708:	11 f0       	breq	.+4      	; 0x170e <__floatsisf+0x48>
    170a:	96 e9       	ldi	r25, 0x96	; 150
    170c:	11 c0       	rjmp	.+34     	; 0x1730 <__floatsisf+0x6a>
    170e:	77 23       	and	r23, r23
    1710:	21 f0       	breq	.+8      	; 0x171a <__floatsisf+0x54>
    1712:	9e e8       	ldi	r25, 0x8E	; 142
    1714:	87 2f       	mov	r24, r23
    1716:	76 2f       	mov	r23, r22
    1718:	05 c0       	rjmp	.+10     	; 0x1724 <__floatsisf+0x5e>
    171a:	66 23       	and	r22, r22
    171c:	71 f0       	breq	.+28     	; 0x173a <__floatsisf+0x74>
    171e:	96 e8       	ldi	r25, 0x86	; 134
    1720:	86 2f       	mov	r24, r22
    1722:	70 e0       	ldi	r23, 0x00	; 0
    1724:	60 e0       	ldi	r22, 0x00	; 0
    1726:	2a f0       	brmi	.+10     	; 0x1732 <__floatsisf+0x6c>
    1728:	9a 95       	dec	r25
    172a:	66 0f       	add	r22, r22
    172c:	77 1f       	adc	r23, r23
    172e:	88 1f       	adc	r24, r24
    1730:	da f7       	brpl	.-10     	; 0x1728 <__floatsisf+0x62>
    1732:	88 0f       	add	r24, r24
    1734:	96 95       	lsr	r25
    1736:	87 95       	ror	r24
    1738:	97 f9       	bld	r25, 7
    173a:	08 95       	ret

0000173c <__fp_cmp>:
    173c:	99 0f       	add	r25, r25
    173e:	00 08       	sbc	r0, r0
    1740:	55 0f       	add	r21, r21
    1742:	aa 0b       	sbc	r26, r26
    1744:	e0 e8       	ldi	r30, 0x80	; 128
    1746:	fe ef       	ldi	r31, 0xFE	; 254
    1748:	16 16       	cp	r1, r22
    174a:	17 06       	cpc	r1, r23
    174c:	e8 07       	cpc	r30, r24
    174e:	f9 07       	cpc	r31, r25
    1750:	c0 f0       	brcs	.+48     	; 0x1782 <__fp_cmp+0x46>
    1752:	12 16       	cp	r1, r18
    1754:	13 06       	cpc	r1, r19
    1756:	e4 07       	cpc	r30, r20
    1758:	f5 07       	cpc	r31, r21
    175a:	98 f0       	brcs	.+38     	; 0x1782 <__fp_cmp+0x46>
    175c:	62 1b       	sub	r22, r18
    175e:	73 0b       	sbc	r23, r19
    1760:	84 0b       	sbc	r24, r20
    1762:	95 0b       	sbc	r25, r21
    1764:	39 f4       	brne	.+14     	; 0x1774 <__fp_cmp+0x38>
    1766:	0a 26       	eor	r0, r26
    1768:	61 f0       	breq	.+24     	; 0x1782 <__fp_cmp+0x46>
    176a:	23 2b       	or	r18, r19
    176c:	24 2b       	or	r18, r20
    176e:	25 2b       	or	r18, r21
    1770:	21 f4       	brne	.+8      	; 0x177a <__fp_cmp+0x3e>
    1772:	08 95       	ret
    1774:	0a 26       	eor	r0, r26
    1776:	09 f4       	brne	.+2      	; 0x177a <__fp_cmp+0x3e>
    1778:	a1 40       	sbci	r26, 0x01	; 1
    177a:	a6 95       	lsr	r26
    177c:	8f ef       	ldi	r24, 0xFF	; 255
    177e:	81 1d       	adc	r24, r1
    1780:	81 1d       	adc	r24, r1
    1782:	08 95       	ret

00001784 <__fp_inf>:
    1784:	97 f9       	bld	r25, 7
    1786:	9f 67       	ori	r25, 0x7F	; 127
    1788:	80 e8       	ldi	r24, 0x80	; 128
    178a:	70 e0       	ldi	r23, 0x00	; 0
    178c:	60 e0       	ldi	r22, 0x00	; 0
    178e:	08 95       	ret

00001790 <__fp_nan>:
    1790:	9f ef       	ldi	r25, 0xFF	; 255
    1792:	80 ec       	ldi	r24, 0xC0	; 192
    1794:	08 95       	ret

00001796 <__fp_powser>:
    1796:	df 93       	push	r29
    1798:	cf 93       	push	r28
    179a:	1f 93       	push	r17
    179c:	0f 93       	push	r16
    179e:	ff 92       	push	r15
    17a0:	ef 92       	push	r14
    17a2:	df 92       	push	r13
    17a4:	7b 01       	movw	r14, r22
    17a6:	8c 01       	movw	r16, r24
    17a8:	68 94       	set
    17aa:	06 c0       	rjmp	.+12     	; 0x17b8 <__fp_powser+0x22>
    17ac:	da 2e       	mov	r13, r26
    17ae:	ef 01       	movw	r28, r30
    17b0:	0e 94 99 0c 	call	0x1932	; 0x1932 <__mulsf3x>
    17b4:	fe 01       	movw	r30, r28
    17b6:	e8 94       	clt
    17b8:	a5 91       	lpm	r26, Z+
    17ba:	25 91       	lpm	r18, Z+
    17bc:	35 91       	lpm	r19, Z+
    17be:	45 91       	lpm	r20, Z+
    17c0:	55 91       	lpm	r21, Z+
    17c2:	a6 f3       	brts	.-24     	; 0x17ac <__fp_powser+0x16>
    17c4:	ef 01       	movw	r28, r30
    17c6:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__addsf3x>
    17ca:	fe 01       	movw	r30, r28
    17cc:	97 01       	movw	r18, r14
    17ce:	a8 01       	movw	r20, r16
    17d0:	da 94       	dec	r13
    17d2:	69 f7       	brne	.-38     	; 0x17ae <__fp_powser+0x18>
    17d4:	df 90       	pop	r13
    17d6:	ef 90       	pop	r14
    17d8:	ff 90       	pop	r15
    17da:	0f 91       	pop	r16
    17dc:	1f 91       	pop	r17
    17de:	cf 91       	pop	r28
    17e0:	df 91       	pop	r29
    17e2:	08 95       	ret

000017e4 <__fp_pscA>:
    17e4:	00 24       	eor	r0, r0
    17e6:	0a 94       	dec	r0
    17e8:	16 16       	cp	r1, r22
    17ea:	17 06       	cpc	r1, r23
    17ec:	18 06       	cpc	r1, r24
    17ee:	09 06       	cpc	r0, r25
    17f0:	08 95       	ret

000017f2 <__fp_pscB>:
    17f2:	00 24       	eor	r0, r0
    17f4:	0a 94       	dec	r0
    17f6:	12 16       	cp	r1, r18
    17f8:	13 06       	cpc	r1, r19
    17fa:	14 06       	cpc	r1, r20
    17fc:	05 06       	cpc	r0, r21
    17fe:	08 95       	ret
    1800:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__fp_nan>

00001804 <__fp_rempio2>:
    1804:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__fp_splitA>
    1808:	d8 f3       	brcs	.-10     	; 0x1800 <__fp_pscB+0xe>
    180a:	e8 94       	clt
    180c:	e0 e0       	ldi	r30, 0x00	; 0
    180e:	bb 27       	eor	r27, r27
    1810:	9f 57       	subi	r25, 0x7F	; 127
    1812:	f0 f0       	brcs	.+60     	; 0x1850 <__fp_rempio2+0x4c>
    1814:	2a ed       	ldi	r18, 0xDA	; 218
    1816:	3f e0       	ldi	r19, 0x0F	; 15
    1818:	49 ec       	ldi	r20, 0xC9	; 201
    181a:	06 c0       	rjmp	.+12     	; 0x1828 <__fp_rempio2+0x24>
    181c:	ee 0f       	add	r30, r30
    181e:	bb 0f       	add	r27, r27
    1820:	66 1f       	adc	r22, r22
    1822:	77 1f       	adc	r23, r23
    1824:	88 1f       	adc	r24, r24
    1826:	28 f0       	brcs	.+10     	; 0x1832 <__fp_rempio2+0x2e>
    1828:	b2 3a       	cpi	r27, 0xA2	; 162
    182a:	62 07       	cpc	r22, r18
    182c:	73 07       	cpc	r23, r19
    182e:	84 07       	cpc	r24, r20
    1830:	28 f0       	brcs	.+10     	; 0x183c <__fp_rempio2+0x38>
    1832:	b2 5a       	subi	r27, 0xA2	; 162
    1834:	62 0b       	sbc	r22, r18
    1836:	73 0b       	sbc	r23, r19
    1838:	84 0b       	sbc	r24, r20
    183a:	e3 95       	inc	r30
    183c:	9a 95       	dec	r25
    183e:	72 f7       	brpl	.-36     	; 0x181c <__fp_rempio2+0x18>
    1840:	80 38       	cpi	r24, 0x80	; 128
    1842:	30 f4       	brcc	.+12     	; 0x1850 <__fp_rempio2+0x4c>
    1844:	9a 95       	dec	r25
    1846:	bb 0f       	add	r27, r27
    1848:	66 1f       	adc	r22, r22
    184a:	77 1f       	adc	r23, r23
    184c:	88 1f       	adc	r24, r24
    184e:	d2 f7       	brpl	.-12     	; 0x1844 <__fp_rempio2+0x40>
    1850:	90 48       	sbci	r25, 0x80	; 128
    1852:	0c 94 3f 0d 	jmp	0x1a7e	; 0x1a7e <__fp_mpack_finite>

00001856 <__fp_round>:
    1856:	09 2e       	mov	r0, r25
    1858:	03 94       	inc	r0
    185a:	00 0c       	add	r0, r0
    185c:	11 f4       	brne	.+4      	; 0x1862 <__fp_round+0xc>
    185e:	88 23       	and	r24, r24
    1860:	52 f0       	brmi	.+20     	; 0x1876 <__fp_round+0x20>
    1862:	bb 0f       	add	r27, r27
    1864:	40 f4       	brcc	.+16     	; 0x1876 <__fp_round+0x20>
    1866:	bf 2b       	or	r27, r31
    1868:	11 f4       	brne	.+4      	; 0x186e <__fp_round+0x18>
    186a:	60 ff       	sbrs	r22, 0
    186c:	04 c0       	rjmp	.+8      	; 0x1876 <__fp_round+0x20>
    186e:	6f 5f       	subi	r22, 0xFF	; 255
    1870:	7f 4f       	sbci	r23, 0xFF	; 255
    1872:	8f 4f       	sbci	r24, 0xFF	; 255
    1874:	9f 4f       	sbci	r25, 0xFF	; 255
    1876:	08 95       	ret

00001878 <__fp_sinus>:
    1878:	ef 93       	push	r30
    187a:	e0 ff       	sbrs	r30, 0
    187c:	07 c0       	rjmp	.+14     	; 0x188c <__fp_sinus+0x14>
    187e:	a2 ea       	ldi	r26, 0xA2	; 162
    1880:	2a ed       	ldi	r18, 0xDA	; 218
    1882:	3f e0       	ldi	r19, 0x0F	; 15
    1884:	49 ec       	ldi	r20, 0xC9	; 201
    1886:	5f eb       	ldi	r21, 0xBF	; 191
    1888:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__addsf3x>
    188c:	0e 94 2b 0c 	call	0x1856	; 0x1856 <__fp_round>
    1890:	0f 90       	pop	r0
    1892:	03 94       	inc	r0
    1894:	01 fc       	sbrc	r0, 1
    1896:	90 58       	subi	r25, 0x80	; 128
    1898:	e5 e9       	ldi	r30, 0x95	; 149
    189a:	f0 e0       	ldi	r31, 0x00	; 0
    189c:	0c 94 52 0d 	jmp	0x1aa4	; 0x1aa4 <__fp_powsodd>

000018a0 <__fp_split3>:
    18a0:	57 fd       	sbrc	r21, 7
    18a2:	90 58       	subi	r25, 0x80	; 128
    18a4:	44 0f       	add	r20, r20
    18a6:	55 1f       	adc	r21, r21
    18a8:	59 f0       	breq	.+22     	; 0x18c0 <__fp_splitA+0x10>
    18aa:	5f 3f       	cpi	r21, 0xFF	; 255
    18ac:	71 f0       	breq	.+28     	; 0x18ca <__fp_splitA+0x1a>
    18ae:	47 95       	ror	r20

000018b0 <__fp_splitA>:
    18b0:	88 0f       	add	r24, r24
    18b2:	97 fb       	bst	r25, 7
    18b4:	99 1f       	adc	r25, r25
    18b6:	61 f0       	breq	.+24     	; 0x18d0 <__fp_splitA+0x20>
    18b8:	9f 3f       	cpi	r25, 0xFF	; 255
    18ba:	79 f0       	breq	.+30     	; 0x18da <__fp_splitA+0x2a>
    18bc:	87 95       	ror	r24
    18be:	08 95       	ret
    18c0:	12 16       	cp	r1, r18
    18c2:	13 06       	cpc	r1, r19
    18c4:	14 06       	cpc	r1, r20
    18c6:	55 1f       	adc	r21, r21
    18c8:	f2 cf       	rjmp	.-28     	; 0x18ae <__fp_split3+0xe>
    18ca:	46 95       	lsr	r20
    18cc:	f1 df       	rcall	.-30     	; 0x18b0 <__fp_splitA>
    18ce:	08 c0       	rjmp	.+16     	; 0x18e0 <__fp_splitA+0x30>
    18d0:	16 16       	cp	r1, r22
    18d2:	17 06       	cpc	r1, r23
    18d4:	18 06       	cpc	r1, r24
    18d6:	99 1f       	adc	r25, r25
    18d8:	f1 cf       	rjmp	.-30     	; 0x18bc <__fp_splitA+0xc>
    18da:	86 95       	lsr	r24
    18dc:	71 05       	cpc	r23, r1
    18de:	61 05       	cpc	r22, r1
    18e0:	08 94       	sec
    18e2:	08 95       	ret

000018e4 <__fp_zero>:
    18e4:	e8 94       	clt

000018e6 <__fp_szero>:
    18e6:	bb 27       	eor	r27, r27
    18e8:	66 27       	eor	r22, r22
    18ea:	77 27       	eor	r23, r23
    18ec:	cb 01       	movw	r24, r22
    18ee:	97 f9       	bld	r25, 7
    18f0:	08 95       	ret

000018f2 <__gesf2>:
    18f2:	0e 94 9e 0b 	call	0x173c	; 0x173c <__fp_cmp>
    18f6:	08 f4       	brcc	.+2      	; 0x18fa <__gesf2+0x8>
    18f8:	8f ef       	ldi	r24, 0xFF	; 255
    18fa:	08 95       	ret

000018fc <inverse>:
    18fc:	9b 01       	movw	r18, r22
    18fe:	ac 01       	movw	r20, r24
    1900:	60 e0       	ldi	r22, 0x00	; 0
    1902:	70 e0       	ldi	r23, 0x00	; 0
    1904:	80 e8       	ldi	r24, 0x80	; 128
    1906:	9f e3       	ldi	r25, 0x3F	; 63
    1908:	0c 94 b9 0a 	jmp	0x1572	; 0x1572 <__divsf3>

0000190c <__mulsf3>:
    190c:	0e 94 99 0c 	call	0x1932	; 0x1932 <__mulsf3x>
    1910:	0c 94 2b 0c 	jmp	0x1856	; 0x1856 <__fp_round>
    1914:	0e 94 f2 0b 	call	0x17e4	; 0x17e4 <__fp_pscA>
    1918:	38 f0       	brcs	.+14     	; 0x1928 <__mulsf3+0x1c>
    191a:	0e 94 f9 0b 	call	0x17f2	; 0x17f2 <__fp_pscB>
    191e:	20 f0       	brcs	.+8      	; 0x1928 <__mulsf3+0x1c>
    1920:	95 23       	and	r25, r21
    1922:	11 f0       	breq	.+4      	; 0x1928 <__mulsf3+0x1c>
    1924:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__fp_inf>
    1928:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__fp_nan>
    192c:	11 24       	eor	r1, r1
    192e:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__fp_szero>

00001932 <__mulsf3x>:
    1932:	0e 94 50 0c 	call	0x18a0	; 0x18a0 <__fp_split3>
    1936:	70 f3       	brcs	.-36     	; 0x1914 <__mulsf3+0x8>

00001938 <__mulsf3_pse>:
    1938:	95 9f       	mul	r25, r21
    193a:	c1 f3       	breq	.-16     	; 0x192c <__mulsf3+0x20>
    193c:	95 0f       	add	r25, r21
    193e:	50 e0       	ldi	r21, 0x00	; 0
    1940:	55 1f       	adc	r21, r21
    1942:	62 9f       	mul	r22, r18
    1944:	f0 01       	movw	r30, r0
    1946:	72 9f       	mul	r23, r18
    1948:	bb 27       	eor	r27, r27
    194a:	f0 0d       	add	r31, r0
    194c:	b1 1d       	adc	r27, r1
    194e:	63 9f       	mul	r22, r19
    1950:	aa 27       	eor	r26, r26
    1952:	f0 0d       	add	r31, r0
    1954:	b1 1d       	adc	r27, r1
    1956:	aa 1f       	adc	r26, r26
    1958:	64 9f       	mul	r22, r20
    195a:	66 27       	eor	r22, r22
    195c:	b0 0d       	add	r27, r0
    195e:	a1 1d       	adc	r26, r1
    1960:	66 1f       	adc	r22, r22
    1962:	82 9f       	mul	r24, r18
    1964:	22 27       	eor	r18, r18
    1966:	b0 0d       	add	r27, r0
    1968:	a1 1d       	adc	r26, r1
    196a:	62 1f       	adc	r22, r18
    196c:	73 9f       	mul	r23, r19
    196e:	b0 0d       	add	r27, r0
    1970:	a1 1d       	adc	r26, r1
    1972:	62 1f       	adc	r22, r18
    1974:	83 9f       	mul	r24, r19
    1976:	a0 0d       	add	r26, r0
    1978:	61 1d       	adc	r22, r1
    197a:	22 1f       	adc	r18, r18
    197c:	74 9f       	mul	r23, r20
    197e:	33 27       	eor	r19, r19
    1980:	a0 0d       	add	r26, r0
    1982:	61 1d       	adc	r22, r1
    1984:	23 1f       	adc	r18, r19
    1986:	84 9f       	mul	r24, r20
    1988:	60 0d       	add	r22, r0
    198a:	21 1d       	adc	r18, r1
    198c:	82 2f       	mov	r24, r18
    198e:	76 2f       	mov	r23, r22
    1990:	6a 2f       	mov	r22, r26
    1992:	11 24       	eor	r1, r1
    1994:	9f 57       	subi	r25, 0x7F	; 127
    1996:	50 40       	sbci	r21, 0x00	; 0
    1998:	9a f0       	brmi	.+38     	; 0x19c0 <__mulsf3_pse+0x88>
    199a:	f1 f0       	breq	.+60     	; 0x19d8 <__mulsf3_pse+0xa0>
    199c:	88 23       	and	r24, r24
    199e:	4a f0       	brmi	.+18     	; 0x19b2 <__mulsf3_pse+0x7a>
    19a0:	ee 0f       	add	r30, r30
    19a2:	ff 1f       	adc	r31, r31
    19a4:	bb 1f       	adc	r27, r27
    19a6:	66 1f       	adc	r22, r22
    19a8:	77 1f       	adc	r23, r23
    19aa:	88 1f       	adc	r24, r24
    19ac:	91 50       	subi	r25, 0x01	; 1
    19ae:	50 40       	sbci	r21, 0x00	; 0
    19b0:	a9 f7       	brne	.-22     	; 0x199c <__mulsf3_pse+0x64>
    19b2:	9e 3f       	cpi	r25, 0xFE	; 254
    19b4:	51 05       	cpc	r21, r1
    19b6:	80 f0       	brcs	.+32     	; 0x19d8 <__mulsf3_pse+0xa0>
    19b8:	0c 94 c2 0b 	jmp	0x1784	; 0x1784 <__fp_inf>
    19bc:	0c 94 73 0c 	jmp	0x18e6	; 0x18e6 <__fp_szero>
    19c0:	5f 3f       	cpi	r21, 0xFF	; 255
    19c2:	e4 f3       	brlt	.-8      	; 0x19bc <__mulsf3_pse+0x84>
    19c4:	98 3e       	cpi	r25, 0xE8	; 232
    19c6:	d4 f3       	brlt	.-12     	; 0x19bc <__mulsf3_pse+0x84>
    19c8:	86 95       	lsr	r24
    19ca:	77 95       	ror	r23
    19cc:	67 95       	ror	r22
    19ce:	b7 95       	ror	r27
    19d0:	f7 95       	ror	r31
    19d2:	e7 95       	ror	r30
    19d4:	9f 5f       	subi	r25, 0xFF	; 255
    19d6:	c1 f7       	brne	.-16     	; 0x19c8 <__mulsf3_pse+0x90>
    19d8:	fe 2b       	or	r31, r30
    19da:	88 0f       	add	r24, r24
    19dc:	91 1d       	adc	r25, r1
    19de:	96 95       	lsr	r25
    19e0:	87 95       	ror	r24
    19e2:	97 f9       	bld	r25, 7
    19e4:	08 95       	ret
    19e6:	19 f4       	brne	.+6      	; 0x19ee <__mulsf3_pse+0xb6>
    19e8:	16 f4       	brtc	.+4      	; 0x19ee <__mulsf3_pse+0xb6>
    19ea:	0c 94 c8 0b 	jmp	0x1790	; 0x1790 <__fp_nan>
    19ee:	0c 94 3d 0d 	jmp	0x1a7a	; 0x1a7a <__fp_mpack>

000019f2 <sqrt>:
    19f2:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <__fp_splitA>
    19f6:	b8 f3       	brcs	.-18     	; 0x19e6 <__mulsf3_pse+0xae>
    19f8:	99 23       	and	r25, r25
    19fa:	c9 f3       	breq	.-14     	; 0x19ee <__mulsf3_pse+0xb6>
    19fc:	b6 f3       	brts	.-20     	; 0x19ea <__mulsf3_pse+0xb2>
    19fe:	9f 57       	subi	r25, 0x7F	; 127
    1a00:	55 0b       	sbc	r21, r21
    1a02:	87 ff       	sbrs	r24, 7
    1a04:	0e 94 4b 0d 	call	0x1a96	; 0x1a96 <__fp_norm2>
    1a08:	00 24       	eor	r0, r0
    1a0a:	a0 e6       	ldi	r26, 0x60	; 96
    1a0c:	40 ea       	ldi	r20, 0xA0	; 160
    1a0e:	90 01       	movw	r18, r0
    1a10:	80 58       	subi	r24, 0x80	; 128
    1a12:	56 95       	lsr	r21
    1a14:	97 95       	ror	r25
    1a16:	28 f4       	brcc	.+10     	; 0x1a22 <sqrt+0x30>
    1a18:	80 5c       	subi	r24, 0xC0	; 192
    1a1a:	66 0f       	add	r22, r22
    1a1c:	77 1f       	adc	r23, r23
    1a1e:	88 1f       	adc	r24, r24
    1a20:	20 f0       	brcs	.+8      	; 0x1a2a <sqrt+0x38>
    1a22:	26 17       	cp	r18, r22
    1a24:	37 07       	cpc	r19, r23
    1a26:	48 07       	cpc	r20, r24
    1a28:	30 f4       	brcc	.+12     	; 0x1a36 <sqrt+0x44>
    1a2a:	62 1b       	sub	r22, r18
    1a2c:	73 0b       	sbc	r23, r19
    1a2e:	84 0b       	sbc	r24, r20
    1a30:	20 29       	or	r18, r0
    1a32:	31 29       	or	r19, r1
    1a34:	4a 2b       	or	r20, r26
    1a36:	a6 95       	lsr	r26
    1a38:	17 94       	ror	r1
    1a3a:	07 94       	ror	r0
    1a3c:	20 25       	eor	r18, r0
    1a3e:	31 25       	eor	r19, r1
    1a40:	4a 27       	eor	r20, r26
    1a42:	58 f7       	brcc	.-42     	; 0x1a1a <sqrt+0x28>
    1a44:	66 0f       	add	r22, r22
    1a46:	77 1f       	adc	r23, r23
    1a48:	88 1f       	adc	r24, r24
    1a4a:	20 f0       	brcs	.+8      	; 0x1a54 <sqrt+0x62>
    1a4c:	26 17       	cp	r18, r22
    1a4e:	37 07       	cpc	r19, r23
    1a50:	48 07       	cpc	r20, r24
    1a52:	30 f4       	brcc	.+12     	; 0x1a60 <sqrt+0x6e>
    1a54:	62 0b       	sbc	r22, r18
    1a56:	73 0b       	sbc	r23, r19
    1a58:	84 0b       	sbc	r24, r20
    1a5a:	20 0d       	add	r18, r0
    1a5c:	31 1d       	adc	r19, r1
    1a5e:	41 1d       	adc	r20, r1
    1a60:	a0 95       	com	r26
    1a62:	81 f7       	brne	.-32     	; 0x1a44 <sqrt+0x52>
    1a64:	b9 01       	movw	r22, r18
    1a66:	84 2f       	mov	r24, r20
    1a68:	91 58       	subi	r25, 0x81	; 129
    1a6a:	88 0f       	add	r24, r24
    1a6c:	96 95       	lsr	r25
    1a6e:	87 95       	ror	r24
    1a70:	08 95       	ret

00001a72 <square>:
    1a72:	9b 01       	movw	r18, r22
    1a74:	ac 01       	movw	r20, r24
    1a76:	0c 94 86 0c 	jmp	0x190c	; 0x190c <__mulsf3>

00001a7a <__fp_mpack>:
    1a7a:	9f 3f       	cpi	r25, 0xFF	; 255
    1a7c:	31 f0       	breq	.+12     	; 0x1a8a <__fp_mpack_finite+0xc>

00001a7e <__fp_mpack_finite>:
    1a7e:	91 50       	subi	r25, 0x01	; 1
    1a80:	20 f4       	brcc	.+8      	; 0x1a8a <__fp_mpack_finite+0xc>
    1a82:	87 95       	ror	r24
    1a84:	77 95       	ror	r23
    1a86:	67 95       	ror	r22
    1a88:	b7 95       	ror	r27
    1a8a:	88 0f       	add	r24, r24
    1a8c:	91 1d       	adc	r25, r1
    1a8e:	96 95       	lsr	r25
    1a90:	87 95       	ror	r24
    1a92:	97 f9       	bld	r25, 7
    1a94:	08 95       	ret

00001a96 <__fp_norm2>:
    1a96:	91 50       	subi	r25, 0x01	; 1
    1a98:	50 40       	sbci	r21, 0x00	; 0
    1a9a:	66 0f       	add	r22, r22
    1a9c:	77 1f       	adc	r23, r23
    1a9e:	88 1f       	adc	r24, r24
    1aa0:	d2 f7       	brpl	.-12     	; 0x1a96 <__fp_norm2>
    1aa2:	08 95       	ret

00001aa4 <__fp_powsodd>:
    1aa4:	9f 93       	push	r25
    1aa6:	8f 93       	push	r24
    1aa8:	7f 93       	push	r23
    1aaa:	6f 93       	push	r22
    1aac:	ff 93       	push	r31
    1aae:	ef 93       	push	r30
    1ab0:	9b 01       	movw	r18, r22
    1ab2:	ac 01       	movw	r20, r24
    1ab4:	0e 94 86 0c 	call	0x190c	; 0x190c <__mulsf3>
    1ab8:	ef 91       	pop	r30
    1aba:	ff 91       	pop	r31
    1abc:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fp_powser>
    1ac0:	2f 91       	pop	r18
    1ac2:	3f 91       	pop	r19
    1ac4:	4f 91       	pop	r20
    1ac6:	5f 91       	pop	r21
    1ac8:	0c 94 86 0c 	jmp	0x190c	; 0x190c <__mulsf3>

00001acc <vfprintf>:
    1acc:	a0 e1       	ldi	r26, 0x10	; 16
    1ace:	b0 e0       	ldi	r27, 0x00	; 0
    1ad0:	ec e6       	ldi	r30, 0x6C	; 108
    1ad2:	fd e0       	ldi	r31, 0x0D	; 13
    1ad4:	0c 94 0d 11 	jmp	0x221a	; 0x221a <__prologue_saves__>
    1ad8:	7c 01       	movw	r14, r24
    1ada:	1b 01       	movw	r2, r22
    1adc:	6a 01       	movw	r12, r20
    1ade:	fc 01       	movw	r30, r24
    1ae0:	17 82       	std	Z+7, r1	; 0x07
    1ae2:	16 82       	std	Z+6, r1	; 0x06
    1ae4:	83 81       	ldd	r24, Z+3	; 0x03
    1ae6:	81 ff       	sbrs	r24, 1
    1ae8:	44 c3       	rjmp	.+1672   	; 0x2172 <vfprintf+0x6a6>
    1aea:	9e 01       	movw	r18, r28
    1aec:	2f 5f       	subi	r18, 0xFF	; 255
    1aee:	3f 4f       	sbci	r19, 0xFF	; 255
    1af0:	39 01       	movw	r6, r18
    1af2:	f7 01       	movw	r30, r14
    1af4:	93 81       	ldd	r25, Z+3	; 0x03
    1af6:	f1 01       	movw	r30, r2
    1af8:	93 fd       	sbrc	r25, 3
    1afa:	85 91       	lpm	r24, Z+
    1afc:	93 ff       	sbrs	r25, 3
    1afe:	81 91       	ld	r24, Z+
    1b00:	1f 01       	movw	r2, r30
    1b02:	88 23       	and	r24, r24
    1b04:	09 f4       	brne	.+2      	; 0x1b08 <vfprintf+0x3c>
    1b06:	31 c3       	rjmp	.+1634   	; 0x216a <vfprintf+0x69e>
    1b08:	85 32       	cpi	r24, 0x25	; 37
    1b0a:	39 f4       	brne	.+14     	; 0x1b1a <vfprintf+0x4e>
    1b0c:	93 fd       	sbrc	r25, 3
    1b0e:	85 91       	lpm	r24, Z+
    1b10:	93 ff       	sbrs	r25, 3
    1b12:	81 91       	ld	r24, Z+
    1b14:	1f 01       	movw	r2, r30
    1b16:	85 32       	cpi	r24, 0x25	; 37
    1b18:	39 f4       	brne	.+14     	; 0x1b28 <vfprintf+0x5c>
    1b1a:	b7 01       	movw	r22, r14
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1b22:	56 01       	movw	r10, r12
    1b24:	65 01       	movw	r12, r10
    1b26:	e5 cf       	rjmp	.-54     	; 0x1af2 <vfprintf+0x26>
    1b28:	10 e0       	ldi	r17, 0x00	; 0
    1b2a:	51 2c       	mov	r5, r1
    1b2c:	91 2c       	mov	r9, r1
    1b2e:	ff e1       	ldi	r31, 0x1F	; 31
    1b30:	f9 15       	cp	r31, r9
    1b32:	d8 f0       	brcs	.+54     	; 0x1b6a <vfprintf+0x9e>
    1b34:	8b 32       	cpi	r24, 0x2B	; 43
    1b36:	79 f0       	breq	.+30     	; 0x1b56 <vfprintf+0x8a>
    1b38:	38 f4       	brcc	.+14     	; 0x1b48 <vfprintf+0x7c>
    1b3a:	80 32       	cpi	r24, 0x20	; 32
    1b3c:	79 f0       	breq	.+30     	; 0x1b5c <vfprintf+0x90>
    1b3e:	83 32       	cpi	r24, 0x23	; 35
    1b40:	a1 f4       	brne	.+40     	; 0x1b6a <vfprintf+0x9e>
    1b42:	f9 2d       	mov	r31, r9
    1b44:	f0 61       	ori	r31, 0x10	; 16
    1b46:	2e c0       	rjmp	.+92     	; 0x1ba4 <vfprintf+0xd8>
    1b48:	8d 32       	cpi	r24, 0x2D	; 45
    1b4a:	61 f0       	breq	.+24     	; 0x1b64 <vfprintf+0x98>
    1b4c:	80 33       	cpi	r24, 0x30	; 48
    1b4e:	69 f4       	brne	.+26     	; 0x1b6a <vfprintf+0x9e>
    1b50:	29 2d       	mov	r18, r9
    1b52:	21 60       	ori	r18, 0x01	; 1
    1b54:	2d c0       	rjmp	.+90     	; 0x1bb0 <vfprintf+0xe4>
    1b56:	39 2d       	mov	r19, r9
    1b58:	32 60       	ori	r19, 0x02	; 2
    1b5a:	93 2e       	mov	r9, r19
    1b5c:	89 2d       	mov	r24, r9
    1b5e:	84 60       	ori	r24, 0x04	; 4
    1b60:	98 2e       	mov	r9, r24
    1b62:	2a c0       	rjmp	.+84     	; 0x1bb8 <vfprintf+0xec>
    1b64:	e9 2d       	mov	r30, r9
    1b66:	e8 60       	ori	r30, 0x08	; 8
    1b68:	15 c0       	rjmp	.+42     	; 0x1b94 <vfprintf+0xc8>
    1b6a:	97 fc       	sbrc	r9, 7
    1b6c:	2d c0       	rjmp	.+90     	; 0x1bc8 <vfprintf+0xfc>
    1b6e:	20 ed       	ldi	r18, 0xD0	; 208
    1b70:	28 0f       	add	r18, r24
    1b72:	2a 30       	cpi	r18, 0x0A	; 10
    1b74:	88 f4       	brcc	.+34     	; 0x1b98 <vfprintf+0xcc>
    1b76:	96 fe       	sbrs	r9, 6
    1b78:	06 c0       	rjmp	.+12     	; 0x1b86 <vfprintf+0xba>
    1b7a:	3a e0       	ldi	r19, 0x0A	; 10
    1b7c:	13 9f       	mul	r17, r19
    1b7e:	20 0d       	add	r18, r0
    1b80:	11 24       	eor	r1, r1
    1b82:	12 2f       	mov	r17, r18
    1b84:	19 c0       	rjmp	.+50     	; 0x1bb8 <vfprintf+0xec>
    1b86:	8a e0       	ldi	r24, 0x0A	; 10
    1b88:	58 9e       	mul	r5, r24
    1b8a:	20 0d       	add	r18, r0
    1b8c:	11 24       	eor	r1, r1
    1b8e:	52 2e       	mov	r5, r18
    1b90:	e9 2d       	mov	r30, r9
    1b92:	e0 62       	ori	r30, 0x20	; 32
    1b94:	9e 2e       	mov	r9, r30
    1b96:	10 c0       	rjmp	.+32     	; 0x1bb8 <vfprintf+0xec>
    1b98:	8e 32       	cpi	r24, 0x2E	; 46
    1b9a:	31 f4       	brne	.+12     	; 0x1ba8 <vfprintf+0xdc>
    1b9c:	96 fc       	sbrc	r9, 6
    1b9e:	e5 c2       	rjmp	.+1482   	; 0x216a <vfprintf+0x69e>
    1ba0:	f9 2d       	mov	r31, r9
    1ba2:	f0 64       	ori	r31, 0x40	; 64
    1ba4:	9f 2e       	mov	r9, r31
    1ba6:	08 c0       	rjmp	.+16     	; 0x1bb8 <vfprintf+0xec>
    1ba8:	8c 36       	cpi	r24, 0x6C	; 108
    1baa:	21 f4       	brne	.+8      	; 0x1bb4 <vfprintf+0xe8>
    1bac:	29 2d       	mov	r18, r9
    1bae:	20 68       	ori	r18, 0x80	; 128
    1bb0:	92 2e       	mov	r9, r18
    1bb2:	02 c0       	rjmp	.+4      	; 0x1bb8 <vfprintf+0xec>
    1bb4:	88 36       	cpi	r24, 0x68	; 104
    1bb6:	41 f4       	brne	.+16     	; 0x1bc8 <vfprintf+0xfc>
    1bb8:	f1 01       	movw	r30, r2
    1bba:	93 fd       	sbrc	r25, 3
    1bbc:	85 91       	lpm	r24, Z+
    1bbe:	93 ff       	sbrs	r25, 3
    1bc0:	81 91       	ld	r24, Z+
    1bc2:	1f 01       	movw	r2, r30
    1bc4:	81 11       	cpse	r24, r1
    1bc6:	b3 cf       	rjmp	.-154    	; 0x1b2e <vfprintf+0x62>
    1bc8:	9b eb       	ldi	r25, 0xBB	; 187
    1bca:	98 0f       	add	r25, r24
    1bcc:	93 30       	cpi	r25, 0x03	; 3
    1bce:	20 f4       	brcc	.+8      	; 0x1bd8 <vfprintf+0x10c>
    1bd0:	99 2d       	mov	r25, r9
    1bd2:	90 61       	ori	r25, 0x10	; 16
    1bd4:	80 5e       	subi	r24, 0xE0	; 224
    1bd6:	07 c0       	rjmp	.+14     	; 0x1be6 <vfprintf+0x11a>
    1bd8:	9b e9       	ldi	r25, 0x9B	; 155
    1bda:	98 0f       	add	r25, r24
    1bdc:	93 30       	cpi	r25, 0x03	; 3
    1bde:	08 f0       	brcs	.+2      	; 0x1be2 <vfprintf+0x116>
    1be0:	66 c1       	rjmp	.+716    	; 0x1eae <vfprintf+0x3e2>
    1be2:	99 2d       	mov	r25, r9
    1be4:	9f 7e       	andi	r25, 0xEF	; 239
    1be6:	96 ff       	sbrs	r25, 6
    1be8:	16 e0       	ldi	r17, 0x06	; 6
    1bea:	9f 73       	andi	r25, 0x3F	; 63
    1bec:	99 2e       	mov	r9, r25
    1bee:	85 36       	cpi	r24, 0x65	; 101
    1bf0:	19 f4       	brne	.+6      	; 0x1bf8 <vfprintf+0x12c>
    1bf2:	90 64       	ori	r25, 0x40	; 64
    1bf4:	99 2e       	mov	r9, r25
    1bf6:	08 c0       	rjmp	.+16     	; 0x1c08 <vfprintf+0x13c>
    1bf8:	86 36       	cpi	r24, 0x66	; 102
    1bfa:	21 f4       	brne	.+8      	; 0x1c04 <vfprintf+0x138>
    1bfc:	39 2f       	mov	r19, r25
    1bfe:	30 68       	ori	r19, 0x80	; 128
    1c00:	93 2e       	mov	r9, r19
    1c02:	02 c0       	rjmp	.+4      	; 0x1c08 <vfprintf+0x13c>
    1c04:	11 11       	cpse	r17, r1
    1c06:	11 50       	subi	r17, 0x01	; 1
    1c08:	97 fe       	sbrs	r9, 7
    1c0a:	07 c0       	rjmp	.+14     	; 0x1c1a <vfprintf+0x14e>
    1c0c:	1c 33       	cpi	r17, 0x3C	; 60
    1c0e:	50 f4       	brcc	.+20     	; 0x1c24 <vfprintf+0x158>
    1c10:	44 24       	eor	r4, r4
    1c12:	43 94       	inc	r4
    1c14:	41 0e       	add	r4, r17
    1c16:	27 e0       	ldi	r18, 0x07	; 7
    1c18:	0b c0       	rjmp	.+22     	; 0x1c30 <vfprintf+0x164>
    1c1a:	18 30       	cpi	r17, 0x08	; 8
    1c1c:	38 f0       	brcs	.+14     	; 0x1c2c <vfprintf+0x160>
    1c1e:	27 e0       	ldi	r18, 0x07	; 7
    1c20:	17 e0       	ldi	r17, 0x07	; 7
    1c22:	05 c0       	rjmp	.+10     	; 0x1c2e <vfprintf+0x162>
    1c24:	27 e0       	ldi	r18, 0x07	; 7
    1c26:	9c e3       	ldi	r25, 0x3C	; 60
    1c28:	49 2e       	mov	r4, r25
    1c2a:	02 c0       	rjmp	.+4      	; 0x1c30 <vfprintf+0x164>
    1c2c:	21 2f       	mov	r18, r17
    1c2e:	41 2c       	mov	r4, r1
    1c30:	56 01       	movw	r10, r12
    1c32:	84 e0       	ldi	r24, 0x04	; 4
    1c34:	a8 0e       	add	r10, r24
    1c36:	b1 1c       	adc	r11, r1
    1c38:	f6 01       	movw	r30, r12
    1c3a:	60 81       	ld	r22, Z
    1c3c:	71 81       	ldd	r23, Z+1	; 0x01
    1c3e:	82 81       	ldd	r24, Z+2	; 0x02
    1c40:	93 81       	ldd	r25, Z+3	; 0x03
    1c42:	04 2d       	mov	r16, r4
    1c44:	a3 01       	movw	r20, r6
    1c46:	0e 94 5e 11 	call	0x22bc	; 0x22bc <__ftoa_engine>
    1c4a:	6c 01       	movw	r12, r24
    1c4c:	f9 81       	ldd	r31, Y+1	; 0x01
    1c4e:	fc 87       	std	Y+12, r31	; 0x0c
    1c50:	f0 ff       	sbrs	r31, 0
    1c52:	02 c0       	rjmp	.+4      	; 0x1c58 <vfprintf+0x18c>
    1c54:	f3 ff       	sbrs	r31, 3
    1c56:	06 c0       	rjmp	.+12     	; 0x1c64 <vfprintf+0x198>
    1c58:	91 fc       	sbrc	r9, 1
    1c5a:	06 c0       	rjmp	.+12     	; 0x1c68 <vfprintf+0x19c>
    1c5c:	92 fe       	sbrs	r9, 2
    1c5e:	06 c0       	rjmp	.+12     	; 0x1c6c <vfprintf+0x1a0>
    1c60:	00 e2       	ldi	r16, 0x20	; 32
    1c62:	05 c0       	rjmp	.+10     	; 0x1c6e <vfprintf+0x1a2>
    1c64:	0d e2       	ldi	r16, 0x2D	; 45
    1c66:	03 c0       	rjmp	.+6      	; 0x1c6e <vfprintf+0x1a2>
    1c68:	0b e2       	ldi	r16, 0x2B	; 43
    1c6a:	01 c0       	rjmp	.+2      	; 0x1c6e <vfprintf+0x1a2>
    1c6c:	00 e0       	ldi	r16, 0x00	; 0
    1c6e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1c70:	8c 70       	andi	r24, 0x0C	; 12
    1c72:	19 f0       	breq	.+6      	; 0x1c7a <vfprintf+0x1ae>
    1c74:	01 11       	cpse	r16, r1
    1c76:	5a c2       	rjmp	.+1204   	; 0x212c <vfprintf+0x660>
    1c78:	9b c2       	rjmp	.+1334   	; 0x21b0 <vfprintf+0x6e4>
    1c7a:	97 fe       	sbrs	r9, 7
    1c7c:	10 c0       	rjmp	.+32     	; 0x1c9e <vfprintf+0x1d2>
    1c7e:	4c 0c       	add	r4, r12
    1c80:	fc 85       	ldd	r31, Y+12	; 0x0c
    1c82:	f4 ff       	sbrs	r31, 4
    1c84:	04 c0       	rjmp	.+8      	; 0x1c8e <vfprintf+0x1c2>
    1c86:	8a 81       	ldd	r24, Y+2	; 0x02
    1c88:	81 33       	cpi	r24, 0x31	; 49
    1c8a:	09 f4       	brne	.+2      	; 0x1c8e <vfprintf+0x1c2>
    1c8c:	4a 94       	dec	r4
    1c8e:	14 14       	cp	r1, r4
    1c90:	74 f5       	brge	.+92     	; 0x1cee <vfprintf+0x222>
    1c92:	28 e0       	ldi	r18, 0x08	; 8
    1c94:	24 15       	cp	r18, r4
    1c96:	78 f5       	brcc	.+94     	; 0x1cf6 <vfprintf+0x22a>
    1c98:	88 e0       	ldi	r24, 0x08	; 8
    1c9a:	48 2e       	mov	r4, r24
    1c9c:	2c c0       	rjmp	.+88     	; 0x1cf6 <vfprintf+0x22a>
    1c9e:	96 fc       	sbrc	r9, 6
    1ca0:	2a c0       	rjmp	.+84     	; 0x1cf6 <vfprintf+0x22a>
    1ca2:	81 2f       	mov	r24, r17
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	8c 15       	cp	r24, r12
    1ca8:	9d 05       	cpc	r25, r13
    1caa:	9c f0       	brlt	.+38     	; 0x1cd2 <vfprintf+0x206>
    1cac:	3c ef       	ldi	r19, 0xFC	; 252
    1cae:	c3 16       	cp	r12, r19
    1cb0:	3f ef       	ldi	r19, 0xFF	; 255
    1cb2:	d3 06       	cpc	r13, r19
    1cb4:	74 f0       	brlt	.+28     	; 0x1cd2 <vfprintf+0x206>
    1cb6:	89 2d       	mov	r24, r9
    1cb8:	80 68       	ori	r24, 0x80	; 128
    1cba:	98 2e       	mov	r9, r24
    1cbc:	0a c0       	rjmp	.+20     	; 0x1cd2 <vfprintf+0x206>
    1cbe:	e2 e0       	ldi	r30, 0x02	; 2
    1cc0:	f0 e0       	ldi	r31, 0x00	; 0
    1cc2:	ec 0f       	add	r30, r28
    1cc4:	fd 1f       	adc	r31, r29
    1cc6:	e1 0f       	add	r30, r17
    1cc8:	f1 1d       	adc	r31, r1
    1cca:	80 81       	ld	r24, Z
    1ccc:	80 33       	cpi	r24, 0x30	; 48
    1cce:	19 f4       	brne	.+6      	; 0x1cd6 <vfprintf+0x20a>
    1cd0:	11 50       	subi	r17, 0x01	; 1
    1cd2:	11 11       	cpse	r17, r1
    1cd4:	f4 cf       	rjmp	.-24     	; 0x1cbe <vfprintf+0x1f2>
    1cd6:	97 fe       	sbrs	r9, 7
    1cd8:	0e c0       	rjmp	.+28     	; 0x1cf6 <vfprintf+0x22a>
    1cda:	44 24       	eor	r4, r4
    1cdc:	43 94       	inc	r4
    1cde:	41 0e       	add	r4, r17
    1ce0:	81 2f       	mov	r24, r17
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	c8 16       	cp	r12, r24
    1ce6:	d9 06       	cpc	r13, r25
    1ce8:	2c f4       	brge	.+10     	; 0x1cf4 <vfprintf+0x228>
    1cea:	1c 19       	sub	r17, r12
    1cec:	04 c0       	rjmp	.+8      	; 0x1cf6 <vfprintf+0x22a>
    1cee:	44 24       	eor	r4, r4
    1cf0:	43 94       	inc	r4
    1cf2:	01 c0       	rjmp	.+2      	; 0x1cf6 <vfprintf+0x22a>
    1cf4:	10 e0       	ldi	r17, 0x00	; 0
    1cf6:	97 fe       	sbrs	r9, 7
    1cf8:	06 c0       	rjmp	.+12     	; 0x1d06 <vfprintf+0x23a>
    1cfa:	1c 14       	cp	r1, r12
    1cfc:	1d 04       	cpc	r1, r13
    1cfe:	34 f4       	brge	.+12     	; 0x1d0c <vfprintf+0x240>
    1d00:	c6 01       	movw	r24, r12
    1d02:	01 96       	adiw	r24, 0x01	; 1
    1d04:	05 c0       	rjmp	.+10     	; 0x1d10 <vfprintf+0x244>
    1d06:	85 e0       	ldi	r24, 0x05	; 5
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	02 c0       	rjmp	.+4      	; 0x1d10 <vfprintf+0x244>
    1d0c:	81 e0       	ldi	r24, 0x01	; 1
    1d0e:	90 e0       	ldi	r25, 0x00	; 0
    1d10:	01 11       	cpse	r16, r1
    1d12:	01 96       	adiw	r24, 0x01	; 1
    1d14:	11 23       	and	r17, r17
    1d16:	31 f0       	breq	.+12     	; 0x1d24 <vfprintf+0x258>
    1d18:	21 2f       	mov	r18, r17
    1d1a:	30 e0       	ldi	r19, 0x00	; 0
    1d1c:	2f 5f       	subi	r18, 0xFF	; 255
    1d1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1d20:	82 0f       	add	r24, r18
    1d22:	93 1f       	adc	r25, r19
    1d24:	25 2d       	mov	r18, r5
    1d26:	30 e0       	ldi	r19, 0x00	; 0
    1d28:	82 17       	cp	r24, r18
    1d2a:	93 07       	cpc	r25, r19
    1d2c:	14 f4       	brge	.+4      	; 0x1d32 <vfprintf+0x266>
    1d2e:	58 1a       	sub	r5, r24
    1d30:	01 c0       	rjmp	.+2      	; 0x1d34 <vfprintf+0x268>
    1d32:	51 2c       	mov	r5, r1
    1d34:	89 2d       	mov	r24, r9
    1d36:	89 70       	andi	r24, 0x09	; 9
    1d38:	49 f4       	brne	.+18     	; 0x1d4c <vfprintf+0x280>
    1d3a:	55 20       	and	r5, r5
    1d3c:	39 f0       	breq	.+14     	; 0x1d4c <vfprintf+0x280>
    1d3e:	b7 01       	movw	r22, r14
    1d40:	80 e2       	ldi	r24, 0x20	; 32
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1d48:	5a 94       	dec	r5
    1d4a:	f7 cf       	rjmp	.-18     	; 0x1d3a <vfprintf+0x26e>
    1d4c:	00 23       	and	r16, r16
    1d4e:	29 f0       	breq	.+10     	; 0x1d5a <vfprintf+0x28e>
    1d50:	b7 01       	movw	r22, r14
    1d52:	80 2f       	mov	r24, r16
    1d54:	90 e0       	ldi	r25, 0x00	; 0
    1d56:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1d5a:	93 fc       	sbrc	r9, 3
    1d5c:	09 c0       	rjmp	.+18     	; 0x1d70 <vfprintf+0x2a4>
    1d5e:	55 20       	and	r5, r5
    1d60:	39 f0       	breq	.+14     	; 0x1d70 <vfprintf+0x2a4>
    1d62:	b7 01       	movw	r22, r14
    1d64:	80 e3       	ldi	r24, 0x30	; 48
    1d66:	90 e0       	ldi	r25, 0x00	; 0
    1d68:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1d6c:	5a 94       	dec	r5
    1d6e:	f7 cf       	rjmp	.-18     	; 0x1d5e <vfprintf+0x292>
    1d70:	97 fe       	sbrs	r9, 7
    1d72:	4c c0       	rjmp	.+152    	; 0x1e0c <vfprintf+0x340>
    1d74:	46 01       	movw	r8, r12
    1d76:	d7 fe       	sbrs	r13, 7
    1d78:	02 c0       	rjmp	.+4      	; 0x1d7e <vfprintf+0x2b2>
    1d7a:	81 2c       	mov	r8, r1
    1d7c:	91 2c       	mov	r9, r1
    1d7e:	c6 01       	movw	r24, r12
    1d80:	88 19       	sub	r24, r8
    1d82:	99 09       	sbc	r25, r9
    1d84:	f3 01       	movw	r30, r6
    1d86:	e8 0f       	add	r30, r24
    1d88:	f9 1f       	adc	r31, r25
    1d8a:	fe 87       	std	Y+14, r31	; 0x0e
    1d8c:	ed 87       	std	Y+13, r30	; 0x0d
    1d8e:	96 01       	movw	r18, r12
    1d90:	24 19       	sub	r18, r4
    1d92:	31 09       	sbc	r19, r1
    1d94:	38 8b       	std	Y+16, r19	; 0x10
    1d96:	2f 87       	std	Y+15, r18	; 0x0f
    1d98:	01 2f       	mov	r16, r17
    1d9a:	10 e0       	ldi	r17, 0x00	; 0
    1d9c:	11 95       	neg	r17
    1d9e:	01 95       	neg	r16
    1da0:	11 09       	sbc	r17, r1
    1da2:	3f ef       	ldi	r19, 0xFF	; 255
    1da4:	83 16       	cp	r8, r19
    1da6:	93 06       	cpc	r9, r19
    1da8:	29 f4       	brne	.+10     	; 0x1db4 <vfprintf+0x2e8>
    1daa:	b7 01       	movw	r22, r14
    1dac:	8e e2       	ldi	r24, 0x2E	; 46
    1dae:	90 e0       	ldi	r25, 0x00	; 0
    1db0:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1db4:	c8 14       	cp	r12, r8
    1db6:	d9 04       	cpc	r13, r9
    1db8:	4c f0       	brlt	.+18     	; 0x1dcc <vfprintf+0x300>
    1dba:	8f 85       	ldd	r24, Y+15	; 0x0f
    1dbc:	98 89       	ldd	r25, Y+16	; 0x10
    1dbe:	88 15       	cp	r24, r8
    1dc0:	99 05       	cpc	r25, r9
    1dc2:	24 f4       	brge	.+8      	; 0x1dcc <vfprintf+0x300>
    1dc4:	ed 85       	ldd	r30, Y+13	; 0x0d
    1dc6:	fe 85       	ldd	r31, Y+14	; 0x0e
    1dc8:	81 81       	ldd	r24, Z+1	; 0x01
    1dca:	01 c0       	rjmp	.+2      	; 0x1dce <vfprintf+0x302>
    1dcc:	80 e3       	ldi	r24, 0x30	; 48
    1dce:	f1 e0       	ldi	r31, 0x01	; 1
    1dd0:	8f 1a       	sub	r8, r31
    1dd2:	91 08       	sbc	r9, r1
    1dd4:	2d 85       	ldd	r18, Y+13	; 0x0d
    1dd6:	3e 85       	ldd	r19, Y+14	; 0x0e
    1dd8:	2f 5f       	subi	r18, 0xFF	; 255
    1dda:	3f 4f       	sbci	r19, 0xFF	; 255
    1ddc:	3e 87       	std	Y+14, r19	; 0x0e
    1dde:	2d 87       	std	Y+13, r18	; 0x0d
    1de0:	80 16       	cp	r8, r16
    1de2:	91 06       	cpc	r9, r17
    1de4:	2c f0       	brlt	.+10     	; 0x1df0 <vfprintf+0x324>
    1de6:	b7 01       	movw	r22, r14
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1dee:	d9 cf       	rjmp	.-78     	; 0x1da2 <vfprintf+0x2d6>
    1df0:	c8 14       	cp	r12, r8
    1df2:	d9 04       	cpc	r13, r9
    1df4:	41 f4       	brne	.+16     	; 0x1e06 <vfprintf+0x33a>
    1df6:	9a 81       	ldd	r25, Y+2	; 0x02
    1df8:	96 33       	cpi	r25, 0x36	; 54
    1dfa:	20 f4       	brcc	.+8      	; 0x1e04 <vfprintf+0x338>
    1dfc:	95 33       	cpi	r25, 0x35	; 53
    1dfe:	19 f4       	brne	.+6      	; 0x1e06 <vfprintf+0x33a>
    1e00:	3c 85       	ldd	r19, Y+12	; 0x0c
    1e02:	34 ff       	sbrs	r19, 4
    1e04:	81 e3       	ldi	r24, 0x31	; 49
    1e06:	b7 01       	movw	r22, r14
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	4e c0       	rjmp	.+156    	; 0x1ea8 <vfprintf+0x3dc>
    1e0c:	8a 81       	ldd	r24, Y+2	; 0x02
    1e0e:	81 33       	cpi	r24, 0x31	; 49
    1e10:	19 f0       	breq	.+6      	; 0x1e18 <vfprintf+0x34c>
    1e12:	9c 85       	ldd	r25, Y+12	; 0x0c
    1e14:	9f 7e       	andi	r25, 0xEF	; 239
    1e16:	9c 87       	std	Y+12, r25	; 0x0c
    1e18:	b7 01       	movw	r22, r14
    1e1a:	90 e0       	ldi	r25, 0x00	; 0
    1e1c:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1e20:	11 11       	cpse	r17, r1
    1e22:	05 c0       	rjmp	.+10     	; 0x1e2e <vfprintf+0x362>
    1e24:	94 fc       	sbrc	r9, 4
    1e26:	18 c0       	rjmp	.+48     	; 0x1e58 <vfprintf+0x38c>
    1e28:	85 e6       	ldi	r24, 0x65	; 101
    1e2a:	90 e0       	ldi	r25, 0x00	; 0
    1e2c:	17 c0       	rjmp	.+46     	; 0x1e5c <vfprintf+0x390>
    1e2e:	b7 01       	movw	r22, r14
    1e30:	8e e2       	ldi	r24, 0x2E	; 46
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1e38:	1e 5f       	subi	r17, 0xFE	; 254
    1e3a:	82 e0       	ldi	r24, 0x02	; 2
    1e3c:	01 e0       	ldi	r16, 0x01	; 1
    1e3e:	08 0f       	add	r16, r24
    1e40:	f3 01       	movw	r30, r6
    1e42:	e8 0f       	add	r30, r24
    1e44:	f1 1d       	adc	r31, r1
    1e46:	80 81       	ld	r24, Z
    1e48:	b7 01       	movw	r22, r14
    1e4a:	90 e0       	ldi	r25, 0x00	; 0
    1e4c:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1e50:	80 2f       	mov	r24, r16
    1e52:	01 13       	cpse	r16, r17
    1e54:	f3 cf       	rjmp	.-26     	; 0x1e3c <vfprintf+0x370>
    1e56:	e6 cf       	rjmp	.-52     	; 0x1e24 <vfprintf+0x358>
    1e58:	85 e4       	ldi	r24, 0x45	; 69
    1e5a:	90 e0       	ldi	r25, 0x00	; 0
    1e5c:	b7 01       	movw	r22, r14
    1e5e:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1e62:	d7 fc       	sbrc	r13, 7
    1e64:	06 c0       	rjmp	.+12     	; 0x1e72 <vfprintf+0x3a6>
    1e66:	c1 14       	cp	r12, r1
    1e68:	d1 04       	cpc	r13, r1
    1e6a:	41 f4       	brne	.+16     	; 0x1e7c <vfprintf+0x3b0>
    1e6c:	ec 85       	ldd	r30, Y+12	; 0x0c
    1e6e:	e4 ff       	sbrs	r30, 4
    1e70:	05 c0       	rjmp	.+10     	; 0x1e7c <vfprintf+0x3b0>
    1e72:	d1 94       	neg	r13
    1e74:	c1 94       	neg	r12
    1e76:	d1 08       	sbc	r13, r1
    1e78:	8d e2       	ldi	r24, 0x2D	; 45
    1e7a:	01 c0       	rjmp	.+2      	; 0x1e7e <vfprintf+0x3b2>
    1e7c:	8b e2       	ldi	r24, 0x2B	; 43
    1e7e:	b7 01       	movw	r22, r14
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1e86:	80 e3       	ldi	r24, 0x30	; 48
    1e88:	2a e0       	ldi	r18, 0x0A	; 10
    1e8a:	c2 16       	cp	r12, r18
    1e8c:	d1 04       	cpc	r13, r1
    1e8e:	2c f0       	brlt	.+10     	; 0x1e9a <vfprintf+0x3ce>
    1e90:	8f 5f       	subi	r24, 0xFF	; 255
    1e92:	fa e0       	ldi	r31, 0x0A	; 10
    1e94:	cf 1a       	sub	r12, r31
    1e96:	d1 08       	sbc	r13, r1
    1e98:	f7 cf       	rjmp	.-18     	; 0x1e88 <vfprintf+0x3bc>
    1e9a:	b7 01       	movw	r22, r14
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1ea2:	b7 01       	movw	r22, r14
    1ea4:	c6 01       	movw	r24, r12
    1ea6:	c0 96       	adiw	r24, 0x30	; 48
    1ea8:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1eac:	54 c1       	rjmp	.+680    	; 0x2156 <vfprintf+0x68a>
    1eae:	83 36       	cpi	r24, 0x63	; 99
    1eb0:	31 f0       	breq	.+12     	; 0x1ebe <vfprintf+0x3f2>
    1eb2:	83 37       	cpi	r24, 0x73	; 115
    1eb4:	79 f0       	breq	.+30     	; 0x1ed4 <vfprintf+0x408>
    1eb6:	83 35       	cpi	r24, 0x53	; 83
    1eb8:	09 f0       	breq	.+2      	; 0x1ebc <vfprintf+0x3f0>
    1eba:	56 c0       	rjmp	.+172    	; 0x1f68 <vfprintf+0x49c>
    1ebc:	20 c0       	rjmp	.+64     	; 0x1efe <vfprintf+0x432>
    1ebe:	56 01       	movw	r10, r12
    1ec0:	32 e0       	ldi	r19, 0x02	; 2
    1ec2:	a3 0e       	add	r10, r19
    1ec4:	b1 1c       	adc	r11, r1
    1ec6:	f6 01       	movw	r30, r12
    1ec8:	80 81       	ld	r24, Z
    1eca:	89 83       	std	Y+1, r24	; 0x01
    1ecc:	01 e0       	ldi	r16, 0x01	; 1
    1ece:	10 e0       	ldi	r17, 0x00	; 0
    1ed0:	63 01       	movw	r12, r6
    1ed2:	12 c0       	rjmp	.+36     	; 0x1ef8 <vfprintf+0x42c>
    1ed4:	56 01       	movw	r10, r12
    1ed6:	f2 e0       	ldi	r31, 0x02	; 2
    1ed8:	af 0e       	add	r10, r31
    1eda:	b1 1c       	adc	r11, r1
    1edc:	f6 01       	movw	r30, r12
    1ede:	c0 80       	ld	r12, Z
    1ee0:	d1 80       	ldd	r13, Z+1	; 0x01
    1ee2:	96 fe       	sbrs	r9, 6
    1ee4:	03 c0       	rjmp	.+6      	; 0x1eec <vfprintf+0x420>
    1ee6:	61 2f       	mov	r22, r17
    1ee8:	70 e0       	ldi	r23, 0x00	; 0
    1eea:	02 c0       	rjmp	.+4      	; 0x1ef0 <vfprintf+0x424>
    1eec:	6f ef       	ldi	r22, 0xFF	; 255
    1eee:	7f ef       	ldi	r23, 0xFF	; 255
    1ef0:	c6 01       	movw	r24, r12
    1ef2:	0e 94 4f 12 	call	0x249e	; 0x249e <strnlen>
    1ef6:	8c 01       	movw	r16, r24
    1ef8:	f9 2d       	mov	r31, r9
    1efa:	ff 77       	andi	r31, 0x7F	; 127
    1efc:	14 c0       	rjmp	.+40     	; 0x1f26 <vfprintf+0x45a>
    1efe:	56 01       	movw	r10, r12
    1f00:	22 e0       	ldi	r18, 0x02	; 2
    1f02:	a2 0e       	add	r10, r18
    1f04:	b1 1c       	adc	r11, r1
    1f06:	f6 01       	movw	r30, r12
    1f08:	c0 80       	ld	r12, Z
    1f0a:	d1 80       	ldd	r13, Z+1	; 0x01
    1f0c:	96 fe       	sbrs	r9, 6
    1f0e:	03 c0       	rjmp	.+6      	; 0x1f16 <vfprintf+0x44a>
    1f10:	61 2f       	mov	r22, r17
    1f12:	70 e0       	ldi	r23, 0x00	; 0
    1f14:	02 c0       	rjmp	.+4      	; 0x1f1a <vfprintf+0x44e>
    1f16:	6f ef       	ldi	r22, 0xFF	; 255
    1f18:	7f ef       	ldi	r23, 0xFF	; 255
    1f1a:	c6 01       	movw	r24, r12
    1f1c:	0e 94 36 12 	call	0x246c	; 0x246c <strnlen_P>
    1f20:	8c 01       	movw	r16, r24
    1f22:	f9 2d       	mov	r31, r9
    1f24:	f0 68       	ori	r31, 0x80	; 128
    1f26:	9f 2e       	mov	r9, r31
    1f28:	f3 fd       	sbrc	r31, 3
    1f2a:	1a c0       	rjmp	.+52     	; 0x1f60 <vfprintf+0x494>
    1f2c:	85 2d       	mov	r24, r5
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	08 17       	cp	r16, r24
    1f32:	19 07       	cpc	r17, r25
    1f34:	a8 f4       	brcc	.+42     	; 0x1f60 <vfprintf+0x494>
    1f36:	b7 01       	movw	r22, r14
    1f38:	80 e2       	ldi	r24, 0x20	; 32
    1f3a:	90 e0       	ldi	r25, 0x00	; 0
    1f3c:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1f40:	5a 94       	dec	r5
    1f42:	f4 cf       	rjmp	.-24     	; 0x1f2c <vfprintf+0x460>
    1f44:	f6 01       	movw	r30, r12
    1f46:	97 fc       	sbrc	r9, 7
    1f48:	85 91       	lpm	r24, Z+
    1f4a:	97 fe       	sbrs	r9, 7
    1f4c:	81 91       	ld	r24, Z+
    1f4e:	6f 01       	movw	r12, r30
    1f50:	b7 01       	movw	r22, r14
    1f52:	90 e0       	ldi	r25, 0x00	; 0
    1f54:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    1f58:	51 10       	cpse	r5, r1
    1f5a:	5a 94       	dec	r5
    1f5c:	01 50       	subi	r16, 0x01	; 1
    1f5e:	11 09       	sbc	r17, r1
    1f60:	01 15       	cp	r16, r1
    1f62:	11 05       	cpc	r17, r1
    1f64:	79 f7       	brne	.-34     	; 0x1f44 <vfprintf+0x478>
    1f66:	f7 c0       	rjmp	.+494    	; 0x2156 <vfprintf+0x68a>
    1f68:	84 36       	cpi	r24, 0x64	; 100
    1f6a:	11 f0       	breq	.+4      	; 0x1f70 <vfprintf+0x4a4>
    1f6c:	89 36       	cpi	r24, 0x69	; 105
    1f6e:	61 f5       	brne	.+88     	; 0x1fc8 <vfprintf+0x4fc>
    1f70:	56 01       	movw	r10, r12
    1f72:	97 fe       	sbrs	r9, 7
    1f74:	09 c0       	rjmp	.+18     	; 0x1f88 <vfprintf+0x4bc>
    1f76:	24 e0       	ldi	r18, 0x04	; 4
    1f78:	a2 0e       	add	r10, r18
    1f7a:	b1 1c       	adc	r11, r1
    1f7c:	f6 01       	movw	r30, r12
    1f7e:	60 81       	ld	r22, Z
    1f80:	71 81       	ldd	r23, Z+1	; 0x01
    1f82:	82 81       	ldd	r24, Z+2	; 0x02
    1f84:	93 81       	ldd	r25, Z+3	; 0x03
    1f86:	0a c0       	rjmp	.+20     	; 0x1f9c <vfprintf+0x4d0>
    1f88:	f2 e0       	ldi	r31, 0x02	; 2
    1f8a:	af 0e       	add	r10, r31
    1f8c:	b1 1c       	adc	r11, r1
    1f8e:	f6 01       	movw	r30, r12
    1f90:	60 81       	ld	r22, Z
    1f92:	71 81       	ldd	r23, Z+1	; 0x01
    1f94:	07 2e       	mov	r0, r23
    1f96:	00 0c       	add	r0, r0
    1f98:	88 0b       	sbc	r24, r24
    1f9a:	99 0b       	sbc	r25, r25
    1f9c:	f9 2d       	mov	r31, r9
    1f9e:	ff 76       	andi	r31, 0x6F	; 111
    1fa0:	9f 2e       	mov	r9, r31
    1fa2:	97 ff       	sbrs	r25, 7
    1fa4:	09 c0       	rjmp	.+18     	; 0x1fb8 <vfprintf+0x4ec>
    1fa6:	90 95       	com	r25
    1fa8:	80 95       	com	r24
    1faa:	70 95       	com	r23
    1fac:	61 95       	neg	r22
    1fae:	7f 4f       	sbci	r23, 0xFF	; 255
    1fb0:	8f 4f       	sbci	r24, 0xFF	; 255
    1fb2:	9f 4f       	sbci	r25, 0xFF	; 255
    1fb4:	f0 68       	ori	r31, 0x80	; 128
    1fb6:	9f 2e       	mov	r9, r31
    1fb8:	2a e0       	ldi	r18, 0x0A	; 10
    1fba:	30 e0       	ldi	r19, 0x00	; 0
    1fbc:	a3 01       	movw	r20, r6
    1fbe:	0e 94 96 12 	call	0x252c	; 0x252c <__ultoa_invert>
    1fc2:	c8 2e       	mov	r12, r24
    1fc4:	c6 18       	sub	r12, r6
    1fc6:	3f c0       	rjmp	.+126    	; 0x2046 <vfprintf+0x57a>
    1fc8:	09 2d       	mov	r16, r9
    1fca:	85 37       	cpi	r24, 0x75	; 117
    1fcc:	21 f4       	brne	.+8      	; 0x1fd6 <vfprintf+0x50a>
    1fce:	0f 7e       	andi	r16, 0xEF	; 239
    1fd0:	2a e0       	ldi	r18, 0x0A	; 10
    1fd2:	30 e0       	ldi	r19, 0x00	; 0
    1fd4:	1d c0       	rjmp	.+58     	; 0x2010 <vfprintf+0x544>
    1fd6:	09 7f       	andi	r16, 0xF9	; 249
    1fd8:	8f 36       	cpi	r24, 0x6F	; 111
    1fda:	91 f0       	breq	.+36     	; 0x2000 <vfprintf+0x534>
    1fdc:	18 f4       	brcc	.+6      	; 0x1fe4 <vfprintf+0x518>
    1fde:	88 35       	cpi	r24, 0x58	; 88
    1fe0:	59 f0       	breq	.+22     	; 0x1ff8 <vfprintf+0x52c>
    1fe2:	c3 c0       	rjmp	.+390    	; 0x216a <vfprintf+0x69e>
    1fe4:	80 37       	cpi	r24, 0x70	; 112
    1fe6:	19 f0       	breq	.+6      	; 0x1fee <vfprintf+0x522>
    1fe8:	88 37       	cpi	r24, 0x78	; 120
    1fea:	11 f0       	breq	.+4      	; 0x1ff0 <vfprintf+0x524>
    1fec:	be c0       	rjmp	.+380    	; 0x216a <vfprintf+0x69e>
    1fee:	00 61       	ori	r16, 0x10	; 16
    1ff0:	04 ff       	sbrs	r16, 4
    1ff2:	09 c0       	rjmp	.+18     	; 0x2006 <vfprintf+0x53a>
    1ff4:	04 60       	ori	r16, 0x04	; 4
    1ff6:	07 c0       	rjmp	.+14     	; 0x2006 <vfprintf+0x53a>
    1ff8:	94 fe       	sbrs	r9, 4
    1ffa:	08 c0       	rjmp	.+16     	; 0x200c <vfprintf+0x540>
    1ffc:	06 60       	ori	r16, 0x06	; 6
    1ffe:	06 c0       	rjmp	.+12     	; 0x200c <vfprintf+0x540>
    2000:	28 e0       	ldi	r18, 0x08	; 8
    2002:	30 e0       	ldi	r19, 0x00	; 0
    2004:	05 c0       	rjmp	.+10     	; 0x2010 <vfprintf+0x544>
    2006:	20 e1       	ldi	r18, 0x10	; 16
    2008:	30 e0       	ldi	r19, 0x00	; 0
    200a:	02 c0       	rjmp	.+4      	; 0x2010 <vfprintf+0x544>
    200c:	20 e1       	ldi	r18, 0x10	; 16
    200e:	32 e0       	ldi	r19, 0x02	; 2
    2010:	56 01       	movw	r10, r12
    2012:	07 ff       	sbrs	r16, 7
    2014:	09 c0       	rjmp	.+18     	; 0x2028 <vfprintf+0x55c>
    2016:	84 e0       	ldi	r24, 0x04	; 4
    2018:	a8 0e       	add	r10, r24
    201a:	b1 1c       	adc	r11, r1
    201c:	f6 01       	movw	r30, r12
    201e:	60 81       	ld	r22, Z
    2020:	71 81       	ldd	r23, Z+1	; 0x01
    2022:	82 81       	ldd	r24, Z+2	; 0x02
    2024:	93 81       	ldd	r25, Z+3	; 0x03
    2026:	08 c0       	rjmp	.+16     	; 0x2038 <vfprintf+0x56c>
    2028:	f2 e0       	ldi	r31, 0x02	; 2
    202a:	af 0e       	add	r10, r31
    202c:	b1 1c       	adc	r11, r1
    202e:	f6 01       	movw	r30, r12
    2030:	60 81       	ld	r22, Z
    2032:	71 81       	ldd	r23, Z+1	; 0x01
    2034:	80 e0       	ldi	r24, 0x00	; 0
    2036:	90 e0       	ldi	r25, 0x00	; 0
    2038:	a3 01       	movw	r20, r6
    203a:	0e 94 96 12 	call	0x252c	; 0x252c <__ultoa_invert>
    203e:	c8 2e       	mov	r12, r24
    2040:	c6 18       	sub	r12, r6
    2042:	0f 77       	andi	r16, 0x7F	; 127
    2044:	90 2e       	mov	r9, r16
    2046:	96 fe       	sbrs	r9, 6
    2048:	0b c0       	rjmp	.+22     	; 0x2060 <vfprintf+0x594>
    204a:	09 2d       	mov	r16, r9
    204c:	0e 7f       	andi	r16, 0xFE	; 254
    204e:	c1 16       	cp	r12, r17
    2050:	50 f4       	brcc	.+20     	; 0x2066 <vfprintf+0x59a>
    2052:	94 fe       	sbrs	r9, 4
    2054:	0a c0       	rjmp	.+20     	; 0x206a <vfprintf+0x59e>
    2056:	92 fc       	sbrc	r9, 2
    2058:	08 c0       	rjmp	.+16     	; 0x206a <vfprintf+0x59e>
    205a:	09 2d       	mov	r16, r9
    205c:	0e 7e       	andi	r16, 0xEE	; 238
    205e:	05 c0       	rjmp	.+10     	; 0x206a <vfprintf+0x59e>
    2060:	dc 2c       	mov	r13, r12
    2062:	09 2d       	mov	r16, r9
    2064:	03 c0       	rjmp	.+6      	; 0x206c <vfprintf+0x5a0>
    2066:	dc 2c       	mov	r13, r12
    2068:	01 c0       	rjmp	.+2      	; 0x206c <vfprintf+0x5a0>
    206a:	d1 2e       	mov	r13, r17
    206c:	04 ff       	sbrs	r16, 4
    206e:	0d c0       	rjmp	.+26     	; 0x208a <vfprintf+0x5be>
    2070:	fe 01       	movw	r30, r28
    2072:	ec 0d       	add	r30, r12
    2074:	f1 1d       	adc	r31, r1
    2076:	80 81       	ld	r24, Z
    2078:	80 33       	cpi	r24, 0x30	; 48
    207a:	11 f4       	brne	.+4      	; 0x2080 <vfprintf+0x5b4>
    207c:	09 7e       	andi	r16, 0xE9	; 233
    207e:	09 c0       	rjmp	.+18     	; 0x2092 <vfprintf+0x5c6>
    2080:	02 ff       	sbrs	r16, 2
    2082:	06 c0       	rjmp	.+12     	; 0x2090 <vfprintf+0x5c4>
    2084:	d3 94       	inc	r13
    2086:	d3 94       	inc	r13
    2088:	04 c0       	rjmp	.+8      	; 0x2092 <vfprintf+0x5c6>
    208a:	80 2f       	mov	r24, r16
    208c:	86 78       	andi	r24, 0x86	; 134
    208e:	09 f0       	breq	.+2      	; 0x2092 <vfprintf+0x5c6>
    2090:	d3 94       	inc	r13
    2092:	03 fd       	sbrc	r16, 3
    2094:	11 c0       	rjmp	.+34     	; 0x20b8 <vfprintf+0x5ec>
    2096:	00 ff       	sbrs	r16, 0
    2098:	06 c0       	rjmp	.+12     	; 0x20a6 <vfprintf+0x5da>
    209a:	1c 2d       	mov	r17, r12
    209c:	d5 14       	cp	r13, r5
    209e:	80 f4       	brcc	.+32     	; 0x20c0 <vfprintf+0x5f4>
    20a0:	15 0d       	add	r17, r5
    20a2:	1d 19       	sub	r17, r13
    20a4:	0d c0       	rjmp	.+26     	; 0x20c0 <vfprintf+0x5f4>
    20a6:	d5 14       	cp	r13, r5
    20a8:	58 f4       	brcc	.+22     	; 0x20c0 <vfprintf+0x5f4>
    20aa:	b7 01       	movw	r22, r14
    20ac:	80 e2       	ldi	r24, 0x20	; 32
    20ae:	90 e0       	ldi	r25, 0x00	; 0
    20b0:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    20b4:	d3 94       	inc	r13
    20b6:	f7 cf       	rjmp	.-18     	; 0x20a6 <vfprintf+0x5da>
    20b8:	d5 14       	cp	r13, r5
    20ba:	10 f4       	brcc	.+4      	; 0x20c0 <vfprintf+0x5f4>
    20bc:	5d 18       	sub	r5, r13
    20be:	01 c0       	rjmp	.+2      	; 0x20c2 <vfprintf+0x5f6>
    20c0:	51 2c       	mov	r5, r1
    20c2:	04 ff       	sbrs	r16, 4
    20c4:	10 c0       	rjmp	.+32     	; 0x20e6 <vfprintf+0x61a>
    20c6:	b7 01       	movw	r22, r14
    20c8:	80 e3       	ldi	r24, 0x30	; 48
    20ca:	90 e0       	ldi	r25, 0x00	; 0
    20cc:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    20d0:	02 ff       	sbrs	r16, 2
    20d2:	17 c0       	rjmp	.+46     	; 0x2102 <vfprintf+0x636>
    20d4:	01 fd       	sbrc	r16, 1
    20d6:	03 c0       	rjmp	.+6      	; 0x20de <vfprintf+0x612>
    20d8:	88 e7       	ldi	r24, 0x78	; 120
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	02 c0       	rjmp	.+4      	; 0x20e2 <vfprintf+0x616>
    20de:	88 e5       	ldi	r24, 0x58	; 88
    20e0:	90 e0       	ldi	r25, 0x00	; 0
    20e2:	b7 01       	movw	r22, r14
    20e4:	0c c0       	rjmp	.+24     	; 0x20fe <vfprintf+0x632>
    20e6:	80 2f       	mov	r24, r16
    20e8:	86 78       	andi	r24, 0x86	; 134
    20ea:	59 f0       	breq	.+22     	; 0x2102 <vfprintf+0x636>
    20ec:	01 ff       	sbrs	r16, 1
    20ee:	02 c0       	rjmp	.+4      	; 0x20f4 <vfprintf+0x628>
    20f0:	8b e2       	ldi	r24, 0x2B	; 43
    20f2:	01 c0       	rjmp	.+2      	; 0x20f6 <vfprintf+0x62a>
    20f4:	80 e2       	ldi	r24, 0x20	; 32
    20f6:	07 fd       	sbrc	r16, 7
    20f8:	8d e2       	ldi	r24, 0x2D	; 45
    20fa:	b7 01       	movw	r22, r14
    20fc:	90 e0       	ldi	r25, 0x00	; 0
    20fe:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    2102:	c1 16       	cp	r12, r17
    2104:	38 f4       	brcc	.+14     	; 0x2114 <vfprintf+0x648>
    2106:	b7 01       	movw	r22, r14
    2108:	80 e3       	ldi	r24, 0x30	; 48
    210a:	90 e0       	ldi	r25, 0x00	; 0
    210c:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    2110:	11 50       	subi	r17, 0x01	; 1
    2112:	f7 cf       	rjmp	.-18     	; 0x2102 <vfprintf+0x636>
    2114:	ca 94       	dec	r12
    2116:	f3 01       	movw	r30, r6
    2118:	ec 0d       	add	r30, r12
    211a:	f1 1d       	adc	r31, r1
    211c:	80 81       	ld	r24, Z
    211e:	b7 01       	movw	r22, r14
    2120:	90 e0       	ldi	r25, 0x00	; 0
    2122:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    2126:	c1 10       	cpse	r12, r1
    2128:	f5 cf       	rjmp	.-22     	; 0x2114 <vfprintf+0x648>
    212a:	15 c0       	rjmp	.+42     	; 0x2156 <vfprintf+0x68a>
    212c:	f4 e0       	ldi	r31, 0x04	; 4
    212e:	f5 15       	cp	r31, r5
    2130:	60 f5       	brcc	.+88     	; 0x218a <vfprintf+0x6be>
    2132:	84 e0       	ldi	r24, 0x04	; 4
    2134:	58 1a       	sub	r5, r24
    2136:	93 fe       	sbrs	r9, 3
    2138:	1f c0       	rjmp	.+62     	; 0x2178 <vfprintf+0x6ac>
    213a:	01 11       	cpse	r16, r1
    213c:	27 c0       	rjmp	.+78     	; 0x218c <vfprintf+0x6c0>
    213e:	2c 85       	ldd	r18, Y+12	; 0x0c
    2140:	23 ff       	sbrs	r18, 3
    2142:	2a c0       	rjmp	.+84     	; 0x2198 <vfprintf+0x6cc>
    2144:	04 eb       	ldi	r16, 0xB4	; 180
    2146:	10 e0       	ldi	r17, 0x00	; 0
    2148:	39 2d       	mov	r19, r9
    214a:	30 71       	andi	r19, 0x10	; 16
    214c:	93 2e       	mov	r9, r19
    214e:	f8 01       	movw	r30, r16
    2150:	84 91       	lpm	r24, Z
    2152:	81 11       	cpse	r24, r1
    2154:	24 c0       	rjmp	.+72     	; 0x219e <vfprintf+0x6d2>
    2156:	55 20       	and	r5, r5
    2158:	09 f4       	brne	.+2      	; 0x215c <vfprintf+0x690>
    215a:	e4 cc       	rjmp	.-1592   	; 0x1b24 <vfprintf+0x58>
    215c:	b7 01       	movw	r22, r14
    215e:	80 e2       	ldi	r24, 0x20	; 32
    2160:	90 e0       	ldi	r25, 0x00	; 0
    2162:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    2166:	5a 94       	dec	r5
    2168:	f6 cf       	rjmp	.-20     	; 0x2156 <vfprintf+0x68a>
    216a:	f7 01       	movw	r30, r14
    216c:	86 81       	ldd	r24, Z+6	; 0x06
    216e:	97 81       	ldd	r25, Z+7	; 0x07
    2170:	26 c0       	rjmp	.+76     	; 0x21be <vfprintf+0x6f2>
    2172:	8f ef       	ldi	r24, 0xFF	; 255
    2174:	9f ef       	ldi	r25, 0xFF	; 255
    2176:	23 c0       	rjmp	.+70     	; 0x21be <vfprintf+0x6f2>
    2178:	b7 01       	movw	r22, r14
    217a:	80 e2       	ldi	r24, 0x20	; 32
    217c:	90 e0       	ldi	r25, 0x00	; 0
    217e:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    2182:	5a 94       	dec	r5
    2184:	51 10       	cpse	r5, r1
    2186:	f8 cf       	rjmp	.-16     	; 0x2178 <vfprintf+0x6ac>
    2188:	d8 cf       	rjmp	.-80     	; 0x213a <vfprintf+0x66e>
    218a:	51 2c       	mov	r5, r1
    218c:	b7 01       	movw	r22, r14
    218e:	80 2f       	mov	r24, r16
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    2196:	d3 cf       	rjmp	.-90     	; 0x213e <vfprintf+0x672>
    2198:	08 eb       	ldi	r16, 0xB8	; 184
    219a:	10 e0       	ldi	r17, 0x00	; 0
    219c:	d5 cf       	rjmp	.-86     	; 0x2148 <vfprintf+0x67c>
    219e:	91 10       	cpse	r9, r1
    21a0:	80 52       	subi	r24, 0x20	; 32
    21a2:	b7 01       	movw	r22, r14
    21a4:	90 e0       	ldi	r25, 0x00	; 0
    21a6:	0e 94 5a 12 	call	0x24b4	; 0x24b4 <fputc>
    21aa:	0f 5f       	subi	r16, 0xFF	; 255
    21ac:	1f 4f       	sbci	r17, 0xFF	; 255
    21ae:	cf cf       	rjmp	.-98     	; 0x214e <vfprintf+0x682>
    21b0:	23 e0       	ldi	r18, 0x03	; 3
    21b2:	25 15       	cp	r18, r5
    21b4:	10 f4       	brcc	.+4      	; 0x21ba <vfprintf+0x6ee>
    21b6:	83 e0       	ldi	r24, 0x03	; 3
    21b8:	bd cf       	rjmp	.-134    	; 0x2134 <vfprintf+0x668>
    21ba:	51 2c       	mov	r5, r1
    21bc:	c0 cf       	rjmp	.-128    	; 0x213e <vfprintf+0x672>
    21be:	60 96       	adiw	r28, 0x10	; 16
    21c0:	e2 e1       	ldi	r30, 0x12	; 18
    21c2:	0c 94 29 11 	jmp	0x2252	; 0x2252 <__epilogue_restores__>

000021c6 <__udivmodsi4>:
    21c6:	a1 e2       	ldi	r26, 0x21	; 33
    21c8:	1a 2e       	mov	r1, r26
    21ca:	aa 1b       	sub	r26, r26
    21cc:	bb 1b       	sub	r27, r27
    21ce:	fd 01       	movw	r30, r26
    21d0:	0d c0       	rjmp	.+26     	; 0x21ec <__udivmodsi4_ep>

000021d2 <__udivmodsi4_loop>:
    21d2:	aa 1f       	adc	r26, r26
    21d4:	bb 1f       	adc	r27, r27
    21d6:	ee 1f       	adc	r30, r30
    21d8:	ff 1f       	adc	r31, r31
    21da:	a2 17       	cp	r26, r18
    21dc:	b3 07       	cpc	r27, r19
    21de:	e4 07       	cpc	r30, r20
    21e0:	f5 07       	cpc	r31, r21
    21e2:	20 f0       	brcs	.+8      	; 0x21ec <__udivmodsi4_ep>
    21e4:	a2 1b       	sub	r26, r18
    21e6:	b3 0b       	sbc	r27, r19
    21e8:	e4 0b       	sbc	r30, r20
    21ea:	f5 0b       	sbc	r31, r21

000021ec <__udivmodsi4_ep>:
    21ec:	66 1f       	adc	r22, r22
    21ee:	77 1f       	adc	r23, r23
    21f0:	88 1f       	adc	r24, r24
    21f2:	99 1f       	adc	r25, r25
    21f4:	1a 94       	dec	r1
    21f6:	69 f7       	brne	.-38     	; 0x21d2 <__udivmodsi4_loop>
    21f8:	60 95       	com	r22
    21fa:	70 95       	com	r23
    21fc:	80 95       	com	r24
    21fe:	90 95       	com	r25
    2200:	9b 01       	movw	r18, r22
    2202:	ac 01       	movw	r20, r24
    2204:	bd 01       	movw	r22, r26
    2206:	cf 01       	movw	r24, r30
    2208:	08 95       	ret

0000220a <__mulshisi3>:
    220a:	b7 ff       	sbrs	r27, 7
    220c:	0c 94 44 11 	jmp	0x2288	; 0x2288 <__muluhisi3>

00002210 <__mulohisi3>:
    2210:	0e 94 44 11 	call	0x2288	; 0x2288 <__muluhisi3>
    2214:	82 1b       	sub	r24, r18
    2216:	93 0b       	sbc	r25, r19
    2218:	08 95       	ret

0000221a <__prologue_saves__>:
    221a:	2f 92       	push	r2
    221c:	3f 92       	push	r3
    221e:	4f 92       	push	r4
    2220:	5f 92       	push	r5
    2222:	6f 92       	push	r6
    2224:	7f 92       	push	r7
    2226:	8f 92       	push	r8
    2228:	9f 92       	push	r9
    222a:	af 92       	push	r10
    222c:	bf 92       	push	r11
    222e:	cf 92       	push	r12
    2230:	df 92       	push	r13
    2232:	ef 92       	push	r14
    2234:	ff 92       	push	r15
    2236:	0f 93       	push	r16
    2238:	1f 93       	push	r17
    223a:	cf 93       	push	r28
    223c:	df 93       	push	r29
    223e:	cd b7       	in	r28, 0x3d	; 61
    2240:	de b7       	in	r29, 0x3e	; 62
    2242:	ca 1b       	sub	r28, r26
    2244:	db 0b       	sbc	r29, r27
    2246:	0f b6       	in	r0, 0x3f	; 63
    2248:	f8 94       	cli
    224a:	de bf       	out	0x3e, r29	; 62
    224c:	0f be       	out	0x3f, r0	; 63
    224e:	cd bf       	out	0x3d, r28	; 61
    2250:	09 94       	ijmp

00002252 <__epilogue_restores__>:
    2252:	2a 88       	ldd	r2, Y+18	; 0x12
    2254:	39 88       	ldd	r3, Y+17	; 0x11
    2256:	48 88       	ldd	r4, Y+16	; 0x10
    2258:	5f 84       	ldd	r5, Y+15	; 0x0f
    225a:	6e 84       	ldd	r6, Y+14	; 0x0e
    225c:	7d 84       	ldd	r7, Y+13	; 0x0d
    225e:	8c 84       	ldd	r8, Y+12	; 0x0c
    2260:	9b 84       	ldd	r9, Y+11	; 0x0b
    2262:	aa 84       	ldd	r10, Y+10	; 0x0a
    2264:	b9 84       	ldd	r11, Y+9	; 0x09
    2266:	c8 84       	ldd	r12, Y+8	; 0x08
    2268:	df 80       	ldd	r13, Y+7	; 0x07
    226a:	ee 80       	ldd	r14, Y+6	; 0x06
    226c:	fd 80       	ldd	r15, Y+5	; 0x05
    226e:	0c 81       	ldd	r16, Y+4	; 0x04
    2270:	1b 81       	ldd	r17, Y+3	; 0x03
    2272:	aa 81       	ldd	r26, Y+2	; 0x02
    2274:	b9 81       	ldd	r27, Y+1	; 0x01
    2276:	ce 0f       	add	r28, r30
    2278:	d1 1d       	adc	r29, r1
    227a:	0f b6       	in	r0, 0x3f	; 63
    227c:	f8 94       	cli
    227e:	de bf       	out	0x3e, r29	; 62
    2280:	0f be       	out	0x3f, r0	; 63
    2282:	cd bf       	out	0x3d, r28	; 61
    2284:	ed 01       	movw	r28, r26
    2286:	08 95       	ret

00002288 <__muluhisi3>:
    2288:	0e 94 4f 11 	call	0x229e	; 0x229e <__umulhisi3>
    228c:	a5 9f       	mul	r26, r21
    228e:	90 0d       	add	r25, r0
    2290:	b4 9f       	mul	r27, r20
    2292:	90 0d       	add	r25, r0
    2294:	a4 9f       	mul	r26, r20
    2296:	80 0d       	add	r24, r0
    2298:	91 1d       	adc	r25, r1
    229a:	11 24       	eor	r1, r1
    229c:	08 95       	ret

0000229e <__umulhisi3>:
    229e:	a2 9f       	mul	r26, r18
    22a0:	b0 01       	movw	r22, r0
    22a2:	b3 9f       	mul	r27, r19
    22a4:	c0 01       	movw	r24, r0
    22a6:	a3 9f       	mul	r26, r19
    22a8:	70 0d       	add	r23, r0
    22aa:	81 1d       	adc	r24, r1
    22ac:	11 24       	eor	r1, r1
    22ae:	91 1d       	adc	r25, r1
    22b0:	b2 9f       	mul	r27, r18
    22b2:	70 0d       	add	r23, r0
    22b4:	81 1d       	adc	r24, r1
    22b6:	11 24       	eor	r1, r1
    22b8:	91 1d       	adc	r25, r1
    22ba:	08 95       	ret

000022bc <__ftoa_engine>:
    22bc:	28 30       	cpi	r18, 0x08	; 8
    22be:	08 f0       	brcs	.+2      	; 0x22c2 <__ftoa_engine+0x6>
    22c0:	27 e0       	ldi	r18, 0x07	; 7
    22c2:	33 27       	eor	r19, r19
    22c4:	da 01       	movw	r26, r20
    22c6:	99 0f       	add	r25, r25
    22c8:	31 1d       	adc	r19, r1
    22ca:	87 fd       	sbrc	r24, 7
    22cc:	91 60       	ori	r25, 0x01	; 1
    22ce:	00 96       	adiw	r24, 0x00	; 0
    22d0:	61 05       	cpc	r22, r1
    22d2:	71 05       	cpc	r23, r1
    22d4:	39 f4       	brne	.+14     	; 0x22e4 <__ftoa_engine+0x28>
    22d6:	32 60       	ori	r19, 0x02	; 2
    22d8:	2e 5f       	subi	r18, 0xFE	; 254
    22da:	3d 93       	st	X+, r19
    22dc:	30 e3       	ldi	r19, 0x30	; 48
    22de:	2a 95       	dec	r18
    22e0:	e1 f7       	brne	.-8      	; 0x22da <__ftoa_engine+0x1e>
    22e2:	08 95       	ret
    22e4:	9f 3f       	cpi	r25, 0xFF	; 255
    22e6:	30 f0       	brcs	.+12     	; 0x22f4 <__ftoa_engine+0x38>
    22e8:	80 38       	cpi	r24, 0x80	; 128
    22ea:	71 05       	cpc	r23, r1
    22ec:	61 05       	cpc	r22, r1
    22ee:	09 f0       	breq	.+2      	; 0x22f2 <__ftoa_engine+0x36>
    22f0:	3c 5f       	subi	r19, 0xFC	; 252
    22f2:	3c 5f       	subi	r19, 0xFC	; 252
    22f4:	3d 93       	st	X+, r19
    22f6:	91 30       	cpi	r25, 0x01	; 1
    22f8:	08 f0       	brcs	.+2      	; 0x22fc <__ftoa_engine+0x40>
    22fa:	80 68       	ori	r24, 0x80	; 128
    22fc:	91 1d       	adc	r25, r1
    22fe:	df 93       	push	r29
    2300:	cf 93       	push	r28
    2302:	1f 93       	push	r17
    2304:	0f 93       	push	r16
    2306:	ff 92       	push	r15
    2308:	ef 92       	push	r14
    230a:	19 2f       	mov	r17, r25
    230c:	98 7f       	andi	r25, 0xF8	; 248
    230e:	96 95       	lsr	r25
    2310:	e9 2f       	mov	r30, r25
    2312:	96 95       	lsr	r25
    2314:	96 95       	lsr	r25
    2316:	e9 0f       	add	r30, r25
    2318:	ff 27       	eor	r31, r31
    231a:	ea 5e       	subi	r30, 0xEA	; 234
    231c:	fe 4f       	sbci	r31, 0xFE	; 254
    231e:	99 27       	eor	r25, r25
    2320:	33 27       	eor	r19, r19
    2322:	ee 24       	eor	r14, r14
    2324:	ff 24       	eor	r15, r15
    2326:	a7 01       	movw	r20, r14
    2328:	e7 01       	movw	r28, r14
    232a:	05 90       	lpm	r0, Z+
    232c:	08 94       	sec
    232e:	07 94       	ror	r0
    2330:	28 f4       	brcc	.+10     	; 0x233c <__ftoa_engine+0x80>
    2332:	36 0f       	add	r19, r22
    2334:	e7 1e       	adc	r14, r23
    2336:	f8 1e       	adc	r15, r24
    2338:	49 1f       	adc	r20, r25
    233a:	51 1d       	adc	r21, r1
    233c:	66 0f       	add	r22, r22
    233e:	77 1f       	adc	r23, r23
    2340:	88 1f       	adc	r24, r24
    2342:	99 1f       	adc	r25, r25
    2344:	06 94       	lsr	r0
    2346:	a1 f7       	brne	.-24     	; 0x2330 <__ftoa_engine+0x74>
    2348:	05 90       	lpm	r0, Z+
    234a:	07 94       	ror	r0
    234c:	28 f4       	brcc	.+10     	; 0x2358 <__ftoa_engine+0x9c>
    234e:	e7 0e       	add	r14, r23
    2350:	f8 1e       	adc	r15, r24
    2352:	49 1f       	adc	r20, r25
    2354:	56 1f       	adc	r21, r22
    2356:	c1 1d       	adc	r28, r1
    2358:	77 0f       	add	r23, r23
    235a:	88 1f       	adc	r24, r24
    235c:	99 1f       	adc	r25, r25
    235e:	66 1f       	adc	r22, r22
    2360:	06 94       	lsr	r0
    2362:	a1 f7       	brne	.-24     	; 0x234c <__ftoa_engine+0x90>
    2364:	05 90       	lpm	r0, Z+
    2366:	07 94       	ror	r0
    2368:	28 f4       	brcc	.+10     	; 0x2374 <__ftoa_engine+0xb8>
    236a:	f8 0e       	add	r15, r24
    236c:	49 1f       	adc	r20, r25
    236e:	56 1f       	adc	r21, r22
    2370:	c7 1f       	adc	r28, r23
    2372:	d1 1d       	adc	r29, r1
    2374:	88 0f       	add	r24, r24
    2376:	99 1f       	adc	r25, r25
    2378:	66 1f       	adc	r22, r22
    237a:	77 1f       	adc	r23, r23
    237c:	06 94       	lsr	r0
    237e:	a1 f7       	brne	.-24     	; 0x2368 <__ftoa_engine+0xac>
    2380:	05 90       	lpm	r0, Z+
    2382:	07 94       	ror	r0
    2384:	20 f4       	brcc	.+8      	; 0x238e <__ftoa_engine+0xd2>
    2386:	49 0f       	add	r20, r25
    2388:	56 1f       	adc	r21, r22
    238a:	c7 1f       	adc	r28, r23
    238c:	d8 1f       	adc	r29, r24
    238e:	99 0f       	add	r25, r25
    2390:	66 1f       	adc	r22, r22
    2392:	77 1f       	adc	r23, r23
    2394:	88 1f       	adc	r24, r24
    2396:	06 94       	lsr	r0
    2398:	a9 f7       	brne	.-22     	; 0x2384 <__ftoa_engine+0xc8>
    239a:	84 91       	lpm	r24, Z
    239c:	10 95       	com	r17
    239e:	17 70       	andi	r17, 0x07	; 7
    23a0:	41 f0       	breq	.+16     	; 0x23b2 <__ftoa_engine+0xf6>
    23a2:	d6 95       	lsr	r29
    23a4:	c7 95       	ror	r28
    23a6:	57 95       	ror	r21
    23a8:	47 95       	ror	r20
    23aa:	f7 94       	ror	r15
    23ac:	e7 94       	ror	r14
    23ae:	1a 95       	dec	r17
    23b0:	c1 f7       	brne	.-16     	; 0x23a2 <__ftoa_engine+0xe6>
    23b2:	ec eb       	ldi	r30, 0xBC	; 188
    23b4:	f0 e0       	ldi	r31, 0x00	; 0
    23b6:	68 94       	set
    23b8:	15 90       	lpm	r1, Z+
    23ba:	15 91       	lpm	r17, Z+
    23bc:	35 91       	lpm	r19, Z+
    23be:	65 91       	lpm	r22, Z+
    23c0:	95 91       	lpm	r25, Z+
    23c2:	05 90       	lpm	r0, Z+
    23c4:	7f e2       	ldi	r23, 0x2F	; 47
    23c6:	73 95       	inc	r23
    23c8:	e1 18       	sub	r14, r1
    23ca:	f1 0a       	sbc	r15, r17
    23cc:	43 0b       	sbc	r20, r19
    23ce:	56 0b       	sbc	r21, r22
    23d0:	c9 0b       	sbc	r28, r25
    23d2:	d0 09       	sbc	r29, r0
    23d4:	c0 f7       	brcc	.-16     	; 0x23c6 <__ftoa_engine+0x10a>
    23d6:	e1 0c       	add	r14, r1
    23d8:	f1 1e       	adc	r15, r17
    23da:	43 1f       	adc	r20, r19
    23dc:	56 1f       	adc	r21, r22
    23de:	c9 1f       	adc	r28, r25
    23e0:	d0 1d       	adc	r29, r0
    23e2:	7e f4       	brtc	.+30     	; 0x2402 <__ftoa_engine+0x146>
    23e4:	70 33       	cpi	r23, 0x30	; 48
    23e6:	11 f4       	brne	.+4      	; 0x23ec <__ftoa_engine+0x130>
    23e8:	8a 95       	dec	r24
    23ea:	e6 cf       	rjmp	.-52     	; 0x23b8 <__ftoa_engine+0xfc>
    23ec:	e8 94       	clt
    23ee:	01 50       	subi	r16, 0x01	; 1
    23f0:	30 f0       	brcs	.+12     	; 0x23fe <__ftoa_engine+0x142>
    23f2:	08 0f       	add	r16, r24
    23f4:	0a f4       	brpl	.+2      	; 0x23f8 <__ftoa_engine+0x13c>
    23f6:	00 27       	eor	r16, r16
    23f8:	02 17       	cp	r16, r18
    23fa:	08 f4       	brcc	.+2      	; 0x23fe <__ftoa_engine+0x142>
    23fc:	20 2f       	mov	r18, r16
    23fe:	23 95       	inc	r18
    2400:	02 2f       	mov	r16, r18
    2402:	7a 33       	cpi	r23, 0x3A	; 58
    2404:	28 f0       	brcs	.+10     	; 0x2410 <__ftoa_engine+0x154>
    2406:	79 e3       	ldi	r23, 0x39	; 57
    2408:	7d 93       	st	X+, r23
    240a:	2a 95       	dec	r18
    240c:	e9 f7       	brne	.-6      	; 0x2408 <__ftoa_engine+0x14c>
    240e:	10 c0       	rjmp	.+32     	; 0x2430 <__ftoa_engine+0x174>
    2410:	7d 93       	st	X+, r23
    2412:	2a 95       	dec	r18
    2414:	89 f6       	brne	.-94     	; 0x23b8 <__ftoa_engine+0xfc>
    2416:	06 94       	lsr	r0
    2418:	97 95       	ror	r25
    241a:	67 95       	ror	r22
    241c:	37 95       	ror	r19
    241e:	17 95       	ror	r17
    2420:	17 94       	ror	r1
    2422:	e1 18       	sub	r14, r1
    2424:	f1 0a       	sbc	r15, r17
    2426:	43 0b       	sbc	r20, r19
    2428:	56 0b       	sbc	r21, r22
    242a:	c9 0b       	sbc	r28, r25
    242c:	d0 09       	sbc	r29, r0
    242e:	98 f0       	brcs	.+38     	; 0x2456 <__ftoa_engine+0x19a>
    2430:	23 95       	inc	r18
    2432:	7e 91       	ld	r23, -X
    2434:	73 95       	inc	r23
    2436:	7a 33       	cpi	r23, 0x3A	; 58
    2438:	08 f0       	brcs	.+2      	; 0x243c <__ftoa_engine+0x180>
    243a:	70 e3       	ldi	r23, 0x30	; 48
    243c:	7c 93       	st	X, r23
    243e:	20 13       	cpse	r18, r16
    2440:	b8 f7       	brcc	.-18     	; 0x2430 <__ftoa_engine+0x174>
    2442:	7e 91       	ld	r23, -X
    2444:	70 61       	ori	r23, 0x10	; 16
    2446:	7d 93       	st	X+, r23
    2448:	30 f0       	brcs	.+12     	; 0x2456 <__ftoa_engine+0x19a>
    244a:	83 95       	inc	r24
    244c:	71 e3       	ldi	r23, 0x31	; 49
    244e:	7d 93       	st	X+, r23
    2450:	70 e3       	ldi	r23, 0x30	; 48
    2452:	2a 95       	dec	r18
    2454:	e1 f7       	brne	.-8      	; 0x244e <__ftoa_engine+0x192>
    2456:	11 24       	eor	r1, r1
    2458:	ef 90       	pop	r14
    245a:	ff 90       	pop	r15
    245c:	0f 91       	pop	r16
    245e:	1f 91       	pop	r17
    2460:	cf 91       	pop	r28
    2462:	df 91       	pop	r29
    2464:	99 27       	eor	r25, r25
    2466:	87 fd       	sbrc	r24, 7
    2468:	90 95       	com	r25
    246a:	08 95       	ret

0000246c <strnlen_P>:
    246c:	fc 01       	movw	r30, r24
    246e:	05 90       	lpm	r0, Z+
    2470:	61 50       	subi	r22, 0x01	; 1
    2472:	70 40       	sbci	r23, 0x00	; 0
    2474:	01 10       	cpse	r0, r1
    2476:	d8 f7       	brcc	.-10     	; 0x246e <strnlen_P+0x2>
    2478:	80 95       	com	r24
    247a:	90 95       	com	r25
    247c:	8e 0f       	add	r24, r30
    247e:	9f 1f       	adc	r25, r31
    2480:	08 95       	ret

00002482 <strncmp>:
    2482:	fb 01       	movw	r30, r22
    2484:	dc 01       	movw	r26, r24
    2486:	41 50       	subi	r20, 0x01	; 1
    2488:	50 40       	sbci	r21, 0x00	; 0
    248a:	30 f0       	brcs	.+12     	; 0x2498 <strncmp+0x16>
    248c:	8d 91       	ld	r24, X+
    248e:	01 90       	ld	r0, Z+
    2490:	80 19       	sub	r24, r0
    2492:	19 f4       	brne	.+6      	; 0x249a <strncmp+0x18>
    2494:	00 20       	and	r0, r0
    2496:	b9 f7       	brne	.-18     	; 0x2486 <strncmp+0x4>
    2498:	88 1b       	sub	r24, r24
    249a:	99 0b       	sbc	r25, r25
    249c:	08 95       	ret

0000249e <strnlen>:
    249e:	fc 01       	movw	r30, r24
    24a0:	61 50       	subi	r22, 0x01	; 1
    24a2:	70 40       	sbci	r23, 0x00	; 0
    24a4:	01 90       	ld	r0, Z+
    24a6:	01 10       	cpse	r0, r1
    24a8:	d8 f7       	brcc	.-10     	; 0x24a0 <strnlen+0x2>
    24aa:	80 95       	com	r24
    24ac:	90 95       	com	r25
    24ae:	8e 0f       	add	r24, r30
    24b0:	9f 1f       	adc	r25, r31
    24b2:	08 95       	ret

000024b4 <fputc>:
    24b4:	0f 93       	push	r16
    24b6:	1f 93       	push	r17
    24b8:	cf 93       	push	r28
    24ba:	df 93       	push	r29
    24bc:	fb 01       	movw	r30, r22
    24be:	23 81       	ldd	r18, Z+3	; 0x03
    24c0:	21 fd       	sbrc	r18, 1
    24c2:	03 c0       	rjmp	.+6      	; 0x24ca <fputc+0x16>
    24c4:	8f ef       	ldi	r24, 0xFF	; 255
    24c6:	9f ef       	ldi	r25, 0xFF	; 255
    24c8:	2c c0       	rjmp	.+88     	; 0x2522 <fputc+0x6e>
    24ca:	22 ff       	sbrs	r18, 2
    24cc:	16 c0       	rjmp	.+44     	; 0x24fa <fputc+0x46>
    24ce:	46 81       	ldd	r20, Z+6	; 0x06
    24d0:	57 81       	ldd	r21, Z+7	; 0x07
    24d2:	24 81       	ldd	r18, Z+4	; 0x04
    24d4:	35 81       	ldd	r19, Z+5	; 0x05
    24d6:	42 17       	cp	r20, r18
    24d8:	53 07       	cpc	r21, r19
    24da:	44 f4       	brge	.+16     	; 0x24ec <fputc+0x38>
    24dc:	a0 81       	ld	r26, Z
    24de:	b1 81       	ldd	r27, Z+1	; 0x01
    24e0:	9d 01       	movw	r18, r26
    24e2:	2f 5f       	subi	r18, 0xFF	; 255
    24e4:	3f 4f       	sbci	r19, 0xFF	; 255
    24e6:	31 83       	std	Z+1, r19	; 0x01
    24e8:	20 83       	st	Z, r18
    24ea:	8c 93       	st	X, r24
    24ec:	26 81       	ldd	r18, Z+6	; 0x06
    24ee:	37 81       	ldd	r19, Z+7	; 0x07
    24f0:	2f 5f       	subi	r18, 0xFF	; 255
    24f2:	3f 4f       	sbci	r19, 0xFF	; 255
    24f4:	37 83       	std	Z+7, r19	; 0x07
    24f6:	26 83       	std	Z+6, r18	; 0x06
    24f8:	14 c0       	rjmp	.+40     	; 0x2522 <fputc+0x6e>
    24fa:	8b 01       	movw	r16, r22
    24fc:	ec 01       	movw	r28, r24
    24fe:	fb 01       	movw	r30, r22
    2500:	00 84       	ldd	r0, Z+8	; 0x08
    2502:	f1 85       	ldd	r31, Z+9	; 0x09
    2504:	e0 2d       	mov	r30, r0
    2506:	09 95       	icall
    2508:	89 2b       	or	r24, r25
    250a:	e1 f6       	brne	.-72     	; 0x24c4 <fputc+0x10>
    250c:	d8 01       	movw	r26, r16
    250e:	16 96       	adiw	r26, 0x06	; 6
    2510:	8d 91       	ld	r24, X+
    2512:	9c 91       	ld	r25, X
    2514:	17 97       	sbiw	r26, 0x07	; 7
    2516:	01 96       	adiw	r24, 0x01	; 1
    2518:	17 96       	adiw	r26, 0x07	; 7
    251a:	9c 93       	st	X, r25
    251c:	8e 93       	st	-X, r24
    251e:	16 97       	sbiw	r26, 0x06	; 6
    2520:	ce 01       	movw	r24, r28
    2522:	df 91       	pop	r29
    2524:	cf 91       	pop	r28
    2526:	1f 91       	pop	r17
    2528:	0f 91       	pop	r16
    252a:	08 95       	ret

0000252c <__ultoa_invert>:
    252c:	fa 01       	movw	r30, r20
    252e:	aa 27       	eor	r26, r26
    2530:	28 30       	cpi	r18, 0x08	; 8
    2532:	51 f1       	breq	.+84     	; 0x2588 <__ultoa_invert+0x5c>
    2534:	20 31       	cpi	r18, 0x10	; 16
    2536:	81 f1       	breq	.+96     	; 0x2598 <__ultoa_invert+0x6c>
    2538:	e8 94       	clt
    253a:	6f 93       	push	r22
    253c:	6e 7f       	andi	r22, 0xFE	; 254
    253e:	6e 5f       	subi	r22, 0xFE	; 254
    2540:	7f 4f       	sbci	r23, 0xFF	; 255
    2542:	8f 4f       	sbci	r24, 0xFF	; 255
    2544:	9f 4f       	sbci	r25, 0xFF	; 255
    2546:	af 4f       	sbci	r26, 0xFF	; 255
    2548:	b1 e0       	ldi	r27, 0x01	; 1
    254a:	3e d0       	rcall	.+124    	; 0x25c8 <__ultoa_invert+0x9c>
    254c:	b4 e0       	ldi	r27, 0x04	; 4
    254e:	3c d0       	rcall	.+120    	; 0x25c8 <__ultoa_invert+0x9c>
    2550:	67 0f       	add	r22, r23
    2552:	78 1f       	adc	r23, r24
    2554:	89 1f       	adc	r24, r25
    2556:	9a 1f       	adc	r25, r26
    2558:	a1 1d       	adc	r26, r1
    255a:	68 0f       	add	r22, r24
    255c:	79 1f       	adc	r23, r25
    255e:	8a 1f       	adc	r24, r26
    2560:	91 1d       	adc	r25, r1
    2562:	a1 1d       	adc	r26, r1
    2564:	6a 0f       	add	r22, r26
    2566:	71 1d       	adc	r23, r1
    2568:	81 1d       	adc	r24, r1
    256a:	91 1d       	adc	r25, r1
    256c:	a1 1d       	adc	r26, r1
    256e:	20 d0       	rcall	.+64     	; 0x25b0 <__ultoa_invert+0x84>
    2570:	09 f4       	brne	.+2      	; 0x2574 <__ultoa_invert+0x48>
    2572:	68 94       	set
    2574:	3f 91       	pop	r19
    2576:	2a e0       	ldi	r18, 0x0A	; 10
    2578:	26 9f       	mul	r18, r22
    257a:	11 24       	eor	r1, r1
    257c:	30 19       	sub	r19, r0
    257e:	30 5d       	subi	r19, 0xD0	; 208
    2580:	31 93       	st	Z+, r19
    2582:	de f6       	brtc	.-74     	; 0x253a <__ultoa_invert+0xe>
    2584:	cf 01       	movw	r24, r30
    2586:	08 95       	ret
    2588:	46 2f       	mov	r20, r22
    258a:	47 70       	andi	r20, 0x07	; 7
    258c:	40 5d       	subi	r20, 0xD0	; 208
    258e:	41 93       	st	Z+, r20
    2590:	b3 e0       	ldi	r27, 0x03	; 3
    2592:	0f d0       	rcall	.+30     	; 0x25b2 <__ultoa_invert+0x86>
    2594:	c9 f7       	brne	.-14     	; 0x2588 <__ultoa_invert+0x5c>
    2596:	f6 cf       	rjmp	.-20     	; 0x2584 <__ultoa_invert+0x58>
    2598:	46 2f       	mov	r20, r22
    259a:	4f 70       	andi	r20, 0x0F	; 15
    259c:	40 5d       	subi	r20, 0xD0	; 208
    259e:	4a 33       	cpi	r20, 0x3A	; 58
    25a0:	18 f0       	brcs	.+6      	; 0x25a8 <__ultoa_invert+0x7c>
    25a2:	49 5d       	subi	r20, 0xD9	; 217
    25a4:	31 fd       	sbrc	r19, 1
    25a6:	40 52       	subi	r20, 0x20	; 32
    25a8:	41 93       	st	Z+, r20
    25aa:	02 d0       	rcall	.+4      	; 0x25b0 <__ultoa_invert+0x84>
    25ac:	a9 f7       	brne	.-22     	; 0x2598 <__ultoa_invert+0x6c>
    25ae:	ea cf       	rjmp	.-44     	; 0x2584 <__ultoa_invert+0x58>
    25b0:	b4 e0       	ldi	r27, 0x04	; 4
    25b2:	a6 95       	lsr	r26
    25b4:	97 95       	ror	r25
    25b6:	87 95       	ror	r24
    25b8:	77 95       	ror	r23
    25ba:	67 95       	ror	r22
    25bc:	ba 95       	dec	r27
    25be:	c9 f7       	brne	.-14     	; 0x25b2 <__ultoa_invert+0x86>
    25c0:	00 97       	sbiw	r24, 0x00	; 0
    25c2:	61 05       	cpc	r22, r1
    25c4:	71 05       	cpc	r23, r1
    25c6:	08 95       	ret
    25c8:	9b 01       	movw	r18, r22
    25ca:	ac 01       	movw	r20, r24
    25cc:	0a 2e       	mov	r0, r26
    25ce:	06 94       	lsr	r0
    25d0:	57 95       	ror	r21
    25d2:	47 95       	ror	r20
    25d4:	37 95       	ror	r19
    25d6:	27 95       	ror	r18
    25d8:	ba 95       	dec	r27
    25da:	c9 f7       	brne	.-14     	; 0x25ce <__ultoa_invert+0xa2>
    25dc:	62 0f       	add	r22, r18
    25de:	73 1f       	adc	r23, r19
    25e0:	84 1f       	adc	r24, r20
    25e2:	95 1f       	adc	r25, r21
    25e4:	a0 1d       	adc	r26, r0
    25e6:	08 95       	ret

000025e8 <_exit>:
    25e8:	f8 94       	cli

000025ea <__stop_program>:
    25ea:	ff cf       	rjmp	.-2      	; 0x25ea <__stop_program>
