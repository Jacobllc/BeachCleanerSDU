
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000038  00800100  000023b8  0000244c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000023b8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000061  00800138  00800138  00002484  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002484  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000024e0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  00002520  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001eed  00000000  00000000  000026e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f57  00000000  00000000  000045d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ea9  00000000  00000000  0000552c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000538  00000000  00000000  000063d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000081d  00000000  00000000  00006910  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001300  00000000  00000000  0000712d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000842d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_1>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 81 08 	jmp	0x1102	; 0x1102 <__vector_18>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 9f 04 	jmp	0x93e	; 0x93e <__vector_24>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 05       	cpc	r19, r15
      96:	a8 4c       	sbci	r26, 0xC8	; 200
      98:	cd b2       	in	r12, 0x1d	; 29
      9a:	d4 4e       	sbci	r29, 0xE4	; 228
      9c:	b9 38       	cpi	r27, 0x89	; 137
      9e:	36 a9       	ldd	r19, Z+54	; 0x36
      a0:	02 0c       	add	r0, r2
      a2:	50 b9       	out	0x00, r21	; 0
      a4:	91 86       	std	Z+9, r9	; 0x09
      a6:	88 08       	sbc	r8, r8
      a8:	3c a6       	std	Y+44, r3	; 0x2c
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	2a be       	out	0x3a, r2	; 58
      ae:	00 00       	nop
      b0:	00 80       	ld	r0, Z
      b2:	3f 00       	.word	0x003f	; ????

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	e8 eb       	ldi	r30, 0xB8	; 184
     1ca:	f3 e2       	ldi	r31, 0x23	; 35
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a8 33       	cpi	r26, 0x38	; 56
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a8 e3       	ldi	r26, 0x38	; 56
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a9 39       	cpi	r26, 0x99	; 153
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <main>
     1ec:	0c 94 da 11 	jmp	0x23b4	; 0x23b4 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <GPS_init>:

			usart_send('\r');
			usart_send('\n');
	}
	print_flag=1;
}
     1f4:	52 98       	cbi	0x0a, 2	; 10
     1f6:	8b b1       	in	r24, 0x0b	; 11
     1f8:	8b b9       	out	0x0b, r24	; 11
     1fa:	e8 9a       	sbi	0x1d, 0	; 29
     1fc:	e9 e6       	ldi	r30, 0x69	; 105
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	83 60       	ori	r24, 0x03	; 3
     204:	80 83       	st	Z, r24
     206:	78 94       	sei
     208:	08 95       	ret

0000020a <get_gps_message>:
     20a:	dc 01       	movw	r26, r24
     20c:	80 91 89 01 	lds	r24, 0x0189	; 0x800189 <__data_end+0x51>
     210:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <__data_end+0x52>
     214:	81 30       	cpi	r24, 0x01	; 1
     216:	91 05       	cpc	r25, r1
     218:	61 f4       	brne	.+24     	; 0x232 <get_gps_message+0x28>
     21a:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <__data_end+0x52>
     21e:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <__data_end+0x51>
     222:	20 e5       	ldi	r18, 0x50	; 80
     224:	e9 e3       	ldi	r30, 0x39	; 57
     226:	f1 e0       	ldi	r31, 0x01	; 1
     228:	01 90       	ld	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	2a 95       	dec	r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <get_gps_message+0x1e>
     230:	08 95       	ret
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	08 95       	ret

00000238 <stop_gps_sample>:
     238:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <process>
     23c:	10 92 8d 01 	sts	0x018D, r1	; 0x80018d <print_flag>
     240:	08 95       	ret

00000242 <read_gps_data>:
     242:	80 91 8b 01 	lds	r24, 0x018B	; 0x80018b <process>
     246:	81 30       	cpi	r24, 0x01	; 1
     248:	19 f5       	brne	.+70     	; 0x290 <read_gps_data+0x4e>
     24a:	80 93 8d 01 	sts	0x018D, r24	; 0x80018d <print_flag>
     24e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     252:	8a 30       	cpi	r24, 0x0A	; 10
     254:	81 f4       	brne	.+32     	; 0x276 <read_gps_data+0x34>
     256:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <byte>
     25a:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__data_end>
     25e:	8f ef       	ldi	r24, 0xFF	; 255
     260:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <byte>
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 8a 01 	sts	0x018A, r25	; 0x80018a <__data_end+0x52>
     26c:	80 93 89 01 	sts	0x0189, r24	; 0x800189 <__data_end+0x51>
     270:	0e 94 1c 01 	call	0x238	; 0x238 <stop_gps_sample>
     274:	08 95       	ret
     276:	e0 91 8c 01 	lds	r30, 0x018C	; 0x80018c <byte>
     27a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	e8 5c       	subi	r30, 0xC8	; 200
     282:	fe 4f       	sbci	r31, 0xFE	; 254
     284:	81 83       	std	Z+1, r24	; 0x01
     286:	80 91 8c 01 	lds	r24, 0x018C	; 0x80018c <byte>
     28a:	8f 5f       	subi	r24, 0xFF	; 255
     28c:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <byte>
     290:	08 95       	ret

00000292 <__vector_1>:
//gete meassage 



ISR(INT0_vect) //Interrupt every data package start "Blue light" 
{
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	8f 93       	push	r24
	process=1;
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	80 93 8b 01 	sts	0x018B, r24	; 0x80018b <process>
	//package=0;
	byte=-1;
     2a4:	8f ef       	ldi	r24, 0xFF	; 255
     2a6:	80 93 8c 01 	sts	0x018C, r24	; 0x80018c <byte>
}
     2aa:	8f 91       	pop	r24
     2ac:	0f 90       	pop	r0
     2ae:	0f be       	out	0x3f, r0	; 63
     2b0:	0f 90       	pop	r0
     2b2:	1f 90       	pop	r1
     2b4:	18 95       	reti

000002b6 <dist_to_wp>:
	float rad;
	rad = ((deg * PI)/180.0);
	return rad;
}

void dist_to_wp(struct DATA *GPS_Data, coor_t WP){
     2b6:	4f 92       	push	r4
     2b8:	5f 92       	push	r5
     2ba:	6f 92       	push	r6
     2bc:	7f 92       	push	r7
     2be:	8f 92       	push	r8
     2c0:	9f 92       	push	r9
     2c2:	af 92       	push	r10
     2c4:	bf 92       	push	r11
     2c6:	cf 92       	push	r12
     2c8:	df 92       	push	r13
     2ca:	ef 92       	push	r14
     2cc:	ff 92       	push	r15
     2ce:	0f 93       	push	r16
     2d0:	1f 93       	push	r17
     2d2:	cf 93       	push	r28
     2d4:	df 93       	push	r29
     2d6:	cd b7       	in	r28, 0x3d	; 61
     2d8:	de b7       	in	r29, 0x3e	; 62
     2da:	64 97       	sbiw	r28, 0x14	; 20
     2dc:	0f b6       	in	r0, 0x3f	; 63
     2de:	f8 94       	cli
     2e0:	de bf       	out	0x3e, r29	; 62
     2e2:	0f be       	out	0x3f, r0	; 63
     2e4:	cd bf       	out	0x3d, r28	; 61
     2e6:	8c 01       	movw	r16, r24
     2e8:	89 82       	std	Y+1, r8	; 0x01
     2ea:	9a 82       	std	Y+2, r9	; 0x02
     2ec:	ab 82       	std	Y+3, r10	; 0x03
     2ee:	bc 82       	std	Y+4, r11	; 0x04
     2f0:	cd 82       	std	Y+5, r12	; 0x05
     2f2:	de 82       	std	Y+6, r13	; 0x06
     2f4:	4d 87       	std	Y+13, r20	; 0x0d
     2f6:	5e 87       	std	Y+14, r21	; 0x0e
     2f8:	c9 80       	ldd	r12, Y+1	; 0x01
     2fa:	da 80       	ldd	r13, Y+2	; 0x02
     2fc:	eb 80       	ldd	r14, Y+3	; 0x03
     2fe:	fc 80       	ldd	r15, Y+4	; 0x04
	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL )); 
	
	//converting a b to dist in meters using formula for 1deg in m:
	float m_pr_deg_lat = 111.1329*1000;
	float m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     300:	2b ed       	ldi	r18, 0xDB	; 219
     302:	3f e0       	ldi	r19, 0x0F	; 15
     304:	49 e4       	ldi	r20, 0x49	; 73
     306:	50 e4       	ldi	r21, 0x40	; 64
     308:	c7 01       	movw	r24, r14
     30a:	b6 01       	movw	r22, r12
     30c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	44 e3       	ldi	r20, 0x34	; 52
     316:	53 e4       	ldi	r21, 0x43	; 67
     318:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     31c:	0e 94 89 09 	call	0x1312	; 0x1312 <cos>
     320:	4b 01       	movw	r8, r22
     322:	5c 01       	movw	r10, r24
     324:	20 e0       	ldi	r18, 0x00	; 0
     326:	30 e0       	ldi	r19, 0x00	; 0
     328:	40 e4       	ldi	r20, 0x40	; 64
     32a:	50 e4       	ldi	r21, 0x40	; 64
     32c:	c7 01       	movw	r24, r14
     32e:	b6 01       	movw	r22, r12
     330:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     334:	2b ed       	ldi	r18, 0xDB	; 219
     336:	3f e0       	ldi	r19, 0x0F	; 15
     338:	49 e4       	ldi	r20, 0x49	; 73
     33a:	50 e4       	ldi	r21, 0x40	; 64
     33c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     340:	20 e0       	ldi	r18, 0x00	; 0
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	44 e3       	ldi	r20, 0x34	; 52
     346:	53 e4       	ldi	r21, 0x43	; 67
     348:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     34c:	0e 94 89 09 	call	0x1312	; 0x1312 <cos>
     350:	2b 01       	movw	r4, r22
     352:	3c 01       	movw	r6, r24
     354:	20 e0       	ldi	r18, 0x00	; 0
     356:	30 e0       	ldi	r19, 0x00	; 0
     358:	40 ea       	ldi	r20, 0xA0	; 160
     35a:	50 e4       	ldi	r21, 0x40	; 64
     35c:	c7 01       	movw	r24, r14
     35e:	b6 01       	movw	r22, r12
     360:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     364:	2b ed       	ldi	r18, 0xDB	; 219
     366:	3f e0       	ldi	r19, 0x0F	; 15
     368:	49 e4       	ldi	r20, 0x49	; 73
     36a:	50 e4       	ldi	r21, 0x40	; 64
     36c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     370:	20 e0       	ldi	r18, 0x00	; 0
     372:	30 e0       	ldi	r19, 0x00	; 0
     374:	44 e3       	ldi	r20, 0x34	; 52
     376:	53 e4       	ldi	r21, 0x43	; 67
     378:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     37c:	0e 94 89 09 	call	0x1312	; 0x1312 <cos>
     380:	69 8b       	std	Y+17, r22	; 0x11
     382:	7a 8b       	std	Y+18, r23	; 0x12
     384:	8b 8b       	std	Y+19, r24	; 0x13
     386:	9c 8b       	std	Y+20, r25	; 0x14
	
	float c = a * m_pr_deg_lat;
     388:	6d 81       	ldd	r22, Y+5	; 0x05
     38a:	7e 81       	ldd	r23, Y+6	; 0x06
     38c:	f8 01       	movw	r30, r16
     38e:	82 85       	ldd	r24, Z+10	; 0x0a
     390:	93 85       	ldd	r25, Z+11	; 0x0b
     392:	68 1b       	sub	r22, r24
     394:	79 0b       	sbc	r23, r25
     396:	07 2e       	mov	r0, r23
     398:	00 0c       	add	r0, r0
     39a:	88 0b       	sbc	r24, r24
     39c:	99 0b       	sbc	r25, r25
     39e:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     3a2:	23 e7       	ldi	r18, 0x73	; 115
     3a4:	3e e0       	ldi	r19, 0x0E	; 14
     3a6:	49 ed       	ldi	r20, 0xD9	; 217
     3a8:	57 e4       	ldi	r21, 0x47	; 71
     3aa:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     3ae:	6b 01       	movw	r12, r22
     3b0:	7c 01       	movw	r14, r24
	float d = b * m_pr_deg_lon;
     3b2:	25 e6       	ldi	r18, 0x65	; 101
     3b4:	33 ed       	ldi	r19, 0xD3	; 211
     3b6:	4e ed       	ldi	r20, 0xDE	; 222
     3b8:	52 e4       	ldi	r21, 0x42	; 66
     3ba:	c5 01       	movw	r24, r10
     3bc:	b4 01       	movw	r22, r8
     3be:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     3c2:	4b 01       	movw	r8, r22
     3c4:	5c 01       	movw	r10, r24
     3c6:	2e ee       	ldi	r18, 0xEE	; 238
     3c8:	3c e7       	ldi	r19, 0x7C	; 124
     3ca:	4f eb       	ldi	r20, 0xBF	; 191
     3cc:	5d e3       	ldi	r21, 0x3D	; 61
     3ce:	c3 01       	movw	r24, r6
     3d0:	b2 01       	movw	r22, r4
     3d2:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     3d6:	9b 01       	movw	r18, r22
     3d8:	ac 01       	movw	r20, r24
     3da:	c5 01       	movw	r24, r10
     3dc:	b4 01       	movw	r22, r8
     3de:	0e 94 a5 08 	call	0x114a	; 0x114a <__subsf3>
     3e2:	4b 01       	movw	r8, r22
     3e4:	5c 01       	movw	r10, r24
     3e6:	22 e8       	ldi	r18, 0x82	; 130
     3e8:	38 ea       	ldi	r19, 0xA8	; 168
     3ea:	4b ef       	ldi	r20, 0xFB	; 251
     3ec:	58 e3       	ldi	r21, 0x38	; 56
     3ee:	69 89       	ldd	r22, Y+17	; 0x11
     3f0:	7a 89       	ldd	r23, Y+18	; 0x12
     3f2:	8b 89       	ldd	r24, Y+19	; 0x13
     3f4:	9c 89       	ldd	r25, Y+20	; 0x14
     3f6:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     3fa:	9b 01       	movw	r18, r22
     3fc:	ac 01       	movw	r20, r24
     3fe:	c5 01       	movw	r24, r10
     400:	b4 01       	movw	r22, r8
     402:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	4a e7       	ldi	r20, 0x7A	; 122
     40c:	54 e4       	ldi	r21, 0x44	; 68
     40e:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     412:	4b 01       	movw	r8, r22
     414:	5c 01       	movw	r10, r24
     416:	6d 85       	ldd	r22, Y+13	; 0x0d
     418:	7e 85       	ldd	r23, Y+14	; 0x0e
     41a:	f8 01       	movw	r30, r16
     41c:	81 8d       	ldd	r24, Z+25	; 0x19
     41e:	92 8d       	ldd	r25, Z+26	; 0x1a
     420:	68 1b       	sub	r22, r24
     422:	79 0b       	sbc	r23, r25
     424:	07 2e       	mov	r0, r23
     426:	00 0c       	add	r0, r0
     428:	88 0b       	sbc	r24, r24
     42a:	99 0b       	sbc	r25, r25
     42c:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     430:	9b 01       	movw	r18, r22
     432:	ac 01       	movw	r20, r24
     434:	c5 01       	movw	r24, r10
     436:	b4 01       	movw	r22, r8
     438:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     43c:	4b 01       	movw	r8, r22
     43e:	5c 01       	movw	r10, r24
	
	//finding dist between pos and wp
	float dist = (sqrt(pow(c,2) + pow(d,2)))/1000000 ;
     440:	a5 01       	movw	r20, r10
     442:	94 01       	movw	r18, r8
     444:	c5 01       	movw	r24, r10
     446:	b4 01       	movw	r22, r8
     448:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     44c:	4b 01       	movw	r8, r22
     44e:	5c 01       	movw	r10, r24
     450:	a7 01       	movw	r20, r14
     452:	96 01       	movw	r18, r12
     454:	c7 01       	movw	r24, r14
     456:	b6 01       	movw	r22, r12
     458:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     45c:	9b 01       	movw	r18, r22
     45e:	ac 01       	movw	r20, r24
     460:	c5 01       	movw	r24, r10
     462:	b4 01       	movw	r22, r8
     464:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     468:	0e 94 c9 0b 	call	0x1792	; 0x1792 <sqrt>
	
	GPS_Data->dist_wp = dist; 
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	34 e2       	ldi	r19, 0x24	; 36
     470:	44 e7       	ldi	r20, 0x74	; 116
     472:	59 e4       	ldi	r21, 0x49	; 73
     474:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     478:	f8 01       	movw	r30, r16
     47a:	60 a7       	std	Z+40, r22	; 0x28
     47c:	71 a7       	std	Z+41, r23	; 0x29
     47e:	82 a7       	std	Z+42, r24	; 0x2a
     480:	93 a7       	std	Z+43, r25	; 0x2b
}
     482:	64 96       	adiw	r28, 0x14	; 20
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	f8 94       	cli
     488:	de bf       	out	0x3e, r29	; 62
     48a:	0f be       	out	0x3f, r0	; 63
     48c:	cd bf       	out	0x3d, r28	; 61
     48e:	df 91       	pop	r29
     490:	cf 91       	pop	r28
     492:	1f 91       	pop	r17
     494:	0f 91       	pop	r16
     496:	ff 90       	pop	r15
     498:	ef 90       	pop	r14
     49a:	df 90       	pop	r13
     49c:	cf 90       	pop	r12
     49e:	bf 90       	pop	r11
     4a0:	af 90       	pop	r10
     4a2:	9f 90       	pop	r9
     4a4:	8f 90       	pop	r8
     4a6:	7f 90       	pop	r7
     4a8:	6f 90       	pop	r6
     4aa:	5f 90       	pop	r5
     4ac:	4f 90       	pop	r4
     4ae:	08 95       	ret

000004b0 <bearing_to_wp>:

void bearing_to_wp(struct DATA *GPS_Data, coor_t WP){
     4b0:	2f 92       	push	r2
     4b2:	3f 92       	push	r3
     4b4:	6f 92       	push	r6
     4b6:	7f 92       	push	r7
     4b8:	8f 92       	push	r8
     4ba:	9f 92       	push	r9
     4bc:	af 92       	push	r10
     4be:	bf 92       	push	r11
     4c0:	cf 92       	push	r12
     4c2:	df 92       	push	r13
     4c4:	ef 92       	push	r14
     4c6:	ff 92       	push	r15
     4c8:	0f 93       	push	r16
     4ca:	1f 93       	push	r17
     4cc:	cf 93       	push	r28
     4ce:	df 93       	push	r29
     4d0:	cd b7       	in	r28, 0x3d	; 61
     4d2:	de b7       	in	r29, 0x3e	; 62
     4d4:	64 97       	sbiw	r28, 0x14	; 20
     4d6:	0f b6       	in	r0, 0x3f	; 63
     4d8:	f8 94       	cli
     4da:	de bf       	out	0x3e, r29	; 62
     4dc:	0f be       	out	0x3f, r0	; 63
     4de:	cd bf       	out	0x3d, r28	; 61
     4e0:	8c 01       	movw	r16, r24
     4e2:	89 82       	std	Y+1, r8	; 0x01
     4e4:	9a 82       	std	Y+2, r9	; 0x02
     4e6:	ab 82       	std	Y+3, r10	; 0x03
     4e8:	bc 82       	std	Y+4, r11	; 0x04
     4ea:	cd 82       	std	Y+5, r12	; 0x05
     4ec:	de 82       	std	Y+6, r13	; 0x06
     4ee:	4d 87       	std	Y+13, r20	; 0x0d
     4f0:	5e 87       	std	Y+14, r21	; 0x0e
     4f2:	c9 80       	ldd	r12, Y+1	; 0x01
     4f4:	da 80       	ldd	r13, Y+2	; 0x02
     4f6:	eb 80       	ldd	r14, Y+3	; 0x03
     4f8:	fc 80       	ldd	r15, Y+4	; 0x04
	
	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
     4fa:	2d 80       	ldd	r2, Y+5	; 0x05
     4fc:	3e 80       	ldd	r3, Y+6	; 0x06
     4fe:	fc 01       	movw	r30, r24
     500:	82 85       	ldd	r24, Z+10	; 0x0a
     502:	93 85       	ldd	r25, Z+11	; 0x0b
     504:	28 1a       	sub	r2, r24
     506:	39 0a       	sbc	r3, r25
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL ));
     508:	6d 85       	ldd	r22, Y+13	; 0x0d
     50a:	7e 85       	ldd	r23, Y+14	; 0x0e
     50c:	81 8d       	ldd	r24, Z+25	; 0x19
     50e:	92 8d       	ldd	r25, Z+26	; 0x1a
     510:	3b 01       	movw	r6, r22
     512:	68 1a       	sub	r6, r24
     514:	79 0a       	sbc	r7, r25
	
	//converting a b to dist in meters using formula for 1deg in m:
	float m_pr_deg_lat = 111.1329*1000;
	float m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     516:	2b ed       	ldi	r18, 0xDB	; 219
     518:	3f e0       	ldi	r19, 0x0F	; 15
     51a:	49 e4       	ldi	r20, 0x49	; 73
     51c:	50 e4       	ldi	r21, 0x40	; 64
     51e:	c7 01       	movw	r24, r14
     520:	b6 01       	movw	r22, r12
     522:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	44 e3       	ldi	r20, 0x34	; 52
     52c:	53 e4       	ldi	r21, 0x43	; 67
     52e:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     532:	0e 94 89 09 	call	0x1312	; 0x1312 <cos>
     536:	69 8b       	std	Y+17, r22	; 0x11
     538:	7a 8b       	std	Y+18, r23	; 0x12
     53a:	8b 8b       	std	Y+19, r24	; 0x13
     53c:	9c 8b       	std	Y+20, r25	; 0x14
     53e:	20 e0       	ldi	r18, 0x00	; 0
     540:	30 e0       	ldi	r19, 0x00	; 0
     542:	40 e4       	ldi	r20, 0x40	; 64
     544:	50 e4       	ldi	r21, 0x40	; 64
     546:	c7 01       	movw	r24, r14
     548:	b6 01       	movw	r22, r12
     54a:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     54e:	2b ed       	ldi	r18, 0xDB	; 219
     550:	3f e0       	ldi	r19, 0x0F	; 15
     552:	49 e4       	ldi	r20, 0x49	; 73
     554:	50 e4       	ldi	r21, 0x40	; 64
     556:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     55a:	20 e0       	ldi	r18, 0x00	; 0
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	44 e3       	ldi	r20, 0x34	; 52
     560:	53 e4       	ldi	r21, 0x43	; 67
     562:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     566:	0e 94 89 09 	call	0x1312	; 0x1312 <cos>
     56a:	4b 01       	movw	r8, r22
     56c:	5c 01       	movw	r10, r24
     56e:	20 e0       	ldi	r18, 0x00	; 0
     570:	30 e0       	ldi	r19, 0x00	; 0
     572:	40 ea       	ldi	r20, 0xA0	; 160
     574:	50 e4       	ldi	r21, 0x40	; 64
     576:	c7 01       	movw	r24, r14
     578:	b6 01       	movw	r22, r12
     57a:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     57e:	2b ed       	ldi	r18, 0xDB	; 219
     580:	3f e0       	ldi	r19, 0x0F	; 15
     582:	49 e4       	ldi	r20, 0x49	; 73
     584:	50 e4       	ldi	r21, 0x40	; 64
     586:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	44 e3       	ldi	r20, 0x34	; 52
     590:	53 e4       	ldi	r21, 0x43	; 67
     592:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     596:	0e 94 89 09 	call	0x1312	; 0x1312 <cos>
     59a:	6b 01       	movw	r12, r22
     59c:	7c 01       	movw	r14, r24
     59e:	25 e6       	ldi	r18, 0x65	; 101
     5a0:	33 ed       	ldi	r19, 0xD3	; 211
     5a2:	4e ed       	ldi	r20, 0xDE	; 222
     5a4:	52 e4       	ldi	r21, 0x42	; 66
     5a6:	69 89       	ldd	r22, Y+17	; 0x11
     5a8:	7a 89       	ldd	r23, Y+18	; 0x12
     5aa:	8b 89       	ldd	r24, Y+19	; 0x13
     5ac:	9c 89       	ldd	r25, Y+20	; 0x14
     5ae:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     5b2:	69 8b       	std	Y+17, r22	; 0x11
     5b4:	7a 8b       	std	Y+18, r23	; 0x12
     5b6:	8b 8b       	std	Y+19, r24	; 0x13
     5b8:	9c 8b       	std	Y+20, r25	; 0x14
     5ba:	2e ee       	ldi	r18, 0xEE	; 238
     5bc:	3c e7       	ldi	r19, 0x7C	; 124
     5be:	4f eb       	ldi	r20, 0xBF	; 191
     5c0:	5d e3       	ldi	r21, 0x3D	; 61
     5c2:	c5 01       	movw	r24, r10
     5c4:	b4 01       	movw	r22, r8
     5c6:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     5ca:	9b 01       	movw	r18, r22
     5cc:	ac 01       	movw	r20, r24
     5ce:	69 89       	ldd	r22, Y+17	; 0x11
     5d0:	7a 89       	ldd	r23, Y+18	; 0x12
     5d2:	8b 89       	ldd	r24, Y+19	; 0x13
     5d4:	9c 89       	ldd	r25, Y+20	; 0x14
     5d6:	0e 94 a5 08 	call	0x114a	; 0x114a <__subsf3>
     5da:	4b 01       	movw	r8, r22
     5dc:	5c 01       	movw	r10, r24
     5de:	22 e8       	ldi	r18, 0x82	; 130
     5e0:	38 ea       	ldi	r19, 0xA8	; 168
     5e2:	4b ef       	ldi	r20, 0xFB	; 251
     5e4:	58 e3       	ldi	r21, 0x38	; 56
     5e6:	c7 01       	movw	r24, r14
     5e8:	b6 01       	movw	r22, r12
     5ea:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     5ee:	9b 01       	movw	r18, r22
     5f0:	ac 01       	movw	r20, r24
     5f2:	c5 01       	movw	r24, r10
     5f4:	b4 01       	movw	r22, r8
     5f6:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	4a e7       	ldi	r20, 0x7A	; 122
     600:	54 e4       	ldi	r21, 0x44	; 68
     602:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     606:	86 2e       	mov	r8, r22
     608:	97 2e       	mov	r9, r23
     60a:	a8 2e       	mov	r10, r24
     60c:	b9 2e       	mov	r11, r25
	
	printf("  m pr deg_lon:  %f \n",m_pr_deg_lon);
     60e:	9f 93       	push	r25
     610:	8f 93       	push	r24
     612:	7f 93       	push	r23
     614:	6f 93       	push	r22
     616:	82 e2       	ldi	r24, 0x22	; 34
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	9f 93       	push	r25
     61c:	8f 93       	push	r24
     61e:	0e 94 66 11 	call	0x22cc	; 0x22cc <printf>
	
	float c = a * m_pr_deg_lat;
     622:	b1 01       	movw	r22, r2
     624:	33 0c       	add	r3, r3
     626:	88 0b       	sbc	r24, r24
     628:	99 0b       	sbc	r25, r25
     62a:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     62e:	23 e7       	ldi	r18, 0x73	; 115
     630:	3e e0       	ldi	r19, 0x0E	; 14
     632:	49 ed       	ldi	r20, 0xD9	; 217
     634:	57 e4       	ldi	r21, 0x47	; 71
     636:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     63a:	6b 01       	movw	r12, r22
     63c:	7c 01       	movw	r14, r24
	float d = b * m_pr_deg_lon;
     63e:	b3 01       	movw	r22, r6
     640:	77 0c       	add	r7, r7
     642:	88 0b       	sbc	r24, r24
     644:	99 0b       	sbc	r25, r25
     646:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     64a:	28 2d       	mov	r18, r8
     64c:	39 2d       	mov	r19, r9
     64e:	4a 2d       	mov	r20, r10
     650:	5b 2d       	mov	r21, r11
     652:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     656:	4b 01       	movw	r8, r22
     658:	5c 01       	movw	r10, r24
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	0f 90       	pop	r0
     660:	0f 90       	pop	r0
     662:	0f 90       	pop	r0
     664:	0f 90       	pop	r0
     666:	20 e0       	ldi	r18, 0x00	; 0
     668:	30 e0       	ldi	r19, 0x00	; 0
     66a:	a9 01       	movw	r20, r18
     66c:	c7 01       	movw	r24, r14
     66e:	b6 01       	movw	r22, r12
     670:	0e 94 84 09 	call	0x1308	; 0x1308 <__cmpsf2>
     674:	88 23       	and	r24, r24
     676:	09 f4       	brne	.+2      	; 0x67a <bearing_to_wp+0x1ca>
     678:	4b c0       	rjmp	.+150    	; 0x710 <bearing_to_wp+0x260>
	if(d==0){ d=0.000001;};
     67a:	20 e0       	ldi	r18, 0x00	; 0
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	a9 01       	movw	r20, r18
     680:	c5 01       	movw	r24, r10
     682:	b4 01       	movw	r22, r8
     684:	0e 94 84 09 	call	0x1308	; 0x1308 <__cmpsf2>
     688:	81 11       	cpse	r24, r1
     68a:	0a c0       	rjmp	.+20     	; 0x6a0 <bearing_to_wp+0x1f0>
     68c:	0f 2e       	mov	r0, r31
     68e:	fd eb       	ldi	r31, 0xBD	; 189
     690:	8f 2e       	mov	r8, r31
     692:	f7 e3       	ldi	r31, 0x37	; 55
     694:	9f 2e       	mov	r9, r31
     696:	f6 e8       	ldi	r31, 0x86	; 134
     698:	af 2e       	mov	r10, r31
     69a:	f5 e3       	ldi	r31, 0x35	; 53
     69c:	bf 2e       	mov	r11, r31
     69e:	f0 2d       	mov	r31, r0
	
	float angle = atan2(d, c);
     6a0:	a7 01       	movw	r20, r14
     6a2:	96 01       	movw	r18, r12
     6a4:	c5 01       	movw	r24, r10
     6a6:	b4 01       	movw	r22, r8
     6a8:	0e 94 25 09 	call	0x124a	; 0x124a <atan2>
     6ac:	6b 01       	movw	r12, r22
     6ae:	7c 01       	movw	r14, r24
	
	if(angle<0){
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	a9 01       	movw	r20, r18
     6b6:	0e 94 84 09 	call	0x1308	; 0x1308 <__cmpsf2>
     6ba:	88 23       	and	r24, r24
     6bc:	ac f4       	brge	.+42     	; 0x6e8 <bearing_to_wp+0x238>
		angle = angle - (PI/2);
     6be:	2b ed       	ldi	r18, 0xDB	; 219
     6c0:	3f e0       	ldi	r19, 0x0F	; 15
     6c2:	49 ec       	ldi	r20, 0xC9	; 201
     6c4:	5f e3       	ldi	r21, 0x3F	; 63
     6c6:	c7 01       	movw	r24, r14
     6c8:	b6 01       	movw	r22, r12
     6ca:	0e 94 a5 08 	call	0x114a	; 0x114a <__subsf3>
     6ce:	6b 01       	movw	r12, r22
     6d0:	7c 01       	movw	r14, r24
     6d2:	0a c0       	rjmp	.+20     	; 0x6e8 <bearing_to_wp+0x238>
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
	
	float angle = atan2(d, c);
     6d4:	0f 2e       	mov	r0, r31
     6d6:	fb ed       	ldi	r31, 0xDB	; 219
     6d8:	cf 2e       	mov	r12, r31
     6da:	ff e0       	ldi	r31, 0x0F	; 15
     6dc:	df 2e       	mov	r13, r31
     6de:	f9 e4       	ldi	r31, 0x49	; 73
     6e0:	ef 2e       	mov	r14, r31
     6e2:	ff e3       	ldi	r31, 0x3F	; 63
     6e4:	ff 2e       	mov	r15, r31
     6e6:	f0 2d       	mov	r31, r0
	
	if(angle<0){
		angle = angle - (PI/2);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
     6e8:	20 e0       	ldi	r18, 0x00	; 0
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	44 e3       	ldi	r20, 0x34	; 52
     6ee:	53 e4       	ldi	r21, 0x43	; 67
     6f0:	c7 01       	movw	r24, r14
     6f2:	b6 01       	movw	r22, r12
     6f4:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     6f8:	2b ed       	ldi	r18, 0xDB	; 219
     6fa:	3f e0       	ldi	r19, 0x0F	; 15
     6fc:	49 e4       	ldi	r20, 0x49	; 73
     6fe:	50 e4       	ldi	r21, 0x40	; 64
     700:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     704:	f8 01       	movw	r30, r16
     706:	64 a7       	std	Z+44, r22	; 0x2c
     708:	75 a7       	std	Z+45, r23	; 0x2d
     70a:	86 a7       	std	Z+46, r24	; 0x2e
     70c:	97 a7       	std	Z+47, r25	; 0x2f
}
     70e:	14 c0       	rjmp	.+40     	; 0x738 <bearing_to_wp+0x288>
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	a9 01       	movw	r20, r18
     716:	c5 01       	movw	r24, r10
     718:	b4 01       	movw	r22, r8
     71a:	0e 94 84 09 	call	0x1308	; 0x1308 <__cmpsf2>
     71e:	88 23       	and	r24, r24
     720:	c9 f2       	breq	.-78     	; 0x6d4 <bearing_to_wp+0x224>
	printf("  m pr deg_lon:  %f \n",m_pr_deg_lon);
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     722:	0f 2e       	mov	r0, r31
     724:	fd eb       	ldi	r31, 0xBD	; 189
     726:	cf 2e       	mov	r12, r31
     728:	f7 e3       	ldi	r31, 0x37	; 55
     72a:	df 2e       	mov	r13, r31
     72c:	f6 e8       	ldi	r31, 0x86	; 134
     72e:	ef 2e       	mov	r14, r31
     730:	f5 e3       	ldi	r31, 0x35	; 53
     732:	ff 2e       	mov	r15, r31
     734:	f0 2d       	mov	r31, r0
     736:	b4 cf       	rjmp	.-152    	; 0x6a0 <bearing_to_wp+0x1f0>
	if(angle<0){
		angle = angle - (PI/2);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
}
     738:	64 96       	adiw	r28, 0x14	; 20
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61
     744:	df 91       	pop	r29
     746:	cf 91       	pop	r28
     748:	1f 91       	pop	r17
     74a:	0f 91       	pop	r16
     74c:	ff 90       	pop	r15
     74e:	ef 90       	pop	r14
     750:	df 90       	pop	r13
     752:	cf 90       	pop	r12
     754:	bf 90       	pop	r11
     756:	af 90       	pop	r10
     758:	9f 90       	pop	r9
     75a:	8f 90       	pop	r8
     75c:	7f 90       	pop	r7
     75e:	6f 90       	pop	r6
     760:	3f 90       	pop	r3
     762:	2f 90       	pop	r2
     764:	08 95       	ret

00000766 <Transmit_dist_bearing_i2C>:




void Transmit_dist_bearing_i2C(struct DATA *GPS_Data){
     766:	cf 93       	push	r28
     768:	df 93       	push	r29
     76a:	ec 01       	movw	r28, r24
	
	//Convert dist and bearing  
		//Sending dist to DATA struct as long int 
		long dist_send;
		dist_send = (long)((GPS_Data->dist_wp) *1000);
		GPS_Data->dist_sendI2C = dist_send; 
     76c:	20 e0       	ldi	r18, 0x00	; 0
     76e:	30 e0       	ldi	r19, 0x00	; 0
     770:	4a e7       	ldi	r20, 0x7A	; 122
     772:	54 e4       	ldi	r21, 0x44	; 68
     774:	68 a5       	ldd	r22, Y+40	; 0x28
     776:	79 a5       	ldd	r23, Y+41	; 0x29
     778:	8a a5       	ldd	r24, Y+42	; 0x2a
     77a:	9b a5       	ldd	r25, Y+43	; 0x2b
     77c:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     780:	0e 94 00 0a 	call	0x1400	; 0x1400 <__fixsfsi>
     784:	68 ab       	std	Y+48, r22	; 0x30
     786:	79 ab       	std	Y+49, r23	; 0x31
     788:	8a ab       	std	Y+50, r24	; 0x32
     78a:	9b ab       	std	Y+51, r25	; 0x33
		
		// Sending bearing to DATA struct as int 
		int bearing_send;
		bearing_send = (int)( (GPS_Data->bearing_wp/360)*32767 );
		GPS_Data->bearing_sendI2C = bearing_send; 
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	44 eb       	ldi	r20, 0xB4	; 180
     792:	53 e4       	ldi	r21, 0x43	; 67
     794:	6c a5       	ldd	r22, Y+44	; 0x2c
     796:	7d a5       	ldd	r23, Y+45	; 0x2d
     798:	8e a5       	ldd	r24, Y+46	; 0x2e
     79a:	9f a5       	ldd	r25, Y+47	; 0x2f
     79c:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     7a0:	20 e0       	ldi	r18, 0x00	; 0
     7a2:	3e ef       	ldi	r19, 0xFE	; 254
     7a4:	4f ef       	ldi	r20, 0xFF	; 255
     7a6:	56 e4       	ldi	r21, 0x46	; 70
     7a8:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     7ac:	0e 94 00 0a 	call	0x1400	; 0x1400 <__fixsfsi>
     7b0:	cb 01       	movw	r24, r22
     7b2:	77 0f       	add	r23, r23
     7b4:	aa 0b       	sbc	r26, r26
     7b6:	bb 0b       	sbc	r27, r27
     7b8:	8c ab       	std	Y+52, r24	; 0x34
     7ba:	9d ab       	std	Y+53, r25	; 0x35
     7bc:	ae ab       	std	Y+54, r26	; 0x36
     7be:	bf ab       	std	Y+55, r27	; 0x37
	
	
	//Set data_ready_flag
		PORTC |= (1<<PORTC0); //PORT C0 high
     7c0:	40 9a       	sbi	0x08, 0	; 8
     7c2:	df 91       	pop	r29
     7c4:	cf 91       	pop	r28
     7c6:	08 95       	ret

000007c8 <init_GPSDATA>:
		bytes=0;
	}
	else
	{
		set_data(status);
		bytes++;
     7c8:	90 93 90 01 	sts	0x0190, r25	; 0x800190 <NMEA1+0x1>
     7cc:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <NMEA1>
     7d0:	08 95       	ret

000007d2 <cal_checksum>:
     7d2:	fc 01       	movw	r30, r24
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	9b 01       	movw	r18, r22
     7d8:	21 50       	subi	r18, 0x01	; 1
     7da:	31 09       	sbc	r19, r1
     7dc:	16 16       	cp	r1, r22
     7de:	17 06       	cpc	r1, r23
     7e0:	74 f4       	brge	.+28     	; 0x7fe <cal_checksum+0x2c>
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	af 01       	movw	r20, r30
     7e6:	02 2e       	mov	r0, r18
     7e8:	02 c0       	rjmp	.+4      	; 0x7ee <cal_checksum+0x1c>
     7ea:	55 95       	asr	r21
     7ec:	47 95       	ror	r20
     7ee:	0a 94       	dec	r0
     7f0:	e2 f7       	brpl	.-8      	; 0x7ea <cal_checksum+0x18>
     7f2:	41 70       	andi	r20, 0x01	; 1
     7f4:	84 27       	eor	r24, r20
     7f6:	21 50       	subi	r18, 0x01	; 1
     7f8:	31 09       	sbc	r19, r1
     7fa:	a0 f7       	brcc	.-24     	; 0x7e4 <cal_checksum+0x12>
     7fc:	01 c0       	rjmp	.+2      	; 0x800 <cal_checksum+0x2e>
     7fe:	80 e0       	ldi	r24, 0x00	; 0
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	08 95       	ret

00000804 <set_opcode>:
     804:	80 93 91 01 	sts	0x0191, r24	; 0x800191 <opcode>
     808:	08 95       	ret

0000080a <Gps_send_Direction>:
	}
}

void Gps_send_Direction(void)
{
     80a:	0f 93       	push	r16
     80c:	1f 93       	push	r17
	char data;
	
	if (bytes==2)
     80e:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <bytes>
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	71 f4       	brne	.+28     	; 0x832 <Gps_send_Direction+0x28>
	{
		char checksum;
		
		checksum = cal_checksum(NMEA1->bearing_sendI2C, 16);
     816:	e0 91 8f 01 	lds	r30, 0x018F	; 0x80018f <NMEA1>
     81a:	f0 91 90 01 	lds	r31, 0x0190	; 0x800190 <NMEA1+0x1>
     81e:	60 e1       	ldi	r22, 0x10	; 16
     820:	84 a9       	ldd	r24, Z+52	; 0x34
     822:	95 a9       	ldd	r25, Z+53	; 0x35
     824:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <cal_checksum>
		set_data(checksum);
     828:	0e 94 9c 04 	call	0x938	; 0x938 <set_data>
		bytes=0;
     82c:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <bytes>
     830:	1e c0       	rjmp	.+60     	; 0x86e <Gps_send_Direction+0x64>
	}
	else
	{
		data= NMEA1->bearing_sendI2C>> 8*bytes;
     832:	e0 91 8f 01 	lds	r30, 0x018F	; 0x80018f <NMEA1>
     836:	f0 91 90 01 	lds	r31, 0x0190	; 0x800190 <NMEA1+0x1>
		set_data(data);	
     83a:	98 2f       	mov	r25, r24
     83c:	99 0f       	add	r25, r25
     83e:	99 0f       	add	r25, r25
     840:	99 0f       	add	r25, r25
     842:	44 a9       	ldd	r20, Z+52	; 0x34
     844:	55 a9       	ldd	r21, Z+53	; 0x35
     846:	66 a9       	ldd	r22, Z+54	; 0x36
     848:	77 a9       	ldd	r23, Z+55	; 0x37
     84a:	8a 01       	movw	r16, r20
     84c:	9b 01       	movw	r18, r22
     84e:	04 c0       	rjmp	.+8      	; 0x858 <Gps_send_Direction+0x4e>
     850:	35 95       	asr	r19
     852:	27 95       	ror	r18
     854:	17 95       	ror	r17
     856:	07 95       	ror	r16
     858:	9a 95       	dec	r25
     85a:	d2 f7       	brpl	.-12     	; 0x850 <Gps_send_Direction+0x46>
     85c:	d9 01       	movw	r26, r18
     85e:	c8 01       	movw	r24, r16
     860:	0e 94 9c 04 	call	0x938	; 0x938 <set_data>
		bytes++;	
     864:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <bytes>
     868:	8f 5f       	subi	r24, 0xFF	; 255
     86a:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <bytes>
	}
}
     86e:	1f 91       	pop	r17
     870:	0f 91       	pop	r16
     872:	08 95       	ret

00000874 <Gps_send_Distance>:

 

void Gps_send_Distance(void)
{
     874:	0f 93       	push	r16
     876:	1f 93       	push	r17
	char data;
	
	if (bytes==4)
     878:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <bytes>
     87c:	84 30       	cpi	r24, 0x04	; 4
     87e:	79 f4       	brne	.+30     	; 0x89e <Gps_send_Distance+0x2a>
	{
		char checksum;
		checksum = cal_checksum(NMEA1->dist_sendI2C, 32);
     880:	e0 91 8f 01 	lds	r30, 0x018F	; 0x80018f <NMEA1>
     884:	f0 91 90 01 	lds	r31, 0x0190	; 0x800190 <NMEA1+0x1>
     888:	60 e2       	ldi	r22, 0x20	; 32
     88a:	80 a9       	ldd	r24, Z+48	; 0x30
     88c:	91 a9       	ldd	r25, Z+49	; 0x31
     88e:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <cal_checksum>
		set_data(checksum);
     892:	0e 94 9c 04 	call	0x938	; 0x938 <set_data>
		bytes=0;
     896:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <bytes>
		PORTC &= ~(1<<PORTC0); //Set data_ready_flag LOW When bearing and distance had been send.
     89a:	40 98       	cbi	0x08, 0	; 8
     89c:	1e c0       	rjmp	.+60     	; 0x8da <Gps_send_Distance+0x66>
	}
	else
	{
		data= NMEA1->dist_sendI2C>> 8*bytes;
     89e:	e0 91 8f 01 	lds	r30, 0x018F	; 0x80018f <NMEA1>
     8a2:	f0 91 90 01 	lds	r31, 0x0190	; 0x800190 <NMEA1+0x1>
		set_data(data);
     8a6:	98 2f       	mov	r25, r24
     8a8:	99 0f       	add	r25, r25
     8aa:	99 0f       	add	r25, r25
     8ac:	99 0f       	add	r25, r25
     8ae:	40 a9       	ldd	r20, Z+48	; 0x30
     8b0:	51 a9       	ldd	r21, Z+49	; 0x31
     8b2:	62 a9       	ldd	r22, Z+50	; 0x32
     8b4:	73 a9       	ldd	r23, Z+51	; 0x33
     8b6:	8a 01       	movw	r16, r20
     8b8:	9b 01       	movw	r18, r22
     8ba:	04 c0       	rjmp	.+8      	; 0x8c4 <Gps_send_Distance+0x50>
     8bc:	35 95       	asr	r19
     8be:	27 95       	ror	r18
     8c0:	17 95       	ror	r17
     8c2:	07 95       	ror	r16
     8c4:	9a 95       	dec	r25
     8c6:	d2 f7       	brpl	.-12     	; 0x8bc <Gps_send_Distance+0x48>
     8c8:	d9 01       	movw	r26, r18
     8ca:	c8 01       	movw	r24, r16
     8cc:	0e 94 9c 04 	call	0x938	; 0x938 <set_data>
		bytes++;	
     8d0:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <bytes>
     8d4:	8f 5f       	subi	r24, 0xFF	; 255
     8d6:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <bytes>
	}
	
     8da:	1f 91       	pop	r17
     8dc:	0f 91       	pop	r16
     8de:	08 95       	ret

000008e0 <i2c_service>:
}


void i2c_service(void)
{
	switch(opcode)
     8e0:	80 91 91 01 	lds	r24, 0x0191	; 0x800191 <opcode>
     8e4:	81 30       	cpi	r24, 0x01	; 1
     8e6:	19 f0       	breq	.+6      	; 0x8ee <i2c_service+0xe>
     8e8:	82 30       	cpi	r24, 0x02	; 2
     8ea:	21 f0       	breq	.+8      	; 0x8f4 <i2c_service+0x14>
     8ec:	08 95       	ret
{	
	
	case 1:
	{
		Gps_send_Direction();
     8ee:	0e 94 05 04 	call	0x80a	; 0x80a <Gps_send_Direction>
		break;
     8f2:	08 95       	ret
	}
	
	case 2:
	 {
		 Gps_send_Distance();
     8f4:	0e 94 3a 04 	call	0x874	; 0x874 <Gps_send_Distance>
     8f8:	08 95       	ret

000008fa <I2C_recieve>:
		sei();
}

void i2c_transmit_data(uint8_t data)
{		
	TWDR = data;
     8fa:	cf 93       	push	r28
     8fc:	c8 2f       	mov	r28, r24
     8fe:	0e 94 02 04 	call	0x804	; 0x804 <set_opcode>
     902:	c0 93 92 01 	sts	0x0192, r28	; 0x800192 <data>
     906:	cf 91       	pop	r28
     908:	08 95       	ret

0000090a <I2C_data_ACK_request>:
     90a:	0e 94 70 04 	call	0x8e0	; 0x8e0 <i2c_service>
     90e:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <data>
     912:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     916:	08 95       	ret

00000918 <I2C_data_NACK_request>:
     918:	0e 94 70 04 	call	0x8e0	; 0x8e0 <i2c_service>
     91c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <data>
     920:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     924:	08 95       	ret

00000926 <i2c_init>:
     926:	f8 94       	cli
     928:	88 0f       	add	r24, r24
     92a:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
     92e:	85 ec       	ldi	r24, 0xC5	; 197
     930:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     934:	78 94       	sei
     936:	08 95       	ret

00000938 <set_data>:
}

void set_data(uint8_t value)
{
	data = value;
     938:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <data>
     93c:	08 95       	ret

0000093e <__vector_24>:
}


 
ISR(TWI_vect)
{
     93e:	1f 92       	push	r1
     940:	0f 92       	push	r0
     942:	0f b6       	in	r0, 0x3f	; 63
     944:	0f 92       	push	r0
     946:	11 24       	eor	r1, r1
     948:	2f 93       	push	r18
     94a:	3f 93       	push	r19
     94c:	4f 93       	push	r20
     94e:	5f 93       	push	r21
     950:	6f 93       	push	r22
     952:	7f 93       	push	r23
     954:	8f 93       	push	r24
     956:	9f 93       	push	r25
     958:	af 93       	push	r26
     95a:	bf 93       	push	r27
     95c:	ef 93       	push	r30
     95e:	ff 93       	push	r31
	switch(TW_STATUS)
     960:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     964:	88 7f       	andi	r24, 0xF8	; 248
     966:	80 38       	cpi	r24, 0x80	; 128
     968:	49 f0       	breq	.+18     	; 0x97c <__vector_24+0x3e>
     96a:	18 f4       	brcc	.+6      	; 0x972 <__vector_24+0x34>
     96c:	88 23       	and	r24, r24
     96e:	d1 f0       	breq	.+52     	; 0x9a4 <__vector_24+0x66>
     970:	1f c0       	rjmp	.+62     	; 0x9b0 <__vector_24+0x72>
     972:	88 3a       	cpi	r24, 0xA8	; 168
     974:	59 f0       	breq	.+22     	; 0x98c <__vector_24+0x4e>
     976:	88 3b       	cpi	r24, 0xB8	; 184
     978:	79 f0       	breq	.+30     	; 0x998 <__vector_24+0x5a>
     97a:	1a c0       	rjmp	.+52     	; 0x9b0 <__vector_24+0x72>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recieve(TWDR);
     97c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     980:	0e 94 7d 04 	call	0x8fa	; 0x8fa <I2C_recieve>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     984:	85 ec       	ldi	r24, 0xC5	; 197
     986:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     98a:	15 c0       	rjmp	.+42     	; 0x9b6 <__vector_24+0x78>
		
		case TW_ST_SLA_ACK:
		// master is requesting data using NACK,master expects only one additional byte. call the request callback
		I2C_data_NACK_request();
     98c:	0e 94 8c 04 	call	0x918	; 0x918 <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     990:	85 ec       	ldi	r24, 0xC5	; 197
     992:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     996:	0f c0       	rjmp	.+30     	; 0x9b6 <__vector_24+0x78>
		
		case TW_ST_DATA_ACK:
		// master is requesting data using ACK, master expects multiple bytes. call the request callback
		I2C_data_ACK_request();
     998:	0e 94 85 04 	call	0x90a	; 0x90a <I2C_data_ACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     99c:	85 ec       	ldi	r24, 0xC5	; 197
     99e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     9a2:	09 c0       	rjmp	.+18     	; 0x9b6 <__vector_24+0x78>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     9a4:	ec eb       	ldi	r30, 0xBC	; 188
     9a6:	f0 e0       	ldi	r31, 0x00	; 0
     9a8:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9aa:	85 ec       	ldi	r24, 0xC5	; 197
     9ac:	80 83       	st	Z, r24
		break;
     9ae:	03 c0       	rjmp	.+6      	; 0x9b6 <__vector_24+0x78>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9b0:	85 ec       	ldi	r24, 0xC5	; 197
     9b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
	}
}
     9b6:	ff 91       	pop	r31
     9b8:	ef 91       	pop	r30
     9ba:	bf 91       	pop	r27
     9bc:	af 91       	pop	r26
     9be:	9f 91       	pop	r25
     9c0:	8f 91       	pop	r24
     9c2:	7f 91       	pop	r23
     9c4:	6f 91       	pop	r22
     9c6:	5f 91       	pop	r21
     9c8:	4f 91       	pop	r20
     9ca:	3f 91       	pop	r19
     9cc:	2f 91       	pop	r18
     9ce:	0f 90       	pop	r0
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	0f 90       	pop	r0
     9d4:	1f 90       	pop	r1
     9d6:	18 95       	reti

000009d8 <main>:
#define address 0x40



int main(void)
{	
     9d8:	cf 93       	push	r28
     9da:	df 93       	push	r29
     9dc:	cd b7       	in	r28, 0x3d	; 61
     9de:	de b7       	in	r29, 0x3e	; 62
     9e0:	cd 59       	subi	r28, 0x9D	; 157
     9e2:	d1 09       	sbc	r29, r1
     9e4:	0f b6       	in	r0, 0x3f	; 63
     9e6:	f8 94       	cli
     9e8:	de bf       	out	0x3e, r29	; 62
     9ea:	0f be       	out	0x3f, r0	; 63
     9ec:	cd bf       	out	0x3d, r28	; 61
	DDRC |=(1<<PORTC0); //Setting port C0 as an output 
     9ee:	38 9a       	sbi	0x07, 0	; 7
	i2c_init(address);  //init i2c transmiission 
     9f0:	80 e4       	ldi	r24, 0x40	; 64
     9f2:	0e 94 93 04 	call	0x926	; 0x926 <i2c_init>
	GPS_init();         //init GPS decoder
     9f6:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <GPS_init>
	
//while(1){	
	//Defining waypoint and NMEA, message 
	coor_t WP  = {54.90, 904558, 9.78, 786864};
     9fa:	80 e1       	ldi	r24, 0x10	; 16
     9fc:	e0 e0       	ldi	r30, 0x00	; 0
     9fe:	f1 e0       	ldi	r31, 0x01	; 1
     a00:	de 01       	movw	r26, r28
     a02:	11 96       	adiw	r26, 0x01	; 1
     a04:	01 90       	ld	r0, Z+
     a06:	0d 92       	st	X+, r0
     a08:	8a 95       	dec	r24
     a0a:	e1 f7       	brne	.-8      	; 0xa04 <main+0x2c>
	
	char msg[85];  //GPGAA message from module 
	DATA NMEA1;    //struct containing relevant data; LAT LON etc. 
	
while(1){	
			init_GPSDATA(&NMEA1); //to expose NMEA1 to GPS_send.h 
     a0c:	ce 01       	movw	r24, r28
     a0e:	8a 59       	subi	r24, 0x9A	; 154
     a10:	9f 4f       	sbci	r25, 0xFF	; 255
     a12:	0e 94 e4 03 	call	0x7c8	; 0x7c8 <init_GPSDATA>
		
			//Getting GPGAA from complete data pakage  
			while(!get_gps_message(msg)); 
     a16:	ce 01       	movw	r24, r28
     a18:	41 96       	adiw	r24, 0x11	; 17
     a1a:	0e 94 05 01 	call	0x20a	; 0x20a <get_gps_message>
     a1e:	89 2b       	or	r24, r25
     a20:	d1 f3       	breq	.-12     	; 0xa16 <main+0x3e>
			//printing_data(); //Printng message 
	
			//Decoding 
			if(GPS_Decode(msg, &NMEA1))	//Take message as char array and reference to data struct. Returns true if checksum is okay.
     a22:	be 01       	movw	r22, r28
     a24:	6a 59       	subi	r22, 0x9A	; 154
     a26:	7f 4f       	sbci	r23, 0xFF	; 255
     a28:	ce 01       	movw	r24, r28
     a2a:	41 96       	adiw	r24, 0x11	; 17
     a2c:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <GPS_Decode>
     a30:	89 2b       	or	r24, r25
     a32:	61 f3       	breq	.-40     	; 0xa0c <main+0x34>
			{
				dist_to_wp(&NMEA1, WP);  //Calculating dist from pos and WP 
     a34:	89 80       	ldd	r8, Y+1	; 0x01
     a36:	9a 80       	ldd	r9, Y+2	; 0x02
     a38:	ab 80       	ldd	r10, Y+3	; 0x03
     a3a:	bc 80       	ldd	r11, Y+4	; 0x04
     a3c:	cd 80       	ldd	r12, Y+5	; 0x05
     a3e:	de 80       	ldd	r13, Y+6	; 0x06
     a40:	ef 80       	ldd	r14, Y+7	; 0x07
     a42:	f8 84       	ldd	r15, Y+8	; 0x08
     a44:	09 85       	ldd	r16, Y+9	; 0x09
     a46:	1a 85       	ldd	r17, Y+10	; 0x0a
     a48:	2b 85       	ldd	r18, Y+11	; 0x0b
     a4a:	3c 85       	ldd	r19, Y+12	; 0x0c
     a4c:	4d 85       	ldd	r20, Y+13	; 0x0d
     a4e:	5e 85       	ldd	r21, Y+14	; 0x0e
     a50:	6f 85       	ldd	r22, Y+15	; 0x0f
     a52:	78 89       	ldd	r23, Y+16	; 0x10
     a54:	ce 01       	movw	r24, r28
     a56:	8a 59       	subi	r24, 0x9A	; 154
     a58:	9f 4f       	sbci	r25, 0xFF	; 255
     a5a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <dist_to_wp>
				bearing_to_wp(&NMEA1, WP); //Calculating bearing from pos and WP 
     a5e:	89 80       	ldd	r8, Y+1	; 0x01
     a60:	9a 80       	ldd	r9, Y+2	; 0x02
     a62:	ab 80       	ldd	r10, Y+3	; 0x03
     a64:	bc 80       	ldd	r11, Y+4	; 0x04
     a66:	cd 80       	ldd	r12, Y+5	; 0x05
     a68:	de 80       	ldd	r13, Y+6	; 0x06
     a6a:	ef 80       	ldd	r14, Y+7	; 0x07
     a6c:	f8 84       	ldd	r15, Y+8	; 0x08
     a6e:	09 85       	ldd	r16, Y+9	; 0x09
     a70:	1a 85       	ldd	r17, Y+10	; 0x0a
     a72:	2b 85       	ldd	r18, Y+11	; 0x0b
     a74:	3c 85       	ldd	r19, Y+12	; 0x0c
     a76:	4d 85       	ldd	r20, Y+13	; 0x0d
     a78:	5e 85       	ldd	r21, Y+14	; 0x0e
     a7a:	6f 85       	ldd	r22, Y+15	; 0x0f
     a7c:	78 89       	ldd	r23, Y+16	; 0x10
     a7e:	ce 01       	movw	r24, r28
     a80:	8a 59       	subi	r24, 0x9A	; 154
     a82:	9f 4f       	sbci	r25, 0xFF	; 255
     a84:	0e 94 58 02 	call	0x4b0	; 0x4b0 <bearing_to_wp>
				Transmit_dist_bearing_i2C(&NMEA1); //Transmitting via I2C 
     a88:	ce 01       	movw	r24, r28
     a8a:	8a 59       	subi	r24, 0x9A	; 154
     a8c:	9f 4f       	sbci	r25, 0xFF	; 255
     a8e:	0e 94 b3 03 	call	0x766	; 0x766 <Transmit_dist_bearing_i2C>
     a92:	bc cf       	rjmp	.-136    	; 0xa0c <main+0x34>

00000a94 <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     a94:	fc 01       	movw	r30, r24
	GPS_Data->LAT_Float=0.0;
     a96:	16 82       	std	Z+6, r1	; 0x06
     a98:	17 82       	std	Z+7, r1	; 0x07
     a9a:	10 86       	std	Z+8, r1	; 0x08
     a9c:	11 86       	std	Z+9, r1	; 0x09
	GPS_Data->LAT=0;
     a9e:	12 82       	std	Z+2, r1	; 0x02
     aa0:	13 82       	std	Z+3, r1	; 0x03
     aa2:	14 82       	std	Z+4, r1	; 0x04
     aa4:	15 82       	std	Z+5, r1	; 0x05
	GPS_Data->LAT_Min=0;
     aa6:	11 82       	std	Z+1, r1	; 0x01
	GPS_Data->LAT_Degree=0;
     aa8:	10 82       	st	Z, r1
	GPS_Data->LON_Float=0.0;
     aaa:	15 8a       	std	Z+21, r1	; 0x15
     aac:	16 8a       	std	Z+22, r1	; 0x16
     aae:	17 8a       	std	Z+23, r1	; 0x17
     ab0:	10 8e       	std	Z+24, r1	; 0x18
	GPS_Data->LON=0;
     ab2:	11 8a       	std	Z+17, r1	; 0x11
     ab4:	12 8a       	std	Z+18, r1	; 0x12
     ab6:	13 8a       	std	Z+19, r1	; 0x13
     ab8:	14 8a       	std	Z+20, r1	; 0x14
	GPS_Data->LON_Min=0;
     aba:	10 8a       	std	Z+16, r1	; 0x10
	GPS_Data->LON_Degree=0;
     abc:	17 86       	std	Z+15, r1	; 0x0f
	GPS_Data->ageOfCorrection = 0;
     abe:	17 8e       	std	Z+31, r1	; 0x1f
	GPS_Data->quality=0;
     ac0:	16 8e       	std	Z+30, r1	; 0x1e
	GPS_Data->Speed=0;
     ac2:	14 a2       	std	Z+36, r1	; 0x24
     ac4:	15 a2       	std	Z+37, r1	; 0x25
     ac6:	16 a2       	std	Z+38, r1	; 0x26
     ac8:	17 a2       	std	Z+39, r1	; 0x27
	GPS_Data->bearing_true=0;
     aca:	10 a2       	std	Z+32, r1	; 0x20
     acc:	11 a2       	std	Z+33, r1	; 0x21
     ace:	12 a2       	std	Z+34, r1	; 0x22
     ad0:	13 a2       	std	Z+35, r1	; 0x23
	GPS_Data->dist_wp=0;
     ad2:	10 a6       	std	Z+40, r1	; 0x28
     ad4:	11 a6       	std	Z+41, r1	; 0x29
     ad6:	12 a6       	std	Z+42, r1	; 0x2a
     ad8:	13 a6       	std	Z+43, r1	; 0x2b
	GPS_Data->bearing_wp=0;
     ada:	14 a6       	std	Z+44, r1	; 0x2c
     adc:	15 a6       	std	Z+45, r1	; 0x2d
     ade:	16 a6       	std	Z+46, r1	; 0x2e
     ae0:	17 a6       	std	Z+47, r1	; 0x2f
     ae2:	08 95       	ret

00000ae4 <checksum>:
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
     ae4:	fc 01       	movw	r30, r24
     ae6:	20 81       	ld	r18, Z
     ae8:	24 32       	cpi	r18, 0x24	; 36
     aea:	61 f5       	brne	.+88     	; 0xb44 <checksum+0x60>
	{
		i++;
		while(msg[i] != '*')
     aec:	21 81       	ldd	r18, Z+1	; 0x01
     aee:	2a 32       	cpi	r18, 0x2A	; 42
     af0:	59 f1       	breq	.+86     	; 0xb48 <checksum+0x64>
     af2:	dc 01       	movw	r26, r24
     af4:	12 96       	adiw	r26, 0x02	; 2
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	41 e0       	ldi	r20, 0x01	; 1
     afc:	50 e0       	ldi	r21, 0x00	; 0
		{
			checksum ^= (msg[i]-48);
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	20 53       	subi	r18, 0x30	; 48
     b02:	31 09       	sbc	r19, r1
     b04:	62 27       	eor	r22, r18
     b06:	73 27       	eor	r23, r19
			i++;
     b08:	4f 5f       	subi	r20, 0xFF	; 255
     b0a:	5f 4f       	sbci	r21, 0xFF	; 255
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     b0c:	2d 91       	ld	r18, X+
     b0e:	2a 32       	cpi	r18, 0x2A	; 42
     b10:	b1 f7       	brne	.-20     	; 0xafe <checksum+0x1a>
     b12:	1e c0       	rjmp	.+60     	; 0xb50 <checksum+0x6c>
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
			{
				nmea_sum += 1*(msg[i]-48);
     b14:	42 2f       	mov	r20, r18
     b16:	50 e0       	ldi	r21, 0x00	; 0
     b18:	40 53       	subi	r20, 0x30	; 48
     b1a:	51 09       	sbc	r21, r1
     b1c:	84 0f       	add	r24, r20
     b1e:	95 1f       	adc	r25, r21
			}
			
			if((msg[i]>='A') && (msg[i]<='F'))
     b20:	3f eb       	ldi	r19, 0xBF	; 191
     b22:	32 0f       	add	r19, r18
     b24:	36 30       	cpi	r19, 0x06	; 6
     b26:	28 f4       	brcc	.+10     	; 0xb32 <checksum+0x4e>
			{
				nmea_sum += 1*(msg[i]-55);
     b28:	30 e0       	ldi	r19, 0x00	; 0
     b2a:	27 53       	subi	r18, 0x37	; 55
     b2c:	31 09       	sbc	r19, r1
     b2e:	82 0f       	add	r24, r18
     b30:	93 1f       	adc	r25, r19
			}
		}
		
		if(checksum==(nmea_sum-(2*48)))
		{
			return 1;
     b32:	9c 01       	movw	r18, r24
     b34:	20 56       	subi	r18, 0x60	; 96
     b36:	31 09       	sbc	r19, r1
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	26 17       	cp	r18, r22
     b3c:	37 07       	cpc	r19, r23
     b3e:	d1 f0       	breq	.+52     	; 0xb74 <checksum+0x90>
     b40:	80 e0       	ldi	r24, 0x00	; 0
     b42:	08 95       	ret
		{
			return 0;
		}
		
	}
return 0; 
     b44:	80 e0       	ldi	r24, 0x00	; 0
     b46:	08 95       	ret
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     b48:	60 e0       	ldi	r22, 0x00	; 0
     b4a:	70 e0       	ldi	r23, 0x00	; 0
     b4c:	41 e0       	ldi	r20, 0x01	; 1
     b4e:	50 e0       	ldi	r21, 0x00	; 0
		
		if(msg[i] == '*')
		{
			////////////MSB
			i++;
			nmea_sum = 16*(msg[i]-48);
     b50:	fc 01       	movw	r30, r24
     b52:	e4 0f       	add	r30, r20
     b54:	f5 1f       	adc	r31, r21
     b56:	81 81       	ldd	r24, Z+1	; 0x01
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	c0 97       	sbiw	r24, 0x30	; 48
     b5c:	82 95       	swap	r24
     b5e:	92 95       	swap	r25
     b60:	90 7f       	andi	r25, 0xF0	; 240
     b62:	98 27       	eor	r25, r24
     b64:	80 7f       	andi	r24, 0xF0	; 240
     b66:	98 27       	eor	r25, r24
				
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     b68:	22 81       	ldd	r18, Z+2	; 0x02
     b6a:	30 ed       	ldi	r19, 0xD0	; 208
     b6c:	32 0f       	add	r19, r18
     b6e:	3a 30       	cpi	r19, 0x0A	; 10
     b70:	88 f2       	brcs	.-94     	; 0xb14 <checksum+0x30>
     b72:	d6 cf       	rjmp	.-84     	; 0xb20 <checksum+0x3c>
			return 0;
		}
		
	}
return 0; 
}
     b74:	08 95       	ret

00000b76 <MessageType>:

uint8_t MessageType(char* msg){
     b76:	cf 93       	push	r28
     b78:	df 93       	push	r29
     b7a:	cd b7       	in	r28, 0x3d	; 61
     b7c:	de b7       	in	r29, 0x3e	; 62
     b7e:	64 97       	sbiw	r28, 0x14	; 20
     b80:	0f b6       	in	r0, 0x3f	; 63
     b82:	f8 94       	cli
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	0f be       	out	0x3f, r0	; 63
     b88:	cd bf       	out	0x3d, r28	; 61
	if(msg[0]=='$')
     b8a:	fc 01       	movw	r30, r24
     b8c:	20 81       	ld	r18, Z
     b8e:	24 32       	cpi	r18, 0x24	; 36
     b90:	09 f0       	breq	.+2      	; 0xb94 <MessageType+0x1e>
     b92:	55 c0       	rjmp	.+170    	; 0xc3e <MessageType+0xc8>
     b94:	dc 01       	movw	r26, r24
     b96:	11 96       	adiw	r26, 0x01	; 1
     b98:	fe 01       	movw	r30, r28
     b9a:	70 96       	adiw	r30, 0x10	; 16
     b9c:	9e 01       	movw	r18, r28
     b9e:	2b 5e       	subi	r18, 0xEB	; 235
     ba0:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     ba2:	8d 91       	ld	r24, X+
     ba4:	9f eb       	ldi	r25, 0xBF	; 191
     ba6:	98 0f       	add	r25, r24
     ba8:	9a 31       	cpi	r25, 0x1A	; 26
     baa:	08 f4       	brcc	.+2      	; 0xbae <MessageType+0x38>
			{
				msg_type[k]	= msg[k+1];
     bac:	80 83       	st	Z, r24
     bae:	31 96       	adiw	r30, 0x01	; 1

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     bb0:	e2 17       	cp	r30, r18
     bb2:	f3 07       	cpc	r31, r19
     bb4:	b1 f7       	brne	.-20     	; 0xba2 <MessageType+0x2c>
			else
			{
				//printf("Failed message type\n");
			}
		}
		char msg_gpgga[5] = "GPGGA";
     bb6:	85 e0       	ldi	r24, 0x05	; 5
     bb8:	e0 e1       	ldi	r30, 0x10	; 16
     bba:	f1 e0       	ldi	r31, 0x01	; 1
     bbc:	de 01       	movw	r26, r28
     bbe:	1b 96       	adiw	r26, 0x0b	; 11
     bc0:	01 90       	ld	r0, Z+
     bc2:	0d 92       	st	X+, r0
     bc4:	8a 95       	dec	r24
     bc6:	e1 f7       	brne	.-8      	; 0xbc0 <MessageType+0x4a>
		char msg_gpvtg[5] = "GPVTG";
     bc8:	85 e0       	ldi	r24, 0x05	; 5
     bca:	e6 e1       	ldi	r30, 0x16	; 22
     bcc:	f1 e0       	ldi	r31, 0x01	; 1
     bce:	de 01       	movw	r26, r28
     bd0:	16 96       	adiw	r26, 0x06	; 6
     bd2:	01 90       	ld	r0, Z+
     bd4:	0d 92       	st	X+, r0
     bd6:	8a 95       	dec	r24
     bd8:	e1 f7       	brne	.-8      	; 0xbd2 <MessageType+0x5c>
		char msg_gngga[5] = "GNGGA";
     bda:	85 e0       	ldi	r24, 0x05	; 5
     bdc:	ec e1       	ldi	r30, 0x1C	; 28
     bde:	f1 e0       	ldi	r31, 0x01	; 1
     be0:	de 01       	movw	r26, r28
     be2:	11 96       	adiw	r26, 0x01	; 1
     be4:	01 90       	ld	r0, Z+
     be6:	0d 92       	st	X+, r0
     be8:	8a 95       	dec	r24
     bea:	e1 f7       	brne	.-8      	; 0xbe4 <MessageType+0x6e>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     bec:	45 e0       	ldi	r20, 0x05	; 5
     bee:	50 e0       	ldi	r21, 0x00	; 0
     bf0:	be 01       	movw	r22, r28
     bf2:	65 5f       	subi	r22, 0xF5	; 245
     bf4:	7f 4f       	sbci	r23, 0xFF	; 255
     bf6:	ce 01       	movw	r24, r28
     bf8:	40 96       	adiw	r24, 0x10	; 16
     bfa:	0e 94 11 11 	call	0x2222	; 0x2222 <strncmp>
     bfe:	89 2b       	or	r24, r25
     c00:	c1 f0       	breq	.+48     	; 0xc32 <MessageType+0xbc>
		{
			return GPGGA;
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     c02:	45 e0       	ldi	r20, 0x05	; 5
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	be 01       	movw	r22, r28
     c08:	6a 5f       	subi	r22, 0xFA	; 250
     c0a:	7f 4f       	sbci	r23, 0xFF	; 255
     c0c:	ce 01       	movw	r24, r28
     c0e:	40 96       	adiw	r24, 0x10	; 16
     c10:	0e 94 11 11 	call	0x2222	; 0x2222 <strncmp>
     c14:	89 2b       	or	r24, r25
     c16:	79 f0       	breq	.+30     	; 0xc36 <MessageType+0xc0>
		{
			return GPVTG;
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
     c18:	45 e0       	ldi	r20, 0x05	; 5
     c1a:	50 e0       	ldi	r21, 0x00	; 0
     c1c:	be 01       	movw	r22, r28
     c1e:	6f 5f       	subi	r22, 0xFF	; 255
     c20:	7f 4f       	sbci	r23, 0xFF	; 255
     c22:	ce 01       	movw	r24, r28
     c24:	40 96       	adiw	r24, 0x10	; 16
     c26:	0e 94 11 11 	call	0x2222	; 0x2222 <strncmp>
     c2a:	89 2b       	or	r24, r25
     c2c:	31 f0       	breq	.+12     	; 0xc3a <MessageType+0xc4>
		{
			return GPGGA;
		}
	}
	return 0; 
     c2e:	80 e0       	ldi	r24, 0x00	; 0
     c30:	07 c0       	rjmp	.+14     	; 0xc40 <MessageType+0xca>
		char msg_gpvtg[5] = "GPVTG";
		char msg_gngga[5] = "GNGGA";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	05 c0       	rjmp	.+10     	; 0xc40 <MessageType+0xca>
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     c36:	82 e0       	ldi	r24, 0x02	; 2
     c38:	03 c0       	rjmp	.+6      	; 0xc40 <MessageType+0xca>
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
		{
			return GPGGA;
     c3a:	81 e0       	ldi	r24, 0x01	; 1
     c3c:	01 c0       	rjmp	.+2      	; 0xc40 <MessageType+0xca>
		}
	}
	return 0; 
     c3e:	80 e0       	ldi	r24, 0x00	; 0
}
     c40:	64 96       	adiw	r28, 0x14	; 20
     c42:	0f b6       	in	r0, 0x3f	; 63
     c44:	f8 94       	cli
     c46:	de bf       	out	0x3e, r29	; 62
     c48:	0f be       	out	0x3f, r0	; 63
     c4a:	cd bf       	out	0x3d, r28	; 61
     c4c:	df 91       	pop	r29
     c4e:	cf 91       	pop	r28
     c50:	08 95       	ret

00000c52 <convert>:

void convert(struct DATA *GPS_Data)
{
     c52:	4f 92       	push	r4
     c54:	5f 92       	push	r5
     c56:	6f 92       	push	r6
     c58:	7f 92       	push	r7
     c5a:	8f 92       	push	r8
     c5c:	9f 92       	push	r9
     c5e:	af 92       	push	r10
     c60:	bf 92       	push	r11
     c62:	cf 92       	push	r12
     c64:	df 92       	push	r13
     c66:	ef 92       	push	r14
     c68:	ff 92       	push	r15
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	00 d0       	rcall	.+0      	; 0xc70 <convert+0x1e>
     c70:	00 d0       	rcall	.+0      	; 0xc72 <convert+0x20>
     c72:	00 d0       	rcall	.+0      	; 0xc74 <convert+0x22>
     c74:	cd b7       	in	r28, 0x3d	; 61
     c76:	de b7       	in	r29, 0x3e	; 62
     c78:	9e 83       	std	Y+6, r25	; 0x06
     c7a:	8d 83       	std	Y+5, r24	; 0x05
	GPS_Data->LAT_Float = GPS_Data->LAT_Degree + (GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0);
     c7c:	fc 01       	movw	r30, r24
     c7e:	61 81       	ldd	r22, Z+1	; 0x01
     c80:	70 e0       	ldi	r23, 0x00	; 0
     c82:	80 e0       	ldi	r24, 0x00	; 0
     c84:	90 e0       	ldi	r25, 0x00	; 0
     c86:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     c8a:	20 e0       	ldi	r18, 0x00	; 0
     c8c:	30 e0       	ldi	r19, 0x00	; 0
     c8e:	40 e7       	ldi	r20, 0x70	; 112
     c90:	52 e4       	ldi	r21, 0x42	; 66
     c92:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     c96:	6b 01       	movw	r12, r22
     c98:	7c 01       	movw	r14, r24
     c9a:	ed 81       	ldd	r30, Y+5	; 0x05
     c9c:	fe 81       	ldd	r31, Y+6	; 0x06
     c9e:	62 81       	ldd	r22, Z+2	; 0x02
     ca0:	73 81       	ldd	r23, Z+3	; 0x03
     ca2:	84 81       	ldd	r24, Z+4	; 0x04
     ca4:	95 81       	ldd	r25, Z+5	; 0x05
     ca6:	0e 94 36 0a 	call	0x146c	; 0x146c <__floatunsisf>
     caa:	20 e0       	ldi	r18, 0x00	; 0
     cac:	3b e1       	ldi	r19, 0x1B	; 27
     cae:	47 eb       	ldi	r20, 0xB7	; 183
     cb0:	5a e4       	ldi	r21, 0x4A	; 74
     cb2:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     cb6:	69 83       	std	Y+1, r22	; 0x01
     cb8:	7a 83       	std	Y+2, r23	; 0x02
     cba:	8b 83       	std	Y+3, r24	; 0x03
     cbc:	9c 83       	std	Y+4, r25	; 0x04
     cbe:	ed 81       	ldd	r30, Y+5	; 0x05
     cc0:	fe 81       	ldd	r31, Y+6	; 0x06
     cc2:	60 81       	ld	r22, Z
     cc4:	70 e0       	ldi	r23, 0x00	; 0
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     cce:	a7 01       	movw	r20, r14
     cd0:	96 01       	movw	r18, r12
     cd2:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     cd6:	29 81       	ldd	r18, Y+1	; 0x01
     cd8:	3a 81       	ldd	r19, Y+2	; 0x02
     cda:	4b 81       	ldd	r20, Y+3	; 0x03
     cdc:	5c 81       	ldd	r21, Y+4	; 0x04
     cde:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     ce2:	ed 81       	ldd	r30, Y+5	; 0x05
     ce4:	fe 81       	ldd	r31, Y+6	; 0x06
     ce6:	66 83       	std	Z+6, r22	; 0x06
     ce8:	77 83       	std	Z+7, r23	; 0x07
     cea:	80 87       	std	Z+8, r24	; 0x08
     cec:	91 87       	std	Z+9, r25	; 0x09
	GPS_Data->LON_Float = GPS_Data->LON_Degree + (GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0);
     cee:	60 89       	ldd	r22, Z+16	; 0x10
     cf0:	70 e0       	ldi	r23, 0x00	; 0
     cf2:	80 e0       	ldi	r24, 0x00	; 0
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     cfa:	20 e0       	ldi	r18, 0x00	; 0
     cfc:	30 e0       	ldi	r19, 0x00	; 0
     cfe:	40 e7       	ldi	r20, 0x70	; 112
     d00:	52 e4       	ldi	r21, 0x42	; 66
     d02:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     d06:	4b 01       	movw	r8, r22
     d08:	5c 01       	movw	r10, r24
     d0a:	ed 81       	ldd	r30, Y+5	; 0x05
     d0c:	fe 81       	ldd	r31, Y+6	; 0x06
     d0e:	61 89       	ldd	r22, Z+17	; 0x11
     d10:	72 89       	ldd	r23, Z+18	; 0x12
     d12:	83 89       	ldd	r24, Z+19	; 0x13
     d14:	94 89       	ldd	r25, Z+20	; 0x14
     d16:	0e 94 36 0a 	call	0x146c	; 0x146c <__floatunsisf>
     d1a:	20 e0       	ldi	r18, 0x00	; 0
     d1c:	3b e1       	ldi	r19, 0x1B	; 27
     d1e:	47 eb       	ldi	r20, 0xB7	; 183
     d20:	5a e4       	ldi	r21, 0x4A	; 74
     d22:	0e 94 8e 09 	call	0x131c	; 0x131c <__divsf3>
     d26:	2b 01       	movw	r4, r22
     d28:	3c 01       	movw	r6, r24
     d2a:	ed 81       	ldd	r30, Y+5	; 0x05
     d2c:	fe 81       	ldd	r31, Y+6	; 0x06
     d2e:	67 85       	ldd	r22, Z+15	; 0x0f
     d30:	70 e0       	ldi	r23, 0x00	; 0
     d32:	80 e0       	ldi	r24, 0x00	; 0
     d34:	90 e0       	ldi	r25, 0x00	; 0
     d36:	0e 94 38 0a 	call	0x1470	; 0x1470 <__floatsisf>
     d3a:	a5 01       	movw	r20, r10
     d3c:	94 01       	movw	r18, r8
     d3e:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     d42:	a3 01       	movw	r20, r6
     d44:	92 01       	movw	r18, r4
     d46:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     d4a:	ed 81       	ldd	r30, Y+5	; 0x05
     d4c:	fe 81       	ldd	r31, Y+6	; 0x06
     d4e:	65 8b       	std	Z+21, r22	; 0x15
     d50:	76 8b       	std	Z+22, r23	; 0x16
     d52:	87 8b       	std	Z+23, r24	; 0x17
     d54:	90 8f       	std	Z+24, r25	; 0x18
	GPS_Data->LON_FINAL =  ((GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0))  *1000000;
     d56:	a3 01       	movw	r20, r6
     d58:	92 01       	movw	r18, r4
     d5a:	c5 01       	movw	r24, r10
     d5c:	b4 01       	movw	r22, r8
     d5e:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     d62:	20 e0       	ldi	r18, 0x00	; 0
     d64:	34 e2       	ldi	r19, 0x24	; 36
     d66:	44 e7       	ldi	r20, 0x74	; 116
     d68:	59 e4       	ldi	r21, 0x49	; 73
     d6a:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     d6e:	0e 94 07 0a 	call	0x140e	; 0x140e <__fixunssfsi>
     d72:	ed 81       	ldd	r30, Y+5	; 0x05
     d74:	fe 81       	ldd	r31, Y+6	; 0x06
     d76:	61 8f       	std	Z+25, r22	; 0x19
     d78:	72 8f       	std	Z+26, r23	; 0x1a
     d7a:	83 8f       	std	Z+27, r24	; 0x1b
     d7c:	94 8f       	std	Z+28, r25	; 0x1c
	GPS_Data->LAT_FINAL = ((GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0)) *1000000;
     d7e:	29 81       	ldd	r18, Y+1	; 0x01
     d80:	3a 81       	ldd	r19, Y+2	; 0x02
     d82:	4b 81       	ldd	r20, Y+3	; 0x03
     d84:	5c 81       	ldd	r21, Y+4	; 0x04
     d86:	c7 01       	movw	r24, r14
     d88:	b6 01       	movw	r22, r12
     d8a:	0e 94 a6 08 	call	0x114c	; 0x114c <__addsf3>
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	34 e2       	ldi	r19, 0x24	; 36
     d92:	44 e7       	ldi	r20, 0x74	; 116
     d94:	59 e4       	ldi	r21, 0x49	; 73
     d96:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
     d9a:	0e 94 07 0a 	call	0x140e	; 0x140e <__fixunssfsi>
     d9e:	ed 81       	ldd	r30, Y+5	; 0x05
     da0:	fe 81       	ldd	r31, Y+6	; 0x06
     da2:	62 87       	std	Z+10, r22	; 0x0a
     da4:	73 87       	std	Z+11, r23	; 0x0b
     da6:	84 87       	std	Z+12, r24	; 0x0c
     da8:	95 87       	std	Z+13, r25	; 0x0d
}
     daa:	26 96       	adiw	r28, 0x06	; 6
     dac:	0f b6       	in	r0, 0x3f	; 63
     dae:	f8 94       	cli
     db0:	de bf       	out	0x3e, r29	; 62
     db2:	0f be       	out	0x3f, r0	; 63
     db4:	cd bf       	out	0x3d, r28	; 61
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	ff 90       	pop	r15
     dbc:	ef 90       	pop	r14
     dbe:	df 90       	pop	r13
     dc0:	cf 90       	pop	r12
     dc2:	bf 90       	pop	r11
     dc4:	af 90       	pop	r10
     dc6:	9f 90       	pop	r9
     dc8:	8f 90       	pop	r8
     dca:	7f 90       	pop	r7
     dcc:	6f 90       	pop	r6
     dce:	5f 90       	pop	r5
     dd0:	4f 90       	pop	r4
     dd2:	08 95       	ret

00000dd4 <GPS_Decode>:

int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
     dd4:	2f 92       	push	r2
     dd6:	3f 92       	push	r3
     dd8:	4f 92       	push	r4
     dda:	5f 92       	push	r5
     ddc:	6f 92       	push	r6
     dde:	7f 92       	push	r7
     de0:	8f 92       	push	r8
     de2:	9f 92       	push	r9
     de4:	af 92       	push	r10
     de6:	bf 92       	push	r11
     de8:	cf 92       	push	r12
     dea:	df 92       	push	r13
     dec:	ef 92       	push	r14
     dee:	ff 92       	push	r15
     df0:	0f 93       	push	r16
     df2:	1f 93       	push	r17
     df4:	cf 93       	push	r28
     df6:	df 93       	push	r29
     df8:	00 d0       	rcall	.+0      	; 0xdfa <GPS_Decode+0x26>
     dfa:	00 d0       	rcall	.+0      	; 0xdfc <GPS_Decode+0x28>
     dfc:	00 d0       	rcall	.+0      	; 0xdfe <GPS_Decode+0x2a>
     dfe:	cd b7       	in	r28, 0x3d	; 61
     e00:	de b7       	in	r29, 0x3e	; 62
     e02:	8c 01       	movw	r16, r24
     e04:	7b 01       	movw	r14, r22
	///////////////////Checksum////////////////////////
	if(checksum(msg))  //! to disable during testing 
     e06:	0e 94 72 05 	call	0xae4	; 0xae4 <checksum>
     e0a:	88 23       	and	r24, r24
     e0c:	09 f4       	brne	.+2      	; 0xe10 <GPS_Decode+0x3c>
     e0e:	5e c1       	rjmp	.+700    	; 0x10cc <GPS_Decode+0x2f8>
	{
		uint8_t type = MessageType(msg);
     e10:	c8 01       	movw	r24, r16
     e12:	0e 94 bb 05 	call	0xb76	; 0xb76 <MessageType>
     e16:	89 83       	std	Y+1, r24	; 0x01
		init(GPS_Data);
     e18:	c7 01       	movw	r24, r14
     e1a:	0e 94 4a 05 	call	0xa94	; 0xa94 <init>
		
	switch(type)
     e1e:	29 81       	ldd	r18, Y+1	; 0x01
     e20:	21 30       	cpi	r18, 0x01	; 1
     e22:	09 f0       	breq	.+2      	; 0xe26 <GPS_Decode+0x52>
     e24:	4d c1       	rjmp	.+666    	; 0x10c0 <GPS_Decode+0x2ec>
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
     e26:	d8 01       	movw	r26, r16
     e28:	16 96       	adiw	r26, 0x06	; 6
     e2a:	8c 91       	ld	r24, X
     e2c:	8a 32       	cpi	r24, 0x2A	; 42
     e2e:	09 f4       	brne	.+2      	; 0xe32 <GPS_Decode+0x5e>
     e30:	47 c1       	rjmp	.+654    	; 0x10c0 <GPS_Decode+0x2ec>
     e32:	0f 2e       	mov	r0, r31
     e34:	f0 e1       	ldi	r31, 0x10	; 16
     e36:	4f 2e       	mov	r4, r31
     e38:	f7 e2       	ldi	r31, 0x27	; 39
     e3a:	5f 2e       	mov	r5, r31
     e3c:	61 2c       	mov	r6, r1
     e3e:	71 2c       	mov	r7, r1
     e40:	f0 2d       	mov	r31, r0
     e42:	ba e0       	ldi	r27, 0x0A	; 10
     e44:	bc 83       	std	Y+4, r27	; 0x04
     e46:	e4 e6       	ldi	r30, 0x64	; 100
     e48:	e9 83       	std	Y+1, r30	; 0x01
     e4a:	c1 2c       	mov	r12, r1
     e4c:	0f 2e       	mov	r0, r31
     e4e:	f0 e1       	ldi	r31, 0x10	; 16
     e50:	8f 2e       	mov	r8, r31
     e52:	f7 e2       	ldi	r31, 0x27	; 39
     e54:	9f 2e       	mov	r9, r31
     e56:	a1 2c       	mov	r10, r1
     e58:	b1 2c       	mov	r11, r1
     e5a:	f0 2d       	mov	r31, r0
     e5c:	fa e0       	ldi	r31, 0x0A	; 10
     e5e:	fb 83       	std	Y+3, r31	; 0x03
     e60:	2a e0       	ldi	r18, 0x0A	; 10
     e62:	2a 83       	std	Y+2, r18	; 0x02
     e64:	d1 2c       	mov	r13, r1
     e66:	0f 2e       	mov	r0, r31
     e68:	fa e0       	ldi	r31, 0x0A	; 10
     e6a:	3f 2e       	mov	r3, r31
     e6c:	f0 2d       	mov	r31, r0
     e6e:	1e 82       	std	Y+6, r1	; 0x06
     e70:	96 e0       	ldi	r25, 0x06	; 6
									LonDegree /= 10;
								}
								if((LonCount>=3) && (LonCount<5))
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
									LonHour /= 10;
     e72:	0f 2e       	mov	r0, r31
     e74:	fd ec       	ldi	r31, 0xCD	; 205
     e76:	2f 2e       	mov	r2, r31
     e78:	f0 2d       	mov	r31, r0
     e7a:	9d 83       	std	Y+5, r25	; 0x05
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
				{
					if(msg[i] == ',')
     e7c:	8c 32       	cpi	r24, 0x2C	; 44
     e7e:	31 f4       	brne	.+12     	; 0xe8c <GPS_Decode+0xb8>
					{
						CommaCounter++;
     e80:	be 81       	ldd	r27, Y+6	; 0x06
     e82:	bf 5f       	subi	r27, 0xFF	; 255
     e84:	be 83       	std	Y+6, r27	; 0x06
						i++;
     e86:	ed 81       	ldd	r30, Y+5	; 0x05
     e88:	ef 5f       	subi	r30, 0xFF	; 255
     e8a:	ed 83       	std	Y+5, r30	; 0x05
					}
					
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
     e8c:	fe 81       	ldd	r31, Y+6	; 0x06
     e8e:	f4 30       	cpi	r31, 0x04	; 4
     e90:	09 f4       	brne	.+2      	; 0xe94 <GPS_Decode+0xc0>
     e92:	7c c0       	rjmp	.+248    	; 0xf8c <GPS_Decode+0x1b8>
     e94:	30 f4       	brcc	.+12     	; 0xea2 <GPS_Decode+0xce>
     e96:	f2 30       	cpi	r31, 0x02	; 2
     e98:	71 f0       	breq	.+28     	; 0xeb6 <GPS_Decode+0xe2>
     e9a:	f3 30       	cpi	r31, 0x03	; 3
     e9c:	09 f4       	brne	.+2      	; 0xea0 <GPS_Decode+0xcc>
     e9e:	68 c0       	rjmp	.+208    	; 0xf70 <GPS_Decode+0x19c>
     ea0:	05 c1       	rjmp	.+522    	; 0x10ac <GPS_Decode+0x2d8>
     ea2:	2e 81       	ldd	r18, Y+6	; 0x06
     ea4:	26 30       	cpi	r18, 0x06	; 6
     ea6:	09 f4       	brne	.+2      	; 0xeaa <GPS_Decode+0xd6>
     ea8:	dd c0       	rjmp	.+442    	; 0x1064 <GPS_Decode+0x290>
     eaa:	08 f4       	brcc	.+2      	; 0xeae <GPS_Decode+0xda>
     eac:	ce c0       	rjmp	.+412    	; 0x104a <GPS_Decode+0x276>
     eae:	2d 30       	cpi	r18, 0x0D	; 13
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <GPS_Decode+0xe0>
     eb2:	e3 c0       	rjmp	.+454    	; 0x107a <GPS_Decode+0x2a6>
     eb4:	fb c0       	rjmp	.+502    	; 0x10ac <GPS_Decode+0x2d8>
					{
						case 2:		//Latitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     eb6:	f8 01       	movw	r30, r16
     eb8:	8d 81       	ldd	r24, Y+5	; 0x05
     eba:	e8 0f       	add	r30, r24
     ebc:	f1 1d       	adc	r31, r1
     ebe:	80 81       	ld	r24, Z
     ec0:	98 2f       	mov	r25, r24
     ec2:	9d 7f       	andi	r25, 0xFD	; 253
     ec4:	9c 32       	cpi	r25, 0x2C	; 44
     ec6:	09 f4       	brne	.+2      	; 0xeca <GPS_Decode+0xf6>
     ec8:	f1 c0       	rjmp	.+482    	; 0x10ac <GPS_Decode+0x2d8>
							{
								if(LatCount<2)
     eca:	91 e0       	ldi	r25, 0x01	; 1
     ecc:	9d 15       	cp	r25, r13
     ece:	88 f0       	brcs	.+34     	; 0xef2 <GPS_Decode+0x11e>
								{
									GPS_Data->LAT_Degree += (msg[i]-48) * LatDegree;
     ed0:	80 53       	subi	r24, 0x30	; 48
     ed2:	d7 01       	movw	r26, r14
     ed4:	9c 91       	ld	r25, X
     ed6:	ba 81       	ldd	r27, Y+2	; 0x02
     ed8:	8b 9f       	mul	r24, r27
     eda:	90 0d       	add	r25, r0
     edc:	11 24       	eor	r1, r1
     ede:	d7 01       	movw	r26, r14
     ee0:	9c 93       	st	X, r25
									LatDegree /= 10;
     ee2:	ba 81       	ldd	r27, Y+2	; 0x02
     ee4:	b2 9d       	mul	r27, r2
     ee6:	81 2d       	mov	r24, r1
     ee8:	11 24       	eor	r1, r1
     eea:	86 95       	lsr	r24
     eec:	86 95       	lsr	r24
     eee:	86 95       	lsr	r24
     ef0:	8a 83       	std	Y+2, r24	; 0x02
								}
								if((LatCount>=2) && (LatCount<4))
     ef2:	8e ef       	ldi	r24, 0xFE	; 254
     ef4:	8d 0d       	add	r24, r13
     ef6:	82 30       	cpi	r24, 0x02	; 2
     ef8:	a0 f4       	brcc	.+40     	; 0xf22 <GPS_Decode+0x14e>
								{
									GPS_Data->LAT_Min += (msg[i]-48) * LatHour;
     efa:	90 81       	ld	r25, Z
     efc:	90 53       	subi	r25, 0x30	; 48
     efe:	d7 01       	movw	r26, r14
     f00:	11 96       	adiw	r26, 0x01	; 1
     f02:	8c 91       	ld	r24, X
     f04:	bb 81       	ldd	r27, Y+3	; 0x03
     f06:	9b 9f       	mul	r25, r27
     f08:	80 0d       	add	r24, r0
     f0a:	11 24       	eor	r1, r1
     f0c:	d7 01       	movw	r26, r14
     f0e:	11 96       	adiw	r26, 0x01	; 1
     f10:	8c 93       	st	X, r24
									LatHour /= 10;
     f12:	bb 81       	ldd	r27, Y+3	; 0x03
     f14:	b2 9d       	mul	r27, r2
     f16:	81 2d       	mov	r24, r1
     f18:	11 24       	eor	r1, r1
     f1a:	86 95       	lsr	r24
     f1c:	86 95       	lsr	r24
     f1e:	86 95       	lsr	r24
     f20:	8b 83       	std	Y+3, r24	; 0x03
								}
								if((LatCount>=4))
     f22:	23 e0       	ldi	r18, 0x03	; 3
     f24:	2d 15       	cp	r18, r13
     f26:	18 f5       	brcc	.+70     	; 0xf6e <GPS_Decode+0x19a>
								{
									GPS_Data->LAT += (msg[i]-48) * LatMin;
     f28:	a0 81       	ld	r26, Z
     f2a:	b0 e0       	ldi	r27, 0x00	; 0
     f2c:	d0 97       	sbiw	r26, 0x30	; 48
     f2e:	a5 01       	movw	r20, r10
     f30:	94 01       	movw	r18, r8
     f32:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <__mulshisi3>
     f36:	d7 01       	movw	r26, r14
     f38:	12 96       	adiw	r26, 0x02	; 2
     f3a:	2d 91       	ld	r18, X+
     f3c:	3d 91       	ld	r19, X+
     f3e:	4d 91       	ld	r20, X+
     f40:	5c 91       	ld	r21, X
     f42:	15 97       	sbiw	r26, 0x05	; 5
     f44:	dc 01       	movw	r26, r24
     f46:	cb 01       	movw	r24, r22
     f48:	82 0f       	add	r24, r18
     f4a:	93 1f       	adc	r25, r19
     f4c:	a4 1f       	adc	r26, r20
     f4e:	b5 1f       	adc	r27, r21
     f50:	f7 01       	movw	r30, r14
     f52:	82 83       	std	Z+2, r24	; 0x02
     f54:	93 83       	std	Z+3, r25	; 0x03
     f56:	a4 83       	std	Z+4, r26	; 0x04
     f58:	b5 83       	std	Z+5, r27	; 0x05
									LatMin /= 10;
     f5a:	c5 01       	movw	r24, r10
     f5c:	b4 01       	movw	r22, r8
     f5e:	2a e0       	ldi	r18, 0x0A	; 10
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	40 e0       	ldi	r20, 0x00	; 0
     f64:	50 e0       	ldi	r21, 0x00	; 0
     f66:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
     f6a:	49 01       	movw	r8, r18
     f6c:	5a 01       	movw	r10, r20
								}
								LatCount++;
     f6e:	d3 94       	inc	r13

						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
						{
							if(msg[i]>='A' && msg[i]<='Z')
     f70:	f8 01       	movw	r30, r16
     f72:	2d 81       	ldd	r18, Y+5	; 0x05
     f74:	e2 0f       	add	r30, r18
     f76:	f1 1d       	adc	r31, r1
     f78:	80 81       	ld	r24, Z
     f7a:	9f eb       	ldi	r25, 0xBF	; 191
     f7c:	98 0f       	add	r25, r24
     f7e:	9a 31       	cpi	r25, 0x1A	; 26
     f80:	08 f0       	brcs	.+2      	; 0xf84 <GPS_Decode+0x1b0>
     f82:	94 c0       	rjmp	.+296    	; 0x10ac <GPS_Decode+0x2d8>
							{
								GPS_Data->LATdir = msg[i];
     f84:	d7 01       	movw	r26, r14
     f86:	1e 96       	adiw	r26, 0x0e	; 14
     f88:	8c 93       	st	X, r24
     f8a:	90 c0       	rjmp	.+288    	; 0x10ac <GPS_Decode+0x2d8>
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     f8c:	f8 01       	movw	r30, r16
     f8e:	bd 81       	ldd	r27, Y+5	; 0x05
     f90:	eb 0f       	add	r30, r27
     f92:	f1 1d       	adc	r31, r1
     f94:	80 81       	ld	r24, Z
     f96:	98 2f       	mov	r25, r24
     f98:	9d 7f       	andi	r25, 0xFD	; 253
     f9a:	9c 32       	cpi	r25, 0x2C	; 44
     f9c:	09 f4       	brne	.+2      	; 0xfa0 <GPS_Decode+0x1cc>
     f9e:	86 c0       	rjmp	.+268    	; 0x10ac <GPS_Decode+0x2d8>
							{
								if(LonCount<3)
     fa0:	22 e0       	ldi	r18, 0x02	; 2
     fa2:	2c 15       	cp	r18, r12
     fa4:	98 f0       	brcs	.+38     	; 0xfcc <GPS_Decode+0x1f8>
								{
									GPS_Data->LON_Degree += (msg[i]-48) * LonDegree;
     fa6:	80 53       	subi	r24, 0x30	; 48
     fa8:	d7 01       	movw	r26, r14
     faa:	1f 96       	adiw	r26, 0x0f	; 15
     fac:	9c 91       	ld	r25, X
     fae:	b9 81       	ldd	r27, Y+1	; 0x01
     fb0:	8b 9f       	mul	r24, r27
     fb2:	90 0d       	add	r25, r0
     fb4:	11 24       	eor	r1, r1
     fb6:	d7 01       	movw	r26, r14
     fb8:	1f 96       	adiw	r26, 0x0f	; 15
     fba:	9c 93       	st	X, r25
									LonDegree /= 10;
     fbc:	b9 81       	ldd	r27, Y+1	; 0x01
     fbe:	b2 9d       	mul	r27, r2
     fc0:	81 2d       	mov	r24, r1
     fc2:	11 24       	eor	r1, r1
     fc4:	86 95       	lsr	r24
     fc6:	86 95       	lsr	r24
     fc8:	86 95       	lsr	r24
     fca:	89 83       	std	Y+1, r24	; 0x01
								}
								if((LonCount>=3) && (LonCount<5))
     fcc:	8d ef       	ldi	r24, 0xFD	; 253
     fce:	8c 0d       	add	r24, r12
     fd0:	82 30       	cpi	r24, 0x02	; 2
     fd2:	a0 f4       	brcc	.+40     	; 0xffc <GPS_Decode+0x228>
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
     fd4:	90 81       	ld	r25, Z
     fd6:	90 53       	subi	r25, 0x30	; 48
     fd8:	d7 01       	movw	r26, r14
     fda:	50 96       	adiw	r26, 0x10	; 16
     fdc:	8c 91       	ld	r24, X
     fde:	bc 81       	ldd	r27, Y+4	; 0x04
     fe0:	9b 9f       	mul	r25, r27
     fe2:	80 0d       	add	r24, r0
     fe4:	11 24       	eor	r1, r1
     fe6:	d7 01       	movw	r26, r14
     fe8:	50 96       	adiw	r26, 0x10	; 16
     fea:	8c 93       	st	X, r24
									LonHour /= 10;
     fec:	bc 81       	ldd	r27, Y+4	; 0x04
     fee:	b2 9d       	mul	r27, r2
     ff0:	81 2d       	mov	r24, r1
     ff2:	11 24       	eor	r1, r1
     ff4:	86 95       	lsr	r24
     ff6:	86 95       	lsr	r24
     ff8:	86 95       	lsr	r24
     ffa:	8c 83       	std	Y+4, r24	; 0x04
								}
								if((LonCount>=5))
     ffc:	24 e0       	ldi	r18, 0x04	; 4
     ffe:	2c 15       	cp	r18, r12
    1000:	18 f5       	brcc	.+70     	; 0x1048 <GPS_Decode+0x274>
								{
									GPS_Data->LON += (msg[i]-48) * LonMin;
    1002:	a0 81       	ld	r26, Z
    1004:	b0 e0       	ldi	r27, 0x00	; 0
    1006:	d0 97       	sbiw	r26, 0x30	; 48
    1008:	a3 01       	movw	r20, r6
    100a:	92 01       	movw	r18, r4
    100c:	0e 94 d5 0f 	call	0x1faa	; 0x1faa <__mulshisi3>
    1010:	d7 01       	movw	r26, r14
    1012:	51 96       	adiw	r26, 0x11	; 17
    1014:	2d 91       	ld	r18, X+
    1016:	3d 91       	ld	r19, X+
    1018:	4d 91       	ld	r20, X+
    101a:	5c 91       	ld	r21, X
    101c:	54 97       	sbiw	r26, 0x14	; 20
    101e:	dc 01       	movw	r26, r24
    1020:	cb 01       	movw	r24, r22
    1022:	82 0f       	add	r24, r18
    1024:	93 1f       	adc	r25, r19
    1026:	a4 1f       	adc	r26, r20
    1028:	b5 1f       	adc	r27, r21
    102a:	f7 01       	movw	r30, r14
    102c:	81 8b       	std	Z+17, r24	; 0x11
    102e:	92 8b       	std	Z+18, r25	; 0x12
    1030:	a3 8b       	std	Z+19, r26	; 0x13
    1032:	b4 8b       	std	Z+20, r27	; 0x14
									LonMin /= 10;
    1034:	c3 01       	movw	r24, r6
    1036:	b2 01       	movw	r22, r4
    1038:	2a e0       	ldi	r18, 0x0A	; 10
    103a:	30 e0       	ldi	r19, 0x00	; 0
    103c:	40 e0       	ldi	r20, 0x00	; 0
    103e:	50 e0       	ldi	r21, 0x00	; 0
    1040:	0e 94 b3 0f 	call	0x1f66	; 0x1f66 <__udivmodsi4>
    1044:	29 01       	movw	r4, r18
    1046:	3a 01       	movw	r6, r20
								}
								LonCount++;	
    1048:	c3 94       	inc	r12
							}
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
						{
							if(msg[i]>='A' && msg[i]<='Z')
    104a:	f8 01       	movw	r30, r16
    104c:	2d 81       	ldd	r18, Y+5	; 0x05
    104e:	e2 0f       	add	r30, r18
    1050:	f1 1d       	adc	r31, r1
    1052:	80 81       	ld	r24, Z
    1054:	9f eb       	ldi	r25, 0xBF	; 191
    1056:	98 0f       	add	r25, r24
    1058:	9a 31       	cpi	r25, 0x1A	; 26
    105a:	40 f5       	brcc	.+80     	; 0x10ac <GPS_Decode+0x2d8>
							{
								GPS_Data->LONdir = msg[i];
    105c:	d7 01       	movw	r26, r14
    105e:	5d 96       	adiw	r26, 0x1d	; 29
    1060:	8c 93       	st	X, r24
    1062:	24 c0       	rjmp	.+72     	; 0x10ac <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
    1064:	f8 01       	movw	r30, r16
    1066:	bd 81       	ldd	r27, Y+5	; 0x05
    1068:	eb 0f       	add	r30, r27
    106a:	f1 1d       	adc	r31, r1
    106c:	80 81       	ld	r24, Z
    106e:	80 53       	subi	r24, 0x30	; 48
    1070:	86 30       	cpi	r24, 0x06	; 6
    1072:	e0 f4       	brcc	.+56     	; 0x10ac <GPS_Decode+0x2d8>
							{
								GPS_Data->quality = msg[i] - 48;
    1074:	f7 01       	movw	r30, r14
    1076:	86 8f       	std	Z+30, r24	; 0x1e
    1078:	19 c0       	rjmp	.+50     	; 0x10ac <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 13: //AGE
						{
							if((msg[i] != '.') && (msg[i] != ','))
    107a:	f8 01       	movw	r30, r16
    107c:	2d 81       	ldd	r18, Y+5	; 0x05
    107e:	e2 0f       	add	r30, r18
    1080:	f1 1d       	adc	r31, r1
    1082:	80 81       	ld	r24, Z
    1084:	98 2f       	mov	r25, r24
    1086:	9d 7f       	andi	r25, 0xFD	; 253
    1088:	9c 32       	cpi	r25, 0x2C	; 44
    108a:	81 f0       	breq	.+32     	; 0x10ac <GPS_Decode+0x2d8>
							{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
    108c:	80 53       	subi	r24, 0x30	; 48
    108e:	d7 01       	movw	r26, r14
    1090:	5f 96       	adiw	r26, 0x1f	; 31
    1092:	9c 91       	ld	r25, X
    1094:	5f 97       	sbiw	r26, 0x1f	; 31
    1096:	83 9d       	mul	r24, r3
    1098:	90 0d       	add	r25, r0
    109a:	11 24       	eor	r1, r1
    109c:	5f 96       	adiw	r26, 0x1f	; 31
    109e:	9c 93       	st	X, r25
							age /= 10;
    10a0:	32 9c       	mul	r3, r2
    10a2:	31 2c       	mov	r3, r1
    10a4:	11 24       	eor	r1, r1
    10a6:	36 94       	lsr	r3
    10a8:	36 94       	lsr	r3
    10aa:	36 94       	lsr	r3
							}
							break;
						}
					}
					///////////COMMA SWITCH END!////////////////////////
					i++;
    10ac:	bd 81       	ldd	r27, Y+5	; 0x05
    10ae:	bf 5f       	subi	r27, 0xFF	; 255
    10b0:	bd 83       	std	Y+5, r27	; 0x05
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
    10b2:	f8 01       	movw	r30, r16
    10b4:	eb 0f       	add	r30, r27
    10b6:	f1 1d       	adc	r31, r1
    10b8:	80 81       	ld	r24, Z
    10ba:	8a 32       	cpi	r24, 0x2A	; 42
    10bc:	09 f0       	breq	.+2      	; 0x10c0 <GPS_Decode+0x2ec>
    10be:	de ce       	rjmp	.-580    	; 0xe7c <GPS_Decode+0xa8>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		convert(GPS_Data);
    10c0:	c7 01       	movw	r24, r14
    10c2:	0e 94 29 06 	call	0xc52	; 0xc52 <convert>
		return 1;
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	02 c0       	rjmp	.+4      	; 0x10d0 <GPS_Decode+0x2fc>
	}
	else
	{
		return 0;
    10cc:	80 e0       	ldi	r24, 0x00	; 0
    10ce:	90 e0       	ldi	r25, 0x00	; 0
	}
    10d0:	26 96       	adiw	r28, 0x06	; 6
    10d2:	0f b6       	in	r0, 0x3f	; 63
    10d4:	f8 94       	cli
    10d6:	de bf       	out	0x3e, r29	; 62
    10d8:	0f be       	out	0x3f, r0	; 63
    10da:	cd bf       	out	0x3d, r28	; 61
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	1f 91       	pop	r17
    10e2:	0f 91       	pop	r16
    10e4:	ff 90       	pop	r15
    10e6:	ef 90       	pop	r14
    10e8:	df 90       	pop	r13
    10ea:	cf 90       	pop	r12
    10ec:	bf 90       	pop	r11
    10ee:	af 90       	pop	r10
    10f0:	9f 90       	pop	r9
    10f2:	8f 90       	pop	r8
    10f4:	7f 90       	pop	r7
    10f6:	6f 90       	pop	r6
    10f8:	5f 90       	pop	r5
    10fa:	4f 90       	pop	r4
    10fc:	3f 90       	pop	r3
    10fe:	2f 90       	pop	r2
    1100:	08 95       	ret

00001102 <__vector_18>:
	UCSR0C = ((1<<UCSZ00)|(1<<UCSZ01));
}


ISR(USART_RX_vect)
{		
    1102:	1f 92       	push	r1
    1104:	0f 92       	push	r0
    1106:	0f b6       	in	r0, 0x3f	; 63
    1108:	0f 92       	push	r0
    110a:	11 24       	eor	r1, r1
    110c:	2f 93       	push	r18
    110e:	3f 93       	push	r19
    1110:	4f 93       	push	r20
    1112:	5f 93       	push	r21
    1114:	6f 93       	push	r22
    1116:	7f 93       	push	r23
    1118:	8f 93       	push	r24
    111a:	9f 93       	push	r25
    111c:	af 93       	push	r26
    111e:	bf 93       	push	r27
    1120:	ef 93       	push	r30
    1122:	ff 93       	push	r31
	read_gps_data();
    1124:	0e 94 21 01 	call	0x242	; 0x242 <read_gps_data>
    1128:	ff 91       	pop	r31
    112a:	ef 91       	pop	r30
    112c:	bf 91       	pop	r27
    112e:	af 91       	pop	r26
    1130:	9f 91       	pop	r25
    1132:	8f 91       	pop	r24
    1134:	7f 91       	pop	r23
    1136:	6f 91       	pop	r22
    1138:	5f 91       	pop	r21
    113a:	4f 91       	pop	r20
    113c:	3f 91       	pop	r19
    113e:	2f 91       	pop	r18
    1140:	0f 90       	pop	r0
    1142:	0f be       	out	0x3f, r0	; 63
    1144:	0f 90       	pop	r0
    1146:	1f 90       	pop	r1
    1148:	18 95       	reti

0000114a <__subsf3>:
    114a:	50 58       	subi	r21, 0x80	; 128

0000114c <__addsf3>:
    114c:	bb 27       	eor	r27, r27
    114e:	aa 27       	eor	r26, r26
    1150:	0e 94 bd 08 	call	0x117a	; 0x117a <__addsf3x>
    1154:	0c 94 00 0b 	jmp	0x1600	; 0x1600 <__fp_round>
    1158:	0e 94 c7 0a 	call	0x158e	; 0x158e <__fp_pscA>
    115c:	38 f0       	brcs	.+14     	; 0x116c <__addsf3+0x20>
    115e:	0e 94 ce 0a 	call	0x159c	; 0x159c <__fp_pscB>
    1162:	20 f0       	brcs	.+8      	; 0x116c <__addsf3+0x20>
    1164:	39 f4       	brne	.+14     	; 0x1174 <__addsf3+0x28>
    1166:	9f 3f       	cpi	r25, 0xFF	; 255
    1168:	19 f4       	brne	.+6      	; 0x1170 <__addsf3+0x24>
    116a:	26 f4       	brtc	.+8      	; 0x1174 <__addsf3+0x28>
    116c:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__fp_nan>
    1170:	0e f4       	brtc	.+2      	; 0x1174 <__addsf3+0x28>
    1172:	e0 95       	com	r30
    1174:	e7 fb       	bst	r30, 7
    1176:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__fp_inf>

0000117a <__addsf3x>:
    117a:	e9 2f       	mov	r30, r25
    117c:	0e 94 25 0b 	call	0x164a	; 0x164a <__fp_split3>
    1180:	58 f3       	brcs	.-42     	; 0x1158 <__addsf3+0xc>
    1182:	ba 17       	cp	r27, r26
    1184:	62 07       	cpc	r22, r18
    1186:	73 07       	cpc	r23, r19
    1188:	84 07       	cpc	r24, r20
    118a:	95 07       	cpc	r25, r21
    118c:	20 f0       	brcs	.+8      	; 0x1196 <__addsf3x+0x1c>
    118e:	79 f4       	brne	.+30     	; 0x11ae <__addsf3x+0x34>
    1190:	a6 f5       	brtc	.+104    	; 0x11fa <__addsf3x+0x80>
    1192:	0c 94 47 0b 	jmp	0x168e	; 0x168e <__fp_zero>
    1196:	0e f4       	brtc	.+2      	; 0x119a <__addsf3x+0x20>
    1198:	e0 95       	com	r30
    119a:	0b 2e       	mov	r0, r27
    119c:	ba 2f       	mov	r27, r26
    119e:	a0 2d       	mov	r26, r0
    11a0:	0b 01       	movw	r0, r22
    11a2:	b9 01       	movw	r22, r18
    11a4:	90 01       	movw	r18, r0
    11a6:	0c 01       	movw	r0, r24
    11a8:	ca 01       	movw	r24, r20
    11aa:	a0 01       	movw	r20, r0
    11ac:	11 24       	eor	r1, r1
    11ae:	ff 27       	eor	r31, r31
    11b0:	59 1b       	sub	r21, r25
    11b2:	99 f0       	breq	.+38     	; 0x11da <__addsf3x+0x60>
    11b4:	59 3f       	cpi	r21, 0xF9	; 249
    11b6:	50 f4       	brcc	.+20     	; 0x11cc <__addsf3x+0x52>
    11b8:	50 3e       	cpi	r21, 0xE0	; 224
    11ba:	68 f1       	brcs	.+90     	; 0x1216 <__addsf3x+0x9c>
    11bc:	1a 16       	cp	r1, r26
    11be:	f0 40       	sbci	r31, 0x00	; 0
    11c0:	a2 2f       	mov	r26, r18
    11c2:	23 2f       	mov	r18, r19
    11c4:	34 2f       	mov	r19, r20
    11c6:	44 27       	eor	r20, r20
    11c8:	58 5f       	subi	r21, 0xF8	; 248
    11ca:	f3 cf       	rjmp	.-26     	; 0x11b2 <__addsf3x+0x38>
    11cc:	46 95       	lsr	r20
    11ce:	37 95       	ror	r19
    11d0:	27 95       	ror	r18
    11d2:	a7 95       	ror	r26
    11d4:	f0 40       	sbci	r31, 0x00	; 0
    11d6:	53 95       	inc	r21
    11d8:	c9 f7       	brne	.-14     	; 0x11cc <__addsf3x+0x52>
    11da:	7e f4       	brtc	.+30     	; 0x11fa <__addsf3x+0x80>
    11dc:	1f 16       	cp	r1, r31
    11de:	ba 0b       	sbc	r27, r26
    11e0:	62 0b       	sbc	r22, r18
    11e2:	73 0b       	sbc	r23, r19
    11e4:	84 0b       	sbc	r24, r20
    11e6:	ba f0       	brmi	.+46     	; 0x1216 <__addsf3x+0x9c>
    11e8:	91 50       	subi	r25, 0x01	; 1
    11ea:	a1 f0       	breq	.+40     	; 0x1214 <__addsf3x+0x9a>
    11ec:	ff 0f       	add	r31, r31
    11ee:	bb 1f       	adc	r27, r27
    11f0:	66 1f       	adc	r22, r22
    11f2:	77 1f       	adc	r23, r23
    11f4:	88 1f       	adc	r24, r24
    11f6:	c2 f7       	brpl	.-16     	; 0x11e8 <__addsf3x+0x6e>
    11f8:	0e c0       	rjmp	.+28     	; 0x1216 <__addsf3x+0x9c>
    11fa:	ba 0f       	add	r27, r26
    11fc:	62 1f       	adc	r22, r18
    11fe:	73 1f       	adc	r23, r19
    1200:	84 1f       	adc	r24, r20
    1202:	48 f4       	brcc	.+18     	; 0x1216 <__addsf3x+0x9c>
    1204:	87 95       	ror	r24
    1206:	77 95       	ror	r23
    1208:	67 95       	ror	r22
    120a:	b7 95       	ror	r27
    120c:	f7 95       	ror	r31
    120e:	9e 3f       	cpi	r25, 0xFE	; 254
    1210:	08 f0       	brcs	.+2      	; 0x1214 <__addsf3x+0x9a>
    1212:	b0 cf       	rjmp	.-160    	; 0x1174 <__addsf3+0x28>
    1214:	93 95       	inc	r25
    1216:	88 0f       	add	r24, r24
    1218:	08 f0       	brcs	.+2      	; 0x121c <__addsf3x+0xa2>
    121a:	99 27       	eor	r25, r25
    121c:	ee 0f       	add	r30, r30
    121e:	97 95       	ror	r25
    1220:	87 95       	ror	r24
    1222:	08 95       	ret
    1224:	0e 94 c7 0a 	call	0x158e	; 0x158e <__fp_pscA>
    1228:	60 f0       	brcs	.+24     	; 0x1242 <__addsf3x+0xc8>
    122a:	80 e8       	ldi	r24, 0x80	; 128
    122c:	91 e0       	ldi	r25, 0x01	; 1
    122e:	09 f4       	brne	.+2      	; 0x1232 <__addsf3x+0xb8>
    1230:	9e ef       	ldi	r25, 0xFE	; 254
    1232:	0e 94 ce 0a 	call	0x159c	; 0x159c <__fp_pscB>
    1236:	28 f0       	brcs	.+10     	; 0x1242 <__addsf3x+0xc8>
    1238:	40 e8       	ldi	r20, 0x80	; 128
    123a:	51 e0       	ldi	r21, 0x01	; 1
    123c:	71 f4       	brne	.+28     	; 0x125a <atan2+0x10>
    123e:	5e ef       	ldi	r21, 0xFE	; 254
    1240:	0c c0       	rjmp	.+24     	; 0x125a <atan2+0x10>
    1242:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__fp_nan>
    1246:	0c 94 47 0b 	jmp	0x168e	; 0x168e <__fp_zero>

0000124a <atan2>:
    124a:	e9 2f       	mov	r30, r25
    124c:	e0 78       	andi	r30, 0x80	; 128
    124e:	0e 94 25 0b 	call	0x164a	; 0x164a <__fp_split3>
    1252:	40 f3       	brcs	.-48     	; 0x1224 <__addsf3x+0xaa>
    1254:	09 2e       	mov	r0, r25
    1256:	05 2a       	or	r0, r21
    1258:	b1 f3       	breq	.-20     	; 0x1246 <__addsf3x+0xcc>
    125a:	26 17       	cp	r18, r22
    125c:	37 07       	cpc	r19, r23
    125e:	48 07       	cpc	r20, r24
    1260:	59 07       	cpc	r21, r25
    1262:	38 f0       	brcs	.+14     	; 0x1272 <atan2+0x28>
    1264:	0e 2e       	mov	r0, r30
    1266:	07 f8       	bld	r0, 7
    1268:	e0 25       	eor	r30, r0
    126a:	69 f0       	breq	.+26     	; 0x1286 <atan2+0x3c>
    126c:	e0 25       	eor	r30, r0
    126e:	e0 64       	ori	r30, 0x40	; 64
    1270:	0a c0       	rjmp	.+20     	; 0x1286 <atan2+0x3c>
    1272:	ef 63       	ori	r30, 0x3F	; 63
    1274:	07 f8       	bld	r0, 7
    1276:	00 94       	com	r0
    1278:	07 fa       	bst	r0, 7
    127a:	db 01       	movw	r26, r22
    127c:	b9 01       	movw	r22, r18
    127e:	9d 01       	movw	r18, r26
    1280:	dc 01       	movw	r26, r24
    1282:	ca 01       	movw	r24, r20
    1284:	ad 01       	movw	r20, r26
    1286:	ef 93       	push	r30
    1288:	0e 94 a5 09 	call	0x134a	; 0x134a <__divsf3_pse>
    128c:	0e 94 00 0b 	call	0x1600	; 0x1600 <__fp_round>
    1290:	0e 94 55 09 	call	0x12aa	; 0x12aa <atan>
    1294:	5f 91       	pop	r21
    1296:	55 23       	and	r21, r21
    1298:	39 f0       	breq	.+14     	; 0x12a8 <atan2+0x5e>
    129a:	2b ed       	ldi	r18, 0xDB	; 219
    129c:	3f e0       	ldi	r19, 0x0F	; 15
    129e:	49 e4       	ldi	r20, 0x49	; 73
    12a0:	50 fd       	sbrc	r21, 0
    12a2:	49 ec       	ldi	r20, 0xC9	; 201
    12a4:	0c 94 a6 08 	jmp	0x114c	; 0x114c <__addsf3>
    12a8:	08 95       	ret

000012aa <atan>:
    12aa:	df 93       	push	r29
    12ac:	dd 27       	eor	r29, r29
    12ae:	b9 2f       	mov	r27, r25
    12b0:	bf 77       	andi	r27, 0x7F	; 127
    12b2:	40 e8       	ldi	r20, 0x80	; 128
    12b4:	5f e3       	ldi	r21, 0x3F	; 63
    12b6:	16 16       	cp	r1, r22
    12b8:	17 06       	cpc	r1, r23
    12ba:	48 07       	cpc	r20, r24
    12bc:	5b 07       	cpc	r21, r27
    12be:	18 f4       	brcc	.+6      	; 0x12c6 <atan+0x1c>
    12c0:	d9 2f       	mov	r29, r25
    12c2:	0e 94 4e 0b 	call	0x169c	; 0x169c <inverse>
    12c6:	9f 93       	push	r25
    12c8:	8f 93       	push	r24
    12ca:	7f 93       	push	r23
    12cc:	6f 93       	push	r22
    12ce:	0e 94 09 0c 	call	0x1812	; 0x1812 <square>
    12d2:	e8 e6       	ldi	r30, 0x68	; 104
    12d4:	f0 e0       	ldi	r31, 0x00	; 0
    12d6:	0e 94 a0 0a 	call	0x1540	; 0x1540 <__fp_powser>
    12da:	0e 94 00 0b 	call	0x1600	; 0x1600 <__fp_round>
    12de:	2f 91       	pop	r18
    12e0:	3f 91       	pop	r19
    12e2:	4f 91       	pop	r20
    12e4:	5f 91       	pop	r21
    12e6:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__mulsf3x>
    12ea:	dd 23       	and	r29, r29
    12ec:	51 f0       	breq	.+20     	; 0x1302 <atan+0x58>
    12ee:	90 58       	subi	r25, 0x80	; 128
    12f0:	a2 ea       	ldi	r26, 0xA2	; 162
    12f2:	2a ed       	ldi	r18, 0xDA	; 218
    12f4:	3f e0       	ldi	r19, 0x0F	; 15
    12f6:	49 ec       	ldi	r20, 0xC9	; 201
    12f8:	5f e3       	ldi	r21, 0x3F	; 63
    12fa:	d0 78       	andi	r29, 0x80	; 128
    12fc:	5d 27       	eor	r21, r29
    12fe:	0e 94 bd 08 	call	0x117a	; 0x117a <__addsf3x>
    1302:	df 91       	pop	r29
    1304:	0c 94 00 0b 	jmp	0x1600	; 0x1600 <__fp_round>

00001308 <__cmpsf2>:
    1308:	0e 94 73 0a 	call	0x14e6	; 0x14e6 <__fp_cmp>
    130c:	08 f4       	brcc	.+2      	; 0x1310 <__cmpsf2+0x8>
    130e:	81 e0       	ldi	r24, 0x01	; 1
    1310:	08 95       	ret

00001312 <cos>:
    1312:	0e 94 d7 0a 	call	0x15ae	; 0x15ae <__fp_rempio2>
    1316:	e3 95       	inc	r30
    1318:	0c 94 11 0b 	jmp	0x1622	; 0x1622 <__fp_sinus>

0000131c <__divsf3>:
    131c:	0e 94 a2 09 	call	0x1344	; 0x1344 <__divsf3x>
    1320:	0c 94 00 0b 	jmp	0x1600	; 0x1600 <__fp_round>
    1324:	0e 94 ce 0a 	call	0x159c	; 0x159c <__fp_pscB>
    1328:	58 f0       	brcs	.+22     	; 0x1340 <__divsf3+0x24>
    132a:	0e 94 c7 0a 	call	0x158e	; 0x158e <__fp_pscA>
    132e:	40 f0       	brcs	.+16     	; 0x1340 <__divsf3+0x24>
    1330:	29 f4       	brne	.+10     	; 0x133c <__divsf3+0x20>
    1332:	5f 3f       	cpi	r21, 0xFF	; 255
    1334:	29 f0       	breq	.+10     	; 0x1340 <__divsf3+0x24>
    1336:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__fp_inf>
    133a:	51 11       	cpse	r21, r1
    133c:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__fp_szero>
    1340:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__fp_nan>

00001344 <__divsf3x>:
    1344:	0e 94 25 0b 	call	0x164a	; 0x164a <__fp_split3>
    1348:	68 f3       	brcs	.-38     	; 0x1324 <__divsf3+0x8>

0000134a <__divsf3_pse>:
    134a:	99 23       	and	r25, r25
    134c:	b1 f3       	breq	.-20     	; 0x133a <__divsf3+0x1e>
    134e:	55 23       	and	r21, r21
    1350:	91 f3       	breq	.-28     	; 0x1336 <__divsf3+0x1a>
    1352:	95 1b       	sub	r25, r21
    1354:	55 0b       	sbc	r21, r21
    1356:	bb 27       	eor	r27, r27
    1358:	aa 27       	eor	r26, r26
    135a:	62 17       	cp	r22, r18
    135c:	73 07       	cpc	r23, r19
    135e:	84 07       	cpc	r24, r20
    1360:	38 f0       	brcs	.+14     	; 0x1370 <__divsf3_pse+0x26>
    1362:	9f 5f       	subi	r25, 0xFF	; 255
    1364:	5f 4f       	sbci	r21, 0xFF	; 255
    1366:	22 0f       	add	r18, r18
    1368:	33 1f       	adc	r19, r19
    136a:	44 1f       	adc	r20, r20
    136c:	aa 1f       	adc	r26, r26
    136e:	a9 f3       	breq	.-22     	; 0x135a <__divsf3_pse+0x10>
    1370:	35 d0       	rcall	.+106    	; 0x13dc <__divsf3_pse+0x92>
    1372:	0e 2e       	mov	r0, r30
    1374:	3a f0       	brmi	.+14     	; 0x1384 <__divsf3_pse+0x3a>
    1376:	e0 e8       	ldi	r30, 0x80	; 128
    1378:	32 d0       	rcall	.+100    	; 0x13de <__divsf3_pse+0x94>
    137a:	91 50       	subi	r25, 0x01	; 1
    137c:	50 40       	sbci	r21, 0x00	; 0
    137e:	e6 95       	lsr	r30
    1380:	00 1c       	adc	r0, r0
    1382:	ca f7       	brpl	.-14     	; 0x1376 <__divsf3_pse+0x2c>
    1384:	2b d0       	rcall	.+86     	; 0x13dc <__divsf3_pse+0x92>
    1386:	fe 2f       	mov	r31, r30
    1388:	29 d0       	rcall	.+82     	; 0x13dc <__divsf3_pse+0x92>
    138a:	66 0f       	add	r22, r22
    138c:	77 1f       	adc	r23, r23
    138e:	88 1f       	adc	r24, r24
    1390:	bb 1f       	adc	r27, r27
    1392:	26 17       	cp	r18, r22
    1394:	37 07       	cpc	r19, r23
    1396:	48 07       	cpc	r20, r24
    1398:	ab 07       	cpc	r26, r27
    139a:	b0 e8       	ldi	r27, 0x80	; 128
    139c:	09 f0       	breq	.+2      	; 0x13a0 <__divsf3_pse+0x56>
    139e:	bb 0b       	sbc	r27, r27
    13a0:	80 2d       	mov	r24, r0
    13a2:	bf 01       	movw	r22, r30
    13a4:	ff 27       	eor	r31, r31
    13a6:	93 58       	subi	r25, 0x83	; 131
    13a8:	5f 4f       	sbci	r21, 0xFF	; 255
    13aa:	3a f0       	brmi	.+14     	; 0x13ba <__divsf3_pse+0x70>
    13ac:	9e 3f       	cpi	r25, 0xFE	; 254
    13ae:	51 05       	cpc	r21, r1
    13b0:	78 f0       	brcs	.+30     	; 0x13d0 <__divsf3_pse+0x86>
    13b2:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__fp_inf>
    13b6:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__fp_szero>
    13ba:	5f 3f       	cpi	r21, 0xFF	; 255
    13bc:	e4 f3       	brlt	.-8      	; 0x13b6 <__divsf3_pse+0x6c>
    13be:	98 3e       	cpi	r25, 0xE8	; 232
    13c0:	d4 f3       	brlt	.-12     	; 0x13b6 <__divsf3_pse+0x6c>
    13c2:	86 95       	lsr	r24
    13c4:	77 95       	ror	r23
    13c6:	67 95       	ror	r22
    13c8:	b7 95       	ror	r27
    13ca:	f7 95       	ror	r31
    13cc:	9f 5f       	subi	r25, 0xFF	; 255
    13ce:	c9 f7       	brne	.-14     	; 0x13c2 <__divsf3_pse+0x78>
    13d0:	88 0f       	add	r24, r24
    13d2:	91 1d       	adc	r25, r1
    13d4:	96 95       	lsr	r25
    13d6:	87 95       	ror	r24
    13d8:	97 f9       	bld	r25, 7
    13da:	08 95       	ret
    13dc:	e1 e0       	ldi	r30, 0x01	; 1
    13de:	66 0f       	add	r22, r22
    13e0:	77 1f       	adc	r23, r23
    13e2:	88 1f       	adc	r24, r24
    13e4:	bb 1f       	adc	r27, r27
    13e6:	62 17       	cp	r22, r18
    13e8:	73 07       	cpc	r23, r19
    13ea:	84 07       	cpc	r24, r20
    13ec:	ba 07       	cpc	r27, r26
    13ee:	20 f0       	brcs	.+8      	; 0x13f8 <__divsf3_pse+0xae>
    13f0:	62 1b       	sub	r22, r18
    13f2:	73 0b       	sbc	r23, r19
    13f4:	84 0b       	sbc	r24, r20
    13f6:	ba 0b       	sbc	r27, r26
    13f8:	ee 1f       	adc	r30, r30
    13fa:	88 f7       	brcc	.-30     	; 0x13de <__divsf3_pse+0x94>
    13fc:	e0 95       	com	r30
    13fe:	08 95       	ret

00001400 <__fixsfsi>:
    1400:	0e 94 07 0a 	call	0x140e	; 0x140e <__fixunssfsi>
    1404:	68 94       	set
    1406:	b1 11       	cpse	r27, r1
    1408:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__fp_szero>
    140c:	08 95       	ret

0000140e <__fixunssfsi>:
    140e:	0e 94 2d 0b 	call	0x165a	; 0x165a <__fp_splitA>
    1412:	88 f0       	brcs	.+34     	; 0x1436 <__fixunssfsi+0x28>
    1414:	9f 57       	subi	r25, 0x7F	; 127
    1416:	98 f0       	brcs	.+38     	; 0x143e <__fixunssfsi+0x30>
    1418:	b9 2f       	mov	r27, r25
    141a:	99 27       	eor	r25, r25
    141c:	b7 51       	subi	r27, 0x17	; 23
    141e:	b0 f0       	brcs	.+44     	; 0x144c <__fixunssfsi+0x3e>
    1420:	e1 f0       	breq	.+56     	; 0x145a <__fixunssfsi+0x4c>
    1422:	66 0f       	add	r22, r22
    1424:	77 1f       	adc	r23, r23
    1426:	88 1f       	adc	r24, r24
    1428:	99 1f       	adc	r25, r25
    142a:	1a f0       	brmi	.+6      	; 0x1432 <__fixunssfsi+0x24>
    142c:	ba 95       	dec	r27
    142e:	c9 f7       	brne	.-14     	; 0x1422 <__fixunssfsi+0x14>
    1430:	14 c0       	rjmp	.+40     	; 0x145a <__fixunssfsi+0x4c>
    1432:	b1 30       	cpi	r27, 0x01	; 1
    1434:	91 f0       	breq	.+36     	; 0x145a <__fixunssfsi+0x4c>
    1436:	0e 94 47 0b 	call	0x168e	; 0x168e <__fp_zero>
    143a:	b1 e0       	ldi	r27, 0x01	; 1
    143c:	08 95       	ret
    143e:	0c 94 47 0b 	jmp	0x168e	; 0x168e <__fp_zero>
    1442:	67 2f       	mov	r22, r23
    1444:	78 2f       	mov	r23, r24
    1446:	88 27       	eor	r24, r24
    1448:	b8 5f       	subi	r27, 0xF8	; 248
    144a:	39 f0       	breq	.+14     	; 0x145a <__fixunssfsi+0x4c>
    144c:	b9 3f       	cpi	r27, 0xF9	; 249
    144e:	cc f3       	brlt	.-14     	; 0x1442 <__fixunssfsi+0x34>
    1450:	86 95       	lsr	r24
    1452:	77 95       	ror	r23
    1454:	67 95       	ror	r22
    1456:	b3 95       	inc	r27
    1458:	d9 f7       	brne	.-10     	; 0x1450 <__fixunssfsi+0x42>
    145a:	3e f4       	brtc	.+14     	; 0x146a <__fixunssfsi+0x5c>
    145c:	90 95       	com	r25
    145e:	80 95       	com	r24
    1460:	70 95       	com	r23
    1462:	61 95       	neg	r22
    1464:	7f 4f       	sbci	r23, 0xFF	; 255
    1466:	8f 4f       	sbci	r24, 0xFF	; 255
    1468:	9f 4f       	sbci	r25, 0xFF	; 255
    146a:	08 95       	ret

0000146c <__floatunsisf>:
    146c:	e8 94       	clt
    146e:	09 c0       	rjmp	.+18     	; 0x1482 <__floatsisf+0x12>

00001470 <__floatsisf>:
    1470:	97 fb       	bst	r25, 7
    1472:	3e f4       	brtc	.+14     	; 0x1482 <__floatsisf+0x12>
    1474:	90 95       	com	r25
    1476:	80 95       	com	r24
    1478:	70 95       	com	r23
    147a:	61 95       	neg	r22
    147c:	7f 4f       	sbci	r23, 0xFF	; 255
    147e:	8f 4f       	sbci	r24, 0xFF	; 255
    1480:	9f 4f       	sbci	r25, 0xFF	; 255
    1482:	99 23       	and	r25, r25
    1484:	a9 f0       	breq	.+42     	; 0x14b0 <__floatsisf+0x40>
    1486:	f9 2f       	mov	r31, r25
    1488:	96 e9       	ldi	r25, 0x96	; 150
    148a:	bb 27       	eor	r27, r27
    148c:	93 95       	inc	r25
    148e:	f6 95       	lsr	r31
    1490:	87 95       	ror	r24
    1492:	77 95       	ror	r23
    1494:	67 95       	ror	r22
    1496:	b7 95       	ror	r27
    1498:	f1 11       	cpse	r31, r1
    149a:	f8 cf       	rjmp	.-16     	; 0x148c <__floatsisf+0x1c>
    149c:	fa f4       	brpl	.+62     	; 0x14dc <__floatsisf+0x6c>
    149e:	bb 0f       	add	r27, r27
    14a0:	11 f4       	brne	.+4      	; 0x14a6 <__floatsisf+0x36>
    14a2:	60 ff       	sbrs	r22, 0
    14a4:	1b c0       	rjmp	.+54     	; 0x14dc <__floatsisf+0x6c>
    14a6:	6f 5f       	subi	r22, 0xFF	; 255
    14a8:	7f 4f       	sbci	r23, 0xFF	; 255
    14aa:	8f 4f       	sbci	r24, 0xFF	; 255
    14ac:	9f 4f       	sbci	r25, 0xFF	; 255
    14ae:	16 c0       	rjmp	.+44     	; 0x14dc <__floatsisf+0x6c>
    14b0:	88 23       	and	r24, r24
    14b2:	11 f0       	breq	.+4      	; 0x14b8 <__floatsisf+0x48>
    14b4:	96 e9       	ldi	r25, 0x96	; 150
    14b6:	11 c0       	rjmp	.+34     	; 0x14da <__floatsisf+0x6a>
    14b8:	77 23       	and	r23, r23
    14ba:	21 f0       	breq	.+8      	; 0x14c4 <__floatsisf+0x54>
    14bc:	9e e8       	ldi	r25, 0x8E	; 142
    14be:	87 2f       	mov	r24, r23
    14c0:	76 2f       	mov	r23, r22
    14c2:	05 c0       	rjmp	.+10     	; 0x14ce <__floatsisf+0x5e>
    14c4:	66 23       	and	r22, r22
    14c6:	71 f0       	breq	.+28     	; 0x14e4 <__floatsisf+0x74>
    14c8:	96 e8       	ldi	r25, 0x86	; 134
    14ca:	86 2f       	mov	r24, r22
    14cc:	70 e0       	ldi	r23, 0x00	; 0
    14ce:	60 e0       	ldi	r22, 0x00	; 0
    14d0:	2a f0       	brmi	.+10     	; 0x14dc <__floatsisf+0x6c>
    14d2:	9a 95       	dec	r25
    14d4:	66 0f       	add	r22, r22
    14d6:	77 1f       	adc	r23, r23
    14d8:	88 1f       	adc	r24, r24
    14da:	da f7       	brpl	.-10     	; 0x14d2 <__floatsisf+0x62>
    14dc:	88 0f       	add	r24, r24
    14de:	96 95       	lsr	r25
    14e0:	87 95       	ror	r24
    14e2:	97 f9       	bld	r25, 7
    14e4:	08 95       	ret

000014e6 <__fp_cmp>:
    14e6:	99 0f       	add	r25, r25
    14e8:	00 08       	sbc	r0, r0
    14ea:	55 0f       	add	r21, r21
    14ec:	aa 0b       	sbc	r26, r26
    14ee:	e0 e8       	ldi	r30, 0x80	; 128
    14f0:	fe ef       	ldi	r31, 0xFE	; 254
    14f2:	16 16       	cp	r1, r22
    14f4:	17 06       	cpc	r1, r23
    14f6:	e8 07       	cpc	r30, r24
    14f8:	f9 07       	cpc	r31, r25
    14fa:	c0 f0       	brcs	.+48     	; 0x152c <__fp_cmp+0x46>
    14fc:	12 16       	cp	r1, r18
    14fe:	13 06       	cpc	r1, r19
    1500:	e4 07       	cpc	r30, r20
    1502:	f5 07       	cpc	r31, r21
    1504:	98 f0       	brcs	.+38     	; 0x152c <__fp_cmp+0x46>
    1506:	62 1b       	sub	r22, r18
    1508:	73 0b       	sbc	r23, r19
    150a:	84 0b       	sbc	r24, r20
    150c:	95 0b       	sbc	r25, r21
    150e:	39 f4       	brne	.+14     	; 0x151e <__fp_cmp+0x38>
    1510:	0a 26       	eor	r0, r26
    1512:	61 f0       	breq	.+24     	; 0x152c <__fp_cmp+0x46>
    1514:	23 2b       	or	r18, r19
    1516:	24 2b       	or	r18, r20
    1518:	25 2b       	or	r18, r21
    151a:	21 f4       	brne	.+8      	; 0x1524 <__fp_cmp+0x3e>
    151c:	08 95       	ret
    151e:	0a 26       	eor	r0, r26
    1520:	09 f4       	brne	.+2      	; 0x1524 <__fp_cmp+0x3e>
    1522:	a1 40       	sbci	r26, 0x01	; 1
    1524:	a6 95       	lsr	r26
    1526:	8f ef       	ldi	r24, 0xFF	; 255
    1528:	81 1d       	adc	r24, r1
    152a:	81 1d       	adc	r24, r1
    152c:	08 95       	ret

0000152e <__fp_inf>:
    152e:	97 f9       	bld	r25, 7
    1530:	9f 67       	ori	r25, 0x7F	; 127
    1532:	80 e8       	ldi	r24, 0x80	; 128
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	60 e0       	ldi	r22, 0x00	; 0
    1538:	08 95       	ret

0000153a <__fp_nan>:
    153a:	9f ef       	ldi	r25, 0xFF	; 255
    153c:	80 ec       	ldi	r24, 0xC0	; 192
    153e:	08 95       	ret

00001540 <__fp_powser>:
    1540:	df 93       	push	r29
    1542:	cf 93       	push	r28
    1544:	1f 93       	push	r17
    1546:	0f 93       	push	r16
    1548:	ff 92       	push	r15
    154a:	ef 92       	push	r14
    154c:	df 92       	push	r13
    154e:	7b 01       	movw	r14, r22
    1550:	8c 01       	movw	r16, r24
    1552:	68 94       	set
    1554:	06 c0       	rjmp	.+12     	; 0x1562 <__fp_powser+0x22>
    1556:	da 2e       	mov	r13, r26
    1558:	ef 01       	movw	r28, r30
    155a:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__mulsf3x>
    155e:	fe 01       	movw	r30, r28
    1560:	e8 94       	clt
    1562:	a5 91       	lpm	r26, Z+
    1564:	25 91       	lpm	r18, Z+
    1566:	35 91       	lpm	r19, Z+
    1568:	45 91       	lpm	r20, Z+
    156a:	55 91       	lpm	r21, Z+
    156c:	a6 f3       	brts	.-24     	; 0x1556 <__fp_powser+0x16>
    156e:	ef 01       	movw	r28, r30
    1570:	0e 94 bd 08 	call	0x117a	; 0x117a <__addsf3x>
    1574:	fe 01       	movw	r30, r28
    1576:	97 01       	movw	r18, r14
    1578:	a8 01       	movw	r20, r16
    157a:	da 94       	dec	r13
    157c:	69 f7       	brne	.-38     	; 0x1558 <__fp_powser+0x18>
    157e:	df 90       	pop	r13
    1580:	ef 90       	pop	r14
    1582:	ff 90       	pop	r15
    1584:	0f 91       	pop	r16
    1586:	1f 91       	pop	r17
    1588:	cf 91       	pop	r28
    158a:	df 91       	pop	r29
    158c:	08 95       	ret

0000158e <__fp_pscA>:
    158e:	00 24       	eor	r0, r0
    1590:	0a 94       	dec	r0
    1592:	16 16       	cp	r1, r22
    1594:	17 06       	cpc	r1, r23
    1596:	18 06       	cpc	r1, r24
    1598:	09 06       	cpc	r0, r25
    159a:	08 95       	ret

0000159c <__fp_pscB>:
    159c:	00 24       	eor	r0, r0
    159e:	0a 94       	dec	r0
    15a0:	12 16       	cp	r1, r18
    15a2:	13 06       	cpc	r1, r19
    15a4:	14 06       	cpc	r1, r20
    15a6:	05 06       	cpc	r0, r21
    15a8:	08 95       	ret
    15aa:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__fp_nan>

000015ae <__fp_rempio2>:
    15ae:	0e 94 2d 0b 	call	0x165a	; 0x165a <__fp_splitA>
    15b2:	d8 f3       	brcs	.-10     	; 0x15aa <__fp_pscB+0xe>
    15b4:	e8 94       	clt
    15b6:	e0 e0       	ldi	r30, 0x00	; 0
    15b8:	bb 27       	eor	r27, r27
    15ba:	9f 57       	subi	r25, 0x7F	; 127
    15bc:	f0 f0       	brcs	.+60     	; 0x15fa <__fp_rempio2+0x4c>
    15be:	2a ed       	ldi	r18, 0xDA	; 218
    15c0:	3f e0       	ldi	r19, 0x0F	; 15
    15c2:	49 ec       	ldi	r20, 0xC9	; 201
    15c4:	06 c0       	rjmp	.+12     	; 0x15d2 <__fp_rempio2+0x24>
    15c6:	ee 0f       	add	r30, r30
    15c8:	bb 0f       	add	r27, r27
    15ca:	66 1f       	adc	r22, r22
    15cc:	77 1f       	adc	r23, r23
    15ce:	88 1f       	adc	r24, r24
    15d0:	28 f0       	brcs	.+10     	; 0x15dc <__fp_rempio2+0x2e>
    15d2:	b2 3a       	cpi	r27, 0xA2	; 162
    15d4:	62 07       	cpc	r22, r18
    15d6:	73 07       	cpc	r23, r19
    15d8:	84 07       	cpc	r24, r20
    15da:	28 f0       	brcs	.+10     	; 0x15e6 <__fp_rempio2+0x38>
    15dc:	b2 5a       	subi	r27, 0xA2	; 162
    15de:	62 0b       	sbc	r22, r18
    15e0:	73 0b       	sbc	r23, r19
    15e2:	84 0b       	sbc	r24, r20
    15e4:	e3 95       	inc	r30
    15e6:	9a 95       	dec	r25
    15e8:	72 f7       	brpl	.-36     	; 0x15c6 <__fp_rempio2+0x18>
    15ea:	80 38       	cpi	r24, 0x80	; 128
    15ec:	30 f4       	brcc	.+12     	; 0x15fa <__fp_rempio2+0x4c>
    15ee:	9a 95       	dec	r25
    15f0:	bb 0f       	add	r27, r27
    15f2:	66 1f       	adc	r22, r22
    15f4:	77 1f       	adc	r23, r23
    15f6:	88 1f       	adc	r24, r24
    15f8:	d2 f7       	brpl	.-12     	; 0x15ee <__fp_rempio2+0x40>
    15fa:	90 48       	sbci	r25, 0x80	; 128
    15fc:	0c 94 0f 0c 	jmp	0x181e	; 0x181e <__fp_mpack_finite>

00001600 <__fp_round>:
    1600:	09 2e       	mov	r0, r25
    1602:	03 94       	inc	r0
    1604:	00 0c       	add	r0, r0
    1606:	11 f4       	brne	.+4      	; 0x160c <__fp_round+0xc>
    1608:	88 23       	and	r24, r24
    160a:	52 f0       	brmi	.+20     	; 0x1620 <__fp_round+0x20>
    160c:	bb 0f       	add	r27, r27
    160e:	40 f4       	brcc	.+16     	; 0x1620 <__fp_round+0x20>
    1610:	bf 2b       	or	r27, r31
    1612:	11 f4       	brne	.+4      	; 0x1618 <__fp_round+0x18>
    1614:	60 ff       	sbrs	r22, 0
    1616:	04 c0       	rjmp	.+8      	; 0x1620 <__fp_round+0x20>
    1618:	6f 5f       	subi	r22, 0xFF	; 255
    161a:	7f 4f       	sbci	r23, 0xFF	; 255
    161c:	8f 4f       	sbci	r24, 0xFF	; 255
    161e:	9f 4f       	sbci	r25, 0xFF	; 255
    1620:	08 95       	ret

00001622 <__fp_sinus>:
    1622:	ef 93       	push	r30
    1624:	e0 ff       	sbrs	r30, 0
    1626:	07 c0       	rjmp	.+14     	; 0x1636 <__fp_sinus+0x14>
    1628:	a2 ea       	ldi	r26, 0xA2	; 162
    162a:	2a ed       	ldi	r18, 0xDA	; 218
    162c:	3f e0       	ldi	r19, 0x0F	; 15
    162e:	49 ec       	ldi	r20, 0xC9	; 201
    1630:	5f eb       	ldi	r21, 0xBF	; 191
    1632:	0e 94 bd 08 	call	0x117a	; 0x117a <__addsf3x>
    1636:	0e 94 00 0b 	call	0x1600	; 0x1600 <__fp_round>
    163a:	0f 90       	pop	r0
    163c:	03 94       	inc	r0
    163e:	01 fc       	sbrc	r0, 1
    1640:	90 58       	subi	r25, 0x80	; 128
    1642:	e5 e9       	ldi	r30, 0x95	; 149
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	0c 94 22 0c 	jmp	0x1844	; 0x1844 <__fp_powsodd>

0000164a <__fp_split3>:
    164a:	57 fd       	sbrc	r21, 7
    164c:	90 58       	subi	r25, 0x80	; 128
    164e:	44 0f       	add	r20, r20
    1650:	55 1f       	adc	r21, r21
    1652:	59 f0       	breq	.+22     	; 0x166a <__fp_splitA+0x10>
    1654:	5f 3f       	cpi	r21, 0xFF	; 255
    1656:	71 f0       	breq	.+28     	; 0x1674 <__fp_splitA+0x1a>
    1658:	47 95       	ror	r20

0000165a <__fp_splitA>:
    165a:	88 0f       	add	r24, r24
    165c:	97 fb       	bst	r25, 7
    165e:	99 1f       	adc	r25, r25
    1660:	61 f0       	breq	.+24     	; 0x167a <__fp_splitA+0x20>
    1662:	9f 3f       	cpi	r25, 0xFF	; 255
    1664:	79 f0       	breq	.+30     	; 0x1684 <__fp_splitA+0x2a>
    1666:	87 95       	ror	r24
    1668:	08 95       	ret
    166a:	12 16       	cp	r1, r18
    166c:	13 06       	cpc	r1, r19
    166e:	14 06       	cpc	r1, r20
    1670:	55 1f       	adc	r21, r21
    1672:	f2 cf       	rjmp	.-28     	; 0x1658 <__fp_split3+0xe>
    1674:	46 95       	lsr	r20
    1676:	f1 df       	rcall	.-30     	; 0x165a <__fp_splitA>
    1678:	08 c0       	rjmp	.+16     	; 0x168a <__fp_splitA+0x30>
    167a:	16 16       	cp	r1, r22
    167c:	17 06       	cpc	r1, r23
    167e:	18 06       	cpc	r1, r24
    1680:	99 1f       	adc	r25, r25
    1682:	f1 cf       	rjmp	.-30     	; 0x1666 <__fp_splitA+0xc>
    1684:	86 95       	lsr	r24
    1686:	71 05       	cpc	r23, r1
    1688:	61 05       	cpc	r22, r1
    168a:	08 94       	sec
    168c:	08 95       	ret

0000168e <__fp_zero>:
    168e:	e8 94       	clt

00001690 <__fp_szero>:
    1690:	bb 27       	eor	r27, r27
    1692:	66 27       	eor	r22, r22
    1694:	77 27       	eor	r23, r23
    1696:	cb 01       	movw	r24, r22
    1698:	97 f9       	bld	r25, 7
    169a:	08 95       	ret

0000169c <inverse>:
    169c:	9b 01       	movw	r18, r22
    169e:	ac 01       	movw	r20, r24
    16a0:	60 e0       	ldi	r22, 0x00	; 0
    16a2:	70 e0       	ldi	r23, 0x00	; 0
    16a4:	80 e8       	ldi	r24, 0x80	; 128
    16a6:	9f e3       	ldi	r25, 0x3F	; 63
    16a8:	0c 94 8e 09 	jmp	0x131c	; 0x131c <__divsf3>

000016ac <__mulsf3>:
    16ac:	0e 94 69 0b 	call	0x16d2	; 0x16d2 <__mulsf3x>
    16b0:	0c 94 00 0b 	jmp	0x1600	; 0x1600 <__fp_round>
    16b4:	0e 94 c7 0a 	call	0x158e	; 0x158e <__fp_pscA>
    16b8:	38 f0       	brcs	.+14     	; 0x16c8 <__mulsf3+0x1c>
    16ba:	0e 94 ce 0a 	call	0x159c	; 0x159c <__fp_pscB>
    16be:	20 f0       	brcs	.+8      	; 0x16c8 <__mulsf3+0x1c>
    16c0:	95 23       	and	r25, r21
    16c2:	11 f0       	breq	.+4      	; 0x16c8 <__mulsf3+0x1c>
    16c4:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__fp_inf>
    16c8:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__fp_nan>
    16cc:	11 24       	eor	r1, r1
    16ce:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__fp_szero>

000016d2 <__mulsf3x>:
    16d2:	0e 94 25 0b 	call	0x164a	; 0x164a <__fp_split3>
    16d6:	70 f3       	brcs	.-36     	; 0x16b4 <__mulsf3+0x8>

000016d8 <__mulsf3_pse>:
    16d8:	95 9f       	mul	r25, r21
    16da:	c1 f3       	breq	.-16     	; 0x16cc <__mulsf3+0x20>
    16dc:	95 0f       	add	r25, r21
    16de:	50 e0       	ldi	r21, 0x00	; 0
    16e0:	55 1f       	adc	r21, r21
    16e2:	62 9f       	mul	r22, r18
    16e4:	f0 01       	movw	r30, r0
    16e6:	72 9f       	mul	r23, r18
    16e8:	bb 27       	eor	r27, r27
    16ea:	f0 0d       	add	r31, r0
    16ec:	b1 1d       	adc	r27, r1
    16ee:	63 9f       	mul	r22, r19
    16f0:	aa 27       	eor	r26, r26
    16f2:	f0 0d       	add	r31, r0
    16f4:	b1 1d       	adc	r27, r1
    16f6:	aa 1f       	adc	r26, r26
    16f8:	64 9f       	mul	r22, r20
    16fa:	66 27       	eor	r22, r22
    16fc:	b0 0d       	add	r27, r0
    16fe:	a1 1d       	adc	r26, r1
    1700:	66 1f       	adc	r22, r22
    1702:	82 9f       	mul	r24, r18
    1704:	22 27       	eor	r18, r18
    1706:	b0 0d       	add	r27, r0
    1708:	a1 1d       	adc	r26, r1
    170a:	62 1f       	adc	r22, r18
    170c:	73 9f       	mul	r23, r19
    170e:	b0 0d       	add	r27, r0
    1710:	a1 1d       	adc	r26, r1
    1712:	62 1f       	adc	r22, r18
    1714:	83 9f       	mul	r24, r19
    1716:	a0 0d       	add	r26, r0
    1718:	61 1d       	adc	r22, r1
    171a:	22 1f       	adc	r18, r18
    171c:	74 9f       	mul	r23, r20
    171e:	33 27       	eor	r19, r19
    1720:	a0 0d       	add	r26, r0
    1722:	61 1d       	adc	r22, r1
    1724:	23 1f       	adc	r18, r19
    1726:	84 9f       	mul	r24, r20
    1728:	60 0d       	add	r22, r0
    172a:	21 1d       	adc	r18, r1
    172c:	82 2f       	mov	r24, r18
    172e:	76 2f       	mov	r23, r22
    1730:	6a 2f       	mov	r22, r26
    1732:	11 24       	eor	r1, r1
    1734:	9f 57       	subi	r25, 0x7F	; 127
    1736:	50 40       	sbci	r21, 0x00	; 0
    1738:	9a f0       	brmi	.+38     	; 0x1760 <__mulsf3_pse+0x88>
    173a:	f1 f0       	breq	.+60     	; 0x1778 <__mulsf3_pse+0xa0>
    173c:	88 23       	and	r24, r24
    173e:	4a f0       	brmi	.+18     	; 0x1752 <__mulsf3_pse+0x7a>
    1740:	ee 0f       	add	r30, r30
    1742:	ff 1f       	adc	r31, r31
    1744:	bb 1f       	adc	r27, r27
    1746:	66 1f       	adc	r22, r22
    1748:	77 1f       	adc	r23, r23
    174a:	88 1f       	adc	r24, r24
    174c:	91 50       	subi	r25, 0x01	; 1
    174e:	50 40       	sbci	r21, 0x00	; 0
    1750:	a9 f7       	brne	.-22     	; 0x173c <__mulsf3_pse+0x64>
    1752:	9e 3f       	cpi	r25, 0xFE	; 254
    1754:	51 05       	cpc	r21, r1
    1756:	80 f0       	brcs	.+32     	; 0x1778 <__mulsf3_pse+0xa0>
    1758:	0c 94 97 0a 	jmp	0x152e	; 0x152e <__fp_inf>
    175c:	0c 94 48 0b 	jmp	0x1690	; 0x1690 <__fp_szero>
    1760:	5f 3f       	cpi	r21, 0xFF	; 255
    1762:	e4 f3       	brlt	.-8      	; 0x175c <__mulsf3_pse+0x84>
    1764:	98 3e       	cpi	r25, 0xE8	; 232
    1766:	d4 f3       	brlt	.-12     	; 0x175c <__mulsf3_pse+0x84>
    1768:	86 95       	lsr	r24
    176a:	77 95       	ror	r23
    176c:	67 95       	ror	r22
    176e:	b7 95       	ror	r27
    1770:	f7 95       	ror	r31
    1772:	e7 95       	ror	r30
    1774:	9f 5f       	subi	r25, 0xFF	; 255
    1776:	c1 f7       	brne	.-16     	; 0x1768 <__mulsf3_pse+0x90>
    1778:	fe 2b       	or	r31, r30
    177a:	88 0f       	add	r24, r24
    177c:	91 1d       	adc	r25, r1
    177e:	96 95       	lsr	r25
    1780:	87 95       	ror	r24
    1782:	97 f9       	bld	r25, 7
    1784:	08 95       	ret
    1786:	19 f4       	brne	.+6      	; 0x178e <__mulsf3_pse+0xb6>
    1788:	16 f4       	brtc	.+4      	; 0x178e <__mulsf3_pse+0xb6>
    178a:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <__fp_nan>
    178e:	0c 94 0d 0c 	jmp	0x181a	; 0x181a <__fp_mpack>

00001792 <sqrt>:
    1792:	0e 94 2d 0b 	call	0x165a	; 0x165a <__fp_splitA>
    1796:	b8 f3       	brcs	.-18     	; 0x1786 <__mulsf3_pse+0xae>
    1798:	99 23       	and	r25, r25
    179a:	c9 f3       	breq	.-14     	; 0x178e <__mulsf3_pse+0xb6>
    179c:	b6 f3       	brts	.-20     	; 0x178a <__mulsf3_pse+0xb2>
    179e:	9f 57       	subi	r25, 0x7F	; 127
    17a0:	55 0b       	sbc	r21, r21
    17a2:	87 ff       	sbrs	r24, 7
    17a4:	0e 94 1b 0c 	call	0x1836	; 0x1836 <__fp_norm2>
    17a8:	00 24       	eor	r0, r0
    17aa:	a0 e6       	ldi	r26, 0x60	; 96
    17ac:	40 ea       	ldi	r20, 0xA0	; 160
    17ae:	90 01       	movw	r18, r0
    17b0:	80 58       	subi	r24, 0x80	; 128
    17b2:	56 95       	lsr	r21
    17b4:	97 95       	ror	r25
    17b6:	28 f4       	brcc	.+10     	; 0x17c2 <sqrt+0x30>
    17b8:	80 5c       	subi	r24, 0xC0	; 192
    17ba:	66 0f       	add	r22, r22
    17bc:	77 1f       	adc	r23, r23
    17be:	88 1f       	adc	r24, r24
    17c0:	20 f0       	brcs	.+8      	; 0x17ca <sqrt+0x38>
    17c2:	26 17       	cp	r18, r22
    17c4:	37 07       	cpc	r19, r23
    17c6:	48 07       	cpc	r20, r24
    17c8:	30 f4       	brcc	.+12     	; 0x17d6 <sqrt+0x44>
    17ca:	62 1b       	sub	r22, r18
    17cc:	73 0b       	sbc	r23, r19
    17ce:	84 0b       	sbc	r24, r20
    17d0:	20 29       	or	r18, r0
    17d2:	31 29       	or	r19, r1
    17d4:	4a 2b       	or	r20, r26
    17d6:	a6 95       	lsr	r26
    17d8:	17 94       	ror	r1
    17da:	07 94       	ror	r0
    17dc:	20 25       	eor	r18, r0
    17de:	31 25       	eor	r19, r1
    17e0:	4a 27       	eor	r20, r26
    17e2:	58 f7       	brcc	.-42     	; 0x17ba <sqrt+0x28>
    17e4:	66 0f       	add	r22, r22
    17e6:	77 1f       	adc	r23, r23
    17e8:	88 1f       	adc	r24, r24
    17ea:	20 f0       	brcs	.+8      	; 0x17f4 <sqrt+0x62>
    17ec:	26 17       	cp	r18, r22
    17ee:	37 07       	cpc	r19, r23
    17f0:	48 07       	cpc	r20, r24
    17f2:	30 f4       	brcc	.+12     	; 0x1800 <sqrt+0x6e>
    17f4:	62 0b       	sbc	r22, r18
    17f6:	73 0b       	sbc	r23, r19
    17f8:	84 0b       	sbc	r24, r20
    17fa:	20 0d       	add	r18, r0
    17fc:	31 1d       	adc	r19, r1
    17fe:	41 1d       	adc	r20, r1
    1800:	a0 95       	com	r26
    1802:	81 f7       	brne	.-32     	; 0x17e4 <sqrt+0x52>
    1804:	b9 01       	movw	r22, r18
    1806:	84 2f       	mov	r24, r20
    1808:	91 58       	subi	r25, 0x81	; 129
    180a:	88 0f       	add	r24, r24
    180c:	96 95       	lsr	r25
    180e:	87 95       	ror	r24
    1810:	08 95       	ret

00001812 <square>:
    1812:	9b 01       	movw	r18, r22
    1814:	ac 01       	movw	r20, r24
    1816:	0c 94 56 0b 	jmp	0x16ac	; 0x16ac <__mulsf3>

0000181a <__fp_mpack>:
    181a:	9f 3f       	cpi	r25, 0xFF	; 255
    181c:	31 f0       	breq	.+12     	; 0x182a <__fp_mpack_finite+0xc>

0000181e <__fp_mpack_finite>:
    181e:	91 50       	subi	r25, 0x01	; 1
    1820:	20 f4       	brcc	.+8      	; 0x182a <__fp_mpack_finite+0xc>
    1822:	87 95       	ror	r24
    1824:	77 95       	ror	r23
    1826:	67 95       	ror	r22
    1828:	b7 95       	ror	r27
    182a:	88 0f       	add	r24, r24
    182c:	91 1d       	adc	r25, r1
    182e:	96 95       	lsr	r25
    1830:	87 95       	ror	r24
    1832:	97 f9       	bld	r25, 7
    1834:	08 95       	ret

00001836 <__fp_norm2>:
    1836:	91 50       	subi	r25, 0x01	; 1
    1838:	50 40       	sbci	r21, 0x00	; 0
    183a:	66 0f       	add	r22, r22
    183c:	77 1f       	adc	r23, r23
    183e:	88 1f       	adc	r24, r24
    1840:	d2 f7       	brpl	.-12     	; 0x1836 <__fp_norm2>
    1842:	08 95       	ret

00001844 <__fp_powsodd>:
    1844:	9f 93       	push	r25
    1846:	8f 93       	push	r24
    1848:	7f 93       	push	r23
    184a:	6f 93       	push	r22
    184c:	ff 93       	push	r31
    184e:	ef 93       	push	r30
    1850:	9b 01       	movw	r18, r22
    1852:	ac 01       	movw	r20, r24
    1854:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__mulsf3>
    1858:	ef 91       	pop	r30
    185a:	ff 91       	pop	r31
    185c:	0e 94 a0 0a 	call	0x1540	; 0x1540 <__fp_powser>
    1860:	2f 91       	pop	r18
    1862:	3f 91       	pop	r19
    1864:	4f 91       	pop	r20
    1866:	5f 91       	pop	r21
    1868:	0c 94 56 0b 	jmp	0x16ac	; 0x16ac <__mulsf3>

0000186c <vfprintf>:
    186c:	a0 e1       	ldi	r26, 0x10	; 16
    186e:	b0 e0       	ldi	r27, 0x00	; 0
    1870:	ec e3       	ldi	r30, 0x3C	; 60
    1872:	fc e0       	ldi	r31, 0x0C	; 12
    1874:	0c 94 dd 0f 	jmp	0x1fba	; 0x1fba <__prologue_saves__>
    1878:	7c 01       	movw	r14, r24
    187a:	1b 01       	movw	r2, r22
    187c:	6a 01       	movw	r12, r20
    187e:	fc 01       	movw	r30, r24
    1880:	17 82       	std	Z+7, r1	; 0x07
    1882:	16 82       	std	Z+6, r1	; 0x06
    1884:	83 81       	ldd	r24, Z+3	; 0x03
    1886:	81 ff       	sbrs	r24, 1
    1888:	44 c3       	rjmp	.+1672   	; 0x1f12 <vfprintf+0x6a6>
    188a:	9e 01       	movw	r18, r28
    188c:	2f 5f       	subi	r18, 0xFF	; 255
    188e:	3f 4f       	sbci	r19, 0xFF	; 255
    1890:	39 01       	movw	r6, r18
    1892:	f7 01       	movw	r30, r14
    1894:	93 81       	ldd	r25, Z+3	; 0x03
    1896:	f1 01       	movw	r30, r2
    1898:	93 fd       	sbrc	r25, 3
    189a:	85 91       	lpm	r24, Z+
    189c:	93 ff       	sbrs	r25, 3
    189e:	81 91       	ld	r24, Z+
    18a0:	1f 01       	movw	r2, r30
    18a2:	88 23       	and	r24, r24
    18a4:	09 f4       	brne	.+2      	; 0x18a8 <vfprintf+0x3c>
    18a6:	31 c3       	rjmp	.+1634   	; 0x1f0a <vfprintf+0x69e>
    18a8:	85 32       	cpi	r24, 0x25	; 37
    18aa:	39 f4       	brne	.+14     	; 0x18ba <vfprintf+0x4e>
    18ac:	93 fd       	sbrc	r25, 3
    18ae:	85 91       	lpm	r24, Z+
    18b0:	93 ff       	sbrs	r25, 3
    18b2:	81 91       	ld	r24, Z+
    18b4:	1f 01       	movw	r2, r30
    18b6:	85 32       	cpi	r24, 0x25	; 37
    18b8:	39 f4       	brne	.+14     	; 0x18c8 <vfprintf+0x5c>
    18ba:	b7 01       	movw	r22, r14
    18bc:	90 e0       	ldi	r25, 0x00	; 0
    18be:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    18c2:	56 01       	movw	r10, r12
    18c4:	65 01       	movw	r12, r10
    18c6:	e5 cf       	rjmp	.-54     	; 0x1892 <vfprintf+0x26>
    18c8:	10 e0       	ldi	r17, 0x00	; 0
    18ca:	51 2c       	mov	r5, r1
    18cc:	91 2c       	mov	r9, r1
    18ce:	ff e1       	ldi	r31, 0x1F	; 31
    18d0:	f9 15       	cp	r31, r9
    18d2:	d8 f0       	brcs	.+54     	; 0x190a <vfprintf+0x9e>
    18d4:	8b 32       	cpi	r24, 0x2B	; 43
    18d6:	79 f0       	breq	.+30     	; 0x18f6 <vfprintf+0x8a>
    18d8:	38 f4       	brcc	.+14     	; 0x18e8 <vfprintf+0x7c>
    18da:	80 32       	cpi	r24, 0x20	; 32
    18dc:	79 f0       	breq	.+30     	; 0x18fc <vfprintf+0x90>
    18de:	83 32       	cpi	r24, 0x23	; 35
    18e0:	a1 f4       	brne	.+40     	; 0x190a <vfprintf+0x9e>
    18e2:	f9 2d       	mov	r31, r9
    18e4:	f0 61       	ori	r31, 0x10	; 16
    18e6:	2e c0       	rjmp	.+92     	; 0x1944 <vfprintf+0xd8>
    18e8:	8d 32       	cpi	r24, 0x2D	; 45
    18ea:	61 f0       	breq	.+24     	; 0x1904 <vfprintf+0x98>
    18ec:	80 33       	cpi	r24, 0x30	; 48
    18ee:	69 f4       	brne	.+26     	; 0x190a <vfprintf+0x9e>
    18f0:	29 2d       	mov	r18, r9
    18f2:	21 60       	ori	r18, 0x01	; 1
    18f4:	2d c0       	rjmp	.+90     	; 0x1950 <vfprintf+0xe4>
    18f6:	39 2d       	mov	r19, r9
    18f8:	32 60       	ori	r19, 0x02	; 2
    18fa:	93 2e       	mov	r9, r19
    18fc:	89 2d       	mov	r24, r9
    18fe:	84 60       	ori	r24, 0x04	; 4
    1900:	98 2e       	mov	r9, r24
    1902:	2a c0       	rjmp	.+84     	; 0x1958 <vfprintf+0xec>
    1904:	e9 2d       	mov	r30, r9
    1906:	e8 60       	ori	r30, 0x08	; 8
    1908:	15 c0       	rjmp	.+42     	; 0x1934 <vfprintf+0xc8>
    190a:	97 fc       	sbrc	r9, 7
    190c:	2d c0       	rjmp	.+90     	; 0x1968 <vfprintf+0xfc>
    190e:	20 ed       	ldi	r18, 0xD0	; 208
    1910:	28 0f       	add	r18, r24
    1912:	2a 30       	cpi	r18, 0x0A	; 10
    1914:	88 f4       	brcc	.+34     	; 0x1938 <vfprintf+0xcc>
    1916:	96 fe       	sbrs	r9, 6
    1918:	06 c0       	rjmp	.+12     	; 0x1926 <vfprintf+0xba>
    191a:	3a e0       	ldi	r19, 0x0A	; 10
    191c:	13 9f       	mul	r17, r19
    191e:	20 0d       	add	r18, r0
    1920:	11 24       	eor	r1, r1
    1922:	12 2f       	mov	r17, r18
    1924:	19 c0       	rjmp	.+50     	; 0x1958 <vfprintf+0xec>
    1926:	8a e0       	ldi	r24, 0x0A	; 10
    1928:	58 9e       	mul	r5, r24
    192a:	20 0d       	add	r18, r0
    192c:	11 24       	eor	r1, r1
    192e:	52 2e       	mov	r5, r18
    1930:	e9 2d       	mov	r30, r9
    1932:	e0 62       	ori	r30, 0x20	; 32
    1934:	9e 2e       	mov	r9, r30
    1936:	10 c0       	rjmp	.+32     	; 0x1958 <vfprintf+0xec>
    1938:	8e 32       	cpi	r24, 0x2E	; 46
    193a:	31 f4       	brne	.+12     	; 0x1948 <vfprintf+0xdc>
    193c:	96 fc       	sbrc	r9, 6
    193e:	e5 c2       	rjmp	.+1482   	; 0x1f0a <vfprintf+0x69e>
    1940:	f9 2d       	mov	r31, r9
    1942:	f0 64       	ori	r31, 0x40	; 64
    1944:	9f 2e       	mov	r9, r31
    1946:	08 c0       	rjmp	.+16     	; 0x1958 <vfprintf+0xec>
    1948:	8c 36       	cpi	r24, 0x6C	; 108
    194a:	21 f4       	brne	.+8      	; 0x1954 <vfprintf+0xe8>
    194c:	29 2d       	mov	r18, r9
    194e:	20 68       	ori	r18, 0x80	; 128
    1950:	92 2e       	mov	r9, r18
    1952:	02 c0       	rjmp	.+4      	; 0x1958 <vfprintf+0xec>
    1954:	88 36       	cpi	r24, 0x68	; 104
    1956:	41 f4       	brne	.+16     	; 0x1968 <vfprintf+0xfc>
    1958:	f1 01       	movw	r30, r2
    195a:	93 fd       	sbrc	r25, 3
    195c:	85 91       	lpm	r24, Z+
    195e:	93 ff       	sbrs	r25, 3
    1960:	81 91       	ld	r24, Z+
    1962:	1f 01       	movw	r2, r30
    1964:	81 11       	cpse	r24, r1
    1966:	b3 cf       	rjmp	.-154    	; 0x18ce <vfprintf+0x62>
    1968:	9b eb       	ldi	r25, 0xBB	; 187
    196a:	98 0f       	add	r25, r24
    196c:	93 30       	cpi	r25, 0x03	; 3
    196e:	20 f4       	brcc	.+8      	; 0x1978 <vfprintf+0x10c>
    1970:	99 2d       	mov	r25, r9
    1972:	90 61       	ori	r25, 0x10	; 16
    1974:	80 5e       	subi	r24, 0xE0	; 224
    1976:	07 c0       	rjmp	.+14     	; 0x1986 <vfprintf+0x11a>
    1978:	9b e9       	ldi	r25, 0x9B	; 155
    197a:	98 0f       	add	r25, r24
    197c:	93 30       	cpi	r25, 0x03	; 3
    197e:	08 f0       	brcs	.+2      	; 0x1982 <vfprintf+0x116>
    1980:	66 c1       	rjmp	.+716    	; 0x1c4e <vfprintf+0x3e2>
    1982:	99 2d       	mov	r25, r9
    1984:	9f 7e       	andi	r25, 0xEF	; 239
    1986:	96 ff       	sbrs	r25, 6
    1988:	16 e0       	ldi	r17, 0x06	; 6
    198a:	9f 73       	andi	r25, 0x3F	; 63
    198c:	99 2e       	mov	r9, r25
    198e:	85 36       	cpi	r24, 0x65	; 101
    1990:	19 f4       	brne	.+6      	; 0x1998 <vfprintf+0x12c>
    1992:	90 64       	ori	r25, 0x40	; 64
    1994:	99 2e       	mov	r9, r25
    1996:	08 c0       	rjmp	.+16     	; 0x19a8 <vfprintf+0x13c>
    1998:	86 36       	cpi	r24, 0x66	; 102
    199a:	21 f4       	brne	.+8      	; 0x19a4 <vfprintf+0x138>
    199c:	39 2f       	mov	r19, r25
    199e:	30 68       	ori	r19, 0x80	; 128
    19a0:	93 2e       	mov	r9, r19
    19a2:	02 c0       	rjmp	.+4      	; 0x19a8 <vfprintf+0x13c>
    19a4:	11 11       	cpse	r17, r1
    19a6:	11 50       	subi	r17, 0x01	; 1
    19a8:	97 fe       	sbrs	r9, 7
    19aa:	07 c0       	rjmp	.+14     	; 0x19ba <vfprintf+0x14e>
    19ac:	1c 33       	cpi	r17, 0x3C	; 60
    19ae:	50 f4       	brcc	.+20     	; 0x19c4 <vfprintf+0x158>
    19b0:	44 24       	eor	r4, r4
    19b2:	43 94       	inc	r4
    19b4:	41 0e       	add	r4, r17
    19b6:	27 e0       	ldi	r18, 0x07	; 7
    19b8:	0b c0       	rjmp	.+22     	; 0x19d0 <vfprintf+0x164>
    19ba:	18 30       	cpi	r17, 0x08	; 8
    19bc:	38 f0       	brcs	.+14     	; 0x19cc <vfprintf+0x160>
    19be:	27 e0       	ldi	r18, 0x07	; 7
    19c0:	17 e0       	ldi	r17, 0x07	; 7
    19c2:	05 c0       	rjmp	.+10     	; 0x19ce <vfprintf+0x162>
    19c4:	27 e0       	ldi	r18, 0x07	; 7
    19c6:	9c e3       	ldi	r25, 0x3C	; 60
    19c8:	49 2e       	mov	r4, r25
    19ca:	02 c0       	rjmp	.+4      	; 0x19d0 <vfprintf+0x164>
    19cc:	21 2f       	mov	r18, r17
    19ce:	41 2c       	mov	r4, r1
    19d0:	56 01       	movw	r10, r12
    19d2:	84 e0       	ldi	r24, 0x04	; 4
    19d4:	a8 0e       	add	r10, r24
    19d6:	b1 1c       	adc	r11, r1
    19d8:	f6 01       	movw	r30, r12
    19da:	60 81       	ld	r22, Z
    19dc:	71 81       	ldd	r23, Z+1	; 0x01
    19de:	82 81       	ldd	r24, Z+2	; 0x02
    19e0:	93 81       	ldd	r25, Z+3	; 0x03
    19e2:	04 2d       	mov	r16, r4
    19e4:	a3 01       	movw	r20, r6
    19e6:	0e 94 2e 10 	call	0x205c	; 0x205c <__ftoa_engine>
    19ea:	6c 01       	movw	r12, r24
    19ec:	f9 81       	ldd	r31, Y+1	; 0x01
    19ee:	fc 87       	std	Y+12, r31	; 0x0c
    19f0:	f0 ff       	sbrs	r31, 0
    19f2:	02 c0       	rjmp	.+4      	; 0x19f8 <vfprintf+0x18c>
    19f4:	f3 ff       	sbrs	r31, 3
    19f6:	06 c0       	rjmp	.+12     	; 0x1a04 <vfprintf+0x198>
    19f8:	91 fc       	sbrc	r9, 1
    19fa:	06 c0       	rjmp	.+12     	; 0x1a08 <vfprintf+0x19c>
    19fc:	92 fe       	sbrs	r9, 2
    19fe:	06 c0       	rjmp	.+12     	; 0x1a0c <vfprintf+0x1a0>
    1a00:	00 e2       	ldi	r16, 0x20	; 32
    1a02:	05 c0       	rjmp	.+10     	; 0x1a0e <vfprintf+0x1a2>
    1a04:	0d e2       	ldi	r16, 0x2D	; 45
    1a06:	03 c0       	rjmp	.+6      	; 0x1a0e <vfprintf+0x1a2>
    1a08:	0b e2       	ldi	r16, 0x2B	; 43
    1a0a:	01 c0       	rjmp	.+2      	; 0x1a0e <vfprintf+0x1a2>
    1a0c:	00 e0       	ldi	r16, 0x00	; 0
    1a0e:	8c 85       	ldd	r24, Y+12	; 0x0c
    1a10:	8c 70       	andi	r24, 0x0C	; 12
    1a12:	19 f0       	breq	.+6      	; 0x1a1a <vfprintf+0x1ae>
    1a14:	01 11       	cpse	r16, r1
    1a16:	5a c2       	rjmp	.+1204   	; 0x1ecc <vfprintf+0x660>
    1a18:	9b c2       	rjmp	.+1334   	; 0x1f50 <vfprintf+0x6e4>
    1a1a:	97 fe       	sbrs	r9, 7
    1a1c:	10 c0       	rjmp	.+32     	; 0x1a3e <vfprintf+0x1d2>
    1a1e:	4c 0c       	add	r4, r12
    1a20:	fc 85       	ldd	r31, Y+12	; 0x0c
    1a22:	f4 ff       	sbrs	r31, 4
    1a24:	04 c0       	rjmp	.+8      	; 0x1a2e <vfprintf+0x1c2>
    1a26:	8a 81       	ldd	r24, Y+2	; 0x02
    1a28:	81 33       	cpi	r24, 0x31	; 49
    1a2a:	09 f4       	brne	.+2      	; 0x1a2e <vfprintf+0x1c2>
    1a2c:	4a 94       	dec	r4
    1a2e:	14 14       	cp	r1, r4
    1a30:	74 f5       	brge	.+92     	; 0x1a8e <vfprintf+0x222>
    1a32:	28 e0       	ldi	r18, 0x08	; 8
    1a34:	24 15       	cp	r18, r4
    1a36:	78 f5       	brcc	.+94     	; 0x1a96 <vfprintf+0x22a>
    1a38:	88 e0       	ldi	r24, 0x08	; 8
    1a3a:	48 2e       	mov	r4, r24
    1a3c:	2c c0       	rjmp	.+88     	; 0x1a96 <vfprintf+0x22a>
    1a3e:	96 fc       	sbrc	r9, 6
    1a40:	2a c0       	rjmp	.+84     	; 0x1a96 <vfprintf+0x22a>
    1a42:	81 2f       	mov	r24, r17
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	8c 15       	cp	r24, r12
    1a48:	9d 05       	cpc	r25, r13
    1a4a:	9c f0       	brlt	.+38     	; 0x1a72 <vfprintf+0x206>
    1a4c:	3c ef       	ldi	r19, 0xFC	; 252
    1a4e:	c3 16       	cp	r12, r19
    1a50:	3f ef       	ldi	r19, 0xFF	; 255
    1a52:	d3 06       	cpc	r13, r19
    1a54:	74 f0       	brlt	.+28     	; 0x1a72 <vfprintf+0x206>
    1a56:	89 2d       	mov	r24, r9
    1a58:	80 68       	ori	r24, 0x80	; 128
    1a5a:	98 2e       	mov	r9, r24
    1a5c:	0a c0       	rjmp	.+20     	; 0x1a72 <vfprintf+0x206>
    1a5e:	e2 e0       	ldi	r30, 0x02	; 2
    1a60:	f0 e0       	ldi	r31, 0x00	; 0
    1a62:	ec 0f       	add	r30, r28
    1a64:	fd 1f       	adc	r31, r29
    1a66:	e1 0f       	add	r30, r17
    1a68:	f1 1d       	adc	r31, r1
    1a6a:	80 81       	ld	r24, Z
    1a6c:	80 33       	cpi	r24, 0x30	; 48
    1a6e:	19 f4       	brne	.+6      	; 0x1a76 <vfprintf+0x20a>
    1a70:	11 50       	subi	r17, 0x01	; 1
    1a72:	11 11       	cpse	r17, r1
    1a74:	f4 cf       	rjmp	.-24     	; 0x1a5e <vfprintf+0x1f2>
    1a76:	97 fe       	sbrs	r9, 7
    1a78:	0e c0       	rjmp	.+28     	; 0x1a96 <vfprintf+0x22a>
    1a7a:	44 24       	eor	r4, r4
    1a7c:	43 94       	inc	r4
    1a7e:	41 0e       	add	r4, r17
    1a80:	81 2f       	mov	r24, r17
    1a82:	90 e0       	ldi	r25, 0x00	; 0
    1a84:	c8 16       	cp	r12, r24
    1a86:	d9 06       	cpc	r13, r25
    1a88:	2c f4       	brge	.+10     	; 0x1a94 <vfprintf+0x228>
    1a8a:	1c 19       	sub	r17, r12
    1a8c:	04 c0       	rjmp	.+8      	; 0x1a96 <vfprintf+0x22a>
    1a8e:	44 24       	eor	r4, r4
    1a90:	43 94       	inc	r4
    1a92:	01 c0       	rjmp	.+2      	; 0x1a96 <vfprintf+0x22a>
    1a94:	10 e0       	ldi	r17, 0x00	; 0
    1a96:	97 fe       	sbrs	r9, 7
    1a98:	06 c0       	rjmp	.+12     	; 0x1aa6 <vfprintf+0x23a>
    1a9a:	1c 14       	cp	r1, r12
    1a9c:	1d 04       	cpc	r1, r13
    1a9e:	34 f4       	brge	.+12     	; 0x1aac <vfprintf+0x240>
    1aa0:	c6 01       	movw	r24, r12
    1aa2:	01 96       	adiw	r24, 0x01	; 1
    1aa4:	05 c0       	rjmp	.+10     	; 0x1ab0 <vfprintf+0x244>
    1aa6:	85 e0       	ldi	r24, 0x05	; 5
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	02 c0       	rjmp	.+4      	; 0x1ab0 <vfprintf+0x244>
    1aac:	81 e0       	ldi	r24, 0x01	; 1
    1aae:	90 e0       	ldi	r25, 0x00	; 0
    1ab0:	01 11       	cpse	r16, r1
    1ab2:	01 96       	adiw	r24, 0x01	; 1
    1ab4:	11 23       	and	r17, r17
    1ab6:	31 f0       	breq	.+12     	; 0x1ac4 <vfprintf+0x258>
    1ab8:	21 2f       	mov	r18, r17
    1aba:	30 e0       	ldi	r19, 0x00	; 0
    1abc:	2f 5f       	subi	r18, 0xFF	; 255
    1abe:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac0:	82 0f       	add	r24, r18
    1ac2:	93 1f       	adc	r25, r19
    1ac4:	25 2d       	mov	r18, r5
    1ac6:	30 e0       	ldi	r19, 0x00	; 0
    1ac8:	82 17       	cp	r24, r18
    1aca:	93 07       	cpc	r25, r19
    1acc:	14 f4       	brge	.+4      	; 0x1ad2 <vfprintf+0x266>
    1ace:	58 1a       	sub	r5, r24
    1ad0:	01 c0       	rjmp	.+2      	; 0x1ad4 <vfprintf+0x268>
    1ad2:	51 2c       	mov	r5, r1
    1ad4:	89 2d       	mov	r24, r9
    1ad6:	89 70       	andi	r24, 0x09	; 9
    1ad8:	49 f4       	brne	.+18     	; 0x1aec <vfprintf+0x280>
    1ada:	55 20       	and	r5, r5
    1adc:	39 f0       	breq	.+14     	; 0x1aec <vfprintf+0x280>
    1ade:	b7 01       	movw	r22, r14
    1ae0:	80 e2       	ldi	r24, 0x20	; 32
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1ae8:	5a 94       	dec	r5
    1aea:	f7 cf       	rjmp	.-18     	; 0x1ada <vfprintf+0x26e>
    1aec:	00 23       	and	r16, r16
    1aee:	29 f0       	breq	.+10     	; 0x1afa <vfprintf+0x28e>
    1af0:	b7 01       	movw	r22, r14
    1af2:	80 2f       	mov	r24, r16
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1afa:	93 fc       	sbrc	r9, 3
    1afc:	09 c0       	rjmp	.+18     	; 0x1b10 <vfprintf+0x2a4>
    1afe:	55 20       	and	r5, r5
    1b00:	39 f0       	breq	.+14     	; 0x1b10 <vfprintf+0x2a4>
    1b02:	b7 01       	movw	r22, r14
    1b04:	80 e3       	ldi	r24, 0x30	; 48
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1b0c:	5a 94       	dec	r5
    1b0e:	f7 cf       	rjmp	.-18     	; 0x1afe <vfprintf+0x292>
    1b10:	97 fe       	sbrs	r9, 7
    1b12:	4c c0       	rjmp	.+152    	; 0x1bac <vfprintf+0x340>
    1b14:	46 01       	movw	r8, r12
    1b16:	d7 fe       	sbrs	r13, 7
    1b18:	02 c0       	rjmp	.+4      	; 0x1b1e <vfprintf+0x2b2>
    1b1a:	81 2c       	mov	r8, r1
    1b1c:	91 2c       	mov	r9, r1
    1b1e:	c6 01       	movw	r24, r12
    1b20:	88 19       	sub	r24, r8
    1b22:	99 09       	sbc	r25, r9
    1b24:	f3 01       	movw	r30, r6
    1b26:	e8 0f       	add	r30, r24
    1b28:	f9 1f       	adc	r31, r25
    1b2a:	fe 87       	std	Y+14, r31	; 0x0e
    1b2c:	ed 87       	std	Y+13, r30	; 0x0d
    1b2e:	96 01       	movw	r18, r12
    1b30:	24 19       	sub	r18, r4
    1b32:	31 09       	sbc	r19, r1
    1b34:	38 8b       	std	Y+16, r19	; 0x10
    1b36:	2f 87       	std	Y+15, r18	; 0x0f
    1b38:	01 2f       	mov	r16, r17
    1b3a:	10 e0       	ldi	r17, 0x00	; 0
    1b3c:	11 95       	neg	r17
    1b3e:	01 95       	neg	r16
    1b40:	11 09       	sbc	r17, r1
    1b42:	3f ef       	ldi	r19, 0xFF	; 255
    1b44:	83 16       	cp	r8, r19
    1b46:	93 06       	cpc	r9, r19
    1b48:	29 f4       	brne	.+10     	; 0x1b54 <vfprintf+0x2e8>
    1b4a:	b7 01       	movw	r22, r14
    1b4c:	8e e2       	ldi	r24, 0x2E	; 46
    1b4e:	90 e0       	ldi	r25, 0x00	; 0
    1b50:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1b54:	c8 14       	cp	r12, r8
    1b56:	d9 04       	cpc	r13, r9
    1b58:	4c f0       	brlt	.+18     	; 0x1b6c <vfprintf+0x300>
    1b5a:	8f 85       	ldd	r24, Y+15	; 0x0f
    1b5c:	98 89       	ldd	r25, Y+16	; 0x10
    1b5e:	88 15       	cp	r24, r8
    1b60:	99 05       	cpc	r25, r9
    1b62:	24 f4       	brge	.+8      	; 0x1b6c <vfprintf+0x300>
    1b64:	ed 85       	ldd	r30, Y+13	; 0x0d
    1b66:	fe 85       	ldd	r31, Y+14	; 0x0e
    1b68:	81 81       	ldd	r24, Z+1	; 0x01
    1b6a:	01 c0       	rjmp	.+2      	; 0x1b6e <vfprintf+0x302>
    1b6c:	80 e3       	ldi	r24, 0x30	; 48
    1b6e:	f1 e0       	ldi	r31, 0x01	; 1
    1b70:	8f 1a       	sub	r8, r31
    1b72:	91 08       	sbc	r9, r1
    1b74:	2d 85       	ldd	r18, Y+13	; 0x0d
    1b76:	3e 85       	ldd	r19, Y+14	; 0x0e
    1b78:	2f 5f       	subi	r18, 0xFF	; 255
    1b7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1b7c:	3e 87       	std	Y+14, r19	; 0x0e
    1b7e:	2d 87       	std	Y+13, r18	; 0x0d
    1b80:	80 16       	cp	r8, r16
    1b82:	91 06       	cpc	r9, r17
    1b84:	2c f0       	brlt	.+10     	; 0x1b90 <vfprintf+0x324>
    1b86:	b7 01       	movw	r22, r14
    1b88:	90 e0       	ldi	r25, 0x00	; 0
    1b8a:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1b8e:	d9 cf       	rjmp	.-78     	; 0x1b42 <vfprintf+0x2d6>
    1b90:	c8 14       	cp	r12, r8
    1b92:	d9 04       	cpc	r13, r9
    1b94:	41 f4       	brne	.+16     	; 0x1ba6 <vfprintf+0x33a>
    1b96:	9a 81       	ldd	r25, Y+2	; 0x02
    1b98:	96 33       	cpi	r25, 0x36	; 54
    1b9a:	20 f4       	brcc	.+8      	; 0x1ba4 <vfprintf+0x338>
    1b9c:	95 33       	cpi	r25, 0x35	; 53
    1b9e:	19 f4       	brne	.+6      	; 0x1ba6 <vfprintf+0x33a>
    1ba0:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ba2:	34 ff       	sbrs	r19, 4
    1ba4:	81 e3       	ldi	r24, 0x31	; 49
    1ba6:	b7 01       	movw	r22, r14
    1ba8:	90 e0       	ldi	r25, 0x00	; 0
    1baa:	4e c0       	rjmp	.+156    	; 0x1c48 <vfprintf+0x3dc>
    1bac:	8a 81       	ldd	r24, Y+2	; 0x02
    1bae:	81 33       	cpi	r24, 0x31	; 49
    1bb0:	19 f0       	breq	.+6      	; 0x1bb8 <vfprintf+0x34c>
    1bb2:	9c 85       	ldd	r25, Y+12	; 0x0c
    1bb4:	9f 7e       	andi	r25, 0xEF	; 239
    1bb6:	9c 87       	std	Y+12, r25	; 0x0c
    1bb8:	b7 01       	movw	r22, r14
    1bba:	90 e0       	ldi	r25, 0x00	; 0
    1bbc:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1bc0:	11 11       	cpse	r17, r1
    1bc2:	05 c0       	rjmp	.+10     	; 0x1bce <vfprintf+0x362>
    1bc4:	94 fc       	sbrc	r9, 4
    1bc6:	18 c0       	rjmp	.+48     	; 0x1bf8 <vfprintf+0x38c>
    1bc8:	85 e6       	ldi	r24, 0x65	; 101
    1bca:	90 e0       	ldi	r25, 0x00	; 0
    1bcc:	17 c0       	rjmp	.+46     	; 0x1bfc <vfprintf+0x390>
    1bce:	b7 01       	movw	r22, r14
    1bd0:	8e e2       	ldi	r24, 0x2E	; 46
    1bd2:	90 e0       	ldi	r25, 0x00	; 0
    1bd4:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1bd8:	1e 5f       	subi	r17, 0xFE	; 254
    1bda:	82 e0       	ldi	r24, 0x02	; 2
    1bdc:	01 e0       	ldi	r16, 0x01	; 1
    1bde:	08 0f       	add	r16, r24
    1be0:	f3 01       	movw	r30, r6
    1be2:	e8 0f       	add	r30, r24
    1be4:	f1 1d       	adc	r31, r1
    1be6:	80 81       	ld	r24, Z
    1be8:	b7 01       	movw	r22, r14
    1bea:	90 e0       	ldi	r25, 0x00	; 0
    1bec:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1bf0:	80 2f       	mov	r24, r16
    1bf2:	01 13       	cpse	r16, r17
    1bf4:	f3 cf       	rjmp	.-26     	; 0x1bdc <vfprintf+0x370>
    1bf6:	e6 cf       	rjmp	.-52     	; 0x1bc4 <vfprintf+0x358>
    1bf8:	85 e4       	ldi	r24, 0x45	; 69
    1bfa:	90 e0       	ldi	r25, 0x00	; 0
    1bfc:	b7 01       	movw	r22, r14
    1bfe:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1c02:	d7 fc       	sbrc	r13, 7
    1c04:	06 c0       	rjmp	.+12     	; 0x1c12 <vfprintf+0x3a6>
    1c06:	c1 14       	cp	r12, r1
    1c08:	d1 04       	cpc	r13, r1
    1c0a:	41 f4       	brne	.+16     	; 0x1c1c <vfprintf+0x3b0>
    1c0c:	ec 85       	ldd	r30, Y+12	; 0x0c
    1c0e:	e4 ff       	sbrs	r30, 4
    1c10:	05 c0       	rjmp	.+10     	; 0x1c1c <vfprintf+0x3b0>
    1c12:	d1 94       	neg	r13
    1c14:	c1 94       	neg	r12
    1c16:	d1 08       	sbc	r13, r1
    1c18:	8d e2       	ldi	r24, 0x2D	; 45
    1c1a:	01 c0       	rjmp	.+2      	; 0x1c1e <vfprintf+0x3b2>
    1c1c:	8b e2       	ldi	r24, 0x2B	; 43
    1c1e:	b7 01       	movw	r22, r14
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1c26:	80 e3       	ldi	r24, 0x30	; 48
    1c28:	2a e0       	ldi	r18, 0x0A	; 10
    1c2a:	c2 16       	cp	r12, r18
    1c2c:	d1 04       	cpc	r13, r1
    1c2e:	2c f0       	brlt	.+10     	; 0x1c3a <vfprintf+0x3ce>
    1c30:	8f 5f       	subi	r24, 0xFF	; 255
    1c32:	fa e0       	ldi	r31, 0x0A	; 10
    1c34:	cf 1a       	sub	r12, r31
    1c36:	d1 08       	sbc	r13, r1
    1c38:	f7 cf       	rjmp	.-18     	; 0x1c28 <vfprintf+0x3bc>
    1c3a:	b7 01       	movw	r22, r14
    1c3c:	90 e0       	ldi	r25, 0x00	; 0
    1c3e:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1c42:	b7 01       	movw	r22, r14
    1c44:	c6 01       	movw	r24, r12
    1c46:	c0 96       	adiw	r24, 0x30	; 48
    1c48:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1c4c:	54 c1       	rjmp	.+680    	; 0x1ef6 <vfprintf+0x68a>
    1c4e:	83 36       	cpi	r24, 0x63	; 99
    1c50:	31 f0       	breq	.+12     	; 0x1c5e <vfprintf+0x3f2>
    1c52:	83 37       	cpi	r24, 0x73	; 115
    1c54:	79 f0       	breq	.+30     	; 0x1c74 <vfprintf+0x408>
    1c56:	83 35       	cpi	r24, 0x53	; 83
    1c58:	09 f0       	breq	.+2      	; 0x1c5c <vfprintf+0x3f0>
    1c5a:	56 c0       	rjmp	.+172    	; 0x1d08 <vfprintf+0x49c>
    1c5c:	20 c0       	rjmp	.+64     	; 0x1c9e <vfprintf+0x432>
    1c5e:	56 01       	movw	r10, r12
    1c60:	32 e0       	ldi	r19, 0x02	; 2
    1c62:	a3 0e       	add	r10, r19
    1c64:	b1 1c       	adc	r11, r1
    1c66:	f6 01       	movw	r30, r12
    1c68:	80 81       	ld	r24, Z
    1c6a:	89 83       	std	Y+1, r24	; 0x01
    1c6c:	01 e0       	ldi	r16, 0x01	; 1
    1c6e:	10 e0       	ldi	r17, 0x00	; 0
    1c70:	63 01       	movw	r12, r6
    1c72:	12 c0       	rjmp	.+36     	; 0x1c98 <vfprintf+0x42c>
    1c74:	56 01       	movw	r10, r12
    1c76:	f2 e0       	ldi	r31, 0x02	; 2
    1c78:	af 0e       	add	r10, r31
    1c7a:	b1 1c       	adc	r11, r1
    1c7c:	f6 01       	movw	r30, r12
    1c7e:	c0 80       	ld	r12, Z
    1c80:	d1 80       	ldd	r13, Z+1	; 0x01
    1c82:	96 fe       	sbrs	r9, 6
    1c84:	03 c0       	rjmp	.+6      	; 0x1c8c <vfprintf+0x420>
    1c86:	61 2f       	mov	r22, r17
    1c88:	70 e0       	ldi	r23, 0x00	; 0
    1c8a:	02 c0       	rjmp	.+4      	; 0x1c90 <vfprintf+0x424>
    1c8c:	6f ef       	ldi	r22, 0xFF	; 255
    1c8e:	7f ef       	ldi	r23, 0xFF	; 255
    1c90:	c6 01       	movw	r24, r12
    1c92:	0e 94 1f 11 	call	0x223e	; 0x223e <strnlen>
    1c96:	8c 01       	movw	r16, r24
    1c98:	f9 2d       	mov	r31, r9
    1c9a:	ff 77       	andi	r31, 0x7F	; 127
    1c9c:	14 c0       	rjmp	.+40     	; 0x1cc6 <vfprintf+0x45a>
    1c9e:	56 01       	movw	r10, r12
    1ca0:	22 e0       	ldi	r18, 0x02	; 2
    1ca2:	a2 0e       	add	r10, r18
    1ca4:	b1 1c       	adc	r11, r1
    1ca6:	f6 01       	movw	r30, r12
    1ca8:	c0 80       	ld	r12, Z
    1caa:	d1 80       	ldd	r13, Z+1	; 0x01
    1cac:	96 fe       	sbrs	r9, 6
    1cae:	03 c0       	rjmp	.+6      	; 0x1cb6 <vfprintf+0x44a>
    1cb0:	61 2f       	mov	r22, r17
    1cb2:	70 e0       	ldi	r23, 0x00	; 0
    1cb4:	02 c0       	rjmp	.+4      	; 0x1cba <vfprintf+0x44e>
    1cb6:	6f ef       	ldi	r22, 0xFF	; 255
    1cb8:	7f ef       	ldi	r23, 0xFF	; 255
    1cba:	c6 01       	movw	r24, r12
    1cbc:	0e 94 06 11 	call	0x220c	; 0x220c <strnlen_P>
    1cc0:	8c 01       	movw	r16, r24
    1cc2:	f9 2d       	mov	r31, r9
    1cc4:	f0 68       	ori	r31, 0x80	; 128
    1cc6:	9f 2e       	mov	r9, r31
    1cc8:	f3 fd       	sbrc	r31, 3
    1cca:	1a c0       	rjmp	.+52     	; 0x1d00 <vfprintf+0x494>
    1ccc:	85 2d       	mov	r24, r5
    1cce:	90 e0       	ldi	r25, 0x00	; 0
    1cd0:	08 17       	cp	r16, r24
    1cd2:	19 07       	cpc	r17, r25
    1cd4:	a8 f4       	brcc	.+42     	; 0x1d00 <vfprintf+0x494>
    1cd6:	b7 01       	movw	r22, r14
    1cd8:	80 e2       	ldi	r24, 0x20	; 32
    1cda:	90 e0       	ldi	r25, 0x00	; 0
    1cdc:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1ce0:	5a 94       	dec	r5
    1ce2:	f4 cf       	rjmp	.-24     	; 0x1ccc <vfprintf+0x460>
    1ce4:	f6 01       	movw	r30, r12
    1ce6:	97 fc       	sbrc	r9, 7
    1ce8:	85 91       	lpm	r24, Z+
    1cea:	97 fe       	sbrs	r9, 7
    1cec:	81 91       	ld	r24, Z+
    1cee:	6f 01       	movw	r12, r30
    1cf0:	b7 01       	movw	r22, r14
    1cf2:	90 e0       	ldi	r25, 0x00	; 0
    1cf4:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1cf8:	51 10       	cpse	r5, r1
    1cfa:	5a 94       	dec	r5
    1cfc:	01 50       	subi	r16, 0x01	; 1
    1cfe:	11 09       	sbc	r17, r1
    1d00:	01 15       	cp	r16, r1
    1d02:	11 05       	cpc	r17, r1
    1d04:	79 f7       	brne	.-34     	; 0x1ce4 <vfprintf+0x478>
    1d06:	f7 c0       	rjmp	.+494    	; 0x1ef6 <vfprintf+0x68a>
    1d08:	84 36       	cpi	r24, 0x64	; 100
    1d0a:	11 f0       	breq	.+4      	; 0x1d10 <vfprintf+0x4a4>
    1d0c:	89 36       	cpi	r24, 0x69	; 105
    1d0e:	61 f5       	brne	.+88     	; 0x1d68 <vfprintf+0x4fc>
    1d10:	56 01       	movw	r10, r12
    1d12:	97 fe       	sbrs	r9, 7
    1d14:	09 c0       	rjmp	.+18     	; 0x1d28 <vfprintf+0x4bc>
    1d16:	24 e0       	ldi	r18, 0x04	; 4
    1d18:	a2 0e       	add	r10, r18
    1d1a:	b1 1c       	adc	r11, r1
    1d1c:	f6 01       	movw	r30, r12
    1d1e:	60 81       	ld	r22, Z
    1d20:	71 81       	ldd	r23, Z+1	; 0x01
    1d22:	82 81       	ldd	r24, Z+2	; 0x02
    1d24:	93 81       	ldd	r25, Z+3	; 0x03
    1d26:	0a c0       	rjmp	.+20     	; 0x1d3c <vfprintf+0x4d0>
    1d28:	f2 e0       	ldi	r31, 0x02	; 2
    1d2a:	af 0e       	add	r10, r31
    1d2c:	b1 1c       	adc	r11, r1
    1d2e:	f6 01       	movw	r30, r12
    1d30:	60 81       	ld	r22, Z
    1d32:	71 81       	ldd	r23, Z+1	; 0x01
    1d34:	07 2e       	mov	r0, r23
    1d36:	00 0c       	add	r0, r0
    1d38:	88 0b       	sbc	r24, r24
    1d3a:	99 0b       	sbc	r25, r25
    1d3c:	f9 2d       	mov	r31, r9
    1d3e:	ff 76       	andi	r31, 0x6F	; 111
    1d40:	9f 2e       	mov	r9, r31
    1d42:	97 ff       	sbrs	r25, 7
    1d44:	09 c0       	rjmp	.+18     	; 0x1d58 <vfprintf+0x4ec>
    1d46:	90 95       	com	r25
    1d48:	80 95       	com	r24
    1d4a:	70 95       	com	r23
    1d4c:	61 95       	neg	r22
    1d4e:	7f 4f       	sbci	r23, 0xFF	; 255
    1d50:	8f 4f       	sbci	r24, 0xFF	; 255
    1d52:	9f 4f       	sbci	r25, 0xFF	; 255
    1d54:	f0 68       	ori	r31, 0x80	; 128
    1d56:	9f 2e       	mov	r9, r31
    1d58:	2a e0       	ldi	r18, 0x0A	; 10
    1d5a:	30 e0       	ldi	r19, 0x00	; 0
    1d5c:	a3 01       	movw	r20, r6
    1d5e:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <__ultoa_invert>
    1d62:	c8 2e       	mov	r12, r24
    1d64:	c6 18       	sub	r12, r6
    1d66:	3f c0       	rjmp	.+126    	; 0x1de6 <vfprintf+0x57a>
    1d68:	09 2d       	mov	r16, r9
    1d6a:	85 37       	cpi	r24, 0x75	; 117
    1d6c:	21 f4       	brne	.+8      	; 0x1d76 <vfprintf+0x50a>
    1d6e:	0f 7e       	andi	r16, 0xEF	; 239
    1d70:	2a e0       	ldi	r18, 0x0A	; 10
    1d72:	30 e0       	ldi	r19, 0x00	; 0
    1d74:	1d c0       	rjmp	.+58     	; 0x1db0 <vfprintf+0x544>
    1d76:	09 7f       	andi	r16, 0xF9	; 249
    1d78:	8f 36       	cpi	r24, 0x6F	; 111
    1d7a:	91 f0       	breq	.+36     	; 0x1da0 <vfprintf+0x534>
    1d7c:	18 f4       	brcc	.+6      	; 0x1d84 <vfprintf+0x518>
    1d7e:	88 35       	cpi	r24, 0x58	; 88
    1d80:	59 f0       	breq	.+22     	; 0x1d98 <vfprintf+0x52c>
    1d82:	c3 c0       	rjmp	.+390    	; 0x1f0a <vfprintf+0x69e>
    1d84:	80 37       	cpi	r24, 0x70	; 112
    1d86:	19 f0       	breq	.+6      	; 0x1d8e <vfprintf+0x522>
    1d88:	88 37       	cpi	r24, 0x78	; 120
    1d8a:	11 f0       	breq	.+4      	; 0x1d90 <vfprintf+0x524>
    1d8c:	be c0       	rjmp	.+380    	; 0x1f0a <vfprintf+0x69e>
    1d8e:	00 61       	ori	r16, 0x10	; 16
    1d90:	04 ff       	sbrs	r16, 4
    1d92:	09 c0       	rjmp	.+18     	; 0x1da6 <vfprintf+0x53a>
    1d94:	04 60       	ori	r16, 0x04	; 4
    1d96:	07 c0       	rjmp	.+14     	; 0x1da6 <vfprintf+0x53a>
    1d98:	94 fe       	sbrs	r9, 4
    1d9a:	08 c0       	rjmp	.+16     	; 0x1dac <vfprintf+0x540>
    1d9c:	06 60       	ori	r16, 0x06	; 6
    1d9e:	06 c0       	rjmp	.+12     	; 0x1dac <vfprintf+0x540>
    1da0:	28 e0       	ldi	r18, 0x08	; 8
    1da2:	30 e0       	ldi	r19, 0x00	; 0
    1da4:	05 c0       	rjmp	.+10     	; 0x1db0 <vfprintf+0x544>
    1da6:	20 e1       	ldi	r18, 0x10	; 16
    1da8:	30 e0       	ldi	r19, 0x00	; 0
    1daa:	02 c0       	rjmp	.+4      	; 0x1db0 <vfprintf+0x544>
    1dac:	20 e1       	ldi	r18, 0x10	; 16
    1dae:	32 e0       	ldi	r19, 0x02	; 2
    1db0:	56 01       	movw	r10, r12
    1db2:	07 ff       	sbrs	r16, 7
    1db4:	09 c0       	rjmp	.+18     	; 0x1dc8 <vfprintf+0x55c>
    1db6:	84 e0       	ldi	r24, 0x04	; 4
    1db8:	a8 0e       	add	r10, r24
    1dba:	b1 1c       	adc	r11, r1
    1dbc:	f6 01       	movw	r30, r12
    1dbe:	60 81       	ld	r22, Z
    1dc0:	71 81       	ldd	r23, Z+1	; 0x01
    1dc2:	82 81       	ldd	r24, Z+2	; 0x02
    1dc4:	93 81       	ldd	r25, Z+3	; 0x03
    1dc6:	08 c0       	rjmp	.+16     	; 0x1dd8 <vfprintf+0x56c>
    1dc8:	f2 e0       	ldi	r31, 0x02	; 2
    1dca:	af 0e       	add	r10, r31
    1dcc:	b1 1c       	adc	r11, r1
    1dce:	f6 01       	movw	r30, r12
    1dd0:	60 81       	ld	r22, Z
    1dd2:	71 81       	ldd	r23, Z+1	; 0x01
    1dd4:	80 e0       	ldi	r24, 0x00	; 0
    1dd6:	90 e0       	ldi	r25, 0x00	; 0
    1dd8:	a3 01       	movw	r20, r6
    1dda:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <__ultoa_invert>
    1dde:	c8 2e       	mov	r12, r24
    1de0:	c6 18       	sub	r12, r6
    1de2:	0f 77       	andi	r16, 0x7F	; 127
    1de4:	90 2e       	mov	r9, r16
    1de6:	96 fe       	sbrs	r9, 6
    1de8:	0b c0       	rjmp	.+22     	; 0x1e00 <vfprintf+0x594>
    1dea:	09 2d       	mov	r16, r9
    1dec:	0e 7f       	andi	r16, 0xFE	; 254
    1dee:	c1 16       	cp	r12, r17
    1df0:	50 f4       	brcc	.+20     	; 0x1e06 <vfprintf+0x59a>
    1df2:	94 fe       	sbrs	r9, 4
    1df4:	0a c0       	rjmp	.+20     	; 0x1e0a <vfprintf+0x59e>
    1df6:	92 fc       	sbrc	r9, 2
    1df8:	08 c0       	rjmp	.+16     	; 0x1e0a <vfprintf+0x59e>
    1dfa:	09 2d       	mov	r16, r9
    1dfc:	0e 7e       	andi	r16, 0xEE	; 238
    1dfe:	05 c0       	rjmp	.+10     	; 0x1e0a <vfprintf+0x59e>
    1e00:	dc 2c       	mov	r13, r12
    1e02:	09 2d       	mov	r16, r9
    1e04:	03 c0       	rjmp	.+6      	; 0x1e0c <vfprintf+0x5a0>
    1e06:	dc 2c       	mov	r13, r12
    1e08:	01 c0       	rjmp	.+2      	; 0x1e0c <vfprintf+0x5a0>
    1e0a:	d1 2e       	mov	r13, r17
    1e0c:	04 ff       	sbrs	r16, 4
    1e0e:	0d c0       	rjmp	.+26     	; 0x1e2a <vfprintf+0x5be>
    1e10:	fe 01       	movw	r30, r28
    1e12:	ec 0d       	add	r30, r12
    1e14:	f1 1d       	adc	r31, r1
    1e16:	80 81       	ld	r24, Z
    1e18:	80 33       	cpi	r24, 0x30	; 48
    1e1a:	11 f4       	brne	.+4      	; 0x1e20 <vfprintf+0x5b4>
    1e1c:	09 7e       	andi	r16, 0xE9	; 233
    1e1e:	09 c0       	rjmp	.+18     	; 0x1e32 <vfprintf+0x5c6>
    1e20:	02 ff       	sbrs	r16, 2
    1e22:	06 c0       	rjmp	.+12     	; 0x1e30 <vfprintf+0x5c4>
    1e24:	d3 94       	inc	r13
    1e26:	d3 94       	inc	r13
    1e28:	04 c0       	rjmp	.+8      	; 0x1e32 <vfprintf+0x5c6>
    1e2a:	80 2f       	mov	r24, r16
    1e2c:	86 78       	andi	r24, 0x86	; 134
    1e2e:	09 f0       	breq	.+2      	; 0x1e32 <vfprintf+0x5c6>
    1e30:	d3 94       	inc	r13
    1e32:	03 fd       	sbrc	r16, 3
    1e34:	11 c0       	rjmp	.+34     	; 0x1e58 <vfprintf+0x5ec>
    1e36:	00 ff       	sbrs	r16, 0
    1e38:	06 c0       	rjmp	.+12     	; 0x1e46 <vfprintf+0x5da>
    1e3a:	1c 2d       	mov	r17, r12
    1e3c:	d5 14       	cp	r13, r5
    1e3e:	80 f4       	brcc	.+32     	; 0x1e60 <vfprintf+0x5f4>
    1e40:	15 0d       	add	r17, r5
    1e42:	1d 19       	sub	r17, r13
    1e44:	0d c0       	rjmp	.+26     	; 0x1e60 <vfprintf+0x5f4>
    1e46:	d5 14       	cp	r13, r5
    1e48:	58 f4       	brcc	.+22     	; 0x1e60 <vfprintf+0x5f4>
    1e4a:	b7 01       	movw	r22, r14
    1e4c:	80 e2       	ldi	r24, 0x20	; 32
    1e4e:	90 e0       	ldi	r25, 0x00	; 0
    1e50:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1e54:	d3 94       	inc	r13
    1e56:	f7 cf       	rjmp	.-18     	; 0x1e46 <vfprintf+0x5da>
    1e58:	d5 14       	cp	r13, r5
    1e5a:	10 f4       	brcc	.+4      	; 0x1e60 <vfprintf+0x5f4>
    1e5c:	5d 18       	sub	r5, r13
    1e5e:	01 c0       	rjmp	.+2      	; 0x1e62 <vfprintf+0x5f6>
    1e60:	51 2c       	mov	r5, r1
    1e62:	04 ff       	sbrs	r16, 4
    1e64:	10 c0       	rjmp	.+32     	; 0x1e86 <vfprintf+0x61a>
    1e66:	b7 01       	movw	r22, r14
    1e68:	80 e3       	ldi	r24, 0x30	; 48
    1e6a:	90 e0       	ldi	r25, 0x00	; 0
    1e6c:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1e70:	02 ff       	sbrs	r16, 2
    1e72:	17 c0       	rjmp	.+46     	; 0x1ea2 <vfprintf+0x636>
    1e74:	01 fd       	sbrc	r16, 1
    1e76:	03 c0       	rjmp	.+6      	; 0x1e7e <vfprintf+0x612>
    1e78:	88 e7       	ldi	r24, 0x78	; 120
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	02 c0       	rjmp	.+4      	; 0x1e82 <vfprintf+0x616>
    1e7e:	88 e5       	ldi	r24, 0x58	; 88
    1e80:	90 e0       	ldi	r25, 0x00	; 0
    1e82:	b7 01       	movw	r22, r14
    1e84:	0c c0       	rjmp	.+24     	; 0x1e9e <vfprintf+0x632>
    1e86:	80 2f       	mov	r24, r16
    1e88:	86 78       	andi	r24, 0x86	; 134
    1e8a:	59 f0       	breq	.+22     	; 0x1ea2 <vfprintf+0x636>
    1e8c:	01 ff       	sbrs	r16, 1
    1e8e:	02 c0       	rjmp	.+4      	; 0x1e94 <vfprintf+0x628>
    1e90:	8b e2       	ldi	r24, 0x2B	; 43
    1e92:	01 c0       	rjmp	.+2      	; 0x1e96 <vfprintf+0x62a>
    1e94:	80 e2       	ldi	r24, 0x20	; 32
    1e96:	07 fd       	sbrc	r16, 7
    1e98:	8d e2       	ldi	r24, 0x2D	; 45
    1e9a:	b7 01       	movw	r22, r14
    1e9c:	90 e0       	ldi	r25, 0x00	; 0
    1e9e:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1ea2:	c1 16       	cp	r12, r17
    1ea4:	38 f4       	brcc	.+14     	; 0x1eb4 <vfprintf+0x648>
    1ea6:	b7 01       	movw	r22, r14
    1ea8:	80 e3       	ldi	r24, 0x30	; 48
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1eb0:	11 50       	subi	r17, 0x01	; 1
    1eb2:	f7 cf       	rjmp	.-18     	; 0x1ea2 <vfprintf+0x636>
    1eb4:	ca 94       	dec	r12
    1eb6:	f3 01       	movw	r30, r6
    1eb8:	ec 0d       	add	r30, r12
    1eba:	f1 1d       	adc	r31, r1
    1ebc:	80 81       	ld	r24, Z
    1ebe:	b7 01       	movw	r22, r14
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1ec6:	c1 10       	cpse	r12, r1
    1ec8:	f5 cf       	rjmp	.-22     	; 0x1eb4 <vfprintf+0x648>
    1eca:	15 c0       	rjmp	.+42     	; 0x1ef6 <vfprintf+0x68a>
    1ecc:	f4 e0       	ldi	r31, 0x04	; 4
    1ece:	f5 15       	cp	r31, r5
    1ed0:	60 f5       	brcc	.+88     	; 0x1f2a <vfprintf+0x6be>
    1ed2:	84 e0       	ldi	r24, 0x04	; 4
    1ed4:	58 1a       	sub	r5, r24
    1ed6:	93 fe       	sbrs	r9, 3
    1ed8:	1f c0       	rjmp	.+62     	; 0x1f18 <vfprintf+0x6ac>
    1eda:	01 11       	cpse	r16, r1
    1edc:	27 c0       	rjmp	.+78     	; 0x1f2c <vfprintf+0x6c0>
    1ede:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ee0:	23 ff       	sbrs	r18, 3
    1ee2:	2a c0       	rjmp	.+84     	; 0x1f38 <vfprintf+0x6cc>
    1ee4:	04 eb       	ldi	r16, 0xB4	; 180
    1ee6:	10 e0       	ldi	r17, 0x00	; 0
    1ee8:	39 2d       	mov	r19, r9
    1eea:	30 71       	andi	r19, 0x10	; 16
    1eec:	93 2e       	mov	r9, r19
    1eee:	f8 01       	movw	r30, r16
    1ef0:	84 91       	lpm	r24, Z
    1ef2:	81 11       	cpse	r24, r1
    1ef4:	24 c0       	rjmp	.+72     	; 0x1f3e <vfprintf+0x6d2>
    1ef6:	55 20       	and	r5, r5
    1ef8:	09 f4       	brne	.+2      	; 0x1efc <vfprintf+0x690>
    1efa:	e4 cc       	rjmp	.-1592   	; 0x18c4 <vfprintf+0x58>
    1efc:	b7 01       	movw	r22, r14
    1efe:	80 e2       	ldi	r24, 0x20	; 32
    1f00:	90 e0       	ldi	r25, 0x00	; 0
    1f02:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1f06:	5a 94       	dec	r5
    1f08:	f6 cf       	rjmp	.-20     	; 0x1ef6 <vfprintf+0x68a>
    1f0a:	f7 01       	movw	r30, r14
    1f0c:	86 81       	ldd	r24, Z+6	; 0x06
    1f0e:	97 81       	ldd	r25, Z+7	; 0x07
    1f10:	26 c0       	rjmp	.+76     	; 0x1f5e <vfprintf+0x6f2>
    1f12:	8f ef       	ldi	r24, 0xFF	; 255
    1f14:	9f ef       	ldi	r25, 0xFF	; 255
    1f16:	23 c0       	rjmp	.+70     	; 0x1f5e <vfprintf+0x6f2>
    1f18:	b7 01       	movw	r22, r14
    1f1a:	80 e2       	ldi	r24, 0x20	; 32
    1f1c:	90 e0       	ldi	r25, 0x00	; 0
    1f1e:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1f22:	5a 94       	dec	r5
    1f24:	51 10       	cpse	r5, r1
    1f26:	f8 cf       	rjmp	.-16     	; 0x1f18 <vfprintf+0x6ac>
    1f28:	d8 cf       	rjmp	.-80     	; 0x1eda <vfprintf+0x66e>
    1f2a:	51 2c       	mov	r5, r1
    1f2c:	b7 01       	movw	r22, r14
    1f2e:	80 2f       	mov	r24, r16
    1f30:	90 e0       	ldi	r25, 0x00	; 0
    1f32:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1f36:	d3 cf       	rjmp	.-90     	; 0x1ede <vfprintf+0x672>
    1f38:	08 eb       	ldi	r16, 0xB8	; 184
    1f3a:	10 e0       	ldi	r17, 0x00	; 0
    1f3c:	d5 cf       	rjmp	.-86     	; 0x1ee8 <vfprintf+0x67c>
    1f3e:	91 10       	cpse	r9, r1
    1f40:	80 52       	subi	r24, 0x20	; 32
    1f42:	b7 01       	movw	r22, r14
    1f44:	90 e0       	ldi	r25, 0x00	; 0
    1f46:	0e 94 2a 11 	call	0x2254	; 0x2254 <fputc>
    1f4a:	0f 5f       	subi	r16, 0xFF	; 255
    1f4c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f4e:	cf cf       	rjmp	.-98     	; 0x1eee <vfprintf+0x682>
    1f50:	23 e0       	ldi	r18, 0x03	; 3
    1f52:	25 15       	cp	r18, r5
    1f54:	10 f4       	brcc	.+4      	; 0x1f5a <vfprintf+0x6ee>
    1f56:	83 e0       	ldi	r24, 0x03	; 3
    1f58:	bd cf       	rjmp	.-134    	; 0x1ed4 <vfprintf+0x668>
    1f5a:	51 2c       	mov	r5, r1
    1f5c:	c0 cf       	rjmp	.-128    	; 0x1ede <vfprintf+0x672>
    1f5e:	60 96       	adiw	r28, 0x10	; 16
    1f60:	e2 e1       	ldi	r30, 0x12	; 18
    1f62:	0c 94 f9 0f 	jmp	0x1ff2	; 0x1ff2 <__epilogue_restores__>

00001f66 <__udivmodsi4>:
    1f66:	a1 e2       	ldi	r26, 0x21	; 33
    1f68:	1a 2e       	mov	r1, r26
    1f6a:	aa 1b       	sub	r26, r26
    1f6c:	bb 1b       	sub	r27, r27
    1f6e:	fd 01       	movw	r30, r26
    1f70:	0d c0       	rjmp	.+26     	; 0x1f8c <__udivmodsi4_ep>

00001f72 <__udivmodsi4_loop>:
    1f72:	aa 1f       	adc	r26, r26
    1f74:	bb 1f       	adc	r27, r27
    1f76:	ee 1f       	adc	r30, r30
    1f78:	ff 1f       	adc	r31, r31
    1f7a:	a2 17       	cp	r26, r18
    1f7c:	b3 07       	cpc	r27, r19
    1f7e:	e4 07       	cpc	r30, r20
    1f80:	f5 07       	cpc	r31, r21
    1f82:	20 f0       	brcs	.+8      	; 0x1f8c <__udivmodsi4_ep>
    1f84:	a2 1b       	sub	r26, r18
    1f86:	b3 0b       	sbc	r27, r19
    1f88:	e4 0b       	sbc	r30, r20
    1f8a:	f5 0b       	sbc	r31, r21

00001f8c <__udivmodsi4_ep>:
    1f8c:	66 1f       	adc	r22, r22
    1f8e:	77 1f       	adc	r23, r23
    1f90:	88 1f       	adc	r24, r24
    1f92:	99 1f       	adc	r25, r25
    1f94:	1a 94       	dec	r1
    1f96:	69 f7       	brne	.-38     	; 0x1f72 <__udivmodsi4_loop>
    1f98:	60 95       	com	r22
    1f9a:	70 95       	com	r23
    1f9c:	80 95       	com	r24
    1f9e:	90 95       	com	r25
    1fa0:	9b 01       	movw	r18, r22
    1fa2:	ac 01       	movw	r20, r24
    1fa4:	bd 01       	movw	r22, r26
    1fa6:	cf 01       	movw	r24, r30
    1fa8:	08 95       	ret

00001faa <__mulshisi3>:
    1faa:	b7 ff       	sbrs	r27, 7
    1fac:	0c 94 14 10 	jmp	0x2028	; 0x2028 <__muluhisi3>

00001fb0 <__mulohisi3>:
    1fb0:	0e 94 14 10 	call	0x2028	; 0x2028 <__muluhisi3>
    1fb4:	82 1b       	sub	r24, r18
    1fb6:	93 0b       	sbc	r25, r19
    1fb8:	08 95       	ret

00001fba <__prologue_saves__>:
    1fba:	2f 92       	push	r2
    1fbc:	3f 92       	push	r3
    1fbe:	4f 92       	push	r4
    1fc0:	5f 92       	push	r5
    1fc2:	6f 92       	push	r6
    1fc4:	7f 92       	push	r7
    1fc6:	8f 92       	push	r8
    1fc8:	9f 92       	push	r9
    1fca:	af 92       	push	r10
    1fcc:	bf 92       	push	r11
    1fce:	cf 92       	push	r12
    1fd0:	df 92       	push	r13
    1fd2:	ef 92       	push	r14
    1fd4:	ff 92       	push	r15
    1fd6:	0f 93       	push	r16
    1fd8:	1f 93       	push	r17
    1fda:	cf 93       	push	r28
    1fdc:	df 93       	push	r29
    1fde:	cd b7       	in	r28, 0x3d	; 61
    1fe0:	de b7       	in	r29, 0x3e	; 62
    1fe2:	ca 1b       	sub	r28, r26
    1fe4:	db 0b       	sbc	r29, r27
    1fe6:	0f b6       	in	r0, 0x3f	; 63
    1fe8:	f8 94       	cli
    1fea:	de bf       	out	0x3e, r29	; 62
    1fec:	0f be       	out	0x3f, r0	; 63
    1fee:	cd bf       	out	0x3d, r28	; 61
    1ff0:	09 94       	ijmp

00001ff2 <__epilogue_restores__>:
    1ff2:	2a 88       	ldd	r2, Y+18	; 0x12
    1ff4:	39 88       	ldd	r3, Y+17	; 0x11
    1ff6:	48 88       	ldd	r4, Y+16	; 0x10
    1ff8:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ffa:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ffc:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ffe:	8c 84       	ldd	r8, Y+12	; 0x0c
    2000:	9b 84       	ldd	r9, Y+11	; 0x0b
    2002:	aa 84       	ldd	r10, Y+10	; 0x0a
    2004:	b9 84       	ldd	r11, Y+9	; 0x09
    2006:	c8 84       	ldd	r12, Y+8	; 0x08
    2008:	df 80       	ldd	r13, Y+7	; 0x07
    200a:	ee 80       	ldd	r14, Y+6	; 0x06
    200c:	fd 80       	ldd	r15, Y+5	; 0x05
    200e:	0c 81       	ldd	r16, Y+4	; 0x04
    2010:	1b 81       	ldd	r17, Y+3	; 0x03
    2012:	aa 81       	ldd	r26, Y+2	; 0x02
    2014:	b9 81       	ldd	r27, Y+1	; 0x01
    2016:	ce 0f       	add	r28, r30
    2018:	d1 1d       	adc	r29, r1
    201a:	0f b6       	in	r0, 0x3f	; 63
    201c:	f8 94       	cli
    201e:	de bf       	out	0x3e, r29	; 62
    2020:	0f be       	out	0x3f, r0	; 63
    2022:	cd bf       	out	0x3d, r28	; 61
    2024:	ed 01       	movw	r28, r26
    2026:	08 95       	ret

00002028 <__muluhisi3>:
    2028:	0e 94 1f 10 	call	0x203e	; 0x203e <__umulhisi3>
    202c:	a5 9f       	mul	r26, r21
    202e:	90 0d       	add	r25, r0
    2030:	b4 9f       	mul	r27, r20
    2032:	90 0d       	add	r25, r0
    2034:	a4 9f       	mul	r26, r20
    2036:	80 0d       	add	r24, r0
    2038:	91 1d       	adc	r25, r1
    203a:	11 24       	eor	r1, r1
    203c:	08 95       	ret

0000203e <__umulhisi3>:
    203e:	a2 9f       	mul	r26, r18
    2040:	b0 01       	movw	r22, r0
    2042:	b3 9f       	mul	r27, r19
    2044:	c0 01       	movw	r24, r0
    2046:	a3 9f       	mul	r26, r19
    2048:	70 0d       	add	r23, r0
    204a:	81 1d       	adc	r24, r1
    204c:	11 24       	eor	r1, r1
    204e:	91 1d       	adc	r25, r1
    2050:	b2 9f       	mul	r27, r18
    2052:	70 0d       	add	r23, r0
    2054:	81 1d       	adc	r24, r1
    2056:	11 24       	eor	r1, r1
    2058:	91 1d       	adc	r25, r1
    205a:	08 95       	ret

0000205c <__ftoa_engine>:
    205c:	28 30       	cpi	r18, 0x08	; 8
    205e:	08 f0       	brcs	.+2      	; 0x2062 <__ftoa_engine+0x6>
    2060:	27 e0       	ldi	r18, 0x07	; 7
    2062:	33 27       	eor	r19, r19
    2064:	da 01       	movw	r26, r20
    2066:	99 0f       	add	r25, r25
    2068:	31 1d       	adc	r19, r1
    206a:	87 fd       	sbrc	r24, 7
    206c:	91 60       	ori	r25, 0x01	; 1
    206e:	00 96       	adiw	r24, 0x00	; 0
    2070:	61 05       	cpc	r22, r1
    2072:	71 05       	cpc	r23, r1
    2074:	39 f4       	brne	.+14     	; 0x2084 <__ftoa_engine+0x28>
    2076:	32 60       	ori	r19, 0x02	; 2
    2078:	2e 5f       	subi	r18, 0xFE	; 254
    207a:	3d 93       	st	X+, r19
    207c:	30 e3       	ldi	r19, 0x30	; 48
    207e:	2a 95       	dec	r18
    2080:	e1 f7       	brne	.-8      	; 0x207a <__ftoa_engine+0x1e>
    2082:	08 95       	ret
    2084:	9f 3f       	cpi	r25, 0xFF	; 255
    2086:	30 f0       	brcs	.+12     	; 0x2094 <__ftoa_engine+0x38>
    2088:	80 38       	cpi	r24, 0x80	; 128
    208a:	71 05       	cpc	r23, r1
    208c:	61 05       	cpc	r22, r1
    208e:	09 f0       	breq	.+2      	; 0x2092 <__ftoa_engine+0x36>
    2090:	3c 5f       	subi	r19, 0xFC	; 252
    2092:	3c 5f       	subi	r19, 0xFC	; 252
    2094:	3d 93       	st	X+, r19
    2096:	91 30       	cpi	r25, 0x01	; 1
    2098:	08 f0       	brcs	.+2      	; 0x209c <__ftoa_engine+0x40>
    209a:	80 68       	ori	r24, 0x80	; 128
    209c:	91 1d       	adc	r25, r1
    209e:	df 93       	push	r29
    20a0:	cf 93       	push	r28
    20a2:	1f 93       	push	r17
    20a4:	0f 93       	push	r16
    20a6:	ff 92       	push	r15
    20a8:	ef 92       	push	r14
    20aa:	19 2f       	mov	r17, r25
    20ac:	98 7f       	andi	r25, 0xF8	; 248
    20ae:	96 95       	lsr	r25
    20b0:	e9 2f       	mov	r30, r25
    20b2:	96 95       	lsr	r25
    20b4:	96 95       	lsr	r25
    20b6:	e9 0f       	add	r30, r25
    20b8:	ff 27       	eor	r31, r31
    20ba:	ea 5e       	subi	r30, 0xEA	; 234
    20bc:	fe 4f       	sbci	r31, 0xFE	; 254
    20be:	99 27       	eor	r25, r25
    20c0:	33 27       	eor	r19, r19
    20c2:	ee 24       	eor	r14, r14
    20c4:	ff 24       	eor	r15, r15
    20c6:	a7 01       	movw	r20, r14
    20c8:	e7 01       	movw	r28, r14
    20ca:	05 90       	lpm	r0, Z+
    20cc:	08 94       	sec
    20ce:	07 94       	ror	r0
    20d0:	28 f4       	brcc	.+10     	; 0x20dc <__ftoa_engine+0x80>
    20d2:	36 0f       	add	r19, r22
    20d4:	e7 1e       	adc	r14, r23
    20d6:	f8 1e       	adc	r15, r24
    20d8:	49 1f       	adc	r20, r25
    20da:	51 1d       	adc	r21, r1
    20dc:	66 0f       	add	r22, r22
    20de:	77 1f       	adc	r23, r23
    20e0:	88 1f       	adc	r24, r24
    20e2:	99 1f       	adc	r25, r25
    20e4:	06 94       	lsr	r0
    20e6:	a1 f7       	brne	.-24     	; 0x20d0 <__ftoa_engine+0x74>
    20e8:	05 90       	lpm	r0, Z+
    20ea:	07 94       	ror	r0
    20ec:	28 f4       	brcc	.+10     	; 0x20f8 <__ftoa_engine+0x9c>
    20ee:	e7 0e       	add	r14, r23
    20f0:	f8 1e       	adc	r15, r24
    20f2:	49 1f       	adc	r20, r25
    20f4:	56 1f       	adc	r21, r22
    20f6:	c1 1d       	adc	r28, r1
    20f8:	77 0f       	add	r23, r23
    20fa:	88 1f       	adc	r24, r24
    20fc:	99 1f       	adc	r25, r25
    20fe:	66 1f       	adc	r22, r22
    2100:	06 94       	lsr	r0
    2102:	a1 f7       	brne	.-24     	; 0x20ec <__ftoa_engine+0x90>
    2104:	05 90       	lpm	r0, Z+
    2106:	07 94       	ror	r0
    2108:	28 f4       	brcc	.+10     	; 0x2114 <__ftoa_engine+0xb8>
    210a:	f8 0e       	add	r15, r24
    210c:	49 1f       	adc	r20, r25
    210e:	56 1f       	adc	r21, r22
    2110:	c7 1f       	adc	r28, r23
    2112:	d1 1d       	adc	r29, r1
    2114:	88 0f       	add	r24, r24
    2116:	99 1f       	adc	r25, r25
    2118:	66 1f       	adc	r22, r22
    211a:	77 1f       	adc	r23, r23
    211c:	06 94       	lsr	r0
    211e:	a1 f7       	brne	.-24     	; 0x2108 <__ftoa_engine+0xac>
    2120:	05 90       	lpm	r0, Z+
    2122:	07 94       	ror	r0
    2124:	20 f4       	brcc	.+8      	; 0x212e <__ftoa_engine+0xd2>
    2126:	49 0f       	add	r20, r25
    2128:	56 1f       	adc	r21, r22
    212a:	c7 1f       	adc	r28, r23
    212c:	d8 1f       	adc	r29, r24
    212e:	99 0f       	add	r25, r25
    2130:	66 1f       	adc	r22, r22
    2132:	77 1f       	adc	r23, r23
    2134:	88 1f       	adc	r24, r24
    2136:	06 94       	lsr	r0
    2138:	a9 f7       	brne	.-22     	; 0x2124 <__ftoa_engine+0xc8>
    213a:	84 91       	lpm	r24, Z
    213c:	10 95       	com	r17
    213e:	17 70       	andi	r17, 0x07	; 7
    2140:	41 f0       	breq	.+16     	; 0x2152 <__ftoa_engine+0xf6>
    2142:	d6 95       	lsr	r29
    2144:	c7 95       	ror	r28
    2146:	57 95       	ror	r21
    2148:	47 95       	ror	r20
    214a:	f7 94       	ror	r15
    214c:	e7 94       	ror	r14
    214e:	1a 95       	dec	r17
    2150:	c1 f7       	brne	.-16     	; 0x2142 <__ftoa_engine+0xe6>
    2152:	ec eb       	ldi	r30, 0xBC	; 188
    2154:	f0 e0       	ldi	r31, 0x00	; 0
    2156:	68 94       	set
    2158:	15 90       	lpm	r1, Z+
    215a:	15 91       	lpm	r17, Z+
    215c:	35 91       	lpm	r19, Z+
    215e:	65 91       	lpm	r22, Z+
    2160:	95 91       	lpm	r25, Z+
    2162:	05 90       	lpm	r0, Z+
    2164:	7f e2       	ldi	r23, 0x2F	; 47
    2166:	73 95       	inc	r23
    2168:	e1 18       	sub	r14, r1
    216a:	f1 0a       	sbc	r15, r17
    216c:	43 0b       	sbc	r20, r19
    216e:	56 0b       	sbc	r21, r22
    2170:	c9 0b       	sbc	r28, r25
    2172:	d0 09       	sbc	r29, r0
    2174:	c0 f7       	brcc	.-16     	; 0x2166 <__ftoa_engine+0x10a>
    2176:	e1 0c       	add	r14, r1
    2178:	f1 1e       	adc	r15, r17
    217a:	43 1f       	adc	r20, r19
    217c:	56 1f       	adc	r21, r22
    217e:	c9 1f       	adc	r28, r25
    2180:	d0 1d       	adc	r29, r0
    2182:	7e f4       	brtc	.+30     	; 0x21a2 <__ftoa_engine+0x146>
    2184:	70 33       	cpi	r23, 0x30	; 48
    2186:	11 f4       	brne	.+4      	; 0x218c <__ftoa_engine+0x130>
    2188:	8a 95       	dec	r24
    218a:	e6 cf       	rjmp	.-52     	; 0x2158 <__ftoa_engine+0xfc>
    218c:	e8 94       	clt
    218e:	01 50       	subi	r16, 0x01	; 1
    2190:	30 f0       	brcs	.+12     	; 0x219e <__ftoa_engine+0x142>
    2192:	08 0f       	add	r16, r24
    2194:	0a f4       	brpl	.+2      	; 0x2198 <__ftoa_engine+0x13c>
    2196:	00 27       	eor	r16, r16
    2198:	02 17       	cp	r16, r18
    219a:	08 f4       	brcc	.+2      	; 0x219e <__ftoa_engine+0x142>
    219c:	20 2f       	mov	r18, r16
    219e:	23 95       	inc	r18
    21a0:	02 2f       	mov	r16, r18
    21a2:	7a 33       	cpi	r23, 0x3A	; 58
    21a4:	28 f0       	brcs	.+10     	; 0x21b0 <__ftoa_engine+0x154>
    21a6:	79 e3       	ldi	r23, 0x39	; 57
    21a8:	7d 93       	st	X+, r23
    21aa:	2a 95       	dec	r18
    21ac:	e9 f7       	brne	.-6      	; 0x21a8 <__ftoa_engine+0x14c>
    21ae:	10 c0       	rjmp	.+32     	; 0x21d0 <__ftoa_engine+0x174>
    21b0:	7d 93       	st	X+, r23
    21b2:	2a 95       	dec	r18
    21b4:	89 f6       	brne	.-94     	; 0x2158 <__ftoa_engine+0xfc>
    21b6:	06 94       	lsr	r0
    21b8:	97 95       	ror	r25
    21ba:	67 95       	ror	r22
    21bc:	37 95       	ror	r19
    21be:	17 95       	ror	r17
    21c0:	17 94       	ror	r1
    21c2:	e1 18       	sub	r14, r1
    21c4:	f1 0a       	sbc	r15, r17
    21c6:	43 0b       	sbc	r20, r19
    21c8:	56 0b       	sbc	r21, r22
    21ca:	c9 0b       	sbc	r28, r25
    21cc:	d0 09       	sbc	r29, r0
    21ce:	98 f0       	brcs	.+38     	; 0x21f6 <__ftoa_engine+0x19a>
    21d0:	23 95       	inc	r18
    21d2:	7e 91       	ld	r23, -X
    21d4:	73 95       	inc	r23
    21d6:	7a 33       	cpi	r23, 0x3A	; 58
    21d8:	08 f0       	brcs	.+2      	; 0x21dc <__ftoa_engine+0x180>
    21da:	70 e3       	ldi	r23, 0x30	; 48
    21dc:	7c 93       	st	X, r23
    21de:	20 13       	cpse	r18, r16
    21e0:	b8 f7       	brcc	.-18     	; 0x21d0 <__ftoa_engine+0x174>
    21e2:	7e 91       	ld	r23, -X
    21e4:	70 61       	ori	r23, 0x10	; 16
    21e6:	7d 93       	st	X+, r23
    21e8:	30 f0       	brcs	.+12     	; 0x21f6 <__ftoa_engine+0x19a>
    21ea:	83 95       	inc	r24
    21ec:	71 e3       	ldi	r23, 0x31	; 49
    21ee:	7d 93       	st	X+, r23
    21f0:	70 e3       	ldi	r23, 0x30	; 48
    21f2:	2a 95       	dec	r18
    21f4:	e1 f7       	brne	.-8      	; 0x21ee <__ftoa_engine+0x192>
    21f6:	11 24       	eor	r1, r1
    21f8:	ef 90       	pop	r14
    21fa:	ff 90       	pop	r15
    21fc:	0f 91       	pop	r16
    21fe:	1f 91       	pop	r17
    2200:	cf 91       	pop	r28
    2202:	df 91       	pop	r29
    2204:	99 27       	eor	r25, r25
    2206:	87 fd       	sbrc	r24, 7
    2208:	90 95       	com	r25
    220a:	08 95       	ret

0000220c <strnlen_P>:
    220c:	fc 01       	movw	r30, r24
    220e:	05 90       	lpm	r0, Z+
    2210:	61 50       	subi	r22, 0x01	; 1
    2212:	70 40       	sbci	r23, 0x00	; 0
    2214:	01 10       	cpse	r0, r1
    2216:	d8 f7       	brcc	.-10     	; 0x220e <strnlen_P+0x2>
    2218:	80 95       	com	r24
    221a:	90 95       	com	r25
    221c:	8e 0f       	add	r24, r30
    221e:	9f 1f       	adc	r25, r31
    2220:	08 95       	ret

00002222 <strncmp>:
    2222:	fb 01       	movw	r30, r22
    2224:	dc 01       	movw	r26, r24
    2226:	41 50       	subi	r20, 0x01	; 1
    2228:	50 40       	sbci	r21, 0x00	; 0
    222a:	30 f0       	brcs	.+12     	; 0x2238 <strncmp+0x16>
    222c:	8d 91       	ld	r24, X+
    222e:	01 90       	ld	r0, Z+
    2230:	80 19       	sub	r24, r0
    2232:	19 f4       	brne	.+6      	; 0x223a <strncmp+0x18>
    2234:	00 20       	and	r0, r0
    2236:	b9 f7       	brne	.-18     	; 0x2226 <strncmp+0x4>
    2238:	88 1b       	sub	r24, r24
    223a:	99 0b       	sbc	r25, r25
    223c:	08 95       	ret

0000223e <strnlen>:
    223e:	fc 01       	movw	r30, r24
    2240:	61 50       	subi	r22, 0x01	; 1
    2242:	70 40       	sbci	r23, 0x00	; 0
    2244:	01 90       	ld	r0, Z+
    2246:	01 10       	cpse	r0, r1
    2248:	d8 f7       	brcc	.-10     	; 0x2240 <strnlen+0x2>
    224a:	80 95       	com	r24
    224c:	90 95       	com	r25
    224e:	8e 0f       	add	r24, r30
    2250:	9f 1f       	adc	r25, r31
    2252:	08 95       	ret

00002254 <fputc>:
    2254:	0f 93       	push	r16
    2256:	1f 93       	push	r17
    2258:	cf 93       	push	r28
    225a:	df 93       	push	r29
    225c:	fb 01       	movw	r30, r22
    225e:	23 81       	ldd	r18, Z+3	; 0x03
    2260:	21 fd       	sbrc	r18, 1
    2262:	03 c0       	rjmp	.+6      	; 0x226a <fputc+0x16>
    2264:	8f ef       	ldi	r24, 0xFF	; 255
    2266:	9f ef       	ldi	r25, 0xFF	; 255
    2268:	2c c0       	rjmp	.+88     	; 0x22c2 <fputc+0x6e>
    226a:	22 ff       	sbrs	r18, 2
    226c:	16 c0       	rjmp	.+44     	; 0x229a <fputc+0x46>
    226e:	46 81       	ldd	r20, Z+6	; 0x06
    2270:	57 81       	ldd	r21, Z+7	; 0x07
    2272:	24 81       	ldd	r18, Z+4	; 0x04
    2274:	35 81       	ldd	r19, Z+5	; 0x05
    2276:	42 17       	cp	r20, r18
    2278:	53 07       	cpc	r21, r19
    227a:	44 f4       	brge	.+16     	; 0x228c <fputc+0x38>
    227c:	a0 81       	ld	r26, Z
    227e:	b1 81       	ldd	r27, Z+1	; 0x01
    2280:	9d 01       	movw	r18, r26
    2282:	2f 5f       	subi	r18, 0xFF	; 255
    2284:	3f 4f       	sbci	r19, 0xFF	; 255
    2286:	31 83       	std	Z+1, r19	; 0x01
    2288:	20 83       	st	Z, r18
    228a:	8c 93       	st	X, r24
    228c:	26 81       	ldd	r18, Z+6	; 0x06
    228e:	37 81       	ldd	r19, Z+7	; 0x07
    2290:	2f 5f       	subi	r18, 0xFF	; 255
    2292:	3f 4f       	sbci	r19, 0xFF	; 255
    2294:	37 83       	std	Z+7, r19	; 0x07
    2296:	26 83       	std	Z+6, r18	; 0x06
    2298:	14 c0       	rjmp	.+40     	; 0x22c2 <fputc+0x6e>
    229a:	8b 01       	movw	r16, r22
    229c:	ec 01       	movw	r28, r24
    229e:	fb 01       	movw	r30, r22
    22a0:	00 84       	ldd	r0, Z+8	; 0x08
    22a2:	f1 85       	ldd	r31, Z+9	; 0x09
    22a4:	e0 2d       	mov	r30, r0
    22a6:	09 95       	icall
    22a8:	89 2b       	or	r24, r25
    22aa:	e1 f6       	brne	.-72     	; 0x2264 <fputc+0x10>
    22ac:	d8 01       	movw	r26, r16
    22ae:	16 96       	adiw	r26, 0x06	; 6
    22b0:	8d 91       	ld	r24, X+
    22b2:	9c 91       	ld	r25, X
    22b4:	17 97       	sbiw	r26, 0x07	; 7
    22b6:	01 96       	adiw	r24, 0x01	; 1
    22b8:	17 96       	adiw	r26, 0x07	; 7
    22ba:	9c 93       	st	X, r25
    22bc:	8e 93       	st	-X, r24
    22be:	16 97       	sbiw	r26, 0x06	; 6
    22c0:	ce 01       	movw	r24, r28
    22c2:	df 91       	pop	r29
    22c4:	cf 91       	pop	r28
    22c6:	1f 91       	pop	r17
    22c8:	0f 91       	pop	r16
    22ca:	08 95       	ret

000022cc <printf>:
    22cc:	a0 e0       	ldi	r26, 0x00	; 0
    22ce:	b0 e0       	ldi	r27, 0x00	; 0
    22d0:	ec e6       	ldi	r30, 0x6C	; 108
    22d2:	f1 e1       	ldi	r31, 0x11	; 17
    22d4:	0c 94 ed 0f 	jmp	0x1fda	; 0x1fda <__prologue_saves__+0x20>
    22d8:	ae 01       	movw	r20, r28
    22da:	4b 5f       	subi	r20, 0xFB	; 251
    22dc:	5f 4f       	sbci	r21, 0xFF	; 255
    22de:	fa 01       	movw	r30, r20
    22e0:	61 91       	ld	r22, Z+
    22e2:	71 91       	ld	r23, Z+
    22e4:	af 01       	movw	r20, r30
    22e6:	80 91 95 01 	lds	r24, 0x0195	; 0x800195 <__iob+0x2>
    22ea:	90 91 96 01 	lds	r25, 0x0196	; 0x800196 <__iob+0x3>
    22ee:	0e 94 36 0c 	call	0x186c	; 0x186c <vfprintf>
    22f2:	e2 e0       	ldi	r30, 0x02	; 2
    22f4:	0c 94 09 10 	jmp	0x2012	; 0x2012 <__epilogue_restores__+0x20>

000022f8 <__ultoa_invert>:
    22f8:	fa 01       	movw	r30, r20
    22fa:	aa 27       	eor	r26, r26
    22fc:	28 30       	cpi	r18, 0x08	; 8
    22fe:	51 f1       	breq	.+84     	; 0x2354 <__ultoa_invert+0x5c>
    2300:	20 31       	cpi	r18, 0x10	; 16
    2302:	81 f1       	breq	.+96     	; 0x2364 <__ultoa_invert+0x6c>
    2304:	e8 94       	clt
    2306:	6f 93       	push	r22
    2308:	6e 7f       	andi	r22, 0xFE	; 254
    230a:	6e 5f       	subi	r22, 0xFE	; 254
    230c:	7f 4f       	sbci	r23, 0xFF	; 255
    230e:	8f 4f       	sbci	r24, 0xFF	; 255
    2310:	9f 4f       	sbci	r25, 0xFF	; 255
    2312:	af 4f       	sbci	r26, 0xFF	; 255
    2314:	b1 e0       	ldi	r27, 0x01	; 1
    2316:	3e d0       	rcall	.+124    	; 0x2394 <__ultoa_invert+0x9c>
    2318:	b4 e0       	ldi	r27, 0x04	; 4
    231a:	3c d0       	rcall	.+120    	; 0x2394 <__ultoa_invert+0x9c>
    231c:	67 0f       	add	r22, r23
    231e:	78 1f       	adc	r23, r24
    2320:	89 1f       	adc	r24, r25
    2322:	9a 1f       	adc	r25, r26
    2324:	a1 1d       	adc	r26, r1
    2326:	68 0f       	add	r22, r24
    2328:	79 1f       	adc	r23, r25
    232a:	8a 1f       	adc	r24, r26
    232c:	91 1d       	adc	r25, r1
    232e:	a1 1d       	adc	r26, r1
    2330:	6a 0f       	add	r22, r26
    2332:	71 1d       	adc	r23, r1
    2334:	81 1d       	adc	r24, r1
    2336:	91 1d       	adc	r25, r1
    2338:	a1 1d       	adc	r26, r1
    233a:	20 d0       	rcall	.+64     	; 0x237c <__ultoa_invert+0x84>
    233c:	09 f4       	brne	.+2      	; 0x2340 <__ultoa_invert+0x48>
    233e:	68 94       	set
    2340:	3f 91       	pop	r19
    2342:	2a e0       	ldi	r18, 0x0A	; 10
    2344:	26 9f       	mul	r18, r22
    2346:	11 24       	eor	r1, r1
    2348:	30 19       	sub	r19, r0
    234a:	30 5d       	subi	r19, 0xD0	; 208
    234c:	31 93       	st	Z+, r19
    234e:	de f6       	brtc	.-74     	; 0x2306 <__ultoa_invert+0xe>
    2350:	cf 01       	movw	r24, r30
    2352:	08 95       	ret
    2354:	46 2f       	mov	r20, r22
    2356:	47 70       	andi	r20, 0x07	; 7
    2358:	40 5d       	subi	r20, 0xD0	; 208
    235a:	41 93       	st	Z+, r20
    235c:	b3 e0       	ldi	r27, 0x03	; 3
    235e:	0f d0       	rcall	.+30     	; 0x237e <__ultoa_invert+0x86>
    2360:	c9 f7       	brne	.-14     	; 0x2354 <__ultoa_invert+0x5c>
    2362:	f6 cf       	rjmp	.-20     	; 0x2350 <__ultoa_invert+0x58>
    2364:	46 2f       	mov	r20, r22
    2366:	4f 70       	andi	r20, 0x0F	; 15
    2368:	40 5d       	subi	r20, 0xD0	; 208
    236a:	4a 33       	cpi	r20, 0x3A	; 58
    236c:	18 f0       	brcs	.+6      	; 0x2374 <__ultoa_invert+0x7c>
    236e:	49 5d       	subi	r20, 0xD9	; 217
    2370:	31 fd       	sbrc	r19, 1
    2372:	40 52       	subi	r20, 0x20	; 32
    2374:	41 93       	st	Z+, r20
    2376:	02 d0       	rcall	.+4      	; 0x237c <__ultoa_invert+0x84>
    2378:	a9 f7       	brne	.-22     	; 0x2364 <__ultoa_invert+0x6c>
    237a:	ea cf       	rjmp	.-44     	; 0x2350 <__ultoa_invert+0x58>
    237c:	b4 e0       	ldi	r27, 0x04	; 4
    237e:	a6 95       	lsr	r26
    2380:	97 95       	ror	r25
    2382:	87 95       	ror	r24
    2384:	77 95       	ror	r23
    2386:	67 95       	ror	r22
    2388:	ba 95       	dec	r27
    238a:	c9 f7       	brne	.-14     	; 0x237e <__ultoa_invert+0x86>
    238c:	00 97       	sbiw	r24, 0x00	; 0
    238e:	61 05       	cpc	r22, r1
    2390:	71 05       	cpc	r23, r1
    2392:	08 95       	ret
    2394:	9b 01       	movw	r18, r22
    2396:	ac 01       	movw	r20, r24
    2398:	0a 2e       	mov	r0, r26
    239a:	06 94       	lsr	r0
    239c:	57 95       	ror	r21
    239e:	47 95       	ror	r20
    23a0:	37 95       	ror	r19
    23a2:	27 95       	ror	r18
    23a4:	ba 95       	dec	r27
    23a6:	c9 f7       	brne	.-14     	; 0x239a <__ultoa_invert+0xa2>
    23a8:	62 0f       	add	r22, r18
    23aa:	73 1f       	adc	r23, r19
    23ac:	84 1f       	adc	r24, r20
    23ae:	95 1f       	adc	r25, r21
    23b0:	a0 1d       	adc	r26, r0
    23b2:	08 95       	ret

000023b4 <_exit>:
    23b4:	f8 94       	cli

000023b6 <__stop_program>:
    23b6:	ff cf       	rjmp	.-2      	; 0x23b6 <__stop_program>
