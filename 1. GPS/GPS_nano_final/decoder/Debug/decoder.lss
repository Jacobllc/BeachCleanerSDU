
decoder.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  000024aa  0000253e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000024aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000063  00800112  00800112  00002550  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002550  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000025ac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c8  00000000  00000000  000025ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f24  00000000  00000000  000027b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f4e  00000000  00000000  000046d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f15  00000000  00000000  00005626  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000053c  00000000  00000000  0000653c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007be  00000000  00000000  00006a78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011e3  00000000  00000000  00007236  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00008419  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 49 01 	jmp	0x292	; 0x292 <__vector_1>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 10 09 	jmp	0x1220	; 0x1220 <__vector_18>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 b0 04 	jmp	0x960	; 0x960 <__vector_24>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 05       	cpc	r19, r15
      96:	a8 4c       	sbci	r26, 0xC8	; 200
      98:	cd b2       	in	r12, 0x1d	; 29
      9a:	d4 4e       	sbci	r29, 0xE4	; 228
      9c:	b9 38       	cpi	r27, 0x89	; 137
      9e:	36 a9       	ldd	r19, Z+54	; 0x36
      a0:	02 0c       	add	r0, r2
      a2:	50 b9       	out	0x00, r21	; 0
      a4:	91 86       	std	Z+9, r9	; 0x09
      a6:	88 08       	sbc	r8, r8
      a8:	3c a6       	std	Y+44, r3	; 0x2c
      aa:	aa aa       	std	Y+50, r10	; 0x32
      ac:	2a be       	out	0x3a, r2	; 58
      ae:	00 00       	nop
      b0:	00 80       	ld	r0, Z
      b2:	3f 00       	.word	0x003f	; ????

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ea ea       	ldi	r30, 0xAA	; 170
     1ca:	f4 e2       	ldi	r31, 0x24	; 36
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a2 31       	cpi	r26, 0x12	; 18
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a2 e1       	ldi	r26, 0x12	; 18
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a5 37       	cpi	r26, 0x75	; 117
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 fd 04 	call	0x9fa	; 0x9fa <main>
     1ec:	0c 94 53 12 	jmp	0x24a6	; 0x24a6 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <GPS_init>:

			usart_send('\r');
			usart_send('\n');
	}
	print_flag=1;
}
     1f4:	52 98       	cbi	0x0a, 2	; 10
     1f6:	8b b1       	in	r24, 0x0b	; 11
     1f8:	8b b9       	out	0x0b, r24	; 11
     1fa:	e8 9a       	sbi	0x1d, 0	; 29
     1fc:	e9 e6       	ldi	r30, 0x69	; 105
     1fe:	f0 e0       	ldi	r31, 0x00	; 0
     200:	80 81       	ld	r24, Z
     202:	83 60       	ori	r24, 0x03	; 3
     204:	80 83       	st	Z, r24
     206:	78 94       	sei
     208:	08 95       	ret

0000020a <get_gps_message>:
     20a:	dc 01       	movw	r26, r24
     20c:	80 91 67 01 	lds	r24, 0x0167	; 0x800167 <Gps_data+0x51>
     210:	90 91 68 01 	lds	r25, 0x0168	; 0x800168 <Gps_data+0x52>
     214:	81 30       	cpi	r24, 0x01	; 1
     216:	91 05       	cpc	r25, r1
     218:	61 f4       	brne	.+24     	; 0x232 <get_gps_message+0x28>
     21a:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <Gps_data+0x52>
     21e:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <Gps_data+0x51>
     222:	20 e5       	ldi	r18, 0x50	; 80
     224:	e7 e1       	ldi	r30, 0x17	; 23
     226:	f1 e0       	ldi	r31, 0x01	; 1
     228:	01 90       	ld	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	2a 95       	dec	r18
     22e:	e1 f7       	brne	.-8      	; 0x228 <get_gps_message+0x1e>
     230:	08 95       	ret
     232:	80 e0       	ldi	r24, 0x00	; 0
     234:	90 e0       	ldi	r25, 0x00	; 0
     236:	08 95       	ret

00000238 <stop_gps_sample>:
     238:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <process>
     23c:	10 92 6b 01 	sts	0x016B, r1	; 0x80016b <print_flag>
     240:	08 95       	ret

00000242 <read_gps_data>:
     242:	80 91 69 01 	lds	r24, 0x0169	; 0x800169 <process>
     246:	81 30       	cpi	r24, 0x01	; 1
     248:	19 f5       	brne	.+70     	; 0x290 <read_gps_data+0x4e>
     24a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <print_flag>
     24e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     252:	8a 30       	cpi	r24, 0x0A	; 10
     254:	81 f4       	brne	.+32     	; 0x276 <read_gps_data+0x34>
     256:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <byte>
     25a:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <Gps_data>
     25e:	8f ef       	ldi	r24, 0xFF	; 255
     260:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <byte>
     264:	81 e0       	ldi	r24, 0x01	; 1
     266:	90 e0       	ldi	r25, 0x00	; 0
     268:	90 93 68 01 	sts	0x0168, r25	; 0x800168 <Gps_data+0x52>
     26c:	80 93 67 01 	sts	0x0167, r24	; 0x800167 <Gps_data+0x51>
     270:	0e 94 1c 01 	call	0x238	; 0x238 <stop_gps_sample>
     274:	08 95       	ret
     276:	e0 91 6a 01 	lds	r30, 0x016A	; 0x80016a <byte>
     27a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     27e:	f0 e0       	ldi	r31, 0x00	; 0
     280:	ea 5e       	subi	r30, 0xEA	; 234
     282:	fe 4f       	sbci	r31, 0xFE	; 254
     284:	81 83       	std	Z+1, r24	; 0x01
     286:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <byte>
     28a:	8f 5f       	subi	r24, 0xFF	; 255
     28c:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <byte>
     290:	08 95       	ret

00000292 <__vector_1>:


ISR(INT0_vect) //Interrupt every data package start "Blue light" 
{
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	8f 93       	push	r24
	process=1;
     29e:	81 e0       	ldi	r24, 0x01	; 1
     2a0:	80 93 69 01 	sts	0x0169, r24	; 0x800169 <process>
	byte=-1;
     2a4:	8f ef       	ldi	r24, 0xFF	; 255
     2a6:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <byte>
	//PORTC &= ~(1<<PORTC0); //Set data_ready_flag LOW When bearing and distance had been send.
}
     2aa:	8f 91       	pop	r24
     2ac:	0f 90       	pop	r0
     2ae:	0f be       	out	0x3f, r0	; 63
     2b0:	0f 90       	pop	r0
     2b2:	1f 90       	pop	r1
     2b4:	18 95       	reti

000002b6 <dist_to_wp>:
	float rad;
	rad = ((deg * PI)/180.0);
	return rad;
}

void dist_to_wp(struct DATA *GPS_Data, coor_t WP){
     2b6:	2f 92       	push	r2
     2b8:	3f 92       	push	r3
     2ba:	4f 92       	push	r4
     2bc:	5f 92       	push	r5
     2be:	6f 92       	push	r6
     2c0:	7f 92       	push	r7
     2c2:	8f 92       	push	r8
     2c4:	9f 92       	push	r9
     2c6:	af 92       	push	r10
     2c8:	bf 92       	push	r11
     2ca:	cf 92       	push	r12
     2cc:	df 92       	push	r13
     2ce:	ef 92       	push	r14
     2d0:	ff 92       	push	r15
     2d2:	0f 93       	push	r16
     2d4:	1f 93       	push	r17
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	64 97       	sbiw	r28, 0x14	; 20
     2e0:	0f b6       	in	r0, 0x3f	; 63
     2e2:	f8 94       	cli
     2e4:	de bf       	out	0x3e, r29	; 62
     2e6:	0f be       	out	0x3f, r0	; 63
     2e8:	cd bf       	out	0x3d, r28	; 61
     2ea:	8c 01       	movw	r16, r24
     2ec:	89 82       	std	Y+1, r8	; 0x01
     2ee:	9a 82       	std	Y+2, r9	; 0x02
     2f0:	ab 82       	std	Y+3, r10	; 0x03
     2f2:	bc 82       	std	Y+4, r11	; 0x04
     2f4:	cd 82       	std	Y+5, r12	; 0x05
     2f6:	de 82       	std	Y+6, r13	; 0x06
     2f8:	4d 87       	std	Y+13, r20	; 0x0d
     2fa:	5e 87       	std	Y+14, r21	; 0x0e

	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
     2fc:	2d 80       	ldd	r2, Y+5	; 0x05
     2fe:	3e 80       	ldd	r3, Y+6	; 0x06
     300:	fc 01       	movw	r30, r24
     302:	82 85       	ldd	r24, Z+10	; 0x0a
     304:	93 85       	ldd	r25, Z+11	; 0x0b
     306:	28 1a       	sub	r2, r24
     308:	39 0a       	sbc	r3, r25
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL )); 
     30a:	6d 85       	ldd	r22, Y+13	; 0x0d
     30c:	7e 85       	ldd	r23, Y+14	; 0x0e
     30e:	81 8d       	ldd	r24, Z+25	; 0x19
     310:	92 8d       	ldd	r25, Z+26	; 0x1a
     312:	3b 01       	movw	r6, r22
     314:	68 1a       	sub	r6, r24
     316:	79 0a       	sbc	r7, r25
	
	//converting a b to dist in meters using formula for 1deg in m:
	if(first_dist==0){
     318:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <first_dist>
     31c:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <first_dist+0x1>
     320:	89 2b       	or	r24, r25
     322:	09 f0       	breq	.+2      	; 0x326 <dist_to_wp+0x70>
     324:	8a c0       	rjmp	.+276    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
     326:	c9 80       	ldd	r12, Y+1	; 0x01
     328:	da 80       	ldd	r13, Y+2	; 0x02
     32a:	eb 80       	ldd	r14, Y+3	; 0x03
     32c:	fc 80       	ldd	r15, Y+4	; 0x04
	m_pr_deg_lon = ((111.41288*cos( deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     32e:	2b ed       	ldi	r18, 0xDB	; 219
     330:	3f e0       	ldi	r19, 0x0F	; 15
     332:	49 e4       	ldi	r20, 0x49	; 73
     334:	50 e4       	ldi	r21, 0x40	; 64
     336:	c7 01       	movw	r24, r14
     338:	b6 01       	movw	r22, r12
     33a:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     33e:	20 e0       	ldi	r18, 0x00	; 0
     340:	30 e0       	ldi	r19, 0x00	; 0
     342:	44 e3       	ldi	r20, 0x34	; 52
     344:	53 e4       	ldi	r21, 0x43	; 67
     346:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     34a:	0e 94 18 0a 	call	0x1430	; 0x1430 <cos>
     34e:	69 8b       	std	Y+17, r22	; 0x11
     350:	7a 8b       	std	Y+18, r23	; 0x12
     352:	8b 8b       	std	Y+19, r24	; 0x13
     354:	9c 8b       	std	Y+20, r25	; 0x14
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	30 e0       	ldi	r19, 0x00	; 0
     35a:	40 e4       	ldi	r20, 0x40	; 64
     35c:	50 e4       	ldi	r21, 0x40	; 64
     35e:	c7 01       	movw	r24, r14
     360:	b6 01       	movw	r22, r12
     362:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     366:	2b ed       	ldi	r18, 0xDB	; 219
     368:	3f e0       	ldi	r19, 0x0F	; 15
     36a:	49 e4       	ldi	r20, 0x49	; 73
     36c:	50 e4       	ldi	r21, 0x40	; 64
     36e:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	44 e3       	ldi	r20, 0x34	; 52
     378:	53 e4       	ldi	r21, 0x43	; 67
     37a:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     37e:	0e 94 18 0a 	call	0x1430	; 0x1430 <cos>
     382:	4b 01       	movw	r8, r22
     384:	5c 01       	movw	r10, r24
     386:	20 e0       	ldi	r18, 0x00	; 0
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	40 ea       	ldi	r20, 0xA0	; 160
     38c:	50 e4       	ldi	r21, 0x40	; 64
     38e:	c7 01       	movw	r24, r14
     390:	b6 01       	movw	r22, r12
     392:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     396:	2b ed       	ldi	r18, 0xDB	; 219
     398:	3f e0       	ldi	r19, 0x0F	; 15
     39a:	49 e4       	ldi	r20, 0x49	; 73
     39c:	50 e4       	ldi	r21, 0x40	; 64
     39e:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	44 e3       	ldi	r20, 0x34	; 52
     3a8:	53 e4       	ldi	r21, 0x43	; 67
     3aa:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     3ae:	0e 94 18 0a 	call	0x1430	; 0x1430 <cos>
     3b2:	6b 01       	movw	r12, r22
     3b4:	7c 01       	movw	r14, r24
     3b6:	25 e6       	ldi	r18, 0x65	; 101
     3b8:	33 ed       	ldi	r19, 0xD3	; 211
     3ba:	4e ed       	ldi	r20, 0xDE	; 222
     3bc:	52 e4       	ldi	r21, 0x42	; 66
     3be:	69 89       	ldd	r22, Y+17	; 0x11
     3c0:	7a 89       	ldd	r23, Y+18	; 0x12
     3c2:	8b 89       	ldd	r24, Y+19	; 0x13
     3c4:	9c 89       	ldd	r25, Y+20	; 0x14
     3c6:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     3ca:	69 8b       	std	Y+17, r22	; 0x11
     3cc:	7a 8b       	std	Y+18, r23	; 0x12
     3ce:	8b 8b       	std	Y+19, r24	; 0x13
     3d0:	9c 8b       	std	Y+20, r25	; 0x14
     3d2:	2e ee       	ldi	r18, 0xEE	; 238
     3d4:	3c e7       	ldi	r19, 0x7C	; 124
     3d6:	4f eb       	ldi	r20, 0xBF	; 191
     3d8:	5d e3       	ldi	r21, 0x3D	; 61
     3da:	c5 01       	movw	r24, r10
     3dc:	b4 01       	movw	r22, r8
     3de:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     3e2:	9b 01       	movw	r18, r22
     3e4:	ac 01       	movw	r20, r24
     3e6:	69 89       	ldd	r22, Y+17	; 0x11
     3e8:	7a 89       	ldd	r23, Y+18	; 0x12
     3ea:	8b 89       	ldd	r24, Y+19	; 0x13
     3ec:	9c 89       	ldd	r25, Y+20	; 0x14
     3ee:	0e 94 34 09 	call	0x1268	; 0x1268 <__subsf3>
     3f2:	4b 01       	movw	r8, r22
     3f4:	5c 01       	movw	r10, r24
     3f6:	22 e8       	ldi	r18, 0x82	; 130
     3f8:	38 ea       	ldi	r19, 0xA8	; 168
     3fa:	4b ef       	ldi	r20, 0xFB	; 251
     3fc:	58 e3       	ldi	r21, 0x38	; 56
     3fe:	c7 01       	movw	r24, r14
     400:	b6 01       	movw	r22, r12
     402:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     406:	9b 01       	movw	r18, r22
     408:	ac 01       	movw	r20, r24
     40a:	c5 01       	movw	r24, r10
     40c:	b4 01       	movw	r22, r8
     40e:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     412:	20 e0       	ldi	r18, 0x00	; 0
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	4a e7       	ldi	r20, 0x7A	; 122
     418:	54 e4       	ldi	r21, 0x44	; 68
     41a:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     41e:	60 93 6c 01 	sts	0x016C, r22	; 0x80016c <m_pr_deg_lon>
     422:	70 93 6d 01 	sts	0x016D, r23	; 0x80016d <m_pr_deg_lon+0x1>
     426:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <m_pr_deg_lon+0x2>
     42a:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <m_pr_deg_lon+0x3>
	first_dist++;
     42e:	81 e0       	ldi	r24, 0x01	; 1
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <first_dist+0x1>
     436:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <first_dist>
	}
	
	float c = a * m_pr_deg_lat;
     43a:	b1 01       	movw	r22, r2
     43c:	33 0c       	add	r3, r3
     43e:	88 0b       	sbc	r24, r24
     440:	99 0b       	sbc	r25, r25
     442:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     446:	28 e0       	ldi	r18, 0x08	; 8
     448:	39 ea       	ldi	r19, 0xA9	; 169
     44a:	47 e8       	ldi	r20, 0x87	; 135
     44c:	59 e4       	ldi	r21, 0x49	; 73
     44e:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     452:	4b 01       	movw	r8, r22
     454:	5c 01       	movw	r10, r24
	float d = b * m_pr_deg_lon;
     456:	b3 01       	movw	r22, r6
     458:	77 0c       	add	r7, r7
     45a:	88 0b       	sbc	r24, r24
     45c:	99 0b       	sbc	r25, r25
     45e:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     462:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <m_pr_deg_lon>
     466:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <m_pr_deg_lon+0x1>
     46a:	40 91 6e 01 	lds	r20, 0x016E	; 0x80016e <m_pr_deg_lon+0x2>
     46e:	50 91 6f 01 	lds	r21, 0x016F	; 0x80016f <m_pr_deg_lon+0x3>
     472:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     476:	6b 01       	movw	r12, r22
     478:	7c 01       	movw	r14, r24
	
	//finding dist between pos and wp
	float dist = (sqrt(pow(c,2) + pow(d,2)))/1000000 ;
     47a:	a5 01       	movw	r20, r10
     47c:	94 01       	movw	r18, r8
     47e:	c5 01       	movw	r24, r10
     480:	b4 01       	movw	r22, r8
     482:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     486:	4b 01       	movw	r8, r22
     488:	5c 01       	movw	r10, r24
     48a:	a7 01       	movw	r20, r14
     48c:	96 01       	movw	r18, r12
     48e:	c7 01       	movw	r24, r14
     490:	b6 01       	movw	r22, r12
     492:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     496:	9b 01       	movw	r18, r22
     498:	ac 01       	movw	r20, r24
     49a:	c5 01       	movw	r24, r10
     49c:	b4 01       	movw	r22, r8
     49e:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     4a2:	0e 94 58 0c 	call	0x18b0	; 0x18b0 <sqrt>
	
	GPS_Data->dist_wp = dist; 
     4a6:	20 e0       	ldi	r18, 0x00	; 0
     4a8:	34 e2       	ldi	r19, 0x24	; 36
     4aa:	44 e7       	ldi	r20, 0x74	; 116
     4ac:	59 e4       	ldi	r21, 0x49	; 73
     4ae:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     4b2:	f8 01       	movw	r30, r16
     4b4:	60 a7       	std	Z+40, r22	; 0x28
     4b6:	71 a7       	std	Z+41, r23	; 0x29
     4b8:	82 a7       	std	Z+42, r24	; 0x2a
     4ba:	93 a7       	std	Z+43, r25	; 0x2b
}
     4bc:	64 96       	adiw	r28, 0x14	; 20
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	ff 90       	pop	r15
     4d2:	ef 90       	pop	r14
     4d4:	df 90       	pop	r13
     4d6:	cf 90       	pop	r12
     4d8:	bf 90       	pop	r11
     4da:	af 90       	pop	r10
     4dc:	9f 90       	pop	r9
     4de:	8f 90       	pop	r8
     4e0:	7f 90       	pop	r7
     4e2:	6f 90       	pop	r6
     4e4:	5f 90       	pop	r5
     4e6:	4f 90       	pop	r4
     4e8:	3f 90       	pop	r3
     4ea:	2f 90       	pop	r2
     4ec:	08 95       	ret

000004ee <bearing_to_wp>:

void bearing_to_wp(struct DATA *GPS_Data, coor_t WP){
     4ee:	2f 92       	push	r2
     4f0:	3f 92       	push	r3
     4f2:	4f 92       	push	r4
     4f4:	5f 92       	push	r5
     4f6:	6f 92       	push	r6
     4f8:	7f 92       	push	r7
     4fa:	8f 92       	push	r8
     4fc:	9f 92       	push	r9
     4fe:	af 92       	push	r10
     500:	bf 92       	push	r11
     502:	cf 92       	push	r12
     504:	df 92       	push	r13
     506:	ef 92       	push	r14
     508:	ff 92       	push	r15
     50a:	0f 93       	push	r16
     50c:	1f 93       	push	r17
     50e:	cf 93       	push	r28
     510:	df 93       	push	r29
     512:	cd b7       	in	r28, 0x3d	; 61
     514:	de b7       	in	r29, 0x3e	; 62
     516:	64 97       	sbiw	r28, 0x14	; 20
     518:	0f b6       	in	r0, 0x3f	; 63
     51a:	f8 94       	cli
     51c:	de bf       	out	0x3e, r29	; 62
     51e:	0f be       	out	0x3f, r0	; 63
     520:	cd bf       	out	0x3d, r28	; 61
     522:	8c 01       	movw	r16, r24
     524:	89 82       	std	Y+1, r8	; 0x01
     526:	9a 82       	std	Y+2, r9	; 0x02
     528:	ab 82       	std	Y+3, r10	; 0x03
     52a:	bc 82       	std	Y+4, r11	; 0x04
     52c:	cd 82       	std	Y+5, r12	; 0x05
     52e:	de 82       	std	Y+6, r13	; 0x06
     530:	4d 87       	std	Y+13, r20	; 0x0d
     532:	5e 87       	std	Y+14, r21	; 0x0e
	
	int a=  (WP.LAT_int - ( GPS_Data->LAT_FINAL ));
     534:	2d 80       	ldd	r2, Y+5	; 0x05
     536:	3e 80       	ldd	r3, Y+6	; 0x06
     538:	fc 01       	movw	r30, r24
     53a:	82 85       	ldd	r24, Z+10	; 0x0a
     53c:	93 85       	ldd	r25, Z+11	; 0x0b
     53e:	28 1a       	sub	r2, r24
     540:	39 0a       	sbc	r3, r25
	int b=  (WP.LON_int - ( GPS_Data->LON_FINAL ));
     542:	6d 85       	ldd	r22, Y+13	; 0x0d
     544:	7e 85       	ldd	r23, Y+14	; 0x0e
     546:	81 8d       	ldd	r24, Z+25	; 0x19
     548:	92 8d       	ldd	r25, Z+26	; 0x1a
     54a:	5b 01       	movw	r10, r22
     54c:	a8 1a       	sub	r10, r24
     54e:	b9 0a       	sbc	r11, r25
	
	//converting a b to dist in meters using formula for 1deg in m:
	if(first_bearing==0){
     550:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
     554:	90 91 13 01 	lds	r25, 0x0113	; 0x800113 <__data_end+0x1>
     558:	89 2b       	or	r24, r25
     55a:	09 f0       	breq	.+2      	; 0x55e <bearing_to_wp+0x70>
     55c:	86 c0       	rjmp	.+268    	; 0x66a <bearing_to_wp+0x17c>
     55e:	c9 80       	ldd	r12, Y+1	; 0x01
     560:	da 80       	ldd	r13, Y+2	; 0x02
     562:	eb 80       	ldd	r14, Y+3	; 0x03
     564:	fc 80       	ldd	r15, Y+4	; 0x04
	m_pr_deg_lon = ((111.41288*cos(deg_to_rad(WP.LAT) ) ) - (0.09350*cos( deg_to_rad(3*WP.LAT) ) ) + (0.00012*cos( deg_to_rad(5*WP.LAT) ) )  )*1000;
     566:	2b ed       	ldi	r18, 0xDB	; 219
     568:	3f e0       	ldi	r19, 0x0F	; 15
     56a:	49 e4       	ldi	r20, 0x49	; 73
     56c:	50 e4       	ldi	r21, 0x40	; 64
     56e:	c7 01       	movw	r24, r14
     570:	b6 01       	movw	r22, r12
     572:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	44 e3       	ldi	r20, 0x34	; 52
     57c:	53 e4       	ldi	r21, 0x43	; 67
     57e:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     582:	0e 94 18 0a 	call	0x1430	; 0x1430 <cos>
     586:	2b 01       	movw	r4, r22
     588:	3c 01       	movw	r6, r24
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	40 e4       	ldi	r20, 0x40	; 64
     590:	50 e4       	ldi	r21, 0x40	; 64
     592:	c7 01       	movw	r24, r14
     594:	b6 01       	movw	r22, r12
     596:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     59a:	2b ed       	ldi	r18, 0xDB	; 219
     59c:	3f e0       	ldi	r19, 0x0F	; 15
     59e:	49 e4       	ldi	r20, 0x49	; 73
     5a0:	50 e4       	ldi	r21, 0x40	; 64
     5a2:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     5a6:	20 e0       	ldi	r18, 0x00	; 0
     5a8:	30 e0       	ldi	r19, 0x00	; 0
     5aa:	44 e3       	ldi	r20, 0x34	; 52
     5ac:	53 e4       	ldi	r21, 0x43	; 67
     5ae:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     5b2:	0e 94 18 0a 	call	0x1430	; 0x1430 <cos>
     5b6:	69 8b       	std	Y+17, r22	; 0x11
     5b8:	7a 8b       	std	Y+18, r23	; 0x12
     5ba:	8b 8b       	std	Y+19, r24	; 0x13
     5bc:	9c 8b       	std	Y+20, r25	; 0x14
     5be:	20 e0       	ldi	r18, 0x00	; 0
     5c0:	30 e0       	ldi	r19, 0x00	; 0
     5c2:	40 ea       	ldi	r20, 0xA0	; 160
     5c4:	50 e4       	ldi	r21, 0x40	; 64
     5c6:	c7 01       	movw	r24, r14
     5c8:	b6 01       	movw	r22, r12
     5ca:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     5ce:	2b ed       	ldi	r18, 0xDB	; 219
     5d0:	3f e0       	ldi	r19, 0x0F	; 15
     5d2:	49 e4       	ldi	r20, 0x49	; 73
     5d4:	50 e4       	ldi	r21, 0x40	; 64
     5d6:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     5da:	20 e0       	ldi	r18, 0x00	; 0
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	44 e3       	ldi	r20, 0x34	; 52
     5e0:	53 e4       	ldi	r21, 0x43	; 67
     5e2:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     5e6:	0e 94 18 0a 	call	0x1430	; 0x1430 <cos>
     5ea:	6b 01       	movw	r12, r22
     5ec:	7c 01       	movw	r14, r24
     5ee:	25 e6       	ldi	r18, 0x65	; 101
     5f0:	33 ed       	ldi	r19, 0xD3	; 211
     5f2:	4e ed       	ldi	r20, 0xDE	; 222
     5f4:	52 e4       	ldi	r21, 0x42	; 66
     5f6:	c3 01       	movw	r24, r6
     5f8:	b2 01       	movw	r22, r4
     5fa:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     5fe:	2b 01       	movw	r4, r22
     600:	3c 01       	movw	r6, r24
     602:	2e ee       	ldi	r18, 0xEE	; 238
     604:	3c e7       	ldi	r19, 0x7C	; 124
     606:	4f eb       	ldi	r20, 0xBF	; 191
     608:	5d e3       	ldi	r21, 0x3D	; 61
     60a:	69 89       	ldd	r22, Y+17	; 0x11
     60c:	7a 89       	ldd	r23, Y+18	; 0x12
     60e:	8b 89       	ldd	r24, Y+19	; 0x13
     610:	9c 89       	ldd	r25, Y+20	; 0x14
     612:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     616:	9b 01       	movw	r18, r22
     618:	ac 01       	movw	r20, r24
     61a:	c3 01       	movw	r24, r6
     61c:	b2 01       	movw	r22, r4
     61e:	0e 94 34 09 	call	0x1268	; 0x1268 <__subsf3>
     622:	2b 01       	movw	r4, r22
     624:	3c 01       	movw	r6, r24
     626:	22 e8       	ldi	r18, 0x82	; 130
     628:	38 ea       	ldi	r19, 0xA8	; 168
     62a:	4b ef       	ldi	r20, 0xFB	; 251
     62c:	58 e3       	ldi	r21, 0x38	; 56
     62e:	c7 01       	movw	r24, r14
     630:	b6 01       	movw	r22, r12
     632:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     636:	9b 01       	movw	r18, r22
     638:	ac 01       	movw	r20, r24
     63a:	c3 01       	movw	r24, r6
     63c:	b2 01       	movw	r22, r4
     63e:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     642:	20 e0       	ldi	r18, 0x00	; 0
     644:	30 e0       	ldi	r19, 0x00	; 0
     646:	4a e7       	ldi	r20, 0x7A	; 122
     648:	54 e4       	ldi	r21, 0x44	; 68
     64a:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     64e:	60 93 6c 01 	sts	0x016C, r22	; 0x80016c <m_pr_deg_lon>
     652:	70 93 6d 01 	sts	0x016D, r23	; 0x80016d <m_pr_deg_lon+0x1>
     656:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <m_pr_deg_lon+0x2>
     65a:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <m_pr_deg_lon+0x3>
	first_bearing++;
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x1>
     666:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
	}
	
	float c = a * m_pr_deg_lat;
     66a:	b1 01       	movw	r22, r2
     66c:	33 0c       	add	r3, r3
     66e:	88 0b       	sbc	r24, r24
     670:	99 0b       	sbc	r25, r25
     672:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     676:	28 e0       	ldi	r18, 0x08	; 8
     678:	39 ea       	ldi	r19, 0xA9	; 169
     67a:	47 e8       	ldi	r20, 0x87	; 135
     67c:	59 e4       	ldi	r21, 0x49	; 73
     67e:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     682:	6b 01       	movw	r12, r22
     684:	7c 01       	movw	r14, r24
	float d = b * m_pr_deg_lon;
     686:	b5 01       	movw	r22, r10
     688:	bb 0c       	add	r11, r11
     68a:	88 0b       	sbc	r24, r24
     68c:	99 0b       	sbc	r25, r25
     68e:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     692:	20 91 6c 01 	lds	r18, 0x016C	; 0x80016c <m_pr_deg_lon>
     696:	30 91 6d 01 	lds	r19, 0x016D	; 0x80016d <m_pr_deg_lon+0x1>
     69a:	40 91 6e 01 	lds	r20, 0x016E	; 0x80016e <m_pr_deg_lon+0x2>
     69e:	50 91 6f 01 	lds	r21, 0x016F	; 0x80016f <m_pr_deg_lon+0x3>
     6a2:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     6a6:	4b 01       	movw	r8, r22
     6a8:	5c 01       	movw	r10, r24
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     6aa:	20 e0       	ldi	r18, 0x00	; 0
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	a9 01       	movw	r20, r18
     6b0:	c7 01       	movw	r24, r14
     6b2:	b6 01       	movw	r22, r12
     6b4:	0e 94 13 0a 	call	0x1426	; 0x1426 <__cmpsf2>
     6b8:	88 23       	and	r24, r24
     6ba:	09 f4       	brne	.+2      	; 0x6be <bearing_to_wp+0x1d0>
     6bc:	4b c0       	rjmp	.+150    	; 0x754 <bearing_to_wp+0x266>
	if(d==0){ d=0.000001;};
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	a9 01       	movw	r20, r18
     6c4:	c5 01       	movw	r24, r10
     6c6:	b4 01       	movw	r22, r8
     6c8:	0e 94 13 0a 	call	0x1426	; 0x1426 <__cmpsf2>
     6cc:	81 11       	cpse	r24, r1
     6ce:	0a c0       	rjmp	.+20     	; 0x6e4 <bearing_to_wp+0x1f6>
     6d0:	0f 2e       	mov	r0, r31
     6d2:	fd eb       	ldi	r31, 0xBD	; 189
     6d4:	8f 2e       	mov	r8, r31
     6d6:	f7 e3       	ldi	r31, 0x37	; 55
     6d8:	9f 2e       	mov	r9, r31
     6da:	f6 e8       	ldi	r31, 0x86	; 134
     6dc:	af 2e       	mov	r10, r31
     6de:	f5 e3       	ldi	r31, 0x35	; 53
     6e0:	bf 2e       	mov	r11, r31
     6e2:	f0 2d       	mov	r31, r0
	
	float angle = atan2(d, c);
     6e4:	a7 01       	movw	r20, r14
     6e6:	96 01       	movw	r18, r12
     6e8:	c5 01       	movw	r24, r10
     6ea:	b4 01       	movw	r22, r8
     6ec:	0e 94 b4 09 	call	0x1368	; 0x1368 <atan2>
     6f0:	6b 01       	movw	r12, r22
     6f2:	7c 01       	movw	r14, r24
	
	if(angle<0){
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	a9 01       	movw	r20, r18
     6fa:	0e 94 13 0a 	call	0x1426	; 0x1426 <__cmpsf2>
     6fe:	88 23       	and	r24, r24
     700:	ac f4       	brge	.+42     	; 0x72c <bearing_to_wp+0x23e>
		angle = angle - (PI/2);
     702:	2b ed       	ldi	r18, 0xDB	; 219
     704:	3f e0       	ldi	r19, 0x0F	; 15
     706:	49 ec       	ldi	r20, 0xC9	; 201
     708:	5f e3       	ldi	r21, 0x3F	; 63
     70a:	c7 01       	movw	r24, r14
     70c:	b6 01       	movw	r22, r12
     70e:	0e 94 34 09 	call	0x1268	; 0x1268 <__subsf3>
     712:	6b 01       	movw	r12, r22
     714:	7c 01       	movw	r14, r24
     716:	0a c0       	rjmp	.+20     	; 0x72c <bearing_to_wp+0x23e>
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
	
	float angle = atan2(d, c);
     718:	0f 2e       	mov	r0, r31
     71a:	fb ed       	ldi	r31, 0xDB	; 219
     71c:	cf 2e       	mov	r12, r31
     71e:	ff e0       	ldi	r31, 0x0F	; 15
     720:	df 2e       	mov	r13, r31
     722:	f9 e4       	ldi	r31, 0x49	; 73
     724:	ef 2e       	mov	r14, r31
     726:	ff e3       	ldi	r31, 0x3F	; 63
     728:	ff 2e       	mov	r15, r31
     72a:	f0 2d       	mov	r31, r0
	
	if(angle<0){
		angle = angle - (PI/2);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
     72c:	20 e0       	ldi	r18, 0x00	; 0
     72e:	30 e0       	ldi	r19, 0x00	; 0
     730:	44 e3       	ldi	r20, 0x34	; 52
     732:	53 e4       	ldi	r21, 0x43	; 67
     734:	c7 01       	movw	r24, r14
     736:	b6 01       	movw	r22, r12
     738:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     73c:	2b ed       	ldi	r18, 0xDB	; 219
     73e:	3f e0       	ldi	r19, 0x0F	; 15
     740:	49 e4       	ldi	r20, 0x49	; 73
     742:	50 e4       	ldi	r21, 0x40	; 64
     744:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     748:	f8 01       	movw	r30, r16
     74a:	64 a7       	std	Z+44, r22	; 0x2c
     74c:	75 a7       	std	Z+45, r23	; 0x2d
     74e:	86 a7       	std	Z+46, r24	; 0x2e
     750:	97 a7       	std	Z+47, r25	; 0x2f
}
     752:	14 c0       	rjmp	.+40     	; 0x77c <bearing_to_wp+0x28e>
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
	if(d==0){ d=0.000001;};
     754:	20 e0       	ldi	r18, 0x00	; 0
     756:	30 e0       	ldi	r19, 0x00	; 0
     758:	a9 01       	movw	r20, r18
     75a:	c5 01       	movw	r24, r10
     75c:	b4 01       	movw	r22, r8
     75e:	0e 94 13 0a 	call	0x1426	; 0x1426 <__cmpsf2>
     762:	88 23       	and	r24, r24
     764:	c9 f2       	breq	.-78     	; 0x718 <bearing_to_wp+0x22a>
	}
	
	float c = a * m_pr_deg_lat;
	float d = b * m_pr_deg_lon;
	
	if(c==0){ c=0.000001;}; //To avoid divide by 0 error.
     766:	0f 2e       	mov	r0, r31
     768:	fd eb       	ldi	r31, 0xBD	; 189
     76a:	cf 2e       	mov	r12, r31
     76c:	f7 e3       	ldi	r31, 0x37	; 55
     76e:	df 2e       	mov	r13, r31
     770:	f6 e8       	ldi	r31, 0x86	; 134
     772:	ef 2e       	mov	r14, r31
     774:	f5 e3       	ldi	r31, 0x35	; 53
     776:	ff 2e       	mov	r15, r31
     778:	f0 2d       	mov	r31, r0
     77a:	b4 cf       	rjmp	.-152    	; 0x6e4 <bearing_to_wp+0x1f6>
	if(angle<0){
		angle = angle - (PI/2);
	}
	
	GPS_Data->bearing_wp = rad_to_deg(angle);
}
     77c:	64 96       	adiw	r28, 0x14	; 20
     77e:	0f b6       	in	r0, 0x3f	; 63
     780:	f8 94       	cli
     782:	de bf       	out	0x3e, r29	; 62
     784:	0f be       	out	0x3f, r0	; 63
     786:	cd bf       	out	0x3d, r28	; 61
     788:	df 91       	pop	r29
     78a:	cf 91       	pop	r28
     78c:	1f 91       	pop	r17
     78e:	0f 91       	pop	r16
     790:	ff 90       	pop	r15
     792:	ef 90       	pop	r14
     794:	df 90       	pop	r13
     796:	cf 90       	pop	r12
     798:	bf 90       	pop	r11
     79a:	af 90       	pop	r10
     79c:	9f 90       	pop	r9
     79e:	8f 90       	pop	r8
     7a0:	7f 90       	pop	r7
     7a2:	6f 90       	pop	r6
     7a4:	5f 90       	pop	r5
     7a6:	4f 90       	pop	r4
     7a8:	3f 90       	pop	r3
     7aa:	2f 90       	pop	r2
     7ac:	08 95       	ret

000007ae <Transmit_dist_bearing_i2C>:

void Transmit_dist_bearing_i2C(struct DATA *GPS_Data){
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	ec 01       	movw	r28, r24
	
	//Convert dist and bearing  
		//Sending dist to DATA struct as long int 
		long dist_send;
		dist_send = (long)((GPS_Data->dist_wp) *1000);
		GPS_Data->dist_sendI2C = dist_send; 
     7b4:	20 e0       	ldi	r18, 0x00	; 0
     7b6:	30 e0       	ldi	r19, 0x00	; 0
     7b8:	4a e7       	ldi	r20, 0x7A	; 122
     7ba:	54 e4       	ldi	r21, 0x44	; 68
     7bc:	68 a5       	ldd	r22, Y+40	; 0x28
     7be:	79 a5       	ldd	r23, Y+41	; 0x29
     7c0:	8a a5       	ldd	r24, Y+42	; 0x2a
     7c2:	9b a5       	ldd	r25, Y+43	; 0x2b
     7c4:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     7c8:	0e 94 8f 0a 	call	0x151e	; 0x151e <__fixsfsi>
     7cc:	68 ab       	std	Y+48, r22	; 0x30
     7ce:	79 ab       	std	Y+49, r23	; 0x31
     7d0:	8a ab       	std	Y+50, r24	; 0x32
     7d2:	9b ab       	std	Y+51, r25	; 0x33
		
		// Sending bearing to DATA struct as int 
		int bearing_send;
		bearing_send = (int)( (GPS_Data->bearing_wp/360)*32767 );
		GPS_Data->bearing_sendI2C = bearing_send; 
     7d4:	20 e0       	ldi	r18, 0x00	; 0
     7d6:	30 e0       	ldi	r19, 0x00	; 0
     7d8:	44 eb       	ldi	r20, 0xB4	; 180
     7da:	53 e4       	ldi	r21, 0x43	; 67
     7dc:	6c a5       	ldd	r22, Y+44	; 0x2c
     7de:	7d a5       	ldd	r23, Y+45	; 0x2d
     7e0:	8e a5       	ldd	r24, Y+46	; 0x2e
     7e2:	9f a5       	ldd	r25, Y+47	; 0x2f
     7e4:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	3e ef       	ldi	r19, 0xFE	; 254
     7ec:	4f ef       	ldi	r20, 0xFF	; 255
     7ee:	56 e4       	ldi	r21, 0x46	; 70
     7f0:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     7f4:	0e 94 8f 0a 	call	0x151e	; 0x151e <__fixsfsi>
     7f8:	7d ab       	std	Y+53, r23	; 0x35
     7fa:	6c ab       	std	Y+52, r22	; 0x34
	/*
	if(GPS_Data->quality >= 4){ //If There is a fix
		PORTC |= (1<<PORTC0); //PORT C0 high
	}
	*/
     7fc:	df 91       	pop	r29
     7fe:	cf 91       	pop	r28
     800:	08 95       	ret

00000802 <init_GPSDATA>:
		bytes=0;
	}
	else
	{
		set_data(status);
		bytes++;
     802:	90 93 72 01 	sts	0x0172, r25	; 0x800172 <NMEA1+0x1>
     806:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <NMEA1>
     80a:	08 95       	ret

0000080c <cal_checksum>:
     80c:	fc 01       	movw	r30, r24
     80e:	70 e0       	ldi	r23, 0x00	; 0
     810:	9b 01       	movw	r18, r22
     812:	21 50       	subi	r18, 0x01	; 1
     814:	31 09       	sbc	r19, r1
     816:	16 16       	cp	r1, r22
     818:	17 06       	cpc	r1, r23
     81a:	74 f4       	brge	.+28     	; 0x838 <cal_checksum+0x2c>
     81c:	80 e0       	ldi	r24, 0x00	; 0
     81e:	af 01       	movw	r20, r30
     820:	02 2e       	mov	r0, r18
     822:	02 c0       	rjmp	.+4      	; 0x828 <cal_checksum+0x1c>
     824:	55 95       	asr	r21
     826:	47 95       	ror	r20
     828:	0a 94       	dec	r0
     82a:	e2 f7       	brpl	.-8      	; 0x824 <cal_checksum+0x18>
     82c:	41 70       	andi	r20, 0x01	; 1
     82e:	84 27       	eor	r24, r20
     830:	21 50       	subi	r18, 0x01	; 1
     832:	31 09       	sbc	r19, r1
     834:	a0 f7       	brcc	.-24     	; 0x81e <cal_checksum+0x12>
     836:	01 c0       	rjmp	.+2      	; 0x83a <cal_checksum+0x2e>
     838:	80 e0       	ldi	r24, 0x00	; 0
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	08 95       	ret

0000083e <set_opcode>:
     83e:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <opcode>
     842:	08 95       	ret

00000844 <Gps_send_Direction>:

void Gps_send_Direction(void)
{
	char data;
	
	if (bytes==2)
     844:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     848:	82 30       	cpi	r24, 0x02	; 2
     84a:	71 f4       	brne	.+28     	; 0x868 <Gps_send_Direction+0x24>
	{
		char checksum;
		
		checksum = cal_checksum(NMEA1->bearing_sendI2C, 16);
     84c:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     850:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
     854:	60 e1       	ldi	r22, 0x10	; 16
     856:	84 a9       	ldd	r24, Z+52	; 0x34
     858:	95 a9       	ldd	r25, Z+53	; 0x35
     85a:	0e 94 06 04 	call	0x80c	; 0x80c <cal_checksum>
		set_data(checksum);
     85e:	0e 94 ad 04 	call	0x95a	; 0x95a <set_data>
		bytes=0;
     862:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <bytes>
     866:	08 95       	ret
	}
	else
	{
		data= NMEA1->bearing_sendI2C>> 8*bytes;
     868:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     86c:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
		set_data(data);	
     870:	88 0f       	add	r24, r24
     872:	88 0f       	add	r24, r24
     874:	88 0f       	add	r24, r24
     876:	24 a9       	ldd	r18, Z+52	; 0x34
     878:	35 a9       	ldd	r19, Z+53	; 0x35
     87a:	a9 01       	movw	r20, r18
     87c:	02 c0       	rjmp	.+4      	; 0x882 <Gps_send_Direction+0x3e>
     87e:	55 95       	asr	r21
     880:	47 95       	ror	r20
     882:	8a 95       	dec	r24
     884:	e2 f7       	brpl	.-8      	; 0x87e <Gps_send_Direction+0x3a>
     886:	ca 01       	movw	r24, r20
     888:	0e 94 ad 04 	call	0x95a	; 0x95a <set_data>
		bytes++;	
     88c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     890:	8f 5f       	subi	r24, 0xFF	; 255
     892:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <bytes>
     896:	08 95       	ret

00000898 <Gps_send_Distance>:
}

 

void Gps_send_Distance(void)
{
     898:	0f 93       	push	r16
     89a:	1f 93       	push	r17
	char data;
	
	if (bytes==4)
     89c:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     8a0:	84 30       	cpi	r24, 0x04	; 4
     8a2:	71 f4       	brne	.+28     	; 0x8c0 <Gps_send_Distance+0x28>
	{
		char checksum;
		checksum = cal_checksum(NMEA1->dist_sendI2C, 32);
     8a4:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     8a8:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
     8ac:	60 e2       	ldi	r22, 0x20	; 32
     8ae:	80 a9       	ldd	r24, Z+48	; 0x30
     8b0:	91 a9       	ldd	r25, Z+49	; 0x31
     8b2:	0e 94 06 04 	call	0x80c	; 0x80c <cal_checksum>
		set_data(checksum);
     8b6:	0e 94 ad 04 	call	0x95a	; 0x95a <set_data>
		bytes=0;
     8ba:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <bytes>
     8be:	1e c0       	rjmp	.+60     	; 0x8fc <Gps_send_Distance+0x64>
	}
	else
	{
		data= NMEA1->dist_sendI2C>> 8*bytes;
     8c0:	e0 91 71 01 	lds	r30, 0x0171	; 0x800171 <NMEA1>
     8c4:	f0 91 72 01 	lds	r31, 0x0172	; 0x800172 <NMEA1+0x1>
		set_data(data);
     8c8:	98 2f       	mov	r25, r24
     8ca:	99 0f       	add	r25, r25
     8cc:	99 0f       	add	r25, r25
     8ce:	99 0f       	add	r25, r25
     8d0:	40 a9       	ldd	r20, Z+48	; 0x30
     8d2:	51 a9       	ldd	r21, Z+49	; 0x31
     8d4:	62 a9       	ldd	r22, Z+50	; 0x32
     8d6:	73 a9       	ldd	r23, Z+51	; 0x33
     8d8:	8a 01       	movw	r16, r20
     8da:	9b 01       	movw	r18, r22
     8dc:	04 c0       	rjmp	.+8      	; 0x8e6 <Gps_send_Distance+0x4e>
     8de:	35 95       	asr	r19
     8e0:	27 95       	ror	r18
     8e2:	17 95       	ror	r17
     8e4:	07 95       	ror	r16
     8e6:	9a 95       	dec	r25
     8e8:	d2 f7       	brpl	.-12     	; 0x8de <Gps_send_Distance+0x46>
     8ea:	d9 01       	movw	r26, r18
     8ec:	c8 01       	movw	r24, r16
     8ee:	0e 94 ad 04 	call	0x95a	; 0x95a <set_data>
		bytes++;	
     8f2:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <bytes>
     8f6:	8f 5f       	subi	r24, 0xFF	; 255
     8f8:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <bytes>
	}
	
     8fc:	1f 91       	pop	r17
     8fe:	0f 91       	pop	r16
     900:	08 95       	ret

00000902 <i2c_service>:
}


void i2c_service(void)
{
	switch(opcode)
     902:	80 91 73 01 	lds	r24, 0x0173	; 0x800173 <opcode>
     906:	81 30       	cpi	r24, 0x01	; 1
     908:	19 f0       	breq	.+6      	; 0x910 <i2c_service+0xe>
     90a:	82 30       	cpi	r24, 0x02	; 2
     90c:	21 f0       	breq	.+8      	; 0x916 <i2c_service+0x14>
     90e:	08 95       	ret
{	
	
	case 1:
	{
		Gps_send_Direction();
     910:	0e 94 22 04 	call	0x844	; 0x844 <Gps_send_Direction>
		break;
     914:	08 95       	ret
	}
	
	case 2:
	 {
		 Gps_send_Distance();
     916:	0e 94 4c 04 	call	0x898	; 0x898 <Gps_send_Distance>
     91a:	08 95       	ret

0000091c <I2C_recieve>:
		sei();
}

void i2c_transmit_data(uint8_t data)
{		
	TWDR = data;
     91c:	cf 93       	push	r28
     91e:	c8 2f       	mov	r28, r24
     920:	0e 94 1f 04 	call	0x83e	; 0x83e <set_opcode>
     924:	c0 93 74 01 	sts	0x0174, r28	; 0x800174 <data>
     928:	cf 91       	pop	r28
     92a:	08 95       	ret

0000092c <I2C_data_ACK_request>:
     92c:	0e 94 81 04 	call	0x902	; 0x902 <i2c_service>
     930:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <data>
     934:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     938:	08 95       	ret

0000093a <I2C_data_NACK_request>:
     93a:	0e 94 81 04 	call	0x902	; 0x902 <i2c_service>
     93e:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <data>
     942:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     946:	08 95       	ret

00000948 <i2c_init>:
     948:	f8 94       	cli
     94a:	88 0f       	add	r24, r24
     94c:	80 93 ba 00 	sts	0x00BA, r24	; 0x8000ba <__TEXT_REGION_LENGTH__+0x7e00ba>
     950:	85 ec       	ldi	r24, 0xC5	; 197
     952:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     956:	78 94       	sei
     958:	08 95       	ret

0000095a <set_data>:
}

void set_data(uint8_t value)
{
	data = value;
     95a:	80 93 74 01 	sts	0x0174, r24	; 0x800174 <data>
     95e:	08 95       	ret

00000960 <__vector_24>:
}


 
ISR(TWI_vect)
{
     960:	1f 92       	push	r1
     962:	0f 92       	push	r0
     964:	0f b6       	in	r0, 0x3f	; 63
     966:	0f 92       	push	r0
     968:	11 24       	eor	r1, r1
     96a:	2f 93       	push	r18
     96c:	3f 93       	push	r19
     96e:	4f 93       	push	r20
     970:	5f 93       	push	r21
     972:	6f 93       	push	r22
     974:	7f 93       	push	r23
     976:	8f 93       	push	r24
     978:	9f 93       	push	r25
     97a:	af 93       	push	r26
     97c:	bf 93       	push	r27
     97e:	ef 93       	push	r30
     980:	ff 93       	push	r31
	switch(TW_STATUS)
     982:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
     986:	88 7f       	andi	r24, 0xF8	; 248
     988:	80 38       	cpi	r24, 0x80	; 128
     98a:	49 f0       	breq	.+18     	; 0x99e <__vector_24+0x3e>
     98c:	18 f4       	brcc	.+6      	; 0x994 <__vector_24+0x34>
     98e:	88 23       	and	r24, r24
     990:	d1 f0       	breq	.+52     	; 0x9c6 <__vector_24+0x66>
     992:	1f c0       	rjmp	.+62     	; 0x9d2 <__vector_24+0x72>
     994:	88 3a       	cpi	r24, 0xA8	; 168
     996:	59 f0       	breq	.+22     	; 0x9ae <__vector_24+0x4e>
     998:	88 3b       	cpi	r24, 0xB8	; 184
     99a:	79 f0       	breq	.+30     	; 0x9ba <__vector_24+0x5a>
     99c:	1a c0       	rjmp	.+52     	; 0x9d2 <__vector_24+0x72>
	{
		case TW_SR_DATA_ACK:
		// received data from master, call the receive callback
		I2C_recieve(TWDR);
     99e:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
     9a2:	0e 94 8e 04 	call	0x91c	; 0x91c <I2C_recieve>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9a6:	85 ec       	ldi	r24, 0xC5	; 197
     9a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     9ac:	15 c0       	rjmp	.+42     	; 0x9d8 <__vector_24+0x78>
		
		case TW_ST_SLA_ACK:
		// master is requesting data using NACK,master expects only one additional byte. call the request callback
		I2C_data_NACK_request();
     9ae:	0e 94 9d 04 	call	0x93a	; 0x93a <I2C_data_NACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9b2:	85 ec       	ldi	r24, 0xC5	; 197
     9b4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     9b8:	0f c0       	rjmp	.+30     	; 0x9d8 <__vector_24+0x78>
		
		case TW_ST_DATA_ACK:
		// master is requesting data using ACK, master expects multiple bytes. call the request callback
		I2C_data_ACK_request();
     9ba:	0e 94 96 04 	call	0x92c	; 0x92c <I2C_data_ACK_request>
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9be:	85 ec       	ldi	r24, 0xC5	; 197
     9c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
     9c4:	09 c0       	rjmp	.+18     	; 0x9d8 <__vector_24+0x78>
		
		case TW_BUS_ERROR:
		// some sort of erroneous state, prepare TWI to be readdressed
		TWCR = 0;
     9c6:	ec eb       	ldi	r30, 0xBC	; 188
     9c8:	f0 e0       	ldi	r31, 0x00	; 0
     9ca:	10 82       	st	Z, r1
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9cc:	85 ec       	ldi	r24, 0xC5	; 197
     9ce:	80 83       	st	Z, r24
		break;
     9d0:	03 c0       	rjmp	.+6      	; 0x9d8 <__vector_24+0x78>
		
		default:
		TWCR = (1<<TWIE) | (1<<TWINT) | (1<<TWEA) | (1<<TWEN);
     9d2:	85 ec       	ldi	r24, 0xC5	; 197
     9d4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
		break;
	}
}
     9d8:	ff 91       	pop	r31
     9da:	ef 91       	pop	r30
     9dc:	bf 91       	pop	r27
     9de:	af 91       	pop	r26
     9e0:	9f 91       	pop	r25
     9e2:	8f 91       	pop	r24
     9e4:	7f 91       	pop	r23
     9e6:	6f 91       	pop	r22
     9e8:	5f 91       	pop	r21
     9ea:	4f 91       	pop	r20
     9ec:	3f 91       	pop	r19
     9ee:	2f 91       	pop	r18
     9f0:	0f 90       	pop	r0
     9f2:	0f be       	out	0x3f, r0	; 63
     9f4:	0f 90       	pop	r0
     9f6:	1f 90       	pop	r1
     9f8:	18 95       	reti

000009fa <main>:
#include "Gps_send.h"
#include "i2c_atmega_328p_slave.h"
#define address 0x40

int main(void)
{
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	cd b7       	in	r28, 0x3d	; 61
     a00:	de b7       	in	r29, 0x3e	; 62
     a02:	cb 5d       	subi	r28, 0xDB	; 219
     a04:	d1 09       	sbc	r29, r1
     a06:	0f b6       	in	r0, 0x3f	; 63
     a08:	f8 94       	cli
     a0a:	de bf       	out	0x3e, r29	; 62
     a0c:	0f be       	out	0x3f, r0	; 63
     a0e:	cd bf       	out	0x3d, r28	; 61
	DDRC |=(1<<PORTC0); //Setting port C0 as an output
     a10:	38 9a       	sbi	0x07, 0	; 7
	i2c_init(address);  //init i2c transmiission
     a12:	80 e4       	ldi	r24, 0x40	; 64
     a14:	0e 94 a4 04 	call	0x948	; 0x948 <i2c_init>
	GPS_init();         //init GPS decoder
     a18:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <GPS_init>
	usart_init();
     a1c:	0e 94 04 09 	call	0x1208	; 0x1208 <usart_init>

	//	coor_t WP[5]  = {54.91, 911290, 9.78, 780456};
	
	coor_t WP[5];
	WP[1].LAT = 51.91;
     a20:	87 ed       	ldi	r24, 0xD7	; 215
     a22:	93 ea       	ldi	r25, 0xA3	; 163
     a24:	af e4       	ldi	r26, 0x4F	; 79
     a26:	b2 e4       	ldi	r27, 0x42	; 66
     a28:	89 8b       	std	Y+17, r24	; 0x11
     a2a:	9a 8b       	std	Y+18, r25	; 0x12
     a2c:	ab 8b       	std	Y+19, r26	; 0x13
     a2e:	bc 8b       	std	Y+20, r27	; 0x14
	WP[1].LON = 9.78;
     a30:	81 ee       	ldi	r24, 0xE1	; 225
     a32:	9a e7       	ldi	r25, 0x7A	; 122
     a34:	ac e1       	ldi	r26, 0x1C	; 28
     a36:	b1 e4       	ldi	r27, 0x41	; 65
     a38:	89 8f       	std	Y+25, r24	; 0x19
     a3a:	9a 8f       	std	Y+26, r25	; 0x1a
     a3c:	ab 8f       	std	Y+27, r26	; 0x1b
     a3e:	bc 8f       	std	Y+28, r27	; 0x1c
	WP[1].LAT_int = 911290;
     a40:	4a eb       	ldi	r20, 0xBA	; 186
     a42:	57 ee       	ldi	r21, 0xE7	; 231
     a44:	6d e0       	ldi	r22, 0x0D	; 13
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	4d 8b       	std	Y+21, r20	; 0x15
     a4a:	5e 8b       	std	Y+22, r21	; 0x16
     a4c:	6f 8b       	std	Y+23, r22	; 0x17
     a4e:	78 8f       	std	Y+24, r23	; 0x18
	WP[1].LON_int = 780456;
     a50:	88 ea       	ldi	r24, 0xA8	; 168
     a52:	98 ee       	ldi	r25, 0xE8	; 232
     a54:	ab e0       	ldi	r26, 0x0B	; 11
     a56:	b0 e0       	ldi	r27, 0x00	; 0
     a58:	8d 8f       	std	Y+29, r24	; 0x1d
     a5a:	9e 8f       	std	Y+30, r25	; 0x1e
     a5c:	af 8f       	std	Y+31, r26	; 0x1f
     a5e:	b8 a3       	std	Y+32, r27	; 0x20
	
	WP[2].LAT_int = 911250;
     a60:	0f 2e       	mov	r0, r31
     a62:	f2 e9       	ldi	r31, 0x92	; 146
     a64:	4f 2e       	mov	r4, r31
     a66:	f7 ee       	ldi	r31, 0xE7	; 231
     a68:	5f 2e       	mov	r5, r31
     a6a:	fd e0       	ldi	r31, 0x0D	; 13
     a6c:	6f 2e       	mov	r6, r31
     a6e:	71 2c       	mov	r7, r1
     a70:	f0 2d       	mov	r31, r0
     a72:	4d a2       	std	Y+37, r4	; 0x25
     a74:	5e a2       	std	Y+38, r5	; 0x26
     a76:	6f a2       	std	Y+39, r6	; 0x27
     a78:	78 a6       	std	Y+40, r7	; 0x28
	WP[2].LON_int = 780456;
     a7a:	8d a7       	std	Y+45, r24	; 0x2d
     a7c:	9e a7       	std	Y+46, r25	; 0x2e
     a7e:	af a7       	std	Y+47, r26	; 0x2f
     a80:	b8 ab       	std	Y+48, r27	; 0x30
	
	WP[3].LAT_int = 911290;
     a82:	4d ab       	std	Y+53, r20	; 0x35
     a84:	5e ab       	std	Y+54, r21	; 0x36
     a86:	6f ab       	std	Y+55, r22	; 0x37
     a88:	78 af       	std	Y+56, r23	; 0x38
	WP[3].LON_int = 780456;
     a8a:	21 96       	adiw	r28, 0x01	; 1
     a8c:	8c af       	std	Y+60, r24	; 0x3c
     a8e:	9d af       	std	Y+61, r25	; 0x3d
     a90:	ae af       	std	Y+62, r26	; 0x3e
     a92:	bf af       	std	Y+63, r27	; 0x3f
     a94:	21 97       	sbiw	r28, 0x01	; 1
	
	WP[4].LAT_int = 911290;
     a96:	29 96       	adiw	r28, 0x09	; 9
     a98:	4c af       	std	Y+60, r20	; 0x3c
     a9a:	5d af       	std	Y+61, r21	; 0x3d
     a9c:	6e af       	std	Y+62, r22	; 0x3e
     a9e:	7f af       	std	Y+63, r23	; 0x3f
     aa0:	29 97       	sbiw	r28, 0x09	; 9
	WP[4].LON_int = 780456;
     aa2:	61 96       	adiw	r28, 0x11	; 17
     aa4:	8c af       	std	Y+60, r24	; 0x3c
     aa6:	9d af       	std	Y+61, r25	; 0x3d
     aa8:	ae af       	std	Y+62, r26	; 0x3e
     aaa:	bf af       	std	Y+63, r27	; 0x3f
     aac:	61 97       	sbiw	r28, 0x11	; 17

	int WP_NUM=1;
     aae:	44 24       	eor	r4, r4
     ab0:	43 94       	inc	r4
     ab2:	51 2c       	mov	r5, r1
	char msg[85];  //GPGAA message from module
	DATA NMEA1;    //struct containing relevant data; LAT LON etc.
	
	while(1)
	{
		init_GPSDATA(&NMEA1);							//to expose NMEA1 to GPS_send.h
     ab4:	ce 01       	movw	r24, r28
     ab6:	8a 55       	subi	r24, 0x5A	; 90
     ab8:	9f 4f       	sbci	r25, 0xFF	; 255
     aba:	0e 94 01 04 	call	0x802	; 0x802 <init_GPSDATA>
		
		while(!get_gps_message(msg));
     abe:	ce 01       	movw	r24, r28
     ac0:	8f 5a       	subi	r24, 0xAF	; 175
     ac2:	9f 4f       	sbci	r25, 0xFF	; 255
     ac4:	0e 94 05 01 	call	0x20a	; 0x20a <get_gps_message>
     ac8:	89 2b       	or	r24, r25
     aca:	c9 f3       	breq	.-14     	; 0xabe <main+0xc4>
		
		PORTC &= ~(1<<PORTC0);							//Set data_ready_flag LOW When bearing and distance had been send.
     acc:	40 98       	cbi	0x08, 0	; 8
		
		if(GPS_Decode(msg, &NMEA1))						//Take message as char array and reference to data struct. Returns true if checksum is okay. AND if quality <=4
     ace:	be 01       	movw	r22, r28
     ad0:	6a 55       	subi	r22, 0x5A	; 90
     ad2:	7f 4f       	sbci	r23, 0xFF	; 255
     ad4:	ce 01       	movw	r24, r28
     ad6:	8f 5a       	subi	r24, 0xAF	; 175
     ad8:	9f 4f       	sbci	r25, 0xFF	; 255
     ada:	0e 94 67 07 	call	0xece	; 0xece <GPS_Decode>
     ade:	89 2b       	or	r24, r25
     ae0:	09 f4       	brne	.+2      	; 0xae4 <main+0xea>
     ae2:	40 c0       	rjmp	.+128    	; 0xb64 <main+0x16a>
		{
			dist_to_wp(&NMEA1, WP[WP_NUM]);				//Calculating dist from pos and WP
     ae4:	32 01       	movw	r6, r4
     ae6:	66 0c       	add	r6, r6
     ae8:	77 1c       	adc	r7, r7
     aea:	66 0c       	add	r6, r6
     aec:	77 1c       	adc	r7, r7
     aee:	66 0c       	add	r6, r6
     af0:	77 1c       	adc	r7, r7
     af2:	66 0c       	add	r6, r6
     af4:	77 1c       	adc	r7, r7
     af6:	81 e0       	ldi	r24, 0x01	; 1
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	8c 0f       	add	r24, r28
     afc:	9d 1f       	adc	r25, r29
     afe:	68 0e       	add	r6, r24
     b00:	79 1e       	adc	r7, r25
     b02:	f3 01       	movw	r30, r6
     b04:	80 80       	ld	r8, Z
     b06:	91 80       	ldd	r9, Z+1	; 0x01
     b08:	a2 80       	ldd	r10, Z+2	; 0x02
     b0a:	b3 80       	ldd	r11, Z+3	; 0x03
     b0c:	c4 80       	ldd	r12, Z+4	; 0x04
     b0e:	d5 80       	ldd	r13, Z+5	; 0x05
     b10:	e6 80       	ldd	r14, Z+6	; 0x06
     b12:	f7 80       	ldd	r15, Z+7	; 0x07
     b14:	00 85       	ldd	r16, Z+8	; 0x08
     b16:	11 85       	ldd	r17, Z+9	; 0x09
     b18:	22 85       	ldd	r18, Z+10	; 0x0a
     b1a:	33 85       	ldd	r19, Z+11	; 0x0b
     b1c:	44 85       	ldd	r20, Z+12	; 0x0c
     b1e:	55 85       	ldd	r21, Z+13	; 0x0d
     b20:	66 85       	ldd	r22, Z+14	; 0x0e
     b22:	77 85       	ldd	r23, Z+15	; 0x0f
     b24:	8b 55       	subi	r24, 0x5B	; 91
     b26:	9f 4f       	sbci	r25, 0xFF	; 255
     b28:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <dist_to_wp>
			bearing_to_wp(&NMEA1, WP[WP_NUM]);			//Calculating bearing from pos and WP
     b2c:	f3 01       	movw	r30, r6
     b2e:	80 80       	ld	r8, Z
     b30:	91 80       	ldd	r9, Z+1	; 0x01
     b32:	a2 80       	ldd	r10, Z+2	; 0x02
     b34:	b3 80       	ldd	r11, Z+3	; 0x03
     b36:	c4 80       	ldd	r12, Z+4	; 0x04
     b38:	d5 80       	ldd	r13, Z+5	; 0x05
     b3a:	e6 80       	ldd	r14, Z+6	; 0x06
     b3c:	f7 80       	ldd	r15, Z+7	; 0x07
     b3e:	00 85       	ldd	r16, Z+8	; 0x08
     b40:	11 85       	ldd	r17, Z+9	; 0x09
     b42:	22 85       	ldd	r18, Z+10	; 0x0a
     b44:	33 85       	ldd	r19, Z+11	; 0x0b
     b46:	44 85       	ldd	r20, Z+12	; 0x0c
     b48:	55 85       	ldd	r21, Z+13	; 0x0d
     b4a:	66 85       	ldd	r22, Z+14	; 0x0e
     b4c:	77 85       	ldd	r23, Z+15	; 0x0f
     b4e:	ce 01       	movw	r24, r28
     b50:	8a 55       	subi	r24, 0x5A	; 90
     b52:	9f 4f       	sbci	r25, 0xFF	; 255
     b54:	0e 94 77 02 	call	0x4ee	; 0x4ee <bearing_to_wp>
			Transmit_dist_bearing_i2C(&NMEA1);			//Transmitting via I2C
     b58:	ce 01       	movw	r24, r28
     b5a:	8a 55       	subi	r24, 0x5A	; 90
     b5c:	9f 4f       	sbci	r25, 0xFF	; 255
     b5e:	0e 94 d7 03 	call	0x7ae	; 0x7ae <Transmit_dist_bearing_i2C>
			
			PORTC |= (1<<PORTC0);						//PORT C0 high
     b62:	40 9a       	sbi	0x08, 0	; 8
		}
		
		if(NMEA1.dist_wp<100)
     b64:	20 e0       	ldi	r18, 0x00	; 0
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	48 ec       	ldi	r20, 0xC8	; 200
     b6a:	52 e4       	ldi	r21, 0x42	; 66
     b6c:	c2 53       	subi	r28, 0x32	; 50
     b6e:	df 4f       	sbci	r29, 0xFF	; 255
     b70:	68 81       	ld	r22, Y
     b72:	79 81       	ldd	r23, Y+1	; 0x01
     b74:	8a 81       	ldd	r24, Y+2	; 0x02
     b76:	9b 81       	ldd	r25, Y+3	; 0x03
     b78:	ce 5c       	subi	r28, 0xCE	; 206
     b7a:	d0 40       	sbci	r29, 0x00	; 0
     b7c:	0e 94 13 0a 	call	0x1426	; 0x1426 <__cmpsf2>
     b80:	88 23       	and	r24, r24
     b82:	0c f0       	brlt	.+2      	; 0xb86 <main+0x18c>
     b84:	97 cf       	rjmp	.-210    	; 0xab4 <main+0xba>
		WP_NUM++;
     b86:	ff ef       	ldi	r31, 0xFF	; 255
     b88:	4f 1a       	sub	r4, r31
     b8a:	5f 0a       	sbc	r5, r31
     b8c:	93 cf       	rjmp	.-218    	; 0xab4 <main+0xba>

00000b8e <init>:
#include "NMEA_DECODER.h"
#include <stdio.h>
#include <string.h>

void init(struct DATA *GPS_Data)
{
     b8e:	fc 01       	movw	r30, r24
	GPS_Data->LAT_Float=0.0;
     b90:	16 82       	std	Z+6, r1	; 0x06
     b92:	17 82       	std	Z+7, r1	; 0x07
     b94:	10 86       	std	Z+8, r1	; 0x08
     b96:	11 86       	std	Z+9, r1	; 0x09
	GPS_Data->LAT=0;
     b98:	12 82       	std	Z+2, r1	; 0x02
     b9a:	13 82       	std	Z+3, r1	; 0x03
     b9c:	14 82       	std	Z+4, r1	; 0x04
     b9e:	15 82       	std	Z+5, r1	; 0x05
	GPS_Data->LAT_Min=0;
     ba0:	11 82       	std	Z+1, r1	; 0x01
	GPS_Data->LAT_Degree=0;
     ba2:	10 82       	st	Z, r1
	GPS_Data->LON_Float=0.0;
     ba4:	15 8a       	std	Z+21, r1	; 0x15
     ba6:	16 8a       	std	Z+22, r1	; 0x16
     ba8:	17 8a       	std	Z+23, r1	; 0x17
     baa:	10 8e       	std	Z+24, r1	; 0x18
	GPS_Data->LON=0;
     bac:	11 8a       	std	Z+17, r1	; 0x11
     bae:	12 8a       	std	Z+18, r1	; 0x12
     bb0:	13 8a       	std	Z+19, r1	; 0x13
     bb2:	14 8a       	std	Z+20, r1	; 0x14
	GPS_Data->LON_Min=0;
     bb4:	10 8a       	std	Z+16, r1	; 0x10
	GPS_Data->LON_Degree=0;
     bb6:	17 86       	std	Z+15, r1	; 0x0f
	GPS_Data->ageOfCorrection = 0;
     bb8:	17 8e       	std	Z+31, r1	; 0x1f
	GPS_Data->quality=0;
     bba:	16 8e       	std	Z+30, r1	; 0x1e
	GPS_Data->Speed=0;
     bbc:	14 a2       	std	Z+36, r1	; 0x24
     bbe:	15 a2       	std	Z+37, r1	; 0x25
     bc0:	16 a2       	std	Z+38, r1	; 0x26
     bc2:	17 a2       	std	Z+39, r1	; 0x27
	GPS_Data->bearing_true=0;
     bc4:	10 a2       	std	Z+32, r1	; 0x20
     bc6:	11 a2       	std	Z+33, r1	; 0x21
     bc8:	12 a2       	std	Z+34, r1	; 0x22
     bca:	13 a2       	std	Z+35, r1	; 0x23
	GPS_Data->dist_wp=0;
     bcc:	10 a6       	std	Z+40, r1	; 0x28
     bce:	11 a6       	std	Z+41, r1	; 0x29
     bd0:	12 a6       	std	Z+42, r1	; 0x2a
     bd2:	13 a6       	std	Z+43, r1	; 0x2b
	GPS_Data->bearing_wp=0;
     bd4:	14 a6       	std	Z+44, r1	; 0x2c
     bd6:	15 a6       	std	Z+45, r1	; 0x2d
     bd8:	16 a6       	std	Z+46, r1	; 0x2e
     bda:	17 a6       	std	Z+47, r1	; 0x2f
     bdc:	08 95       	ret

00000bde <checksum>:
{
	int i = 0;
	int checksum = 0;
	int nmea_sum = 0;
	
	if(msg[0] == '$')
     bde:	fc 01       	movw	r30, r24
     be0:	20 81       	ld	r18, Z
     be2:	24 32       	cpi	r18, 0x24	; 36
     be4:	61 f5       	brne	.+88     	; 0xc3e <checksum+0x60>
	{
		i++;
		while(msg[i] != '*')
     be6:	21 81       	ldd	r18, Z+1	; 0x01
     be8:	2a 32       	cpi	r18, 0x2A	; 42
     bea:	59 f1       	breq	.+86     	; 0xc42 <checksum+0x64>
     bec:	dc 01       	movw	r26, r24
     bee:	12 96       	adiw	r26, 0x02	; 2
     bf0:	60 e0       	ldi	r22, 0x00	; 0
     bf2:	70 e0       	ldi	r23, 0x00	; 0
     bf4:	41 e0       	ldi	r20, 0x01	; 1
     bf6:	50 e0       	ldi	r21, 0x00	; 0
		{
			checksum ^= (msg[i]-48);
     bf8:	30 e0       	ldi	r19, 0x00	; 0
     bfa:	20 53       	subi	r18, 0x30	; 48
     bfc:	31 09       	sbc	r19, r1
     bfe:	62 27       	eor	r22, r18
     c00:	73 27       	eor	r23, r19
			i++;
     c02:	4f 5f       	subi	r20, 0xFF	; 255
     c04:	5f 4f       	sbci	r21, 0xFF	; 255
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     c06:	2d 91       	ld	r18, X+
     c08:	2a 32       	cpi	r18, 0x2A	; 42
     c0a:	b1 f7       	brne	.-20     	; 0xbf8 <checksum+0x1a>
     c0c:	1e c0       	rjmp	.+60     	; 0xc4a <checksum+0x6c>
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
			{
				nmea_sum += 1*(msg[i]-48);
     c0e:	42 2f       	mov	r20, r18
     c10:	50 e0       	ldi	r21, 0x00	; 0
     c12:	40 53       	subi	r20, 0x30	; 48
     c14:	51 09       	sbc	r21, r1
     c16:	84 0f       	add	r24, r20
     c18:	95 1f       	adc	r25, r21
			}
			
			if((msg[i]>='A') && (msg[i]<='F'))
     c1a:	3f eb       	ldi	r19, 0xBF	; 191
     c1c:	32 0f       	add	r19, r18
     c1e:	36 30       	cpi	r19, 0x06	; 6
     c20:	28 f4       	brcc	.+10     	; 0xc2c <checksum+0x4e>
			{
				nmea_sum += 1*(msg[i]-55);
     c22:	30 e0       	ldi	r19, 0x00	; 0
     c24:	27 53       	subi	r18, 0x37	; 55
     c26:	31 09       	sbc	r19, r1
     c28:	82 0f       	add	r24, r18
     c2a:	93 1f       	adc	r25, r19
			}
		}
		
		if(checksum==(nmea_sum-(2*48)))
		{
			return 1;
     c2c:	9c 01       	movw	r18, r24
     c2e:	20 56       	subi	r18, 0x60	; 96
     c30:	31 09       	sbc	r19, r1
     c32:	81 e0       	ldi	r24, 0x01	; 1
     c34:	26 17       	cp	r18, r22
     c36:	37 07       	cpc	r19, r23
     c38:	d1 f0       	breq	.+52     	; 0xc6e <checksum+0x90>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	08 95       	ret
		{
			return 0;
		}
		
	}
return 0; 
     c3e:	80 e0       	ldi	r24, 0x00	; 0
     c40:	08 95       	ret
	int nmea_sum = 0;
	
	if(msg[0] == '$')
	{
		i++;
		while(msg[i] != '*')
     c42:	60 e0       	ldi	r22, 0x00	; 0
     c44:	70 e0       	ldi	r23, 0x00	; 0
     c46:	41 e0       	ldi	r20, 0x01	; 1
     c48:	50 e0       	ldi	r21, 0x00	; 0
		
		if(msg[i] == '*')
		{
			////////////MSB
			i++;
			nmea_sum = 16*(msg[i]-48);
     c4a:	fc 01       	movw	r30, r24
     c4c:	e4 0f       	add	r30, r20
     c4e:	f5 1f       	adc	r31, r21
     c50:	81 81       	ldd	r24, Z+1	; 0x01
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	c0 97       	sbiw	r24, 0x30	; 48
     c56:	82 95       	swap	r24
     c58:	92 95       	swap	r25
     c5a:	90 7f       	andi	r25, 0xF0	; 240
     c5c:	98 27       	eor	r25, r24
     c5e:	80 7f       	andi	r24, 0xF0	; 240
     c60:	98 27       	eor	r25, r24
				
			////////////LSB
			i++;
			
			if((msg[i]>='0') && (msg[i]<='9'))
     c62:	22 81       	ldd	r18, Z+2	; 0x02
     c64:	30 ed       	ldi	r19, 0xD0	; 208
     c66:	32 0f       	add	r19, r18
     c68:	3a 30       	cpi	r19, 0x0A	; 10
     c6a:	88 f2       	brcs	.-94     	; 0xc0e <checksum+0x30>
     c6c:	d6 cf       	rjmp	.-84     	; 0xc1a <checksum+0x3c>
			return 0;
		}
		
	}
return 0; 
}
     c6e:	08 95       	ret

00000c70 <MessageType>:

uint8_t MessageType(char* msg){
     c70:	cf 93       	push	r28
     c72:	df 93       	push	r29
     c74:	cd b7       	in	r28, 0x3d	; 61
     c76:	de b7       	in	r29, 0x3e	; 62
     c78:	64 97       	sbiw	r28, 0x14	; 20
     c7a:	0f b6       	in	r0, 0x3f	; 63
     c7c:	f8 94       	cli
     c7e:	de bf       	out	0x3e, r29	; 62
     c80:	0f be       	out	0x3f, r0	; 63
     c82:	cd bf       	out	0x3d, r28	; 61
	if(msg[0]=='$')
     c84:	fc 01       	movw	r30, r24
     c86:	20 81       	ld	r18, Z
     c88:	24 32       	cpi	r18, 0x24	; 36
     c8a:	09 f0       	breq	.+2      	; 0xc8e <MessageType+0x1e>
     c8c:	55 c0       	rjmp	.+170    	; 0xd38 <MessageType+0xc8>
     c8e:	dc 01       	movw	r26, r24
     c90:	11 96       	adiw	r26, 0x01	; 1
     c92:	fe 01       	movw	r30, r28
     c94:	70 96       	adiw	r30, 0x10	; 16
     c96:	9e 01       	movw	r18, r28
     c98:	2b 5e       	subi	r18, 0xEB	; 235
     c9a:	3f 4f       	sbci	r19, 0xFF	; 255
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
		{
			if(msg[k+1]>='A' && msg[k+1]<='Z')	//Make sure range
     c9c:	8d 91       	ld	r24, X+
     c9e:	9f eb       	ldi	r25, 0xBF	; 191
     ca0:	98 0f       	add	r25, r24
     ca2:	9a 31       	cpi	r25, 0x1A	; 26
     ca4:	08 f4       	brcc	.+2      	; 0xca8 <MessageType+0x38>
			{
				msg_type[k]	= msg[k+1];
     ca6:	80 83       	st	Z, r24
     ca8:	31 96       	adiw	r30, 0x01	; 1

uint8_t MessageType(char* msg){
	if(msg[0]=='$')
	{
		char msg_type[5];
		for(int k = 0; k<5; k++)
     caa:	e2 17       	cp	r30, r18
     cac:	f3 07       	cpc	r31, r19
     cae:	b1 f7       	brne	.-20     	; 0xc9c <MessageType+0x2c>
			else
			{
				//printf("Failed message type\n");
			}
		}
		char msg_gpgga[5] = "GPGGA";
     cb0:	85 e0       	ldi	r24, 0x05	; 5
     cb2:	e0 e0       	ldi	r30, 0x00	; 0
     cb4:	f1 e0       	ldi	r31, 0x01	; 1
     cb6:	de 01       	movw	r26, r28
     cb8:	1b 96       	adiw	r26, 0x0b	; 11
     cba:	01 90       	ld	r0, Z+
     cbc:	0d 92       	st	X+, r0
     cbe:	8a 95       	dec	r24
     cc0:	e1 f7       	brne	.-8      	; 0xcba <MessageType+0x4a>
		char msg_gpvtg[5] = "GPVTG";
     cc2:	85 e0       	ldi	r24, 0x05	; 5
     cc4:	e6 e0       	ldi	r30, 0x06	; 6
     cc6:	f1 e0       	ldi	r31, 0x01	; 1
     cc8:	de 01       	movw	r26, r28
     cca:	16 96       	adiw	r26, 0x06	; 6
     ccc:	01 90       	ld	r0, Z+
     cce:	0d 92       	st	X+, r0
     cd0:	8a 95       	dec	r24
     cd2:	e1 f7       	brne	.-8      	; 0xccc <MessageType+0x5c>
		char msg_gngga[5] = "GNGGA";
     cd4:	85 e0       	ldi	r24, 0x05	; 5
     cd6:	ec e0       	ldi	r30, 0x0C	; 12
     cd8:	f1 e0       	ldi	r31, 0x01	; 1
     cda:	de 01       	movw	r26, r28
     cdc:	11 96       	adiw	r26, 0x01	; 1
     cde:	01 90       	ld	r0, Z+
     ce0:	0d 92       	st	X+, r0
     ce2:	8a 95       	dec	r24
     ce4:	e1 f7       	brne	.-8      	; 0xcde <MessageType+0x6e>
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
     ce6:	45 e0       	ldi	r20, 0x05	; 5
     ce8:	50 e0       	ldi	r21, 0x00	; 0
     cea:	be 01       	movw	r22, r28
     cec:	65 5f       	subi	r22, 0xF5	; 245
     cee:	7f 4f       	sbci	r23, 0xFF	; 255
     cf0:	ce 01       	movw	r24, r28
     cf2:	40 96       	adiw	r24, 0x10	; 16
     cf4:	0e 94 a0 11 	call	0x2340	; 0x2340 <strncmp>
     cf8:	89 2b       	or	r24, r25
     cfa:	c1 f0       	breq	.+48     	; 0xd2c <MessageType+0xbc>
		{
			return GPGGA;
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
     cfc:	45 e0       	ldi	r20, 0x05	; 5
     cfe:	50 e0       	ldi	r21, 0x00	; 0
     d00:	be 01       	movw	r22, r28
     d02:	6a 5f       	subi	r22, 0xFA	; 250
     d04:	7f 4f       	sbci	r23, 0xFF	; 255
     d06:	ce 01       	movw	r24, r28
     d08:	40 96       	adiw	r24, 0x10	; 16
     d0a:	0e 94 a0 11 	call	0x2340	; 0x2340 <strncmp>
     d0e:	89 2b       	or	r24, r25
     d10:	79 f0       	breq	.+30     	; 0xd30 <MessageType+0xc0>
		{
			return GPVTG;
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
     d12:	45 e0       	ldi	r20, 0x05	; 5
     d14:	50 e0       	ldi	r21, 0x00	; 0
     d16:	be 01       	movw	r22, r28
     d18:	6f 5f       	subi	r22, 0xFF	; 255
     d1a:	7f 4f       	sbci	r23, 0xFF	; 255
     d1c:	ce 01       	movw	r24, r28
     d1e:	40 96       	adiw	r24, 0x10	; 16
     d20:	0e 94 a0 11 	call	0x2340	; 0x2340 <strncmp>
     d24:	89 2b       	or	r24, r25
     d26:	31 f0       	breq	.+12     	; 0xd34 <MessageType+0xc4>
		{
			return GPGGA;
		}
	}
	return 0; 
     d28:	80 e0       	ldi	r24, 0x00	; 0
     d2a:	07 c0       	rjmp	.+14     	; 0xd3a <MessageType+0xca>
		char msg_gpvtg[5] = "GPVTG";
		char msg_gngga[5] = "GNGGA";
		
		if(strncmp(msg_type, msg_gpgga, 5) == 0)
		{
			return GPGGA;
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	05 c0       	rjmp	.+10     	; 0xd3a <MessageType+0xca>
		}
		if(strncmp(msg_type, msg_gpvtg, 5) == 0)
		{
			return GPVTG;
     d30:	82 e0       	ldi	r24, 0x02	; 2
     d32:	03 c0       	rjmp	.+6      	; 0xd3a <MessageType+0xca>
		}
		if(strncmp(msg_type, msg_gngga, 5) == 0)
		{
			return GPGGA;
     d34:	81 e0       	ldi	r24, 0x01	; 1
     d36:	01 c0       	rjmp	.+2      	; 0xd3a <MessageType+0xca>
		}
	}
	return 0; 
     d38:	80 e0       	ldi	r24, 0x00	; 0
}
     d3a:	64 96       	adiw	r28, 0x14	; 20
     d3c:	0f b6       	in	r0, 0x3f	; 63
     d3e:	f8 94       	cli
     d40:	de bf       	out	0x3e, r29	; 62
     d42:	0f be       	out	0x3f, r0	; 63
     d44:	cd bf       	out	0x3d, r28	; 61
     d46:	df 91       	pop	r29
     d48:	cf 91       	pop	r28
     d4a:	08 95       	ret

00000d4c <convert>:

void convert(struct DATA *GPS_Data)
{
     d4c:	4f 92       	push	r4
     d4e:	5f 92       	push	r5
     d50:	6f 92       	push	r6
     d52:	7f 92       	push	r7
     d54:	8f 92       	push	r8
     d56:	9f 92       	push	r9
     d58:	af 92       	push	r10
     d5a:	bf 92       	push	r11
     d5c:	cf 92       	push	r12
     d5e:	df 92       	push	r13
     d60:	ef 92       	push	r14
     d62:	ff 92       	push	r15
     d64:	cf 93       	push	r28
     d66:	df 93       	push	r29
     d68:	00 d0       	rcall	.+0      	; 0xd6a <convert+0x1e>
     d6a:	00 d0       	rcall	.+0      	; 0xd6c <convert+0x20>
     d6c:	00 d0       	rcall	.+0      	; 0xd6e <convert+0x22>
     d6e:	cd b7       	in	r28, 0x3d	; 61
     d70:	de b7       	in	r29, 0x3e	; 62
     d72:	9e 83       	std	Y+6, r25	; 0x06
     d74:	8d 83       	std	Y+5, r24	; 0x05
	GPS_Data->LAT_Float = GPS_Data->LAT_Degree + (GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0);
     d76:	fc 01       	movw	r30, r24
     d78:	61 81       	ldd	r22, Z+1	; 0x01
     d7a:	70 e0       	ldi	r23, 0x00	; 0
     d7c:	80 e0       	ldi	r24, 0x00	; 0
     d7e:	90 e0       	ldi	r25, 0x00	; 0
     d80:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
     d88:	40 e7       	ldi	r20, 0x70	; 112
     d8a:	52 e4       	ldi	r21, 0x42	; 66
     d8c:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     d90:	6b 01       	movw	r12, r22
     d92:	7c 01       	movw	r14, r24
     d94:	ed 81       	ldd	r30, Y+5	; 0x05
     d96:	fe 81       	ldd	r31, Y+6	; 0x06
     d98:	62 81       	ldd	r22, Z+2	; 0x02
     d9a:	73 81       	ldd	r23, Z+3	; 0x03
     d9c:	84 81       	ldd	r24, Z+4	; 0x04
     d9e:	95 81       	ldd	r25, Z+5	; 0x05
     da0:	0e 94 c5 0a 	call	0x158a	; 0x158a <__floatunsisf>
     da4:	20 e0       	ldi	r18, 0x00	; 0
     da6:	3b e1       	ldi	r19, 0x1B	; 27
     da8:	47 eb       	ldi	r20, 0xB7	; 183
     daa:	5a e4       	ldi	r21, 0x4A	; 74
     dac:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     db0:	69 83       	std	Y+1, r22	; 0x01
     db2:	7a 83       	std	Y+2, r23	; 0x02
     db4:	8b 83       	std	Y+3, r24	; 0x03
     db6:	9c 83       	std	Y+4, r25	; 0x04
     db8:	ed 81       	ldd	r30, Y+5	; 0x05
     dba:	fe 81       	ldd	r31, Y+6	; 0x06
     dbc:	60 81       	ld	r22, Z
     dbe:	70 e0       	ldi	r23, 0x00	; 0
     dc0:	80 e0       	ldi	r24, 0x00	; 0
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     dc8:	a7 01       	movw	r20, r14
     dca:	96 01       	movw	r18, r12
     dcc:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     dd0:	29 81       	ldd	r18, Y+1	; 0x01
     dd2:	3a 81       	ldd	r19, Y+2	; 0x02
     dd4:	4b 81       	ldd	r20, Y+3	; 0x03
     dd6:	5c 81       	ldd	r21, Y+4	; 0x04
     dd8:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     ddc:	ed 81       	ldd	r30, Y+5	; 0x05
     dde:	fe 81       	ldd	r31, Y+6	; 0x06
     de0:	66 83       	std	Z+6, r22	; 0x06
     de2:	77 83       	std	Z+7, r23	; 0x07
     de4:	80 87       	std	Z+8, r24	; 0x08
     de6:	91 87       	std	Z+9, r25	; 0x09
	GPS_Data->LON_Float = GPS_Data->LON_Degree + (GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0);
     de8:	60 89       	ldd	r22, Z+16	; 0x10
     dea:	70 e0       	ldi	r23, 0x00	; 0
     dec:	80 e0       	ldi	r24, 0x00	; 0
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	40 e7       	ldi	r20, 0x70	; 112
     dfa:	52 e4       	ldi	r21, 0x42	; 66
     dfc:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     e00:	4b 01       	movw	r8, r22
     e02:	5c 01       	movw	r10, r24
     e04:	ed 81       	ldd	r30, Y+5	; 0x05
     e06:	fe 81       	ldd	r31, Y+6	; 0x06
     e08:	61 89       	ldd	r22, Z+17	; 0x11
     e0a:	72 89       	ldd	r23, Z+18	; 0x12
     e0c:	83 89       	ldd	r24, Z+19	; 0x13
     e0e:	94 89       	ldd	r25, Z+20	; 0x14
     e10:	0e 94 c5 0a 	call	0x158a	; 0x158a <__floatunsisf>
     e14:	20 e0       	ldi	r18, 0x00	; 0
     e16:	3b e1       	ldi	r19, 0x1B	; 27
     e18:	47 eb       	ldi	r20, 0xB7	; 183
     e1a:	5a e4       	ldi	r21, 0x4A	; 74
     e1c:	0e 94 1d 0a 	call	0x143a	; 0x143a <__divsf3>
     e20:	2b 01       	movw	r4, r22
     e22:	3c 01       	movw	r6, r24
     e24:	ed 81       	ldd	r30, Y+5	; 0x05
     e26:	fe 81       	ldd	r31, Y+6	; 0x06
     e28:	67 85       	ldd	r22, Z+15	; 0x0f
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	80 e0       	ldi	r24, 0x00	; 0
     e2e:	90 e0       	ldi	r25, 0x00	; 0
     e30:	0e 94 c7 0a 	call	0x158e	; 0x158e <__floatsisf>
     e34:	a5 01       	movw	r20, r10
     e36:	94 01       	movw	r18, r8
     e38:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     e3c:	a3 01       	movw	r20, r6
     e3e:	92 01       	movw	r18, r4
     e40:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     e44:	ed 81       	ldd	r30, Y+5	; 0x05
     e46:	fe 81       	ldd	r31, Y+6	; 0x06
     e48:	65 8b       	std	Z+21, r22	; 0x15
     e4a:	76 8b       	std	Z+22, r23	; 0x16
     e4c:	87 8b       	std	Z+23, r24	; 0x17
     e4e:	90 8f       	std	Z+24, r25	; 0x18
	GPS_Data->LON_FINAL =  ((GPS_Data->LON_Min/60.00000) + (GPS_Data->LON/6000000.0))  *1000000;
     e50:	a3 01       	movw	r20, r6
     e52:	92 01       	movw	r18, r4
     e54:	c5 01       	movw	r24, r10
     e56:	b4 01       	movw	r22, r8
     e58:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     e5c:	20 e0       	ldi	r18, 0x00	; 0
     e5e:	34 e2       	ldi	r19, 0x24	; 36
     e60:	44 e7       	ldi	r20, 0x74	; 116
     e62:	59 e4       	ldi	r21, 0x49	; 73
     e64:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     e68:	0e 94 96 0a 	call	0x152c	; 0x152c <__fixunssfsi>
     e6c:	ed 81       	ldd	r30, Y+5	; 0x05
     e6e:	fe 81       	ldd	r31, Y+6	; 0x06
     e70:	61 8f       	std	Z+25, r22	; 0x19
     e72:	72 8f       	std	Z+26, r23	; 0x1a
     e74:	83 8f       	std	Z+27, r24	; 0x1b
     e76:	94 8f       	std	Z+28, r25	; 0x1c
	GPS_Data->LAT_FINAL = ((GPS_Data->LAT_Min/60.00000) + (GPS_Data->LAT/6000000.0)) *1000000;
     e78:	29 81       	ldd	r18, Y+1	; 0x01
     e7a:	3a 81       	ldd	r19, Y+2	; 0x02
     e7c:	4b 81       	ldd	r20, Y+3	; 0x03
     e7e:	5c 81       	ldd	r21, Y+4	; 0x04
     e80:	c7 01       	movw	r24, r14
     e82:	b6 01       	movw	r22, r12
     e84:	0e 94 35 09 	call	0x126a	; 0x126a <__addsf3>
     e88:	20 e0       	ldi	r18, 0x00	; 0
     e8a:	34 e2       	ldi	r19, 0x24	; 36
     e8c:	44 e7       	ldi	r20, 0x74	; 116
     e8e:	59 e4       	ldi	r21, 0x49	; 73
     e90:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
     e94:	0e 94 96 0a 	call	0x152c	; 0x152c <__fixunssfsi>
     e98:	ed 81       	ldd	r30, Y+5	; 0x05
     e9a:	fe 81       	ldd	r31, Y+6	; 0x06
     e9c:	62 87       	std	Z+10, r22	; 0x0a
     e9e:	73 87       	std	Z+11, r23	; 0x0b
     ea0:	84 87       	std	Z+12, r24	; 0x0c
     ea2:	95 87       	std	Z+13, r25	; 0x0d
}
     ea4:	26 96       	adiw	r28, 0x06	; 6
     ea6:	0f b6       	in	r0, 0x3f	; 63
     ea8:	f8 94       	cli
     eaa:	de bf       	out	0x3e, r29	; 62
     eac:	0f be       	out	0x3f, r0	; 63
     eae:	cd bf       	out	0x3d, r28	; 61
     eb0:	df 91       	pop	r29
     eb2:	cf 91       	pop	r28
     eb4:	ff 90       	pop	r15
     eb6:	ef 90       	pop	r14
     eb8:	df 90       	pop	r13
     eba:	cf 90       	pop	r12
     ebc:	bf 90       	pop	r11
     ebe:	af 90       	pop	r10
     ec0:	9f 90       	pop	r9
     ec2:	8f 90       	pop	r8
     ec4:	7f 90       	pop	r7
     ec6:	6f 90       	pop	r6
     ec8:	5f 90       	pop	r5
     eca:	4f 90       	pop	r4
     ecc:	08 95       	ret

00000ece <GPS_Decode>:

int GPS_Decode(char* msg, struct DATA *GPS_Data)
{
     ece:	2f 92       	push	r2
     ed0:	3f 92       	push	r3
     ed2:	4f 92       	push	r4
     ed4:	5f 92       	push	r5
     ed6:	6f 92       	push	r6
     ed8:	7f 92       	push	r7
     eda:	8f 92       	push	r8
     edc:	9f 92       	push	r9
     ede:	af 92       	push	r10
     ee0:	bf 92       	push	r11
     ee2:	cf 92       	push	r12
     ee4:	df 92       	push	r13
     ee6:	ef 92       	push	r14
     ee8:	ff 92       	push	r15
     eea:	0f 93       	push	r16
     eec:	1f 93       	push	r17
     eee:	cf 93       	push	r28
     ef0:	df 93       	push	r29
     ef2:	00 d0       	rcall	.+0      	; 0xef4 <GPS_Decode+0x26>
     ef4:	00 d0       	rcall	.+0      	; 0xef6 <GPS_Decode+0x28>
     ef6:	00 d0       	rcall	.+0      	; 0xef8 <GPS_Decode+0x2a>
     ef8:	cd b7       	in	r28, 0x3d	; 61
     efa:	de b7       	in	r29, 0x3e	; 62
     efc:	8c 01       	movw	r16, r24
     efe:	7b 01       	movw	r14, r22
	///////////////////Checksum////////////////////////
	if(checksum(msg))  //! to disable during testing 
     f00:	0e 94 ef 05 	call	0xbde	; 0xbde <checksum>
     f04:	88 23       	and	r24, r24
     f06:	09 f4       	brne	.+2      	; 0xf0a <GPS_Decode+0x3c>
     f08:	64 c1       	rjmp	.+712    	; 0x11d2 <GPS_Decode+0x304>
	{
		uint8_t type = MessageType(msg);
     f0a:	c8 01       	movw	r24, r16
     f0c:	0e 94 38 06 	call	0xc70	; 0xc70 <MessageType>
     f10:	89 83       	std	Y+1, r24	; 0x01
		init(GPS_Data);
     f12:	c7 01       	movw	r24, r14
     f14:	0e 94 c7 05 	call	0xb8e	; 0xb8e <init>
		
	switch(type)
     f18:	29 81       	ldd	r18, Y+1	; 0x01
     f1a:	21 30       	cpi	r18, 0x01	; 1
     f1c:	09 f0       	breq	.+2      	; 0xf20 <GPS_Decode+0x52>
     f1e:	4d c1       	rjmp	.+666    	; 0x11ba <GPS_Decode+0x2ec>
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
     f20:	d8 01       	movw	r26, r16
     f22:	16 96       	adiw	r26, 0x06	; 6
     f24:	8c 91       	ld	r24, X
     f26:	8a 32       	cpi	r24, 0x2A	; 42
     f28:	09 f4       	brne	.+2      	; 0xf2c <GPS_Decode+0x5e>
     f2a:	47 c1       	rjmp	.+654    	; 0x11ba <GPS_Decode+0x2ec>
     f2c:	0f 2e       	mov	r0, r31
     f2e:	f0 e1       	ldi	r31, 0x10	; 16
     f30:	4f 2e       	mov	r4, r31
     f32:	f7 e2       	ldi	r31, 0x27	; 39
     f34:	5f 2e       	mov	r5, r31
     f36:	61 2c       	mov	r6, r1
     f38:	71 2c       	mov	r7, r1
     f3a:	f0 2d       	mov	r31, r0
     f3c:	ba e0       	ldi	r27, 0x0A	; 10
     f3e:	bc 83       	std	Y+4, r27	; 0x04
     f40:	e4 e6       	ldi	r30, 0x64	; 100
     f42:	e9 83       	std	Y+1, r30	; 0x01
     f44:	c1 2c       	mov	r12, r1
     f46:	0f 2e       	mov	r0, r31
     f48:	f0 e1       	ldi	r31, 0x10	; 16
     f4a:	8f 2e       	mov	r8, r31
     f4c:	f7 e2       	ldi	r31, 0x27	; 39
     f4e:	9f 2e       	mov	r9, r31
     f50:	a1 2c       	mov	r10, r1
     f52:	b1 2c       	mov	r11, r1
     f54:	f0 2d       	mov	r31, r0
     f56:	fa e0       	ldi	r31, 0x0A	; 10
     f58:	fb 83       	std	Y+3, r31	; 0x03
     f5a:	2a e0       	ldi	r18, 0x0A	; 10
     f5c:	2a 83       	std	Y+2, r18	; 0x02
     f5e:	d1 2c       	mov	r13, r1
     f60:	0f 2e       	mov	r0, r31
     f62:	fa e0       	ldi	r31, 0x0A	; 10
     f64:	3f 2e       	mov	r3, r31
     f66:	f0 2d       	mov	r31, r0
     f68:	1e 82       	std	Y+6, r1	; 0x06
     f6a:	96 e0       	ldi	r25, 0x06	; 6
									LonDegree /= 10;
								}
								if((LonCount>=3) && (LonCount<5))
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
									LonHour /= 10;
     f6c:	0f 2e       	mov	r0, r31
     f6e:	fd ec       	ldi	r31, 0xCD	; 205
     f70:	2f 2e       	mov	r2, r31
     f72:	f0 2d       	mov	r31, r0
     f74:	9d 83       	std	Y+5, r25	; 0x05
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
				{
					if(msg[i] == ',')
     f76:	8c 32       	cpi	r24, 0x2C	; 44
     f78:	31 f4       	brne	.+12     	; 0xf86 <GPS_Decode+0xb8>
					{
						CommaCounter++;
     f7a:	be 81       	ldd	r27, Y+6	; 0x06
     f7c:	bf 5f       	subi	r27, 0xFF	; 255
     f7e:	be 83       	std	Y+6, r27	; 0x06
						i++;
     f80:	ed 81       	ldd	r30, Y+5	; 0x05
     f82:	ef 5f       	subi	r30, 0xFF	; 255
     f84:	ed 83       	std	Y+5, r30	; 0x05
					}
					
					///////////COMMA SWITCH START!////////////////////////
					switch(CommaCounter)
     f86:	fe 81       	ldd	r31, Y+6	; 0x06
     f88:	f4 30       	cpi	r31, 0x04	; 4
     f8a:	09 f4       	brne	.+2      	; 0xf8e <GPS_Decode+0xc0>
     f8c:	7c c0       	rjmp	.+248    	; 0x1086 <GPS_Decode+0x1b8>
     f8e:	30 f4       	brcc	.+12     	; 0xf9c <GPS_Decode+0xce>
     f90:	f2 30       	cpi	r31, 0x02	; 2
     f92:	71 f0       	breq	.+28     	; 0xfb0 <GPS_Decode+0xe2>
     f94:	f3 30       	cpi	r31, 0x03	; 3
     f96:	09 f4       	brne	.+2      	; 0xf9a <GPS_Decode+0xcc>
     f98:	68 c0       	rjmp	.+208    	; 0x106a <GPS_Decode+0x19c>
     f9a:	05 c1       	rjmp	.+522    	; 0x11a6 <GPS_Decode+0x2d8>
     f9c:	2e 81       	ldd	r18, Y+6	; 0x06
     f9e:	26 30       	cpi	r18, 0x06	; 6
     fa0:	09 f4       	brne	.+2      	; 0xfa4 <GPS_Decode+0xd6>
     fa2:	dd c0       	rjmp	.+442    	; 0x115e <GPS_Decode+0x290>
     fa4:	08 f4       	brcc	.+2      	; 0xfa8 <GPS_Decode+0xda>
     fa6:	ce c0       	rjmp	.+412    	; 0x1144 <GPS_Decode+0x276>
     fa8:	2d 30       	cpi	r18, 0x0D	; 13
     faa:	09 f4       	brne	.+2      	; 0xfae <GPS_Decode+0xe0>
     fac:	e3 c0       	rjmp	.+454    	; 0x1174 <GPS_Decode+0x2a6>
     fae:	fb c0       	rjmp	.+502    	; 0x11a6 <GPS_Decode+0x2d8>
					{
						case 2:		//Latitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
     fb0:	f8 01       	movw	r30, r16
     fb2:	8d 81       	ldd	r24, Y+5	; 0x05
     fb4:	e8 0f       	add	r30, r24
     fb6:	f1 1d       	adc	r31, r1
     fb8:	80 81       	ld	r24, Z
     fba:	98 2f       	mov	r25, r24
     fbc:	9d 7f       	andi	r25, 0xFD	; 253
     fbe:	9c 32       	cpi	r25, 0x2C	; 44
     fc0:	09 f4       	brne	.+2      	; 0xfc4 <GPS_Decode+0xf6>
     fc2:	f1 c0       	rjmp	.+482    	; 0x11a6 <GPS_Decode+0x2d8>
							{
								if(LatCount<2)
     fc4:	91 e0       	ldi	r25, 0x01	; 1
     fc6:	9d 15       	cp	r25, r13
     fc8:	88 f0       	brcs	.+34     	; 0xfec <GPS_Decode+0x11e>
								{
									GPS_Data->LAT_Degree += (msg[i]-48) * LatDegree;
     fca:	80 53       	subi	r24, 0x30	; 48
     fcc:	d7 01       	movw	r26, r14
     fce:	9c 91       	ld	r25, X
     fd0:	ba 81       	ldd	r27, Y+2	; 0x02
     fd2:	8b 9f       	mul	r24, r27
     fd4:	90 0d       	add	r25, r0
     fd6:	11 24       	eor	r1, r1
     fd8:	d7 01       	movw	r26, r14
     fda:	9c 93       	st	X, r25
									LatDegree /= 10;
     fdc:	ba 81       	ldd	r27, Y+2	; 0x02
     fde:	b2 9d       	mul	r27, r2
     fe0:	81 2d       	mov	r24, r1
     fe2:	11 24       	eor	r1, r1
     fe4:	86 95       	lsr	r24
     fe6:	86 95       	lsr	r24
     fe8:	86 95       	lsr	r24
     fea:	8a 83       	std	Y+2, r24	; 0x02
								}
								if((LatCount>=2) && (LatCount<4))
     fec:	8e ef       	ldi	r24, 0xFE	; 254
     fee:	8d 0d       	add	r24, r13
     ff0:	82 30       	cpi	r24, 0x02	; 2
     ff2:	a0 f4       	brcc	.+40     	; 0x101c <GPS_Decode+0x14e>
								{
									GPS_Data->LAT_Min += (msg[i]-48) * LatHour;
     ff4:	90 81       	ld	r25, Z
     ff6:	90 53       	subi	r25, 0x30	; 48
     ff8:	d7 01       	movw	r26, r14
     ffa:	11 96       	adiw	r26, 0x01	; 1
     ffc:	8c 91       	ld	r24, X
     ffe:	bb 81       	ldd	r27, Y+3	; 0x03
    1000:	9b 9f       	mul	r25, r27
    1002:	80 0d       	add	r24, r0
    1004:	11 24       	eor	r1, r1
    1006:	d7 01       	movw	r26, r14
    1008:	11 96       	adiw	r26, 0x01	; 1
    100a:	8c 93       	st	X, r24
									LatHour /= 10;
    100c:	bb 81       	ldd	r27, Y+3	; 0x03
    100e:	b2 9d       	mul	r27, r2
    1010:	81 2d       	mov	r24, r1
    1012:	11 24       	eor	r1, r1
    1014:	86 95       	lsr	r24
    1016:	86 95       	lsr	r24
    1018:	86 95       	lsr	r24
    101a:	8b 83       	std	Y+3, r24	; 0x03
								}
								if((LatCount>=4))
    101c:	23 e0       	ldi	r18, 0x03	; 3
    101e:	2d 15       	cp	r18, r13
    1020:	18 f5       	brcc	.+70     	; 0x1068 <GPS_Decode+0x19a>
								{
									GPS_Data->LAT += (msg[i]-48) * LatMin;
    1022:	a0 81       	ld	r26, Z
    1024:	b0 e0       	ldi	r27, 0x00	; 0
    1026:	d0 97       	sbiw	r26, 0x30	; 48
    1028:	a5 01       	movw	r20, r10
    102a:	94 01       	movw	r18, r8
    102c:	0e 94 64 10 	call	0x20c8	; 0x20c8 <__mulshisi3>
    1030:	d7 01       	movw	r26, r14
    1032:	12 96       	adiw	r26, 0x02	; 2
    1034:	2d 91       	ld	r18, X+
    1036:	3d 91       	ld	r19, X+
    1038:	4d 91       	ld	r20, X+
    103a:	5c 91       	ld	r21, X
    103c:	15 97       	sbiw	r26, 0x05	; 5
    103e:	dc 01       	movw	r26, r24
    1040:	cb 01       	movw	r24, r22
    1042:	82 0f       	add	r24, r18
    1044:	93 1f       	adc	r25, r19
    1046:	a4 1f       	adc	r26, r20
    1048:	b5 1f       	adc	r27, r21
    104a:	f7 01       	movw	r30, r14
    104c:	82 83       	std	Z+2, r24	; 0x02
    104e:	93 83       	std	Z+3, r25	; 0x03
    1050:	a4 83       	std	Z+4, r26	; 0x04
    1052:	b5 83       	std	Z+5, r27	; 0x05
									LatMin /= 10;
    1054:	c5 01       	movw	r24, r10
    1056:	b4 01       	movw	r22, r8
    1058:	2a e0       	ldi	r18, 0x0A	; 10
    105a:	30 e0       	ldi	r19, 0x00	; 0
    105c:	40 e0       	ldi	r20, 0x00	; 0
    105e:	50 e0       	ldi	r21, 0x00	; 0
    1060:	0e 94 42 10 	call	0x2084	; 0x2084 <__udivmodsi4>
    1064:	49 01       	movw	r8, r18
    1066:	5a 01       	movw	r10, r20
								}
								LatCount++;
    1068:	d3 94       	inc	r13

						}
						//////////////////////////////////////////////////
						case 3:		//Lat sign
						{
							if(msg[i]>='A' && msg[i]<='Z')
    106a:	f8 01       	movw	r30, r16
    106c:	2d 81       	ldd	r18, Y+5	; 0x05
    106e:	e2 0f       	add	r30, r18
    1070:	f1 1d       	adc	r31, r1
    1072:	80 81       	ld	r24, Z
    1074:	9f eb       	ldi	r25, 0xBF	; 191
    1076:	98 0f       	add	r25, r24
    1078:	9a 31       	cpi	r25, 0x1A	; 26
    107a:	08 f0       	brcs	.+2      	; 0x107e <GPS_Decode+0x1b0>
    107c:	94 c0       	rjmp	.+296    	; 0x11a6 <GPS_Decode+0x2d8>
							{
								GPS_Data->LATdir = msg[i];
    107e:	d7 01       	movw	r26, r14
    1080:	1e 96       	adiw	r26, 0x0e	; 14
    1082:	8c 93       	st	X, r24
    1084:	90 c0       	rjmp	.+288    	; 0x11a6 <GPS_Decode+0x2d8>
							break;
						}
						///////////////////////////////////////////////////
						case 4:		//Longitude
						{
							if((msg[i] != '.') && (msg[i] != ','))
    1086:	f8 01       	movw	r30, r16
    1088:	bd 81       	ldd	r27, Y+5	; 0x05
    108a:	eb 0f       	add	r30, r27
    108c:	f1 1d       	adc	r31, r1
    108e:	80 81       	ld	r24, Z
    1090:	98 2f       	mov	r25, r24
    1092:	9d 7f       	andi	r25, 0xFD	; 253
    1094:	9c 32       	cpi	r25, 0x2C	; 44
    1096:	09 f4       	brne	.+2      	; 0x109a <GPS_Decode+0x1cc>
    1098:	86 c0       	rjmp	.+268    	; 0x11a6 <GPS_Decode+0x2d8>
							{
								if(LonCount<3)
    109a:	22 e0       	ldi	r18, 0x02	; 2
    109c:	2c 15       	cp	r18, r12
    109e:	98 f0       	brcs	.+38     	; 0x10c6 <GPS_Decode+0x1f8>
								{
									GPS_Data->LON_Degree += (msg[i]-48) * LonDegree;
    10a0:	80 53       	subi	r24, 0x30	; 48
    10a2:	d7 01       	movw	r26, r14
    10a4:	1f 96       	adiw	r26, 0x0f	; 15
    10a6:	9c 91       	ld	r25, X
    10a8:	b9 81       	ldd	r27, Y+1	; 0x01
    10aa:	8b 9f       	mul	r24, r27
    10ac:	90 0d       	add	r25, r0
    10ae:	11 24       	eor	r1, r1
    10b0:	d7 01       	movw	r26, r14
    10b2:	1f 96       	adiw	r26, 0x0f	; 15
    10b4:	9c 93       	st	X, r25
									LonDegree /= 10;
    10b6:	b9 81       	ldd	r27, Y+1	; 0x01
    10b8:	b2 9d       	mul	r27, r2
    10ba:	81 2d       	mov	r24, r1
    10bc:	11 24       	eor	r1, r1
    10be:	86 95       	lsr	r24
    10c0:	86 95       	lsr	r24
    10c2:	86 95       	lsr	r24
    10c4:	89 83       	std	Y+1, r24	; 0x01
								}
								if((LonCount>=3) && (LonCount<5))
    10c6:	8d ef       	ldi	r24, 0xFD	; 253
    10c8:	8c 0d       	add	r24, r12
    10ca:	82 30       	cpi	r24, 0x02	; 2
    10cc:	a0 f4       	brcc	.+40     	; 0x10f6 <GPS_Decode+0x228>
								{
									GPS_Data->LON_Min += (msg[i]-48) * LonHour;
    10ce:	90 81       	ld	r25, Z
    10d0:	90 53       	subi	r25, 0x30	; 48
    10d2:	d7 01       	movw	r26, r14
    10d4:	50 96       	adiw	r26, 0x10	; 16
    10d6:	8c 91       	ld	r24, X
    10d8:	bc 81       	ldd	r27, Y+4	; 0x04
    10da:	9b 9f       	mul	r25, r27
    10dc:	80 0d       	add	r24, r0
    10de:	11 24       	eor	r1, r1
    10e0:	d7 01       	movw	r26, r14
    10e2:	50 96       	adiw	r26, 0x10	; 16
    10e4:	8c 93       	st	X, r24
									LonHour /= 10;
    10e6:	bc 81       	ldd	r27, Y+4	; 0x04
    10e8:	b2 9d       	mul	r27, r2
    10ea:	81 2d       	mov	r24, r1
    10ec:	11 24       	eor	r1, r1
    10ee:	86 95       	lsr	r24
    10f0:	86 95       	lsr	r24
    10f2:	86 95       	lsr	r24
    10f4:	8c 83       	std	Y+4, r24	; 0x04
								}
								if((LonCount>=5))
    10f6:	24 e0       	ldi	r18, 0x04	; 4
    10f8:	2c 15       	cp	r18, r12
    10fa:	18 f5       	brcc	.+70     	; 0x1142 <GPS_Decode+0x274>
								{
									GPS_Data->LON += (msg[i]-48) * LonMin;
    10fc:	a0 81       	ld	r26, Z
    10fe:	b0 e0       	ldi	r27, 0x00	; 0
    1100:	d0 97       	sbiw	r26, 0x30	; 48
    1102:	a3 01       	movw	r20, r6
    1104:	92 01       	movw	r18, r4
    1106:	0e 94 64 10 	call	0x20c8	; 0x20c8 <__mulshisi3>
    110a:	d7 01       	movw	r26, r14
    110c:	51 96       	adiw	r26, 0x11	; 17
    110e:	2d 91       	ld	r18, X+
    1110:	3d 91       	ld	r19, X+
    1112:	4d 91       	ld	r20, X+
    1114:	5c 91       	ld	r21, X
    1116:	54 97       	sbiw	r26, 0x14	; 20
    1118:	dc 01       	movw	r26, r24
    111a:	cb 01       	movw	r24, r22
    111c:	82 0f       	add	r24, r18
    111e:	93 1f       	adc	r25, r19
    1120:	a4 1f       	adc	r26, r20
    1122:	b5 1f       	adc	r27, r21
    1124:	f7 01       	movw	r30, r14
    1126:	81 8b       	std	Z+17, r24	; 0x11
    1128:	92 8b       	std	Z+18, r25	; 0x12
    112a:	a3 8b       	std	Z+19, r26	; 0x13
    112c:	b4 8b       	std	Z+20, r27	; 0x14
									LonMin /= 10;
    112e:	c3 01       	movw	r24, r6
    1130:	b2 01       	movw	r22, r4
    1132:	2a e0       	ldi	r18, 0x0A	; 10
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	40 e0       	ldi	r20, 0x00	; 0
    1138:	50 e0       	ldi	r21, 0x00	; 0
    113a:	0e 94 42 10 	call	0x2084	; 0x2084 <__udivmodsi4>
    113e:	29 01       	movw	r4, r18
    1140:	3a 01       	movw	r6, r20
								}
								LonCount++;	
    1142:	c3 94       	inc	r12
							}
						}
						//////////////////////////////////////////////////
						case 5: //Lon dir
						{
							if(msg[i]>='A' && msg[i]<='Z')
    1144:	f8 01       	movw	r30, r16
    1146:	2d 81       	ldd	r18, Y+5	; 0x05
    1148:	e2 0f       	add	r30, r18
    114a:	f1 1d       	adc	r31, r1
    114c:	80 81       	ld	r24, Z
    114e:	9f eb       	ldi	r25, 0xBF	; 191
    1150:	98 0f       	add	r25, r24
    1152:	9a 31       	cpi	r25, 0x1A	; 26
    1154:	40 f5       	brcc	.+80     	; 0x11a6 <GPS_Decode+0x2d8>
							{
								GPS_Data->LONdir = msg[i];
    1156:	d7 01       	movw	r26, r14
    1158:	5d 96       	adiw	r26, 0x1d	; 29
    115a:	8c 93       	st	X, r24
    115c:	24 c0       	rjmp	.+72     	; 0x11a6 <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 6: //Quality
						{
							if((msg[i]<= '5') && (msg[i] >= '0') && (msg[i]!=','))
    115e:	f8 01       	movw	r30, r16
    1160:	bd 81       	ldd	r27, Y+5	; 0x05
    1162:	eb 0f       	add	r30, r27
    1164:	f1 1d       	adc	r31, r1
    1166:	80 81       	ld	r24, Z
    1168:	80 53       	subi	r24, 0x30	; 48
    116a:	86 30       	cpi	r24, 0x06	; 6
    116c:	e0 f4       	brcc	.+56     	; 0x11a6 <GPS_Decode+0x2d8>
							{
								GPS_Data->quality = msg[i] - 48;
    116e:	f7 01       	movw	r30, r14
    1170:	86 8f       	std	Z+30, r24	; 0x1e
    1172:	19 c0       	rjmp	.+50     	; 0x11a6 <GPS_Decode+0x2d8>
							break;
						}
						//////////////////////////////////////////////////
						case 13: //AGE
						{
							if((msg[i] != '.') && (msg[i] != ','))
    1174:	f8 01       	movw	r30, r16
    1176:	2d 81       	ldd	r18, Y+5	; 0x05
    1178:	e2 0f       	add	r30, r18
    117a:	f1 1d       	adc	r31, r1
    117c:	80 81       	ld	r24, Z
    117e:	98 2f       	mov	r25, r24
    1180:	9d 7f       	andi	r25, 0xFD	; 253
    1182:	9c 32       	cpi	r25, 0x2C	; 44
    1184:	81 f0       	breq	.+32     	; 0x11a6 <GPS_Decode+0x2d8>
							{
							GPS_Data->ageOfCorrection += (msg[i]-48) * age;
    1186:	80 53       	subi	r24, 0x30	; 48
    1188:	d7 01       	movw	r26, r14
    118a:	5f 96       	adiw	r26, 0x1f	; 31
    118c:	9c 91       	ld	r25, X
    118e:	5f 97       	sbiw	r26, 0x1f	; 31
    1190:	83 9d       	mul	r24, r3
    1192:	90 0d       	add	r25, r0
    1194:	11 24       	eor	r1, r1
    1196:	5f 96       	adiw	r26, 0x1f	; 31
    1198:	9c 93       	st	X, r25
							age /= 10;
    119a:	32 9c       	mul	r3, r2
    119c:	31 2c       	mov	r3, r1
    119e:	11 24       	eor	r1, r1
    11a0:	36 94       	lsr	r3
    11a2:	36 94       	lsr	r3
    11a4:	36 94       	lsr	r3
							}
							break;
						}
					}
					///////////COMMA SWITCH END!////////////////////////
					i++;
    11a6:	bd 81       	ldd	r27, Y+5	; 0x05
    11a8:	bf 5f       	subi	r27, 0xFF	; 255
    11aa:	bd 83       	std	Y+5, r27	; 0x05
				uint8_t LonCount=0;
				uint8_t LonDegree = 100;
				uint8_t LonHour = 10;
				uint32_t LonMin = 10000;
								
				while(msg[i] != '*')
    11ac:	f8 01       	movw	r30, r16
    11ae:	eb 0f       	add	r30, r27
    11b0:	f1 1d       	adc	r31, r1
    11b2:	80 81       	ld	r24, Z
    11b4:	8a 32       	cpi	r24, 0x2A	; 42
    11b6:	09 f0       	breq	.+2      	; 0x11ba <GPS_Decode+0x2ec>
    11b8:	de ce       	rjmp	.-580    	; 0xf76 <GPS_Decode+0xa8>
			{
				
			}	
		}			//End switch type
		////////////////////////////////////////////////////////
		convert(GPS_Data);
    11ba:	c7 01       	movw	r24, r14
    11bc:	0e 94 a6 06 	call	0xd4c	; 0xd4c <convert>
		
		if(GPS_Data->quality >= 4) //if fix return 1
		return 1;
    11c0:	81 e0       	ldi	r24, 0x01	; 1
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	d7 01       	movw	r26, r14
    11c6:	5e 96       	adiw	r26, 0x1e	; 30
    11c8:	2c 91       	ld	r18, X
    11ca:	24 30       	cpi	r18, 0x04	; 4
    11cc:	20 f4       	brcc	.+8      	; 0x11d6 <GPS_Decode+0x308>
    11ce:	80 e0       	ldi	r24, 0x00	; 0
    11d0:	02 c0       	rjmp	.+4      	; 0x11d6 <GPS_Decode+0x308>
		
		//return 1;
	}
	else
	{	//if chechsum false return 0
		return 0;
    11d2:	80 e0       	ldi	r24, 0x00	; 0
    11d4:	90 e0       	ldi	r25, 0x00	; 0
	}
    11d6:	26 96       	adiw	r28, 0x06	; 6
    11d8:	0f b6       	in	r0, 0x3f	; 63
    11da:	f8 94       	cli
    11dc:	de bf       	out	0x3e, r29	; 62
    11de:	0f be       	out	0x3f, r0	; 63
    11e0:	cd bf       	out	0x3d, r28	; 61
    11e2:	df 91       	pop	r29
    11e4:	cf 91       	pop	r28
    11e6:	1f 91       	pop	r17
    11e8:	0f 91       	pop	r16
    11ea:	ff 90       	pop	r15
    11ec:	ef 90       	pop	r14
    11ee:	df 90       	pop	r13
    11f0:	cf 90       	pop	r12
    11f2:	bf 90       	pop	r11
    11f4:	af 90       	pop	r10
    11f6:	9f 90       	pop	r9
    11f8:	8f 90       	pop	r8
    11fa:	7f 90       	pop	r7
    11fc:	6f 90       	pop	r6
    11fe:	5f 90       	pop	r5
    1200:	4f 90       	pop	r4
    1202:	3f 90       	pop	r3
    1204:	2f 90       	pop	r2
    1206:	08 95       	ret

00001208 <usart_init>:
	UDR0 = data; //data to be sent
}

void usart_init(void)
{
	UBRR0H = (uint8_t)(BAUD_PRESCALER>>8);
    1208:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (uint8_t)(BAUD_PRESCALER);
    120c:	83 e3       	ldi	r24, 0x33	; 51
    120e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)| (1<<RXCIE0);
    1212:	88 e9       	ldi	r24, 0x98	; 152
    1214:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = ((1<<UCSZ00)|(1<<UCSZ01));
    1218:	86 e0       	ldi	r24, 0x06	; 6
    121a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
    121e:	08 95       	ret

00001220 <__vector_18>:
}


ISR(USART_RX_vect)
{		
    1220:	1f 92       	push	r1
    1222:	0f 92       	push	r0
    1224:	0f b6       	in	r0, 0x3f	; 63
    1226:	0f 92       	push	r0
    1228:	11 24       	eor	r1, r1
    122a:	2f 93       	push	r18
    122c:	3f 93       	push	r19
    122e:	4f 93       	push	r20
    1230:	5f 93       	push	r21
    1232:	6f 93       	push	r22
    1234:	7f 93       	push	r23
    1236:	8f 93       	push	r24
    1238:	9f 93       	push	r25
    123a:	af 93       	push	r26
    123c:	bf 93       	push	r27
    123e:	ef 93       	push	r30
    1240:	ff 93       	push	r31
	read_gps_data();
    1242:	0e 94 21 01 	call	0x242	; 0x242 <read_gps_data>
    1246:	ff 91       	pop	r31
    1248:	ef 91       	pop	r30
    124a:	bf 91       	pop	r27
    124c:	af 91       	pop	r26
    124e:	9f 91       	pop	r25
    1250:	8f 91       	pop	r24
    1252:	7f 91       	pop	r23
    1254:	6f 91       	pop	r22
    1256:	5f 91       	pop	r21
    1258:	4f 91       	pop	r20
    125a:	3f 91       	pop	r19
    125c:	2f 91       	pop	r18
    125e:	0f 90       	pop	r0
    1260:	0f be       	out	0x3f, r0	; 63
    1262:	0f 90       	pop	r0
    1264:	1f 90       	pop	r1
    1266:	18 95       	reti

00001268 <__subsf3>:
    1268:	50 58       	subi	r21, 0x80	; 128

0000126a <__addsf3>:
    126a:	bb 27       	eor	r27, r27
    126c:	aa 27       	eor	r26, r26
    126e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__addsf3x>
    1272:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__fp_round>
    1276:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fp_pscA>
    127a:	38 f0       	brcs	.+14     	; 0x128a <__addsf3+0x20>
    127c:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__fp_pscB>
    1280:	20 f0       	brcs	.+8      	; 0x128a <__addsf3+0x20>
    1282:	39 f4       	brne	.+14     	; 0x1292 <__addsf3+0x28>
    1284:	9f 3f       	cpi	r25, 0xFF	; 255
    1286:	19 f4       	brne	.+6      	; 0x128e <__addsf3+0x24>
    1288:	26 f4       	brtc	.+8      	; 0x1292 <__addsf3+0x28>
    128a:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__fp_nan>
    128e:	0e f4       	brtc	.+2      	; 0x1292 <__addsf3+0x28>
    1290:	e0 95       	com	r30
    1292:	e7 fb       	bst	r30, 7
    1294:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__fp_inf>

00001298 <__addsf3x>:
    1298:	e9 2f       	mov	r30, r25
    129a:	0e 94 b4 0b 	call	0x1768	; 0x1768 <__fp_split3>
    129e:	58 f3       	brcs	.-42     	; 0x1276 <__addsf3+0xc>
    12a0:	ba 17       	cp	r27, r26
    12a2:	62 07       	cpc	r22, r18
    12a4:	73 07       	cpc	r23, r19
    12a6:	84 07       	cpc	r24, r20
    12a8:	95 07       	cpc	r25, r21
    12aa:	20 f0       	brcs	.+8      	; 0x12b4 <__addsf3x+0x1c>
    12ac:	79 f4       	brne	.+30     	; 0x12cc <__addsf3x+0x34>
    12ae:	a6 f5       	brtc	.+104    	; 0x1318 <__addsf3x+0x80>
    12b0:	0c 94 d6 0b 	jmp	0x17ac	; 0x17ac <__fp_zero>
    12b4:	0e f4       	brtc	.+2      	; 0x12b8 <__addsf3x+0x20>
    12b6:	e0 95       	com	r30
    12b8:	0b 2e       	mov	r0, r27
    12ba:	ba 2f       	mov	r27, r26
    12bc:	a0 2d       	mov	r26, r0
    12be:	0b 01       	movw	r0, r22
    12c0:	b9 01       	movw	r22, r18
    12c2:	90 01       	movw	r18, r0
    12c4:	0c 01       	movw	r0, r24
    12c6:	ca 01       	movw	r24, r20
    12c8:	a0 01       	movw	r20, r0
    12ca:	11 24       	eor	r1, r1
    12cc:	ff 27       	eor	r31, r31
    12ce:	59 1b       	sub	r21, r25
    12d0:	99 f0       	breq	.+38     	; 0x12f8 <__addsf3x+0x60>
    12d2:	59 3f       	cpi	r21, 0xF9	; 249
    12d4:	50 f4       	brcc	.+20     	; 0x12ea <__addsf3x+0x52>
    12d6:	50 3e       	cpi	r21, 0xE0	; 224
    12d8:	68 f1       	brcs	.+90     	; 0x1334 <__addsf3x+0x9c>
    12da:	1a 16       	cp	r1, r26
    12dc:	f0 40       	sbci	r31, 0x00	; 0
    12de:	a2 2f       	mov	r26, r18
    12e0:	23 2f       	mov	r18, r19
    12e2:	34 2f       	mov	r19, r20
    12e4:	44 27       	eor	r20, r20
    12e6:	58 5f       	subi	r21, 0xF8	; 248
    12e8:	f3 cf       	rjmp	.-26     	; 0x12d0 <__addsf3x+0x38>
    12ea:	46 95       	lsr	r20
    12ec:	37 95       	ror	r19
    12ee:	27 95       	ror	r18
    12f0:	a7 95       	ror	r26
    12f2:	f0 40       	sbci	r31, 0x00	; 0
    12f4:	53 95       	inc	r21
    12f6:	c9 f7       	brne	.-14     	; 0x12ea <__addsf3x+0x52>
    12f8:	7e f4       	brtc	.+30     	; 0x1318 <__addsf3x+0x80>
    12fa:	1f 16       	cp	r1, r31
    12fc:	ba 0b       	sbc	r27, r26
    12fe:	62 0b       	sbc	r22, r18
    1300:	73 0b       	sbc	r23, r19
    1302:	84 0b       	sbc	r24, r20
    1304:	ba f0       	brmi	.+46     	; 0x1334 <__addsf3x+0x9c>
    1306:	91 50       	subi	r25, 0x01	; 1
    1308:	a1 f0       	breq	.+40     	; 0x1332 <__addsf3x+0x9a>
    130a:	ff 0f       	add	r31, r31
    130c:	bb 1f       	adc	r27, r27
    130e:	66 1f       	adc	r22, r22
    1310:	77 1f       	adc	r23, r23
    1312:	88 1f       	adc	r24, r24
    1314:	c2 f7       	brpl	.-16     	; 0x1306 <__addsf3x+0x6e>
    1316:	0e c0       	rjmp	.+28     	; 0x1334 <__addsf3x+0x9c>
    1318:	ba 0f       	add	r27, r26
    131a:	62 1f       	adc	r22, r18
    131c:	73 1f       	adc	r23, r19
    131e:	84 1f       	adc	r24, r20
    1320:	48 f4       	brcc	.+18     	; 0x1334 <__addsf3x+0x9c>
    1322:	87 95       	ror	r24
    1324:	77 95       	ror	r23
    1326:	67 95       	ror	r22
    1328:	b7 95       	ror	r27
    132a:	f7 95       	ror	r31
    132c:	9e 3f       	cpi	r25, 0xFE	; 254
    132e:	08 f0       	brcs	.+2      	; 0x1332 <__addsf3x+0x9a>
    1330:	b0 cf       	rjmp	.-160    	; 0x1292 <__addsf3+0x28>
    1332:	93 95       	inc	r25
    1334:	88 0f       	add	r24, r24
    1336:	08 f0       	brcs	.+2      	; 0x133a <__addsf3x+0xa2>
    1338:	99 27       	eor	r25, r25
    133a:	ee 0f       	add	r30, r30
    133c:	97 95       	ror	r25
    133e:	87 95       	ror	r24
    1340:	08 95       	ret
    1342:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fp_pscA>
    1346:	60 f0       	brcs	.+24     	; 0x1360 <__addsf3x+0xc8>
    1348:	80 e8       	ldi	r24, 0x80	; 128
    134a:	91 e0       	ldi	r25, 0x01	; 1
    134c:	09 f4       	brne	.+2      	; 0x1350 <__addsf3x+0xb8>
    134e:	9e ef       	ldi	r25, 0xFE	; 254
    1350:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__fp_pscB>
    1354:	28 f0       	brcs	.+10     	; 0x1360 <__addsf3x+0xc8>
    1356:	40 e8       	ldi	r20, 0x80	; 128
    1358:	51 e0       	ldi	r21, 0x01	; 1
    135a:	71 f4       	brne	.+28     	; 0x1378 <atan2+0x10>
    135c:	5e ef       	ldi	r21, 0xFE	; 254
    135e:	0c c0       	rjmp	.+24     	; 0x1378 <atan2+0x10>
    1360:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__fp_nan>
    1364:	0c 94 d6 0b 	jmp	0x17ac	; 0x17ac <__fp_zero>

00001368 <atan2>:
    1368:	e9 2f       	mov	r30, r25
    136a:	e0 78       	andi	r30, 0x80	; 128
    136c:	0e 94 b4 0b 	call	0x1768	; 0x1768 <__fp_split3>
    1370:	40 f3       	brcs	.-48     	; 0x1342 <__addsf3x+0xaa>
    1372:	09 2e       	mov	r0, r25
    1374:	05 2a       	or	r0, r21
    1376:	b1 f3       	breq	.-20     	; 0x1364 <__addsf3x+0xcc>
    1378:	26 17       	cp	r18, r22
    137a:	37 07       	cpc	r19, r23
    137c:	48 07       	cpc	r20, r24
    137e:	59 07       	cpc	r21, r25
    1380:	38 f0       	brcs	.+14     	; 0x1390 <atan2+0x28>
    1382:	0e 2e       	mov	r0, r30
    1384:	07 f8       	bld	r0, 7
    1386:	e0 25       	eor	r30, r0
    1388:	69 f0       	breq	.+26     	; 0x13a4 <atan2+0x3c>
    138a:	e0 25       	eor	r30, r0
    138c:	e0 64       	ori	r30, 0x40	; 64
    138e:	0a c0       	rjmp	.+20     	; 0x13a4 <atan2+0x3c>
    1390:	ef 63       	ori	r30, 0x3F	; 63
    1392:	07 f8       	bld	r0, 7
    1394:	00 94       	com	r0
    1396:	07 fa       	bst	r0, 7
    1398:	db 01       	movw	r26, r22
    139a:	b9 01       	movw	r22, r18
    139c:	9d 01       	movw	r18, r26
    139e:	dc 01       	movw	r26, r24
    13a0:	ca 01       	movw	r24, r20
    13a2:	ad 01       	movw	r20, r26
    13a4:	ef 93       	push	r30
    13a6:	0e 94 34 0a 	call	0x1468	; 0x1468 <__divsf3_pse>
    13aa:	0e 94 8f 0b 	call	0x171e	; 0x171e <__fp_round>
    13ae:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <atan>
    13b2:	5f 91       	pop	r21
    13b4:	55 23       	and	r21, r21
    13b6:	39 f0       	breq	.+14     	; 0x13c6 <atan2+0x5e>
    13b8:	2b ed       	ldi	r18, 0xDB	; 219
    13ba:	3f e0       	ldi	r19, 0x0F	; 15
    13bc:	49 e4       	ldi	r20, 0x49	; 73
    13be:	50 fd       	sbrc	r21, 0
    13c0:	49 ec       	ldi	r20, 0xC9	; 201
    13c2:	0c 94 35 09 	jmp	0x126a	; 0x126a <__addsf3>
    13c6:	08 95       	ret

000013c8 <atan>:
    13c8:	df 93       	push	r29
    13ca:	dd 27       	eor	r29, r29
    13cc:	b9 2f       	mov	r27, r25
    13ce:	bf 77       	andi	r27, 0x7F	; 127
    13d0:	40 e8       	ldi	r20, 0x80	; 128
    13d2:	5f e3       	ldi	r21, 0x3F	; 63
    13d4:	16 16       	cp	r1, r22
    13d6:	17 06       	cpc	r1, r23
    13d8:	48 07       	cpc	r20, r24
    13da:	5b 07       	cpc	r21, r27
    13dc:	18 f4       	brcc	.+6      	; 0x13e4 <atan+0x1c>
    13de:	d9 2f       	mov	r29, r25
    13e0:	0e 94 dd 0b 	call	0x17ba	; 0x17ba <inverse>
    13e4:	9f 93       	push	r25
    13e6:	8f 93       	push	r24
    13e8:	7f 93       	push	r23
    13ea:	6f 93       	push	r22
    13ec:	0e 94 98 0c 	call	0x1930	; 0x1930 <square>
    13f0:	e8 e6       	ldi	r30, 0x68	; 104
    13f2:	f0 e0       	ldi	r31, 0x00	; 0
    13f4:	0e 94 2f 0b 	call	0x165e	; 0x165e <__fp_powser>
    13f8:	0e 94 8f 0b 	call	0x171e	; 0x171e <__fp_round>
    13fc:	2f 91       	pop	r18
    13fe:	3f 91       	pop	r19
    1400:	4f 91       	pop	r20
    1402:	5f 91       	pop	r21
    1404:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__mulsf3x>
    1408:	dd 23       	and	r29, r29
    140a:	51 f0       	breq	.+20     	; 0x1420 <atan+0x58>
    140c:	90 58       	subi	r25, 0x80	; 128
    140e:	a2 ea       	ldi	r26, 0xA2	; 162
    1410:	2a ed       	ldi	r18, 0xDA	; 218
    1412:	3f e0       	ldi	r19, 0x0F	; 15
    1414:	49 ec       	ldi	r20, 0xC9	; 201
    1416:	5f e3       	ldi	r21, 0x3F	; 63
    1418:	d0 78       	andi	r29, 0x80	; 128
    141a:	5d 27       	eor	r21, r29
    141c:	0e 94 4c 09 	call	0x1298	; 0x1298 <__addsf3x>
    1420:	df 91       	pop	r29
    1422:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__fp_round>

00001426 <__cmpsf2>:
    1426:	0e 94 02 0b 	call	0x1604	; 0x1604 <__fp_cmp>
    142a:	08 f4       	brcc	.+2      	; 0x142e <__cmpsf2+0x8>
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	08 95       	ret

00001430 <cos>:
    1430:	0e 94 66 0b 	call	0x16cc	; 0x16cc <__fp_rempio2>
    1434:	e3 95       	inc	r30
    1436:	0c 94 a0 0b 	jmp	0x1740	; 0x1740 <__fp_sinus>

0000143a <__divsf3>:
    143a:	0e 94 31 0a 	call	0x1462	; 0x1462 <__divsf3x>
    143e:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__fp_round>
    1442:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__fp_pscB>
    1446:	58 f0       	brcs	.+22     	; 0x145e <__divsf3+0x24>
    1448:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fp_pscA>
    144c:	40 f0       	brcs	.+16     	; 0x145e <__divsf3+0x24>
    144e:	29 f4       	brne	.+10     	; 0x145a <__divsf3+0x20>
    1450:	5f 3f       	cpi	r21, 0xFF	; 255
    1452:	29 f0       	breq	.+10     	; 0x145e <__divsf3+0x24>
    1454:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__fp_inf>
    1458:	51 11       	cpse	r21, r1
    145a:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__fp_szero>
    145e:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__fp_nan>

00001462 <__divsf3x>:
    1462:	0e 94 b4 0b 	call	0x1768	; 0x1768 <__fp_split3>
    1466:	68 f3       	brcs	.-38     	; 0x1442 <__divsf3+0x8>

00001468 <__divsf3_pse>:
    1468:	99 23       	and	r25, r25
    146a:	b1 f3       	breq	.-20     	; 0x1458 <__divsf3+0x1e>
    146c:	55 23       	and	r21, r21
    146e:	91 f3       	breq	.-28     	; 0x1454 <__divsf3+0x1a>
    1470:	95 1b       	sub	r25, r21
    1472:	55 0b       	sbc	r21, r21
    1474:	bb 27       	eor	r27, r27
    1476:	aa 27       	eor	r26, r26
    1478:	62 17       	cp	r22, r18
    147a:	73 07       	cpc	r23, r19
    147c:	84 07       	cpc	r24, r20
    147e:	38 f0       	brcs	.+14     	; 0x148e <__divsf3_pse+0x26>
    1480:	9f 5f       	subi	r25, 0xFF	; 255
    1482:	5f 4f       	sbci	r21, 0xFF	; 255
    1484:	22 0f       	add	r18, r18
    1486:	33 1f       	adc	r19, r19
    1488:	44 1f       	adc	r20, r20
    148a:	aa 1f       	adc	r26, r26
    148c:	a9 f3       	breq	.-22     	; 0x1478 <__divsf3_pse+0x10>
    148e:	35 d0       	rcall	.+106    	; 0x14fa <__divsf3_pse+0x92>
    1490:	0e 2e       	mov	r0, r30
    1492:	3a f0       	brmi	.+14     	; 0x14a2 <__divsf3_pse+0x3a>
    1494:	e0 e8       	ldi	r30, 0x80	; 128
    1496:	32 d0       	rcall	.+100    	; 0x14fc <__divsf3_pse+0x94>
    1498:	91 50       	subi	r25, 0x01	; 1
    149a:	50 40       	sbci	r21, 0x00	; 0
    149c:	e6 95       	lsr	r30
    149e:	00 1c       	adc	r0, r0
    14a0:	ca f7       	brpl	.-14     	; 0x1494 <__divsf3_pse+0x2c>
    14a2:	2b d0       	rcall	.+86     	; 0x14fa <__divsf3_pse+0x92>
    14a4:	fe 2f       	mov	r31, r30
    14a6:	29 d0       	rcall	.+82     	; 0x14fa <__divsf3_pse+0x92>
    14a8:	66 0f       	add	r22, r22
    14aa:	77 1f       	adc	r23, r23
    14ac:	88 1f       	adc	r24, r24
    14ae:	bb 1f       	adc	r27, r27
    14b0:	26 17       	cp	r18, r22
    14b2:	37 07       	cpc	r19, r23
    14b4:	48 07       	cpc	r20, r24
    14b6:	ab 07       	cpc	r26, r27
    14b8:	b0 e8       	ldi	r27, 0x80	; 128
    14ba:	09 f0       	breq	.+2      	; 0x14be <__divsf3_pse+0x56>
    14bc:	bb 0b       	sbc	r27, r27
    14be:	80 2d       	mov	r24, r0
    14c0:	bf 01       	movw	r22, r30
    14c2:	ff 27       	eor	r31, r31
    14c4:	93 58       	subi	r25, 0x83	; 131
    14c6:	5f 4f       	sbci	r21, 0xFF	; 255
    14c8:	3a f0       	brmi	.+14     	; 0x14d8 <__divsf3_pse+0x70>
    14ca:	9e 3f       	cpi	r25, 0xFE	; 254
    14cc:	51 05       	cpc	r21, r1
    14ce:	78 f0       	brcs	.+30     	; 0x14ee <__divsf3_pse+0x86>
    14d0:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__fp_inf>
    14d4:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__fp_szero>
    14d8:	5f 3f       	cpi	r21, 0xFF	; 255
    14da:	e4 f3       	brlt	.-8      	; 0x14d4 <__divsf3_pse+0x6c>
    14dc:	98 3e       	cpi	r25, 0xE8	; 232
    14de:	d4 f3       	brlt	.-12     	; 0x14d4 <__divsf3_pse+0x6c>
    14e0:	86 95       	lsr	r24
    14e2:	77 95       	ror	r23
    14e4:	67 95       	ror	r22
    14e6:	b7 95       	ror	r27
    14e8:	f7 95       	ror	r31
    14ea:	9f 5f       	subi	r25, 0xFF	; 255
    14ec:	c9 f7       	brne	.-14     	; 0x14e0 <__divsf3_pse+0x78>
    14ee:	88 0f       	add	r24, r24
    14f0:	91 1d       	adc	r25, r1
    14f2:	96 95       	lsr	r25
    14f4:	87 95       	ror	r24
    14f6:	97 f9       	bld	r25, 7
    14f8:	08 95       	ret
    14fa:	e1 e0       	ldi	r30, 0x01	; 1
    14fc:	66 0f       	add	r22, r22
    14fe:	77 1f       	adc	r23, r23
    1500:	88 1f       	adc	r24, r24
    1502:	bb 1f       	adc	r27, r27
    1504:	62 17       	cp	r22, r18
    1506:	73 07       	cpc	r23, r19
    1508:	84 07       	cpc	r24, r20
    150a:	ba 07       	cpc	r27, r26
    150c:	20 f0       	brcs	.+8      	; 0x1516 <__divsf3_pse+0xae>
    150e:	62 1b       	sub	r22, r18
    1510:	73 0b       	sbc	r23, r19
    1512:	84 0b       	sbc	r24, r20
    1514:	ba 0b       	sbc	r27, r26
    1516:	ee 1f       	adc	r30, r30
    1518:	88 f7       	brcc	.-30     	; 0x14fc <__divsf3_pse+0x94>
    151a:	e0 95       	com	r30
    151c:	08 95       	ret

0000151e <__fixsfsi>:
    151e:	0e 94 96 0a 	call	0x152c	; 0x152c <__fixunssfsi>
    1522:	68 94       	set
    1524:	b1 11       	cpse	r27, r1
    1526:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__fp_szero>
    152a:	08 95       	ret

0000152c <__fixunssfsi>:
    152c:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__fp_splitA>
    1530:	88 f0       	brcs	.+34     	; 0x1554 <__fixunssfsi+0x28>
    1532:	9f 57       	subi	r25, 0x7F	; 127
    1534:	98 f0       	brcs	.+38     	; 0x155c <__fixunssfsi+0x30>
    1536:	b9 2f       	mov	r27, r25
    1538:	99 27       	eor	r25, r25
    153a:	b7 51       	subi	r27, 0x17	; 23
    153c:	b0 f0       	brcs	.+44     	; 0x156a <__fixunssfsi+0x3e>
    153e:	e1 f0       	breq	.+56     	; 0x1578 <__fixunssfsi+0x4c>
    1540:	66 0f       	add	r22, r22
    1542:	77 1f       	adc	r23, r23
    1544:	88 1f       	adc	r24, r24
    1546:	99 1f       	adc	r25, r25
    1548:	1a f0       	brmi	.+6      	; 0x1550 <__fixunssfsi+0x24>
    154a:	ba 95       	dec	r27
    154c:	c9 f7       	brne	.-14     	; 0x1540 <__fixunssfsi+0x14>
    154e:	14 c0       	rjmp	.+40     	; 0x1578 <__fixunssfsi+0x4c>
    1550:	b1 30       	cpi	r27, 0x01	; 1
    1552:	91 f0       	breq	.+36     	; 0x1578 <__fixunssfsi+0x4c>
    1554:	0e 94 d6 0b 	call	0x17ac	; 0x17ac <__fp_zero>
    1558:	b1 e0       	ldi	r27, 0x01	; 1
    155a:	08 95       	ret
    155c:	0c 94 d6 0b 	jmp	0x17ac	; 0x17ac <__fp_zero>
    1560:	67 2f       	mov	r22, r23
    1562:	78 2f       	mov	r23, r24
    1564:	88 27       	eor	r24, r24
    1566:	b8 5f       	subi	r27, 0xF8	; 248
    1568:	39 f0       	breq	.+14     	; 0x1578 <__fixunssfsi+0x4c>
    156a:	b9 3f       	cpi	r27, 0xF9	; 249
    156c:	cc f3       	brlt	.-14     	; 0x1560 <__fixunssfsi+0x34>
    156e:	86 95       	lsr	r24
    1570:	77 95       	ror	r23
    1572:	67 95       	ror	r22
    1574:	b3 95       	inc	r27
    1576:	d9 f7       	brne	.-10     	; 0x156e <__fixunssfsi+0x42>
    1578:	3e f4       	brtc	.+14     	; 0x1588 <__fixunssfsi+0x5c>
    157a:	90 95       	com	r25
    157c:	80 95       	com	r24
    157e:	70 95       	com	r23
    1580:	61 95       	neg	r22
    1582:	7f 4f       	sbci	r23, 0xFF	; 255
    1584:	8f 4f       	sbci	r24, 0xFF	; 255
    1586:	9f 4f       	sbci	r25, 0xFF	; 255
    1588:	08 95       	ret

0000158a <__floatunsisf>:
    158a:	e8 94       	clt
    158c:	09 c0       	rjmp	.+18     	; 0x15a0 <__floatsisf+0x12>

0000158e <__floatsisf>:
    158e:	97 fb       	bst	r25, 7
    1590:	3e f4       	brtc	.+14     	; 0x15a0 <__floatsisf+0x12>
    1592:	90 95       	com	r25
    1594:	80 95       	com	r24
    1596:	70 95       	com	r23
    1598:	61 95       	neg	r22
    159a:	7f 4f       	sbci	r23, 0xFF	; 255
    159c:	8f 4f       	sbci	r24, 0xFF	; 255
    159e:	9f 4f       	sbci	r25, 0xFF	; 255
    15a0:	99 23       	and	r25, r25
    15a2:	a9 f0       	breq	.+42     	; 0x15ce <__floatsisf+0x40>
    15a4:	f9 2f       	mov	r31, r25
    15a6:	96 e9       	ldi	r25, 0x96	; 150
    15a8:	bb 27       	eor	r27, r27
    15aa:	93 95       	inc	r25
    15ac:	f6 95       	lsr	r31
    15ae:	87 95       	ror	r24
    15b0:	77 95       	ror	r23
    15b2:	67 95       	ror	r22
    15b4:	b7 95       	ror	r27
    15b6:	f1 11       	cpse	r31, r1
    15b8:	f8 cf       	rjmp	.-16     	; 0x15aa <__floatsisf+0x1c>
    15ba:	fa f4       	brpl	.+62     	; 0x15fa <__floatsisf+0x6c>
    15bc:	bb 0f       	add	r27, r27
    15be:	11 f4       	brne	.+4      	; 0x15c4 <__floatsisf+0x36>
    15c0:	60 ff       	sbrs	r22, 0
    15c2:	1b c0       	rjmp	.+54     	; 0x15fa <__floatsisf+0x6c>
    15c4:	6f 5f       	subi	r22, 0xFF	; 255
    15c6:	7f 4f       	sbci	r23, 0xFF	; 255
    15c8:	8f 4f       	sbci	r24, 0xFF	; 255
    15ca:	9f 4f       	sbci	r25, 0xFF	; 255
    15cc:	16 c0       	rjmp	.+44     	; 0x15fa <__floatsisf+0x6c>
    15ce:	88 23       	and	r24, r24
    15d0:	11 f0       	breq	.+4      	; 0x15d6 <__floatsisf+0x48>
    15d2:	96 e9       	ldi	r25, 0x96	; 150
    15d4:	11 c0       	rjmp	.+34     	; 0x15f8 <__floatsisf+0x6a>
    15d6:	77 23       	and	r23, r23
    15d8:	21 f0       	breq	.+8      	; 0x15e2 <__floatsisf+0x54>
    15da:	9e e8       	ldi	r25, 0x8E	; 142
    15dc:	87 2f       	mov	r24, r23
    15de:	76 2f       	mov	r23, r22
    15e0:	05 c0       	rjmp	.+10     	; 0x15ec <__floatsisf+0x5e>
    15e2:	66 23       	and	r22, r22
    15e4:	71 f0       	breq	.+28     	; 0x1602 <__floatsisf+0x74>
    15e6:	96 e8       	ldi	r25, 0x86	; 134
    15e8:	86 2f       	mov	r24, r22
    15ea:	70 e0       	ldi	r23, 0x00	; 0
    15ec:	60 e0       	ldi	r22, 0x00	; 0
    15ee:	2a f0       	brmi	.+10     	; 0x15fa <__floatsisf+0x6c>
    15f0:	9a 95       	dec	r25
    15f2:	66 0f       	add	r22, r22
    15f4:	77 1f       	adc	r23, r23
    15f6:	88 1f       	adc	r24, r24
    15f8:	da f7       	brpl	.-10     	; 0x15f0 <__floatsisf+0x62>
    15fa:	88 0f       	add	r24, r24
    15fc:	96 95       	lsr	r25
    15fe:	87 95       	ror	r24
    1600:	97 f9       	bld	r25, 7
    1602:	08 95       	ret

00001604 <__fp_cmp>:
    1604:	99 0f       	add	r25, r25
    1606:	00 08       	sbc	r0, r0
    1608:	55 0f       	add	r21, r21
    160a:	aa 0b       	sbc	r26, r26
    160c:	e0 e8       	ldi	r30, 0x80	; 128
    160e:	fe ef       	ldi	r31, 0xFE	; 254
    1610:	16 16       	cp	r1, r22
    1612:	17 06       	cpc	r1, r23
    1614:	e8 07       	cpc	r30, r24
    1616:	f9 07       	cpc	r31, r25
    1618:	c0 f0       	brcs	.+48     	; 0x164a <__fp_cmp+0x46>
    161a:	12 16       	cp	r1, r18
    161c:	13 06       	cpc	r1, r19
    161e:	e4 07       	cpc	r30, r20
    1620:	f5 07       	cpc	r31, r21
    1622:	98 f0       	brcs	.+38     	; 0x164a <__fp_cmp+0x46>
    1624:	62 1b       	sub	r22, r18
    1626:	73 0b       	sbc	r23, r19
    1628:	84 0b       	sbc	r24, r20
    162a:	95 0b       	sbc	r25, r21
    162c:	39 f4       	brne	.+14     	; 0x163c <__fp_cmp+0x38>
    162e:	0a 26       	eor	r0, r26
    1630:	61 f0       	breq	.+24     	; 0x164a <__fp_cmp+0x46>
    1632:	23 2b       	or	r18, r19
    1634:	24 2b       	or	r18, r20
    1636:	25 2b       	or	r18, r21
    1638:	21 f4       	brne	.+8      	; 0x1642 <__fp_cmp+0x3e>
    163a:	08 95       	ret
    163c:	0a 26       	eor	r0, r26
    163e:	09 f4       	brne	.+2      	; 0x1642 <__fp_cmp+0x3e>
    1640:	a1 40       	sbci	r26, 0x01	; 1
    1642:	a6 95       	lsr	r26
    1644:	8f ef       	ldi	r24, 0xFF	; 255
    1646:	81 1d       	adc	r24, r1
    1648:	81 1d       	adc	r24, r1
    164a:	08 95       	ret

0000164c <__fp_inf>:
    164c:	97 f9       	bld	r25, 7
    164e:	9f 67       	ori	r25, 0x7F	; 127
    1650:	80 e8       	ldi	r24, 0x80	; 128
    1652:	70 e0       	ldi	r23, 0x00	; 0
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	08 95       	ret

00001658 <__fp_nan>:
    1658:	9f ef       	ldi	r25, 0xFF	; 255
    165a:	80 ec       	ldi	r24, 0xC0	; 192
    165c:	08 95       	ret

0000165e <__fp_powser>:
    165e:	df 93       	push	r29
    1660:	cf 93       	push	r28
    1662:	1f 93       	push	r17
    1664:	0f 93       	push	r16
    1666:	ff 92       	push	r15
    1668:	ef 92       	push	r14
    166a:	df 92       	push	r13
    166c:	7b 01       	movw	r14, r22
    166e:	8c 01       	movw	r16, r24
    1670:	68 94       	set
    1672:	06 c0       	rjmp	.+12     	; 0x1680 <__fp_powser+0x22>
    1674:	da 2e       	mov	r13, r26
    1676:	ef 01       	movw	r28, r30
    1678:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__mulsf3x>
    167c:	fe 01       	movw	r30, r28
    167e:	e8 94       	clt
    1680:	a5 91       	lpm	r26, Z+
    1682:	25 91       	lpm	r18, Z+
    1684:	35 91       	lpm	r19, Z+
    1686:	45 91       	lpm	r20, Z+
    1688:	55 91       	lpm	r21, Z+
    168a:	a6 f3       	brts	.-24     	; 0x1674 <__fp_powser+0x16>
    168c:	ef 01       	movw	r28, r30
    168e:	0e 94 4c 09 	call	0x1298	; 0x1298 <__addsf3x>
    1692:	fe 01       	movw	r30, r28
    1694:	97 01       	movw	r18, r14
    1696:	a8 01       	movw	r20, r16
    1698:	da 94       	dec	r13
    169a:	69 f7       	brne	.-38     	; 0x1676 <__fp_powser+0x18>
    169c:	df 90       	pop	r13
    169e:	ef 90       	pop	r14
    16a0:	ff 90       	pop	r15
    16a2:	0f 91       	pop	r16
    16a4:	1f 91       	pop	r17
    16a6:	cf 91       	pop	r28
    16a8:	df 91       	pop	r29
    16aa:	08 95       	ret

000016ac <__fp_pscA>:
    16ac:	00 24       	eor	r0, r0
    16ae:	0a 94       	dec	r0
    16b0:	16 16       	cp	r1, r22
    16b2:	17 06       	cpc	r1, r23
    16b4:	18 06       	cpc	r1, r24
    16b6:	09 06       	cpc	r0, r25
    16b8:	08 95       	ret

000016ba <__fp_pscB>:
    16ba:	00 24       	eor	r0, r0
    16bc:	0a 94       	dec	r0
    16be:	12 16       	cp	r1, r18
    16c0:	13 06       	cpc	r1, r19
    16c2:	14 06       	cpc	r1, r20
    16c4:	05 06       	cpc	r0, r21
    16c6:	08 95       	ret
    16c8:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__fp_nan>

000016cc <__fp_rempio2>:
    16cc:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__fp_splitA>
    16d0:	d8 f3       	brcs	.-10     	; 0x16c8 <__fp_pscB+0xe>
    16d2:	e8 94       	clt
    16d4:	e0 e0       	ldi	r30, 0x00	; 0
    16d6:	bb 27       	eor	r27, r27
    16d8:	9f 57       	subi	r25, 0x7F	; 127
    16da:	f0 f0       	brcs	.+60     	; 0x1718 <__fp_rempio2+0x4c>
    16dc:	2a ed       	ldi	r18, 0xDA	; 218
    16de:	3f e0       	ldi	r19, 0x0F	; 15
    16e0:	49 ec       	ldi	r20, 0xC9	; 201
    16e2:	06 c0       	rjmp	.+12     	; 0x16f0 <__fp_rempio2+0x24>
    16e4:	ee 0f       	add	r30, r30
    16e6:	bb 0f       	add	r27, r27
    16e8:	66 1f       	adc	r22, r22
    16ea:	77 1f       	adc	r23, r23
    16ec:	88 1f       	adc	r24, r24
    16ee:	28 f0       	brcs	.+10     	; 0x16fa <__fp_rempio2+0x2e>
    16f0:	b2 3a       	cpi	r27, 0xA2	; 162
    16f2:	62 07       	cpc	r22, r18
    16f4:	73 07       	cpc	r23, r19
    16f6:	84 07       	cpc	r24, r20
    16f8:	28 f0       	brcs	.+10     	; 0x1704 <__fp_rempio2+0x38>
    16fa:	b2 5a       	subi	r27, 0xA2	; 162
    16fc:	62 0b       	sbc	r22, r18
    16fe:	73 0b       	sbc	r23, r19
    1700:	84 0b       	sbc	r24, r20
    1702:	e3 95       	inc	r30
    1704:	9a 95       	dec	r25
    1706:	72 f7       	brpl	.-36     	; 0x16e4 <__fp_rempio2+0x18>
    1708:	80 38       	cpi	r24, 0x80	; 128
    170a:	30 f4       	brcc	.+12     	; 0x1718 <__fp_rempio2+0x4c>
    170c:	9a 95       	dec	r25
    170e:	bb 0f       	add	r27, r27
    1710:	66 1f       	adc	r22, r22
    1712:	77 1f       	adc	r23, r23
    1714:	88 1f       	adc	r24, r24
    1716:	d2 f7       	brpl	.-12     	; 0x170c <__fp_rempio2+0x40>
    1718:	90 48       	sbci	r25, 0x80	; 128
    171a:	0c 94 9e 0c 	jmp	0x193c	; 0x193c <__fp_mpack_finite>

0000171e <__fp_round>:
    171e:	09 2e       	mov	r0, r25
    1720:	03 94       	inc	r0
    1722:	00 0c       	add	r0, r0
    1724:	11 f4       	brne	.+4      	; 0x172a <__fp_round+0xc>
    1726:	88 23       	and	r24, r24
    1728:	52 f0       	brmi	.+20     	; 0x173e <__fp_round+0x20>
    172a:	bb 0f       	add	r27, r27
    172c:	40 f4       	brcc	.+16     	; 0x173e <__fp_round+0x20>
    172e:	bf 2b       	or	r27, r31
    1730:	11 f4       	brne	.+4      	; 0x1736 <__fp_round+0x18>
    1732:	60 ff       	sbrs	r22, 0
    1734:	04 c0       	rjmp	.+8      	; 0x173e <__fp_round+0x20>
    1736:	6f 5f       	subi	r22, 0xFF	; 255
    1738:	7f 4f       	sbci	r23, 0xFF	; 255
    173a:	8f 4f       	sbci	r24, 0xFF	; 255
    173c:	9f 4f       	sbci	r25, 0xFF	; 255
    173e:	08 95       	ret

00001740 <__fp_sinus>:
    1740:	ef 93       	push	r30
    1742:	e0 ff       	sbrs	r30, 0
    1744:	07 c0       	rjmp	.+14     	; 0x1754 <__fp_sinus+0x14>
    1746:	a2 ea       	ldi	r26, 0xA2	; 162
    1748:	2a ed       	ldi	r18, 0xDA	; 218
    174a:	3f e0       	ldi	r19, 0x0F	; 15
    174c:	49 ec       	ldi	r20, 0xC9	; 201
    174e:	5f eb       	ldi	r21, 0xBF	; 191
    1750:	0e 94 4c 09 	call	0x1298	; 0x1298 <__addsf3x>
    1754:	0e 94 8f 0b 	call	0x171e	; 0x171e <__fp_round>
    1758:	0f 90       	pop	r0
    175a:	03 94       	inc	r0
    175c:	01 fc       	sbrc	r0, 1
    175e:	90 58       	subi	r25, 0x80	; 128
    1760:	e5 e9       	ldi	r30, 0x95	; 149
    1762:	f0 e0       	ldi	r31, 0x00	; 0
    1764:	0c 94 b1 0c 	jmp	0x1962	; 0x1962 <__fp_powsodd>

00001768 <__fp_split3>:
    1768:	57 fd       	sbrc	r21, 7
    176a:	90 58       	subi	r25, 0x80	; 128
    176c:	44 0f       	add	r20, r20
    176e:	55 1f       	adc	r21, r21
    1770:	59 f0       	breq	.+22     	; 0x1788 <__fp_splitA+0x10>
    1772:	5f 3f       	cpi	r21, 0xFF	; 255
    1774:	71 f0       	breq	.+28     	; 0x1792 <__fp_splitA+0x1a>
    1776:	47 95       	ror	r20

00001778 <__fp_splitA>:
    1778:	88 0f       	add	r24, r24
    177a:	97 fb       	bst	r25, 7
    177c:	99 1f       	adc	r25, r25
    177e:	61 f0       	breq	.+24     	; 0x1798 <__fp_splitA+0x20>
    1780:	9f 3f       	cpi	r25, 0xFF	; 255
    1782:	79 f0       	breq	.+30     	; 0x17a2 <__fp_splitA+0x2a>
    1784:	87 95       	ror	r24
    1786:	08 95       	ret
    1788:	12 16       	cp	r1, r18
    178a:	13 06       	cpc	r1, r19
    178c:	14 06       	cpc	r1, r20
    178e:	55 1f       	adc	r21, r21
    1790:	f2 cf       	rjmp	.-28     	; 0x1776 <__fp_split3+0xe>
    1792:	46 95       	lsr	r20
    1794:	f1 df       	rcall	.-30     	; 0x1778 <__fp_splitA>
    1796:	08 c0       	rjmp	.+16     	; 0x17a8 <__fp_splitA+0x30>
    1798:	16 16       	cp	r1, r22
    179a:	17 06       	cpc	r1, r23
    179c:	18 06       	cpc	r1, r24
    179e:	99 1f       	adc	r25, r25
    17a0:	f1 cf       	rjmp	.-30     	; 0x1784 <__fp_splitA+0xc>
    17a2:	86 95       	lsr	r24
    17a4:	71 05       	cpc	r23, r1
    17a6:	61 05       	cpc	r22, r1
    17a8:	08 94       	sec
    17aa:	08 95       	ret

000017ac <__fp_zero>:
    17ac:	e8 94       	clt

000017ae <__fp_szero>:
    17ae:	bb 27       	eor	r27, r27
    17b0:	66 27       	eor	r22, r22
    17b2:	77 27       	eor	r23, r23
    17b4:	cb 01       	movw	r24, r22
    17b6:	97 f9       	bld	r25, 7
    17b8:	08 95       	ret

000017ba <inverse>:
    17ba:	9b 01       	movw	r18, r22
    17bc:	ac 01       	movw	r20, r24
    17be:	60 e0       	ldi	r22, 0x00	; 0
    17c0:	70 e0       	ldi	r23, 0x00	; 0
    17c2:	80 e8       	ldi	r24, 0x80	; 128
    17c4:	9f e3       	ldi	r25, 0x3F	; 63
    17c6:	0c 94 1d 0a 	jmp	0x143a	; 0x143a <__divsf3>

000017ca <__mulsf3>:
    17ca:	0e 94 f8 0b 	call	0x17f0	; 0x17f0 <__mulsf3x>
    17ce:	0c 94 8f 0b 	jmp	0x171e	; 0x171e <__fp_round>
    17d2:	0e 94 56 0b 	call	0x16ac	; 0x16ac <__fp_pscA>
    17d6:	38 f0       	brcs	.+14     	; 0x17e6 <__mulsf3+0x1c>
    17d8:	0e 94 5d 0b 	call	0x16ba	; 0x16ba <__fp_pscB>
    17dc:	20 f0       	brcs	.+8      	; 0x17e6 <__mulsf3+0x1c>
    17de:	95 23       	and	r25, r21
    17e0:	11 f0       	breq	.+4      	; 0x17e6 <__mulsf3+0x1c>
    17e2:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__fp_inf>
    17e6:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__fp_nan>
    17ea:	11 24       	eor	r1, r1
    17ec:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__fp_szero>

000017f0 <__mulsf3x>:
    17f0:	0e 94 b4 0b 	call	0x1768	; 0x1768 <__fp_split3>
    17f4:	70 f3       	brcs	.-36     	; 0x17d2 <__mulsf3+0x8>

000017f6 <__mulsf3_pse>:
    17f6:	95 9f       	mul	r25, r21
    17f8:	c1 f3       	breq	.-16     	; 0x17ea <__mulsf3+0x20>
    17fa:	95 0f       	add	r25, r21
    17fc:	50 e0       	ldi	r21, 0x00	; 0
    17fe:	55 1f       	adc	r21, r21
    1800:	62 9f       	mul	r22, r18
    1802:	f0 01       	movw	r30, r0
    1804:	72 9f       	mul	r23, r18
    1806:	bb 27       	eor	r27, r27
    1808:	f0 0d       	add	r31, r0
    180a:	b1 1d       	adc	r27, r1
    180c:	63 9f       	mul	r22, r19
    180e:	aa 27       	eor	r26, r26
    1810:	f0 0d       	add	r31, r0
    1812:	b1 1d       	adc	r27, r1
    1814:	aa 1f       	adc	r26, r26
    1816:	64 9f       	mul	r22, r20
    1818:	66 27       	eor	r22, r22
    181a:	b0 0d       	add	r27, r0
    181c:	a1 1d       	adc	r26, r1
    181e:	66 1f       	adc	r22, r22
    1820:	82 9f       	mul	r24, r18
    1822:	22 27       	eor	r18, r18
    1824:	b0 0d       	add	r27, r0
    1826:	a1 1d       	adc	r26, r1
    1828:	62 1f       	adc	r22, r18
    182a:	73 9f       	mul	r23, r19
    182c:	b0 0d       	add	r27, r0
    182e:	a1 1d       	adc	r26, r1
    1830:	62 1f       	adc	r22, r18
    1832:	83 9f       	mul	r24, r19
    1834:	a0 0d       	add	r26, r0
    1836:	61 1d       	adc	r22, r1
    1838:	22 1f       	adc	r18, r18
    183a:	74 9f       	mul	r23, r20
    183c:	33 27       	eor	r19, r19
    183e:	a0 0d       	add	r26, r0
    1840:	61 1d       	adc	r22, r1
    1842:	23 1f       	adc	r18, r19
    1844:	84 9f       	mul	r24, r20
    1846:	60 0d       	add	r22, r0
    1848:	21 1d       	adc	r18, r1
    184a:	82 2f       	mov	r24, r18
    184c:	76 2f       	mov	r23, r22
    184e:	6a 2f       	mov	r22, r26
    1850:	11 24       	eor	r1, r1
    1852:	9f 57       	subi	r25, 0x7F	; 127
    1854:	50 40       	sbci	r21, 0x00	; 0
    1856:	9a f0       	brmi	.+38     	; 0x187e <__mulsf3_pse+0x88>
    1858:	f1 f0       	breq	.+60     	; 0x1896 <__mulsf3_pse+0xa0>
    185a:	88 23       	and	r24, r24
    185c:	4a f0       	brmi	.+18     	; 0x1870 <__mulsf3_pse+0x7a>
    185e:	ee 0f       	add	r30, r30
    1860:	ff 1f       	adc	r31, r31
    1862:	bb 1f       	adc	r27, r27
    1864:	66 1f       	adc	r22, r22
    1866:	77 1f       	adc	r23, r23
    1868:	88 1f       	adc	r24, r24
    186a:	91 50       	subi	r25, 0x01	; 1
    186c:	50 40       	sbci	r21, 0x00	; 0
    186e:	a9 f7       	brne	.-22     	; 0x185a <__mulsf3_pse+0x64>
    1870:	9e 3f       	cpi	r25, 0xFE	; 254
    1872:	51 05       	cpc	r21, r1
    1874:	80 f0       	brcs	.+32     	; 0x1896 <__mulsf3_pse+0xa0>
    1876:	0c 94 26 0b 	jmp	0x164c	; 0x164c <__fp_inf>
    187a:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <__fp_szero>
    187e:	5f 3f       	cpi	r21, 0xFF	; 255
    1880:	e4 f3       	brlt	.-8      	; 0x187a <__mulsf3_pse+0x84>
    1882:	98 3e       	cpi	r25, 0xE8	; 232
    1884:	d4 f3       	brlt	.-12     	; 0x187a <__mulsf3_pse+0x84>
    1886:	86 95       	lsr	r24
    1888:	77 95       	ror	r23
    188a:	67 95       	ror	r22
    188c:	b7 95       	ror	r27
    188e:	f7 95       	ror	r31
    1890:	e7 95       	ror	r30
    1892:	9f 5f       	subi	r25, 0xFF	; 255
    1894:	c1 f7       	brne	.-16     	; 0x1886 <__mulsf3_pse+0x90>
    1896:	fe 2b       	or	r31, r30
    1898:	88 0f       	add	r24, r24
    189a:	91 1d       	adc	r25, r1
    189c:	96 95       	lsr	r25
    189e:	87 95       	ror	r24
    18a0:	97 f9       	bld	r25, 7
    18a2:	08 95       	ret
    18a4:	19 f4       	brne	.+6      	; 0x18ac <__mulsf3_pse+0xb6>
    18a6:	16 f4       	brtc	.+4      	; 0x18ac <__mulsf3_pse+0xb6>
    18a8:	0c 94 2c 0b 	jmp	0x1658	; 0x1658 <__fp_nan>
    18ac:	0c 94 9c 0c 	jmp	0x1938	; 0x1938 <__fp_mpack>

000018b0 <sqrt>:
    18b0:	0e 94 bc 0b 	call	0x1778	; 0x1778 <__fp_splitA>
    18b4:	b8 f3       	brcs	.-18     	; 0x18a4 <__mulsf3_pse+0xae>
    18b6:	99 23       	and	r25, r25
    18b8:	c9 f3       	breq	.-14     	; 0x18ac <__mulsf3_pse+0xb6>
    18ba:	b6 f3       	brts	.-20     	; 0x18a8 <__mulsf3_pse+0xb2>
    18bc:	9f 57       	subi	r25, 0x7F	; 127
    18be:	55 0b       	sbc	r21, r21
    18c0:	87 ff       	sbrs	r24, 7
    18c2:	0e 94 aa 0c 	call	0x1954	; 0x1954 <__fp_norm2>
    18c6:	00 24       	eor	r0, r0
    18c8:	a0 e6       	ldi	r26, 0x60	; 96
    18ca:	40 ea       	ldi	r20, 0xA0	; 160
    18cc:	90 01       	movw	r18, r0
    18ce:	80 58       	subi	r24, 0x80	; 128
    18d0:	56 95       	lsr	r21
    18d2:	97 95       	ror	r25
    18d4:	28 f4       	brcc	.+10     	; 0x18e0 <sqrt+0x30>
    18d6:	80 5c       	subi	r24, 0xC0	; 192
    18d8:	66 0f       	add	r22, r22
    18da:	77 1f       	adc	r23, r23
    18dc:	88 1f       	adc	r24, r24
    18de:	20 f0       	brcs	.+8      	; 0x18e8 <sqrt+0x38>
    18e0:	26 17       	cp	r18, r22
    18e2:	37 07       	cpc	r19, r23
    18e4:	48 07       	cpc	r20, r24
    18e6:	30 f4       	brcc	.+12     	; 0x18f4 <sqrt+0x44>
    18e8:	62 1b       	sub	r22, r18
    18ea:	73 0b       	sbc	r23, r19
    18ec:	84 0b       	sbc	r24, r20
    18ee:	20 29       	or	r18, r0
    18f0:	31 29       	or	r19, r1
    18f2:	4a 2b       	or	r20, r26
    18f4:	a6 95       	lsr	r26
    18f6:	17 94       	ror	r1
    18f8:	07 94       	ror	r0
    18fa:	20 25       	eor	r18, r0
    18fc:	31 25       	eor	r19, r1
    18fe:	4a 27       	eor	r20, r26
    1900:	58 f7       	brcc	.-42     	; 0x18d8 <sqrt+0x28>
    1902:	66 0f       	add	r22, r22
    1904:	77 1f       	adc	r23, r23
    1906:	88 1f       	adc	r24, r24
    1908:	20 f0       	brcs	.+8      	; 0x1912 <sqrt+0x62>
    190a:	26 17       	cp	r18, r22
    190c:	37 07       	cpc	r19, r23
    190e:	48 07       	cpc	r20, r24
    1910:	30 f4       	brcc	.+12     	; 0x191e <sqrt+0x6e>
    1912:	62 0b       	sbc	r22, r18
    1914:	73 0b       	sbc	r23, r19
    1916:	84 0b       	sbc	r24, r20
    1918:	20 0d       	add	r18, r0
    191a:	31 1d       	adc	r19, r1
    191c:	41 1d       	adc	r20, r1
    191e:	a0 95       	com	r26
    1920:	81 f7       	brne	.-32     	; 0x1902 <sqrt+0x52>
    1922:	b9 01       	movw	r22, r18
    1924:	84 2f       	mov	r24, r20
    1926:	91 58       	subi	r25, 0x81	; 129
    1928:	88 0f       	add	r24, r24
    192a:	96 95       	lsr	r25
    192c:	87 95       	ror	r24
    192e:	08 95       	ret

00001930 <square>:
    1930:	9b 01       	movw	r18, r22
    1932:	ac 01       	movw	r20, r24
    1934:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__mulsf3>

00001938 <__fp_mpack>:
    1938:	9f 3f       	cpi	r25, 0xFF	; 255
    193a:	31 f0       	breq	.+12     	; 0x1948 <__fp_mpack_finite+0xc>

0000193c <__fp_mpack_finite>:
    193c:	91 50       	subi	r25, 0x01	; 1
    193e:	20 f4       	brcc	.+8      	; 0x1948 <__fp_mpack_finite+0xc>
    1940:	87 95       	ror	r24
    1942:	77 95       	ror	r23
    1944:	67 95       	ror	r22
    1946:	b7 95       	ror	r27
    1948:	88 0f       	add	r24, r24
    194a:	91 1d       	adc	r25, r1
    194c:	96 95       	lsr	r25
    194e:	87 95       	ror	r24
    1950:	97 f9       	bld	r25, 7
    1952:	08 95       	ret

00001954 <__fp_norm2>:
    1954:	91 50       	subi	r25, 0x01	; 1
    1956:	50 40       	sbci	r21, 0x00	; 0
    1958:	66 0f       	add	r22, r22
    195a:	77 1f       	adc	r23, r23
    195c:	88 1f       	adc	r24, r24
    195e:	d2 f7       	brpl	.-12     	; 0x1954 <__fp_norm2>
    1960:	08 95       	ret

00001962 <__fp_powsodd>:
    1962:	9f 93       	push	r25
    1964:	8f 93       	push	r24
    1966:	7f 93       	push	r23
    1968:	6f 93       	push	r22
    196a:	ff 93       	push	r31
    196c:	ef 93       	push	r30
    196e:	9b 01       	movw	r18, r22
    1970:	ac 01       	movw	r20, r24
    1972:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__mulsf3>
    1976:	ef 91       	pop	r30
    1978:	ff 91       	pop	r31
    197a:	0e 94 2f 0b 	call	0x165e	; 0x165e <__fp_powser>
    197e:	2f 91       	pop	r18
    1980:	3f 91       	pop	r19
    1982:	4f 91       	pop	r20
    1984:	5f 91       	pop	r21
    1986:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__mulsf3>

0000198a <vfprintf>:
    198a:	a0 e1       	ldi	r26, 0x10	; 16
    198c:	b0 e0       	ldi	r27, 0x00	; 0
    198e:	eb ec       	ldi	r30, 0xCB	; 203
    1990:	fc e0       	ldi	r31, 0x0C	; 12
    1992:	0c 94 6c 10 	jmp	0x20d8	; 0x20d8 <__prologue_saves__>
    1996:	7c 01       	movw	r14, r24
    1998:	1b 01       	movw	r2, r22
    199a:	6a 01       	movw	r12, r20
    199c:	fc 01       	movw	r30, r24
    199e:	17 82       	std	Z+7, r1	; 0x07
    19a0:	16 82       	std	Z+6, r1	; 0x06
    19a2:	83 81       	ldd	r24, Z+3	; 0x03
    19a4:	81 ff       	sbrs	r24, 1
    19a6:	44 c3       	rjmp	.+1672   	; 0x2030 <vfprintf+0x6a6>
    19a8:	9e 01       	movw	r18, r28
    19aa:	2f 5f       	subi	r18, 0xFF	; 255
    19ac:	3f 4f       	sbci	r19, 0xFF	; 255
    19ae:	39 01       	movw	r6, r18
    19b0:	f7 01       	movw	r30, r14
    19b2:	93 81       	ldd	r25, Z+3	; 0x03
    19b4:	f1 01       	movw	r30, r2
    19b6:	93 fd       	sbrc	r25, 3
    19b8:	85 91       	lpm	r24, Z+
    19ba:	93 ff       	sbrs	r25, 3
    19bc:	81 91       	ld	r24, Z+
    19be:	1f 01       	movw	r2, r30
    19c0:	88 23       	and	r24, r24
    19c2:	09 f4       	brne	.+2      	; 0x19c6 <vfprintf+0x3c>
    19c4:	31 c3       	rjmp	.+1634   	; 0x2028 <vfprintf+0x69e>
    19c6:	85 32       	cpi	r24, 0x25	; 37
    19c8:	39 f4       	brne	.+14     	; 0x19d8 <vfprintf+0x4e>
    19ca:	93 fd       	sbrc	r25, 3
    19cc:	85 91       	lpm	r24, Z+
    19ce:	93 ff       	sbrs	r25, 3
    19d0:	81 91       	ld	r24, Z+
    19d2:	1f 01       	movw	r2, r30
    19d4:	85 32       	cpi	r24, 0x25	; 37
    19d6:	39 f4       	brne	.+14     	; 0x19e6 <vfprintf+0x5c>
    19d8:	b7 01       	movw	r22, r14
    19da:	90 e0       	ldi	r25, 0x00	; 0
    19dc:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    19e0:	56 01       	movw	r10, r12
    19e2:	65 01       	movw	r12, r10
    19e4:	e5 cf       	rjmp	.-54     	; 0x19b0 <vfprintf+0x26>
    19e6:	10 e0       	ldi	r17, 0x00	; 0
    19e8:	51 2c       	mov	r5, r1
    19ea:	91 2c       	mov	r9, r1
    19ec:	ff e1       	ldi	r31, 0x1F	; 31
    19ee:	f9 15       	cp	r31, r9
    19f0:	d8 f0       	brcs	.+54     	; 0x1a28 <vfprintf+0x9e>
    19f2:	8b 32       	cpi	r24, 0x2B	; 43
    19f4:	79 f0       	breq	.+30     	; 0x1a14 <vfprintf+0x8a>
    19f6:	38 f4       	brcc	.+14     	; 0x1a06 <vfprintf+0x7c>
    19f8:	80 32       	cpi	r24, 0x20	; 32
    19fa:	79 f0       	breq	.+30     	; 0x1a1a <vfprintf+0x90>
    19fc:	83 32       	cpi	r24, 0x23	; 35
    19fe:	a1 f4       	brne	.+40     	; 0x1a28 <vfprintf+0x9e>
    1a00:	f9 2d       	mov	r31, r9
    1a02:	f0 61       	ori	r31, 0x10	; 16
    1a04:	2e c0       	rjmp	.+92     	; 0x1a62 <vfprintf+0xd8>
    1a06:	8d 32       	cpi	r24, 0x2D	; 45
    1a08:	61 f0       	breq	.+24     	; 0x1a22 <vfprintf+0x98>
    1a0a:	80 33       	cpi	r24, 0x30	; 48
    1a0c:	69 f4       	brne	.+26     	; 0x1a28 <vfprintf+0x9e>
    1a0e:	29 2d       	mov	r18, r9
    1a10:	21 60       	ori	r18, 0x01	; 1
    1a12:	2d c0       	rjmp	.+90     	; 0x1a6e <vfprintf+0xe4>
    1a14:	39 2d       	mov	r19, r9
    1a16:	32 60       	ori	r19, 0x02	; 2
    1a18:	93 2e       	mov	r9, r19
    1a1a:	89 2d       	mov	r24, r9
    1a1c:	84 60       	ori	r24, 0x04	; 4
    1a1e:	98 2e       	mov	r9, r24
    1a20:	2a c0       	rjmp	.+84     	; 0x1a76 <vfprintf+0xec>
    1a22:	e9 2d       	mov	r30, r9
    1a24:	e8 60       	ori	r30, 0x08	; 8
    1a26:	15 c0       	rjmp	.+42     	; 0x1a52 <vfprintf+0xc8>
    1a28:	97 fc       	sbrc	r9, 7
    1a2a:	2d c0       	rjmp	.+90     	; 0x1a86 <vfprintf+0xfc>
    1a2c:	20 ed       	ldi	r18, 0xD0	; 208
    1a2e:	28 0f       	add	r18, r24
    1a30:	2a 30       	cpi	r18, 0x0A	; 10
    1a32:	88 f4       	brcc	.+34     	; 0x1a56 <vfprintf+0xcc>
    1a34:	96 fe       	sbrs	r9, 6
    1a36:	06 c0       	rjmp	.+12     	; 0x1a44 <vfprintf+0xba>
    1a38:	3a e0       	ldi	r19, 0x0A	; 10
    1a3a:	13 9f       	mul	r17, r19
    1a3c:	20 0d       	add	r18, r0
    1a3e:	11 24       	eor	r1, r1
    1a40:	12 2f       	mov	r17, r18
    1a42:	19 c0       	rjmp	.+50     	; 0x1a76 <vfprintf+0xec>
    1a44:	8a e0       	ldi	r24, 0x0A	; 10
    1a46:	58 9e       	mul	r5, r24
    1a48:	20 0d       	add	r18, r0
    1a4a:	11 24       	eor	r1, r1
    1a4c:	52 2e       	mov	r5, r18
    1a4e:	e9 2d       	mov	r30, r9
    1a50:	e0 62       	ori	r30, 0x20	; 32
    1a52:	9e 2e       	mov	r9, r30
    1a54:	10 c0       	rjmp	.+32     	; 0x1a76 <vfprintf+0xec>
    1a56:	8e 32       	cpi	r24, 0x2E	; 46
    1a58:	31 f4       	brne	.+12     	; 0x1a66 <vfprintf+0xdc>
    1a5a:	96 fc       	sbrc	r9, 6
    1a5c:	e5 c2       	rjmp	.+1482   	; 0x2028 <vfprintf+0x69e>
    1a5e:	f9 2d       	mov	r31, r9
    1a60:	f0 64       	ori	r31, 0x40	; 64
    1a62:	9f 2e       	mov	r9, r31
    1a64:	08 c0       	rjmp	.+16     	; 0x1a76 <vfprintf+0xec>
    1a66:	8c 36       	cpi	r24, 0x6C	; 108
    1a68:	21 f4       	brne	.+8      	; 0x1a72 <vfprintf+0xe8>
    1a6a:	29 2d       	mov	r18, r9
    1a6c:	20 68       	ori	r18, 0x80	; 128
    1a6e:	92 2e       	mov	r9, r18
    1a70:	02 c0       	rjmp	.+4      	; 0x1a76 <vfprintf+0xec>
    1a72:	88 36       	cpi	r24, 0x68	; 104
    1a74:	41 f4       	brne	.+16     	; 0x1a86 <vfprintf+0xfc>
    1a76:	f1 01       	movw	r30, r2
    1a78:	93 fd       	sbrc	r25, 3
    1a7a:	85 91       	lpm	r24, Z+
    1a7c:	93 ff       	sbrs	r25, 3
    1a7e:	81 91       	ld	r24, Z+
    1a80:	1f 01       	movw	r2, r30
    1a82:	81 11       	cpse	r24, r1
    1a84:	b3 cf       	rjmp	.-154    	; 0x19ec <vfprintf+0x62>
    1a86:	9b eb       	ldi	r25, 0xBB	; 187
    1a88:	98 0f       	add	r25, r24
    1a8a:	93 30       	cpi	r25, 0x03	; 3
    1a8c:	20 f4       	brcc	.+8      	; 0x1a96 <vfprintf+0x10c>
    1a8e:	99 2d       	mov	r25, r9
    1a90:	90 61       	ori	r25, 0x10	; 16
    1a92:	80 5e       	subi	r24, 0xE0	; 224
    1a94:	07 c0       	rjmp	.+14     	; 0x1aa4 <vfprintf+0x11a>
    1a96:	9b e9       	ldi	r25, 0x9B	; 155
    1a98:	98 0f       	add	r25, r24
    1a9a:	93 30       	cpi	r25, 0x03	; 3
    1a9c:	08 f0       	brcs	.+2      	; 0x1aa0 <vfprintf+0x116>
    1a9e:	66 c1       	rjmp	.+716    	; 0x1d6c <vfprintf+0x3e2>
    1aa0:	99 2d       	mov	r25, r9
    1aa2:	9f 7e       	andi	r25, 0xEF	; 239
    1aa4:	96 ff       	sbrs	r25, 6
    1aa6:	16 e0       	ldi	r17, 0x06	; 6
    1aa8:	9f 73       	andi	r25, 0x3F	; 63
    1aaa:	99 2e       	mov	r9, r25
    1aac:	85 36       	cpi	r24, 0x65	; 101
    1aae:	19 f4       	brne	.+6      	; 0x1ab6 <vfprintf+0x12c>
    1ab0:	90 64       	ori	r25, 0x40	; 64
    1ab2:	99 2e       	mov	r9, r25
    1ab4:	08 c0       	rjmp	.+16     	; 0x1ac6 <vfprintf+0x13c>
    1ab6:	86 36       	cpi	r24, 0x66	; 102
    1ab8:	21 f4       	brne	.+8      	; 0x1ac2 <vfprintf+0x138>
    1aba:	39 2f       	mov	r19, r25
    1abc:	30 68       	ori	r19, 0x80	; 128
    1abe:	93 2e       	mov	r9, r19
    1ac0:	02 c0       	rjmp	.+4      	; 0x1ac6 <vfprintf+0x13c>
    1ac2:	11 11       	cpse	r17, r1
    1ac4:	11 50       	subi	r17, 0x01	; 1
    1ac6:	97 fe       	sbrs	r9, 7
    1ac8:	07 c0       	rjmp	.+14     	; 0x1ad8 <vfprintf+0x14e>
    1aca:	1c 33       	cpi	r17, 0x3C	; 60
    1acc:	50 f4       	brcc	.+20     	; 0x1ae2 <vfprintf+0x158>
    1ace:	44 24       	eor	r4, r4
    1ad0:	43 94       	inc	r4
    1ad2:	41 0e       	add	r4, r17
    1ad4:	27 e0       	ldi	r18, 0x07	; 7
    1ad6:	0b c0       	rjmp	.+22     	; 0x1aee <vfprintf+0x164>
    1ad8:	18 30       	cpi	r17, 0x08	; 8
    1ada:	38 f0       	brcs	.+14     	; 0x1aea <vfprintf+0x160>
    1adc:	27 e0       	ldi	r18, 0x07	; 7
    1ade:	17 e0       	ldi	r17, 0x07	; 7
    1ae0:	05 c0       	rjmp	.+10     	; 0x1aec <vfprintf+0x162>
    1ae2:	27 e0       	ldi	r18, 0x07	; 7
    1ae4:	9c e3       	ldi	r25, 0x3C	; 60
    1ae6:	49 2e       	mov	r4, r25
    1ae8:	02 c0       	rjmp	.+4      	; 0x1aee <vfprintf+0x164>
    1aea:	21 2f       	mov	r18, r17
    1aec:	41 2c       	mov	r4, r1
    1aee:	56 01       	movw	r10, r12
    1af0:	84 e0       	ldi	r24, 0x04	; 4
    1af2:	a8 0e       	add	r10, r24
    1af4:	b1 1c       	adc	r11, r1
    1af6:	f6 01       	movw	r30, r12
    1af8:	60 81       	ld	r22, Z
    1afa:	71 81       	ldd	r23, Z+1	; 0x01
    1afc:	82 81       	ldd	r24, Z+2	; 0x02
    1afe:	93 81       	ldd	r25, Z+3	; 0x03
    1b00:	04 2d       	mov	r16, r4
    1b02:	a3 01       	movw	r20, r6
    1b04:	0e 94 bd 10 	call	0x217a	; 0x217a <__ftoa_engine>
    1b08:	6c 01       	movw	r12, r24
    1b0a:	f9 81       	ldd	r31, Y+1	; 0x01
    1b0c:	fc 87       	std	Y+12, r31	; 0x0c
    1b0e:	f0 ff       	sbrs	r31, 0
    1b10:	02 c0       	rjmp	.+4      	; 0x1b16 <vfprintf+0x18c>
    1b12:	f3 ff       	sbrs	r31, 3
    1b14:	06 c0       	rjmp	.+12     	; 0x1b22 <vfprintf+0x198>
    1b16:	91 fc       	sbrc	r9, 1
    1b18:	06 c0       	rjmp	.+12     	; 0x1b26 <vfprintf+0x19c>
    1b1a:	92 fe       	sbrs	r9, 2
    1b1c:	06 c0       	rjmp	.+12     	; 0x1b2a <vfprintf+0x1a0>
    1b1e:	00 e2       	ldi	r16, 0x20	; 32
    1b20:	05 c0       	rjmp	.+10     	; 0x1b2c <vfprintf+0x1a2>
    1b22:	0d e2       	ldi	r16, 0x2D	; 45
    1b24:	03 c0       	rjmp	.+6      	; 0x1b2c <vfprintf+0x1a2>
    1b26:	0b e2       	ldi	r16, 0x2B	; 43
    1b28:	01 c0       	rjmp	.+2      	; 0x1b2c <vfprintf+0x1a2>
    1b2a:	00 e0       	ldi	r16, 0x00	; 0
    1b2c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1b2e:	8c 70       	andi	r24, 0x0C	; 12
    1b30:	19 f0       	breq	.+6      	; 0x1b38 <vfprintf+0x1ae>
    1b32:	01 11       	cpse	r16, r1
    1b34:	5a c2       	rjmp	.+1204   	; 0x1fea <vfprintf+0x660>
    1b36:	9b c2       	rjmp	.+1334   	; 0x206e <vfprintf+0x6e4>
    1b38:	97 fe       	sbrs	r9, 7
    1b3a:	10 c0       	rjmp	.+32     	; 0x1b5c <vfprintf+0x1d2>
    1b3c:	4c 0c       	add	r4, r12
    1b3e:	fc 85       	ldd	r31, Y+12	; 0x0c
    1b40:	f4 ff       	sbrs	r31, 4
    1b42:	04 c0       	rjmp	.+8      	; 0x1b4c <vfprintf+0x1c2>
    1b44:	8a 81       	ldd	r24, Y+2	; 0x02
    1b46:	81 33       	cpi	r24, 0x31	; 49
    1b48:	09 f4       	brne	.+2      	; 0x1b4c <vfprintf+0x1c2>
    1b4a:	4a 94       	dec	r4
    1b4c:	14 14       	cp	r1, r4
    1b4e:	74 f5       	brge	.+92     	; 0x1bac <vfprintf+0x222>
    1b50:	28 e0       	ldi	r18, 0x08	; 8
    1b52:	24 15       	cp	r18, r4
    1b54:	78 f5       	brcc	.+94     	; 0x1bb4 <vfprintf+0x22a>
    1b56:	88 e0       	ldi	r24, 0x08	; 8
    1b58:	48 2e       	mov	r4, r24
    1b5a:	2c c0       	rjmp	.+88     	; 0x1bb4 <vfprintf+0x22a>
    1b5c:	96 fc       	sbrc	r9, 6
    1b5e:	2a c0       	rjmp	.+84     	; 0x1bb4 <vfprintf+0x22a>
    1b60:	81 2f       	mov	r24, r17
    1b62:	90 e0       	ldi	r25, 0x00	; 0
    1b64:	8c 15       	cp	r24, r12
    1b66:	9d 05       	cpc	r25, r13
    1b68:	9c f0       	brlt	.+38     	; 0x1b90 <vfprintf+0x206>
    1b6a:	3c ef       	ldi	r19, 0xFC	; 252
    1b6c:	c3 16       	cp	r12, r19
    1b6e:	3f ef       	ldi	r19, 0xFF	; 255
    1b70:	d3 06       	cpc	r13, r19
    1b72:	74 f0       	brlt	.+28     	; 0x1b90 <vfprintf+0x206>
    1b74:	89 2d       	mov	r24, r9
    1b76:	80 68       	ori	r24, 0x80	; 128
    1b78:	98 2e       	mov	r9, r24
    1b7a:	0a c0       	rjmp	.+20     	; 0x1b90 <vfprintf+0x206>
    1b7c:	e2 e0       	ldi	r30, 0x02	; 2
    1b7e:	f0 e0       	ldi	r31, 0x00	; 0
    1b80:	ec 0f       	add	r30, r28
    1b82:	fd 1f       	adc	r31, r29
    1b84:	e1 0f       	add	r30, r17
    1b86:	f1 1d       	adc	r31, r1
    1b88:	80 81       	ld	r24, Z
    1b8a:	80 33       	cpi	r24, 0x30	; 48
    1b8c:	19 f4       	brne	.+6      	; 0x1b94 <vfprintf+0x20a>
    1b8e:	11 50       	subi	r17, 0x01	; 1
    1b90:	11 11       	cpse	r17, r1
    1b92:	f4 cf       	rjmp	.-24     	; 0x1b7c <vfprintf+0x1f2>
    1b94:	97 fe       	sbrs	r9, 7
    1b96:	0e c0       	rjmp	.+28     	; 0x1bb4 <vfprintf+0x22a>
    1b98:	44 24       	eor	r4, r4
    1b9a:	43 94       	inc	r4
    1b9c:	41 0e       	add	r4, r17
    1b9e:	81 2f       	mov	r24, r17
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	c8 16       	cp	r12, r24
    1ba4:	d9 06       	cpc	r13, r25
    1ba6:	2c f4       	brge	.+10     	; 0x1bb2 <vfprintf+0x228>
    1ba8:	1c 19       	sub	r17, r12
    1baa:	04 c0       	rjmp	.+8      	; 0x1bb4 <vfprintf+0x22a>
    1bac:	44 24       	eor	r4, r4
    1bae:	43 94       	inc	r4
    1bb0:	01 c0       	rjmp	.+2      	; 0x1bb4 <vfprintf+0x22a>
    1bb2:	10 e0       	ldi	r17, 0x00	; 0
    1bb4:	97 fe       	sbrs	r9, 7
    1bb6:	06 c0       	rjmp	.+12     	; 0x1bc4 <vfprintf+0x23a>
    1bb8:	1c 14       	cp	r1, r12
    1bba:	1d 04       	cpc	r1, r13
    1bbc:	34 f4       	brge	.+12     	; 0x1bca <vfprintf+0x240>
    1bbe:	c6 01       	movw	r24, r12
    1bc0:	01 96       	adiw	r24, 0x01	; 1
    1bc2:	05 c0       	rjmp	.+10     	; 0x1bce <vfprintf+0x244>
    1bc4:	85 e0       	ldi	r24, 0x05	; 5
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	02 c0       	rjmp	.+4      	; 0x1bce <vfprintf+0x244>
    1bca:	81 e0       	ldi	r24, 0x01	; 1
    1bcc:	90 e0       	ldi	r25, 0x00	; 0
    1bce:	01 11       	cpse	r16, r1
    1bd0:	01 96       	adiw	r24, 0x01	; 1
    1bd2:	11 23       	and	r17, r17
    1bd4:	31 f0       	breq	.+12     	; 0x1be2 <vfprintf+0x258>
    1bd6:	21 2f       	mov	r18, r17
    1bd8:	30 e0       	ldi	r19, 0x00	; 0
    1bda:	2f 5f       	subi	r18, 0xFF	; 255
    1bdc:	3f 4f       	sbci	r19, 0xFF	; 255
    1bde:	82 0f       	add	r24, r18
    1be0:	93 1f       	adc	r25, r19
    1be2:	25 2d       	mov	r18, r5
    1be4:	30 e0       	ldi	r19, 0x00	; 0
    1be6:	82 17       	cp	r24, r18
    1be8:	93 07       	cpc	r25, r19
    1bea:	14 f4       	brge	.+4      	; 0x1bf0 <vfprintf+0x266>
    1bec:	58 1a       	sub	r5, r24
    1bee:	01 c0       	rjmp	.+2      	; 0x1bf2 <vfprintf+0x268>
    1bf0:	51 2c       	mov	r5, r1
    1bf2:	89 2d       	mov	r24, r9
    1bf4:	89 70       	andi	r24, 0x09	; 9
    1bf6:	49 f4       	brne	.+18     	; 0x1c0a <vfprintf+0x280>
    1bf8:	55 20       	and	r5, r5
    1bfa:	39 f0       	breq	.+14     	; 0x1c0a <vfprintf+0x280>
    1bfc:	b7 01       	movw	r22, r14
    1bfe:	80 e2       	ldi	r24, 0x20	; 32
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1c06:	5a 94       	dec	r5
    1c08:	f7 cf       	rjmp	.-18     	; 0x1bf8 <vfprintf+0x26e>
    1c0a:	00 23       	and	r16, r16
    1c0c:	29 f0       	breq	.+10     	; 0x1c18 <vfprintf+0x28e>
    1c0e:	b7 01       	movw	r22, r14
    1c10:	80 2f       	mov	r24, r16
    1c12:	90 e0       	ldi	r25, 0x00	; 0
    1c14:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1c18:	93 fc       	sbrc	r9, 3
    1c1a:	09 c0       	rjmp	.+18     	; 0x1c2e <vfprintf+0x2a4>
    1c1c:	55 20       	and	r5, r5
    1c1e:	39 f0       	breq	.+14     	; 0x1c2e <vfprintf+0x2a4>
    1c20:	b7 01       	movw	r22, r14
    1c22:	80 e3       	ldi	r24, 0x30	; 48
    1c24:	90 e0       	ldi	r25, 0x00	; 0
    1c26:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1c2a:	5a 94       	dec	r5
    1c2c:	f7 cf       	rjmp	.-18     	; 0x1c1c <vfprintf+0x292>
    1c2e:	97 fe       	sbrs	r9, 7
    1c30:	4c c0       	rjmp	.+152    	; 0x1cca <vfprintf+0x340>
    1c32:	46 01       	movw	r8, r12
    1c34:	d7 fe       	sbrs	r13, 7
    1c36:	02 c0       	rjmp	.+4      	; 0x1c3c <vfprintf+0x2b2>
    1c38:	81 2c       	mov	r8, r1
    1c3a:	91 2c       	mov	r9, r1
    1c3c:	c6 01       	movw	r24, r12
    1c3e:	88 19       	sub	r24, r8
    1c40:	99 09       	sbc	r25, r9
    1c42:	f3 01       	movw	r30, r6
    1c44:	e8 0f       	add	r30, r24
    1c46:	f9 1f       	adc	r31, r25
    1c48:	fe 87       	std	Y+14, r31	; 0x0e
    1c4a:	ed 87       	std	Y+13, r30	; 0x0d
    1c4c:	96 01       	movw	r18, r12
    1c4e:	24 19       	sub	r18, r4
    1c50:	31 09       	sbc	r19, r1
    1c52:	38 8b       	std	Y+16, r19	; 0x10
    1c54:	2f 87       	std	Y+15, r18	; 0x0f
    1c56:	01 2f       	mov	r16, r17
    1c58:	10 e0       	ldi	r17, 0x00	; 0
    1c5a:	11 95       	neg	r17
    1c5c:	01 95       	neg	r16
    1c5e:	11 09       	sbc	r17, r1
    1c60:	3f ef       	ldi	r19, 0xFF	; 255
    1c62:	83 16       	cp	r8, r19
    1c64:	93 06       	cpc	r9, r19
    1c66:	29 f4       	brne	.+10     	; 0x1c72 <vfprintf+0x2e8>
    1c68:	b7 01       	movw	r22, r14
    1c6a:	8e e2       	ldi	r24, 0x2E	; 46
    1c6c:	90 e0       	ldi	r25, 0x00	; 0
    1c6e:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1c72:	c8 14       	cp	r12, r8
    1c74:	d9 04       	cpc	r13, r9
    1c76:	4c f0       	brlt	.+18     	; 0x1c8a <vfprintf+0x300>
    1c78:	8f 85       	ldd	r24, Y+15	; 0x0f
    1c7a:	98 89       	ldd	r25, Y+16	; 0x10
    1c7c:	88 15       	cp	r24, r8
    1c7e:	99 05       	cpc	r25, r9
    1c80:	24 f4       	brge	.+8      	; 0x1c8a <vfprintf+0x300>
    1c82:	ed 85       	ldd	r30, Y+13	; 0x0d
    1c84:	fe 85       	ldd	r31, Y+14	; 0x0e
    1c86:	81 81       	ldd	r24, Z+1	; 0x01
    1c88:	01 c0       	rjmp	.+2      	; 0x1c8c <vfprintf+0x302>
    1c8a:	80 e3       	ldi	r24, 0x30	; 48
    1c8c:	f1 e0       	ldi	r31, 0x01	; 1
    1c8e:	8f 1a       	sub	r8, r31
    1c90:	91 08       	sbc	r9, r1
    1c92:	2d 85       	ldd	r18, Y+13	; 0x0d
    1c94:	3e 85       	ldd	r19, Y+14	; 0x0e
    1c96:	2f 5f       	subi	r18, 0xFF	; 255
    1c98:	3f 4f       	sbci	r19, 0xFF	; 255
    1c9a:	3e 87       	std	Y+14, r19	; 0x0e
    1c9c:	2d 87       	std	Y+13, r18	; 0x0d
    1c9e:	80 16       	cp	r8, r16
    1ca0:	91 06       	cpc	r9, r17
    1ca2:	2c f0       	brlt	.+10     	; 0x1cae <vfprintf+0x324>
    1ca4:	b7 01       	movw	r22, r14
    1ca6:	90 e0       	ldi	r25, 0x00	; 0
    1ca8:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1cac:	d9 cf       	rjmp	.-78     	; 0x1c60 <vfprintf+0x2d6>
    1cae:	c8 14       	cp	r12, r8
    1cb0:	d9 04       	cpc	r13, r9
    1cb2:	41 f4       	brne	.+16     	; 0x1cc4 <vfprintf+0x33a>
    1cb4:	9a 81       	ldd	r25, Y+2	; 0x02
    1cb6:	96 33       	cpi	r25, 0x36	; 54
    1cb8:	20 f4       	brcc	.+8      	; 0x1cc2 <vfprintf+0x338>
    1cba:	95 33       	cpi	r25, 0x35	; 53
    1cbc:	19 f4       	brne	.+6      	; 0x1cc4 <vfprintf+0x33a>
    1cbe:	3c 85       	ldd	r19, Y+12	; 0x0c
    1cc0:	34 ff       	sbrs	r19, 4
    1cc2:	81 e3       	ldi	r24, 0x31	; 49
    1cc4:	b7 01       	movw	r22, r14
    1cc6:	90 e0       	ldi	r25, 0x00	; 0
    1cc8:	4e c0       	rjmp	.+156    	; 0x1d66 <vfprintf+0x3dc>
    1cca:	8a 81       	ldd	r24, Y+2	; 0x02
    1ccc:	81 33       	cpi	r24, 0x31	; 49
    1cce:	19 f0       	breq	.+6      	; 0x1cd6 <vfprintf+0x34c>
    1cd0:	9c 85       	ldd	r25, Y+12	; 0x0c
    1cd2:	9f 7e       	andi	r25, 0xEF	; 239
    1cd4:	9c 87       	std	Y+12, r25	; 0x0c
    1cd6:	b7 01       	movw	r22, r14
    1cd8:	90 e0       	ldi	r25, 0x00	; 0
    1cda:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1cde:	11 11       	cpse	r17, r1
    1ce0:	05 c0       	rjmp	.+10     	; 0x1cec <vfprintf+0x362>
    1ce2:	94 fc       	sbrc	r9, 4
    1ce4:	18 c0       	rjmp	.+48     	; 0x1d16 <vfprintf+0x38c>
    1ce6:	85 e6       	ldi	r24, 0x65	; 101
    1ce8:	90 e0       	ldi	r25, 0x00	; 0
    1cea:	17 c0       	rjmp	.+46     	; 0x1d1a <vfprintf+0x390>
    1cec:	b7 01       	movw	r22, r14
    1cee:	8e e2       	ldi	r24, 0x2E	; 46
    1cf0:	90 e0       	ldi	r25, 0x00	; 0
    1cf2:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1cf6:	1e 5f       	subi	r17, 0xFE	; 254
    1cf8:	82 e0       	ldi	r24, 0x02	; 2
    1cfa:	01 e0       	ldi	r16, 0x01	; 1
    1cfc:	08 0f       	add	r16, r24
    1cfe:	f3 01       	movw	r30, r6
    1d00:	e8 0f       	add	r30, r24
    1d02:	f1 1d       	adc	r31, r1
    1d04:	80 81       	ld	r24, Z
    1d06:	b7 01       	movw	r22, r14
    1d08:	90 e0       	ldi	r25, 0x00	; 0
    1d0a:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1d0e:	80 2f       	mov	r24, r16
    1d10:	01 13       	cpse	r16, r17
    1d12:	f3 cf       	rjmp	.-26     	; 0x1cfa <vfprintf+0x370>
    1d14:	e6 cf       	rjmp	.-52     	; 0x1ce2 <vfprintf+0x358>
    1d16:	85 e4       	ldi	r24, 0x45	; 69
    1d18:	90 e0       	ldi	r25, 0x00	; 0
    1d1a:	b7 01       	movw	r22, r14
    1d1c:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1d20:	d7 fc       	sbrc	r13, 7
    1d22:	06 c0       	rjmp	.+12     	; 0x1d30 <vfprintf+0x3a6>
    1d24:	c1 14       	cp	r12, r1
    1d26:	d1 04       	cpc	r13, r1
    1d28:	41 f4       	brne	.+16     	; 0x1d3a <vfprintf+0x3b0>
    1d2a:	ec 85       	ldd	r30, Y+12	; 0x0c
    1d2c:	e4 ff       	sbrs	r30, 4
    1d2e:	05 c0       	rjmp	.+10     	; 0x1d3a <vfprintf+0x3b0>
    1d30:	d1 94       	neg	r13
    1d32:	c1 94       	neg	r12
    1d34:	d1 08       	sbc	r13, r1
    1d36:	8d e2       	ldi	r24, 0x2D	; 45
    1d38:	01 c0       	rjmp	.+2      	; 0x1d3c <vfprintf+0x3b2>
    1d3a:	8b e2       	ldi	r24, 0x2B	; 43
    1d3c:	b7 01       	movw	r22, r14
    1d3e:	90 e0       	ldi	r25, 0x00	; 0
    1d40:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1d44:	80 e3       	ldi	r24, 0x30	; 48
    1d46:	2a e0       	ldi	r18, 0x0A	; 10
    1d48:	c2 16       	cp	r12, r18
    1d4a:	d1 04       	cpc	r13, r1
    1d4c:	2c f0       	brlt	.+10     	; 0x1d58 <vfprintf+0x3ce>
    1d4e:	8f 5f       	subi	r24, 0xFF	; 255
    1d50:	fa e0       	ldi	r31, 0x0A	; 10
    1d52:	cf 1a       	sub	r12, r31
    1d54:	d1 08       	sbc	r13, r1
    1d56:	f7 cf       	rjmp	.-18     	; 0x1d46 <vfprintf+0x3bc>
    1d58:	b7 01       	movw	r22, r14
    1d5a:	90 e0       	ldi	r25, 0x00	; 0
    1d5c:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1d60:	b7 01       	movw	r22, r14
    1d62:	c6 01       	movw	r24, r12
    1d64:	c0 96       	adiw	r24, 0x30	; 48
    1d66:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1d6a:	54 c1       	rjmp	.+680    	; 0x2014 <vfprintf+0x68a>
    1d6c:	83 36       	cpi	r24, 0x63	; 99
    1d6e:	31 f0       	breq	.+12     	; 0x1d7c <vfprintf+0x3f2>
    1d70:	83 37       	cpi	r24, 0x73	; 115
    1d72:	79 f0       	breq	.+30     	; 0x1d92 <vfprintf+0x408>
    1d74:	83 35       	cpi	r24, 0x53	; 83
    1d76:	09 f0       	breq	.+2      	; 0x1d7a <vfprintf+0x3f0>
    1d78:	56 c0       	rjmp	.+172    	; 0x1e26 <vfprintf+0x49c>
    1d7a:	20 c0       	rjmp	.+64     	; 0x1dbc <vfprintf+0x432>
    1d7c:	56 01       	movw	r10, r12
    1d7e:	32 e0       	ldi	r19, 0x02	; 2
    1d80:	a3 0e       	add	r10, r19
    1d82:	b1 1c       	adc	r11, r1
    1d84:	f6 01       	movw	r30, r12
    1d86:	80 81       	ld	r24, Z
    1d88:	89 83       	std	Y+1, r24	; 0x01
    1d8a:	01 e0       	ldi	r16, 0x01	; 1
    1d8c:	10 e0       	ldi	r17, 0x00	; 0
    1d8e:	63 01       	movw	r12, r6
    1d90:	12 c0       	rjmp	.+36     	; 0x1db6 <vfprintf+0x42c>
    1d92:	56 01       	movw	r10, r12
    1d94:	f2 e0       	ldi	r31, 0x02	; 2
    1d96:	af 0e       	add	r10, r31
    1d98:	b1 1c       	adc	r11, r1
    1d9a:	f6 01       	movw	r30, r12
    1d9c:	c0 80       	ld	r12, Z
    1d9e:	d1 80       	ldd	r13, Z+1	; 0x01
    1da0:	96 fe       	sbrs	r9, 6
    1da2:	03 c0       	rjmp	.+6      	; 0x1daa <vfprintf+0x420>
    1da4:	61 2f       	mov	r22, r17
    1da6:	70 e0       	ldi	r23, 0x00	; 0
    1da8:	02 c0       	rjmp	.+4      	; 0x1dae <vfprintf+0x424>
    1daa:	6f ef       	ldi	r22, 0xFF	; 255
    1dac:	7f ef       	ldi	r23, 0xFF	; 255
    1dae:	c6 01       	movw	r24, r12
    1db0:	0e 94 ae 11 	call	0x235c	; 0x235c <strnlen>
    1db4:	8c 01       	movw	r16, r24
    1db6:	f9 2d       	mov	r31, r9
    1db8:	ff 77       	andi	r31, 0x7F	; 127
    1dba:	14 c0       	rjmp	.+40     	; 0x1de4 <vfprintf+0x45a>
    1dbc:	56 01       	movw	r10, r12
    1dbe:	22 e0       	ldi	r18, 0x02	; 2
    1dc0:	a2 0e       	add	r10, r18
    1dc2:	b1 1c       	adc	r11, r1
    1dc4:	f6 01       	movw	r30, r12
    1dc6:	c0 80       	ld	r12, Z
    1dc8:	d1 80       	ldd	r13, Z+1	; 0x01
    1dca:	96 fe       	sbrs	r9, 6
    1dcc:	03 c0       	rjmp	.+6      	; 0x1dd4 <vfprintf+0x44a>
    1dce:	61 2f       	mov	r22, r17
    1dd0:	70 e0       	ldi	r23, 0x00	; 0
    1dd2:	02 c0       	rjmp	.+4      	; 0x1dd8 <vfprintf+0x44e>
    1dd4:	6f ef       	ldi	r22, 0xFF	; 255
    1dd6:	7f ef       	ldi	r23, 0xFF	; 255
    1dd8:	c6 01       	movw	r24, r12
    1dda:	0e 94 95 11 	call	0x232a	; 0x232a <strnlen_P>
    1dde:	8c 01       	movw	r16, r24
    1de0:	f9 2d       	mov	r31, r9
    1de2:	f0 68       	ori	r31, 0x80	; 128
    1de4:	9f 2e       	mov	r9, r31
    1de6:	f3 fd       	sbrc	r31, 3
    1de8:	1a c0       	rjmp	.+52     	; 0x1e1e <vfprintf+0x494>
    1dea:	85 2d       	mov	r24, r5
    1dec:	90 e0       	ldi	r25, 0x00	; 0
    1dee:	08 17       	cp	r16, r24
    1df0:	19 07       	cpc	r17, r25
    1df2:	a8 f4       	brcc	.+42     	; 0x1e1e <vfprintf+0x494>
    1df4:	b7 01       	movw	r22, r14
    1df6:	80 e2       	ldi	r24, 0x20	; 32
    1df8:	90 e0       	ldi	r25, 0x00	; 0
    1dfa:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1dfe:	5a 94       	dec	r5
    1e00:	f4 cf       	rjmp	.-24     	; 0x1dea <vfprintf+0x460>
    1e02:	f6 01       	movw	r30, r12
    1e04:	97 fc       	sbrc	r9, 7
    1e06:	85 91       	lpm	r24, Z+
    1e08:	97 fe       	sbrs	r9, 7
    1e0a:	81 91       	ld	r24, Z+
    1e0c:	6f 01       	movw	r12, r30
    1e0e:	b7 01       	movw	r22, r14
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1e16:	51 10       	cpse	r5, r1
    1e18:	5a 94       	dec	r5
    1e1a:	01 50       	subi	r16, 0x01	; 1
    1e1c:	11 09       	sbc	r17, r1
    1e1e:	01 15       	cp	r16, r1
    1e20:	11 05       	cpc	r17, r1
    1e22:	79 f7       	brne	.-34     	; 0x1e02 <vfprintf+0x478>
    1e24:	f7 c0       	rjmp	.+494    	; 0x2014 <vfprintf+0x68a>
    1e26:	84 36       	cpi	r24, 0x64	; 100
    1e28:	11 f0       	breq	.+4      	; 0x1e2e <vfprintf+0x4a4>
    1e2a:	89 36       	cpi	r24, 0x69	; 105
    1e2c:	61 f5       	brne	.+88     	; 0x1e86 <vfprintf+0x4fc>
    1e2e:	56 01       	movw	r10, r12
    1e30:	97 fe       	sbrs	r9, 7
    1e32:	09 c0       	rjmp	.+18     	; 0x1e46 <vfprintf+0x4bc>
    1e34:	24 e0       	ldi	r18, 0x04	; 4
    1e36:	a2 0e       	add	r10, r18
    1e38:	b1 1c       	adc	r11, r1
    1e3a:	f6 01       	movw	r30, r12
    1e3c:	60 81       	ld	r22, Z
    1e3e:	71 81       	ldd	r23, Z+1	; 0x01
    1e40:	82 81       	ldd	r24, Z+2	; 0x02
    1e42:	93 81       	ldd	r25, Z+3	; 0x03
    1e44:	0a c0       	rjmp	.+20     	; 0x1e5a <vfprintf+0x4d0>
    1e46:	f2 e0       	ldi	r31, 0x02	; 2
    1e48:	af 0e       	add	r10, r31
    1e4a:	b1 1c       	adc	r11, r1
    1e4c:	f6 01       	movw	r30, r12
    1e4e:	60 81       	ld	r22, Z
    1e50:	71 81       	ldd	r23, Z+1	; 0x01
    1e52:	07 2e       	mov	r0, r23
    1e54:	00 0c       	add	r0, r0
    1e56:	88 0b       	sbc	r24, r24
    1e58:	99 0b       	sbc	r25, r25
    1e5a:	f9 2d       	mov	r31, r9
    1e5c:	ff 76       	andi	r31, 0x6F	; 111
    1e5e:	9f 2e       	mov	r9, r31
    1e60:	97 ff       	sbrs	r25, 7
    1e62:	09 c0       	rjmp	.+18     	; 0x1e76 <vfprintf+0x4ec>
    1e64:	90 95       	com	r25
    1e66:	80 95       	com	r24
    1e68:	70 95       	com	r23
    1e6a:	61 95       	neg	r22
    1e6c:	7f 4f       	sbci	r23, 0xFF	; 255
    1e6e:	8f 4f       	sbci	r24, 0xFF	; 255
    1e70:	9f 4f       	sbci	r25, 0xFF	; 255
    1e72:	f0 68       	ori	r31, 0x80	; 128
    1e74:	9f 2e       	mov	r9, r31
    1e76:	2a e0       	ldi	r18, 0x0A	; 10
    1e78:	30 e0       	ldi	r19, 0x00	; 0
    1e7a:	a3 01       	movw	r20, r6
    1e7c:	0e 94 f5 11 	call	0x23ea	; 0x23ea <__ultoa_invert>
    1e80:	c8 2e       	mov	r12, r24
    1e82:	c6 18       	sub	r12, r6
    1e84:	3f c0       	rjmp	.+126    	; 0x1f04 <vfprintf+0x57a>
    1e86:	09 2d       	mov	r16, r9
    1e88:	85 37       	cpi	r24, 0x75	; 117
    1e8a:	21 f4       	brne	.+8      	; 0x1e94 <vfprintf+0x50a>
    1e8c:	0f 7e       	andi	r16, 0xEF	; 239
    1e8e:	2a e0       	ldi	r18, 0x0A	; 10
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	1d c0       	rjmp	.+58     	; 0x1ece <vfprintf+0x544>
    1e94:	09 7f       	andi	r16, 0xF9	; 249
    1e96:	8f 36       	cpi	r24, 0x6F	; 111
    1e98:	91 f0       	breq	.+36     	; 0x1ebe <vfprintf+0x534>
    1e9a:	18 f4       	brcc	.+6      	; 0x1ea2 <vfprintf+0x518>
    1e9c:	88 35       	cpi	r24, 0x58	; 88
    1e9e:	59 f0       	breq	.+22     	; 0x1eb6 <vfprintf+0x52c>
    1ea0:	c3 c0       	rjmp	.+390    	; 0x2028 <vfprintf+0x69e>
    1ea2:	80 37       	cpi	r24, 0x70	; 112
    1ea4:	19 f0       	breq	.+6      	; 0x1eac <vfprintf+0x522>
    1ea6:	88 37       	cpi	r24, 0x78	; 120
    1ea8:	11 f0       	breq	.+4      	; 0x1eae <vfprintf+0x524>
    1eaa:	be c0       	rjmp	.+380    	; 0x2028 <vfprintf+0x69e>
    1eac:	00 61       	ori	r16, 0x10	; 16
    1eae:	04 ff       	sbrs	r16, 4
    1eb0:	09 c0       	rjmp	.+18     	; 0x1ec4 <vfprintf+0x53a>
    1eb2:	04 60       	ori	r16, 0x04	; 4
    1eb4:	07 c0       	rjmp	.+14     	; 0x1ec4 <vfprintf+0x53a>
    1eb6:	94 fe       	sbrs	r9, 4
    1eb8:	08 c0       	rjmp	.+16     	; 0x1eca <vfprintf+0x540>
    1eba:	06 60       	ori	r16, 0x06	; 6
    1ebc:	06 c0       	rjmp	.+12     	; 0x1eca <vfprintf+0x540>
    1ebe:	28 e0       	ldi	r18, 0x08	; 8
    1ec0:	30 e0       	ldi	r19, 0x00	; 0
    1ec2:	05 c0       	rjmp	.+10     	; 0x1ece <vfprintf+0x544>
    1ec4:	20 e1       	ldi	r18, 0x10	; 16
    1ec6:	30 e0       	ldi	r19, 0x00	; 0
    1ec8:	02 c0       	rjmp	.+4      	; 0x1ece <vfprintf+0x544>
    1eca:	20 e1       	ldi	r18, 0x10	; 16
    1ecc:	32 e0       	ldi	r19, 0x02	; 2
    1ece:	56 01       	movw	r10, r12
    1ed0:	07 ff       	sbrs	r16, 7
    1ed2:	09 c0       	rjmp	.+18     	; 0x1ee6 <vfprintf+0x55c>
    1ed4:	84 e0       	ldi	r24, 0x04	; 4
    1ed6:	a8 0e       	add	r10, r24
    1ed8:	b1 1c       	adc	r11, r1
    1eda:	f6 01       	movw	r30, r12
    1edc:	60 81       	ld	r22, Z
    1ede:	71 81       	ldd	r23, Z+1	; 0x01
    1ee0:	82 81       	ldd	r24, Z+2	; 0x02
    1ee2:	93 81       	ldd	r25, Z+3	; 0x03
    1ee4:	08 c0       	rjmp	.+16     	; 0x1ef6 <vfprintf+0x56c>
    1ee6:	f2 e0       	ldi	r31, 0x02	; 2
    1ee8:	af 0e       	add	r10, r31
    1eea:	b1 1c       	adc	r11, r1
    1eec:	f6 01       	movw	r30, r12
    1eee:	60 81       	ld	r22, Z
    1ef0:	71 81       	ldd	r23, Z+1	; 0x01
    1ef2:	80 e0       	ldi	r24, 0x00	; 0
    1ef4:	90 e0       	ldi	r25, 0x00	; 0
    1ef6:	a3 01       	movw	r20, r6
    1ef8:	0e 94 f5 11 	call	0x23ea	; 0x23ea <__ultoa_invert>
    1efc:	c8 2e       	mov	r12, r24
    1efe:	c6 18       	sub	r12, r6
    1f00:	0f 77       	andi	r16, 0x7F	; 127
    1f02:	90 2e       	mov	r9, r16
    1f04:	96 fe       	sbrs	r9, 6
    1f06:	0b c0       	rjmp	.+22     	; 0x1f1e <vfprintf+0x594>
    1f08:	09 2d       	mov	r16, r9
    1f0a:	0e 7f       	andi	r16, 0xFE	; 254
    1f0c:	c1 16       	cp	r12, r17
    1f0e:	50 f4       	brcc	.+20     	; 0x1f24 <vfprintf+0x59a>
    1f10:	94 fe       	sbrs	r9, 4
    1f12:	0a c0       	rjmp	.+20     	; 0x1f28 <vfprintf+0x59e>
    1f14:	92 fc       	sbrc	r9, 2
    1f16:	08 c0       	rjmp	.+16     	; 0x1f28 <vfprintf+0x59e>
    1f18:	09 2d       	mov	r16, r9
    1f1a:	0e 7e       	andi	r16, 0xEE	; 238
    1f1c:	05 c0       	rjmp	.+10     	; 0x1f28 <vfprintf+0x59e>
    1f1e:	dc 2c       	mov	r13, r12
    1f20:	09 2d       	mov	r16, r9
    1f22:	03 c0       	rjmp	.+6      	; 0x1f2a <vfprintf+0x5a0>
    1f24:	dc 2c       	mov	r13, r12
    1f26:	01 c0       	rjmp	.+2      	; 0x1f2a <vfprintf+0x5a0>
    1f28:	d1 2e       	mov	r13, r17
    1f2a:	04 ff       	sbrs	r16, 4
    1f2c:	0d c0       	rjmp	.+26     	; 0x1f48 <vfprintf+0x5be>
    1f2e:	fe 01       	movw	r30, r28
    1f30:	ec 0d       	add	r30, r12
    1f32:	f1 1d       	adc	r31, r1
    1f34:	80 81       	ld	r24, Z
    1f36:	80 33       	cpi	r24, 0x30	; 48
    1f38:	11 f4       	brne	.+4      	; 0x1f3e <vfprintf+0x5b4>
    1f3a:	09 7e       	andi	r16, 0xE9	; 233
    1f3c:	09 c0       	rjmp	.+18     	; 0x1f50 <vfprintf+0x5c6>
    1f3e:	02 ff       	sbrs	r16, 2
    1f40:	06 c0       	rjmp	.+12     	; 0x1f4e <vfprintf+0x5c4>
    1f42:	d3 94       	inc	r13
    1f44:	d3 94       	inc	r13
    1f46:	04 c0       	rjmp	.+8      	; 0x1f50 <vfprintf+0x5c6>
    1f48:	80 2f       	mov	r24, r16
    1f4a:	86 78       	andi	r24, 0x86	; 134
    1f4c:	09 f0       	breq	.+2      	; 0x1f50 <vfprintf+0x5c6>
    1f4e:	d3 94       	inc	r13
    1f50:	03 fd       	sbrc	r16, 3
    1f52:	11 c0       	rjmp	.+34     	; 0x1f76 <vfprintf+0x5ec>
    1f54:	00 ff       	sbrs	r16, 0
    1f56:	06 c0       	rjmp	.+12     	; 0x1f64 <vfprintf+0x5da>
    1f58:	1c 2d       	mov	r17, r12
    1f5a:	d5 14       	cp	r13, r5
    1f5c:	80 f4       	brcc	.+32     	; 0x1f7e <vfprintf+0x5f4>
    1f5e:	15 0d       	add	r17, r5
    1f60:	1d 19       	sub	r17, r13
    1f62:	0d c0       	rjmp	.+26     	; 0x1f7e <vfprintf+0x5f4>
    1f64:	d5 14       	cp	r13, r5
    1f66:	58 f4       	brcc	.+22     	; 0x1f7e <vfprintf+0x5f4>
    1f68:	b7 01       	movw	r22, r14
    1f6a:	80 e2       	ldi	r24, 0x20	; 32
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1f72:	d3 94       	inc	r13
    1f74:	f7 cf       	rjmp	.-18     	; 0x1f64 <vfprintf+0x5da>
    1f76:	d5 14       	cp	r13, r5
    1f78:	10 f4       	brcc	.+4      	; 0x1f7e <vfprintf+0x5f4>
    1f7a:	5d 18       	sub	r5, r13
    1f7c:	01 c0       	rjmp	.+2      	; 0x1f80 <vfprintf+0x5f6>
    1f7e:	51 2c       	mov	r5, r1
    1f80:	04 ff       	sbrs	r16, 4
    1f82:	10 c0       	rjmp	.+32     	; 0x1fa4 <vfprintf+0x61a>
    1f84:	b7 01       	movw	r22, r14
    1f86:	80 e3       	ldi	r24, 0x30	; 48
    1f88:	90 e0       	ldi	r25, 0x00	; 0
    1f8a:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1f8e:	02 ff       	sbrs	r16, 2
    1f90:	17 c0       	rjmp	.+46     	; 0x1fc0 <vfprintf+0x636>
    1f92:	01 fd       	sbrc	r16, 1
    1f94:	03 c0       	rjmp	.+6      	; 0x1f9c <vfprintf+0x612>
    1f96:	88 e7       	ldi	r24, 0x78	; 120
    1f98:	90 e0       	ldi	r25, 0x00	; 0
    1f9a:	02 c0       	rjmp	.+4      	; 0x1fa0 <vfprintf+0x616>
    1f9c:	88 e5       	ldi	r24, 0x58	; 88
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	b7 01       	movw	r22, r14
    1fa2:	0c c0       	rjmp	.+24     	; 0x1fbc <vfprintf+0x632>
    1fa4:	80 2f       	mov	r24, r16
    1fa6:	86 78       	andi	r24, 0x86	; 134
    1fa8:	59 f0       	breq	.+22     	; 0x1fc0 <vfprintf+0x636>
    1faa:	01 ff       	sbrs	r16, 1
    1fac:	02 c0       	rjmp	.+4      	; 0x1fb2 <vfprintf+0x628>
    1fae:	8b e2       	ldi	r24, 0x2B	; 43
    1fb0:	01 c0       	rjmp	.+2      	; 0x1fb4 <vfprintf+0x62a>
    1fb2:	80 e2       	ldi	r24, 0x20	; 32
    1fb4:	07 fd       	sbrc	r16, 7
    1fb6:	8d e2       	ldi	r24, 0x2D	; 45
    1fb8:	b7 01       	movw	r22, r14
    1fba:	90 e0       	ldi	r25, 0x00	; 0
    1fbc:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1fc0:	c1 16       	cp	r12, r17
    1fc2:	38 f4       	brcc	.+14     	; 0x1fd2 <vfprintf+0x648>
    1fc4:	b7 01       	movw	r22, r14
    1fc6:	80 e3       	ldi	r24, 0x30	; 48
    1fc8:	90 e0       	ldi	r25, 0x00	; 0
    1fca:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1fce:	11 50       	subi	r17, 0x01	; 1
    1fd0:	f7 cf       	rjmp	.-18     	; 0x1fc0 <vfprintf+0x636>
    1fd2:	ca 94       	dec	r12
    1fd4:	f3 01       	movw	r30, r6
    1fd6:	ec 0d       	add	r30, r12
    1fd8:	f1 1d       	adc	r31, r1
    1fda:	80 81       	ld	r24, Z
    1fdc:	b7 01       	movw	r22, r14
    1fde:	90 e0       	ldi	r25, 0x00	; 0
    1fe0:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    1fe4:	c1 10       	cpse	r12, r1
    1fe6:	f5 cf       	rjmp	.-22     	; 0x1fd2 <vfprintf+0x648>
    1fe8:	15 c0       	rjmp	.+42     	; 0x2014 <vfprintf+0x68a>
    1fea:	f4 e0       	ldi	r31, 0x04	; 4
    1fec:	f5 15       	cp	r31, r5
    1fee:	60 f5       	brcc	.+88     	; 0x2048 <vfprintf+0x6be>
    1ff0:	84 e0       	ldi	r24, 0x04	; 4
    1ff2:	58 1a       	sub	r5, r24
    1ff4:	93 fe       	sbrs	r9, 3
    1ff6:	1f c0       	rjmp	.+62     	; 0x2036 <vfprintf+0x6ac>
    1ff8:	01 11       	cpse	r16, r1
    1ffa:	27 c0       	rjmp	.+78     	; 0x204a <vfprintf+0x6c0>
    1ffc:	2c 85       	ldd	r18, Y+12	; 0x0c
    1ffe:	23 ff       	sbrs	r18, 3
    2000:	2a c0       	rjmp	.+84     	; 0x2056 <vfprintf+0x6cc>
    2002:	04 eb       	ldi	r16, 0xB4	; 180
    2004:	10 e0       	ldi	r17, 0x00	; 0
    2006:	39 2d       	mov	r19, r9
    2008:	30 71       	andi	r19, 0x10	; 16
    200a:	93 2e       	mov	r9, r19
    200c:	f8 01       	movw	r30, r16
    200e:	84 91       	lpm	r24, Z
    2010:	81 11       	cpse	r24, r1
    2012:	24 c0       	rjmp	.+72     	; 0x205c <vfprintf+0x6d2>
    2014:	55 20       	and	r5, r5
    2016:	09 f4       	brne	.+2      	; 0x201a <vfprintf+0x690>
    2018:	e4 cc       	rjmp	.-1592   	; 0x19e2 <vfprintf+0x58>
    201a:	b7 01       	movw	r22, r14
    201c:	80 e2       	ldi	r24, 0x20	; 32
    201e:	90 e0       	ldi	r25, 0x00	; 0
    2020:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    2024:	5a 94       	dec	r5
    2026:	f6 cf       	rjmp	.-20     	; 0x2014 <vfprintf+0x68a>
    2028:	f7 01       	movw	r30, r14
    202a:	86 81       	ldd	r24, Z+6	; 0x06
    202c:	97 81       	ldd	r25, Z+7	; 0x07
    202e:	26 c0       	rjmp	.+76     	; 0x207c <vfprintf+0x6f2>
    2030:	8f ef       	ldi	r24, 0xFF	; 255
    2032:	9f ef       	ldi	r25, 0xFF	; 255
    2034:	23 c0       	rjmp	.+70     	; 0x207c <vfprintf+0x6f2>
    2036:	b7 01       	movw	r22, r14
    2038:	80 e2       	ldi	r24, 0x20	; 32
    203a:	90 e0       	ldi	r25, 0x00	; 0
    203c:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    2040:	5a 94       	dec	r5
    2042:	51 10       	cpse	r5, r1
    2044:	f8 cf       	rjmp	.-16     	; 0x2036 <vfprintf+0x6ac>
    2046:	d8 cf       	rjmp	.-80     	; 0x1ff8 <vfprintf+0x66e>
    2048:	51 2c       	mov	r5, r1
    204a:	b7 01       	movw	r22, r14
    204c:	80 2f       	mov	r24, r16
    204e:	90 e0       	ldi	r25, 0x00	; 0
    2050:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    2054:	d3 cf       	rjmp	.-90     	; 0x1ffc <vfprintf+0x672>
    2056:	08 eb       	ldi	r16, 0xB8	; 184
    2058:	10 e0       	ldi	r17, 0x00	; 0
    205a:	d5 cf       	rjmp	.-86     	; 0x2006 <vfprintf+0x67c>
    205c:	91 10       	cpse	r9, r1
    205e:	80 52       	subi	r24, 0x20	; 32
    2060:	b7 01       	movw	r22, r14
    2062:	90 e0       	ldi	r25, 0x00	; 0
    2064:	0e 94 b9 11 	call	0x2372	; 0x2372 <fputc>
    2068:	0f 5f       	subi	r16, 0xFF	; 255
    206a:	1f 4f       	sbci	r17, 0xFF	; 255
    206c:	cf cf       	rjmp	.-98     	; 0x200c <vfprintf+0x682>
    206e:	23 e0       	ldi	r18, 0x03	; 3
    2070:	25 15       	cp	r18, r5
    2072:	10 f4       	brcc	.+4      	; 0x2078 <vfprintf+0x6ee>
    2074:	83 e0       	ldi	r24, 0x03	; 3
    2076:	bd cf       	rjmp	.-134    	; 0x1ff2 <vfprintf+0x668>
    2078:	51 2c       	mov	r5, r1
    207a:	c0 cf       	rjmp	.-128    	; 0x1ffc <vfprintf+0x672>
    207c:	60 96       	adiw	r28, 0x10	; 16
    207e:	e2 e1       	ldi	r30, 0x12	; 18
    2080:	0c 94 88 10 	jmp	0x2110	; 0x2110 <__epilogue_restores__>

00002084 <__udivmodsi4>:
    2084:	a1 e2       	ldi	r26, 0x21	; 33
    2086:	1a 2e       	mov	r1, r26
    2088:	aa 1b       	sub	r26, r26
    208a:	bb 1b       	sub	r27, r27
    208c:	fd 01       	movw	r30, r26
    208e:	0d c0       	rjmp	.+26     	; 0x20aa <__udivmodsi4_ep>

00002090 <__udivmodsi4_loop>:
    2090:	aa 1f       	adc	r26, r26
    2092:	bb 1f       	adc	r27, r27
    2094:	ee 1f       	adc	r30, r30
    2096:	ff 1f       	adc	r31, r31
    2098:	a2 17       	cp	r26, r18
    209a:	b3 07       	cpc	r27, r19
    209c:	e4 07       	cpc	r30, r20
    209e:	f5 07       	cpc	r31, r21
    20a0:	20 f0       	brcs	.+8      	; 0x20aa <__udivmodsi4_ep>
    20a2:	a2 1b       	sub	r26, r18
    20a4:	b3 0b       	sbc	r27, r19
    20a6:	e4 0b       	sbc	r30, r20
    20a8:	f5 0b       	sbc	r31, r21

000020aa <__udivmodsi4_ep>:
    20aa:	66 1f       	adc	r22, r22
    20ac:	77 1f       	adc	r23, r23
    20ae:	88 1f       	adc	r24, r24
    20b0:	99 1f       	adc	r25, r25
    20b2:	1a 94       	dec	r1
    20b4:	69 f7       	brne	.-38     	; 0x2090 <__udivmodsi4_loop>
    20b6:	60 95       	com	r22
    20b8:	70 95       	com	r23
    20ba:	80 95       	com	r24
    20bc:	90 95       	com	r25
    20be:	9b 01       	movw	r18, r22
    20c0:	ac 01       	movw	r20, r24
    20c2:	bd 01       	movw	r22, r26
    20c4:	cf 01       	movw	r24, r30
    20c6:	08 95       	ret

000020c8 <__mulshisi3>:
    20c8:	b7 ff       	sbrs	r27, 7
    20ca:	0c 94 a3 10 	jmp	0x2146	; 0x2146 <__muluhisi3>

000020ce <__mulohisi3>:
    20ce:	0e 94 a3 10 	call	0x2146	; 0x2146 <__muluhisi3>
    20d2:	82 1b       	sub	r24, r18
    20d4:	93 0b       	sbc	r25, r19
    20d6:	08 95       	ret

000020d8 <__prologue_saves__>:
    20d8:	2f 92       	push	r2
    20da:	3f 92       	push	r3
    20dc:	4f 92       	push	r4
    20de:	5f 92       	push	r5
    20e0:	6f 92       	push	r6
    20e2:	7f 92       	push	r7
    20e4:	8f 92       	push	r8
    20e6:	9f 92       	push	r9
    20e8:	af 92       	push	r10
    20ea:	bf 92       	push	r11
    20ec:	cf 92       	push	r12
    20ee:	df 92       	push	r13
    20f0:	ef 92       	push	r14
    20f2:	ff 92       	push	r15
    20f4:	0f 93       	push	r16
    20f6:	1f 93       	push	r17
    20f8:	cf 93       	push	r28
    20fa:	df 93       	push	r29
    20fc:	cd b7       	in	r28, 0x3d	; 61
    20fe:	de b7       	in	r29, 0x3e	; 62
    2100:	ca 1b       	sub	r28, r26
    2102:	db 0b       	sbc	r29, r27
    2104:	0f b6       	in	r0, 0x3f	; 63
    2106:	f8 94       	cli
    2108:	de bf       	out	0x3e, r29	; 62
    210a:	0f be       	out	0x3f, r0	; 63
    210c:	cd bf       	out	0x3d, r28	; 61
    210e:	09 94       	ijmp

00002110 <__epilogue_restores__>:
    2110:	2a 88       	ldd	r2, Y+18	; 0x12
    2112:	39 88       	ldd	r3, Y+17	; 0x11
    2114:	48 88       	ldd	r4, Y+16	; 0x10
    2116:	5f 84       	ldd	r5, Y+15	; 0x0f
    2118:	6e 84       	ldd	r6, Y+14	; 0x0e
    211a:	7d 84       	ldd	r7, Y+13	; 0x0d
    211c:	8c 84       	ldd	r8, Y+12	; 0x0c
    211e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2120:	aa 84       	ldd	r10, Y+10	; 0x0a
    2122:	b9 84       	ldd	r11, Y+9	; 0x09
    2124:	c8 84       	ldd	r12, Y+8	; 0x08
    2126:	df 80       	ldd	r13, Y+7	; 0x07
    2128:	ee 80       	ldd	r14, Y+6	; 0x06
    212a:	fd 80       	ldd	r15, Y+5	; 0x05
    212c:	0c 81       	ldd	r16, Y+4	; 0x04
    212e:	1b 81       	ldd	r17, Y+3	; 0x03
    2130:	aa 81       	ldd	r26, Y+2	; 0x02
    2132:	b9 81       	ldd	r27, Y+1	; 0x01
    2134:	ce 0f       	add	r28, r30
    2136:	d1 1d       	adc	r29, r1
    2138:	0f b6       	in	r0, 0x3f	; 63
    213a:	f8 94       	cli
    213c:	de bf       	out	0x3e, r29	; 62
    213e:	0f be       	out	0x3f, r0	; 63
    2140:	cd bf       	out	0x3d, r28	; 61
    2142:	ed 01       	movw	r28, r26
    2144:	08 95       	ret

00002146 <__muluhisi3>:
    2146:	0e 94 ae 10 	call	0x215c	; 0x215c <__umulhisi3>
    214a:	a5 9f       	mul	r26, r21
    214c:	90 0d       	add	r25, r0
    214e:	b4 9f       	mul	r27, r20
    2150:	90 0d       	add	r25, r0
    2152:	a4 9f       	mul	r26, r20
    2154:	80 0d       	add	r24, r0
    2156:	91 1d       	adc	r25, r1
    2158:	11 24       	eor	r1, r1
    215a:	08 95       	ret

0000215c <__umulhisi3>:
    215c:	a2 9f       	mul	r26, r18
    215e:	b0 01       	movw	r22, r0
    2160:	b3 9f       	mul	r27, r19
    2162:	c0 01       	movw	r24, r0
    2164:	a3 9f       	mul	r26, r19
    2166:	70 0d       	add	r23, r0
    2168:	81 1d       	adc	r24, r1
    216a:	11 24       	eor	r1, r1
    216c:	91 1d       	adc	r25, r1
    216e:	b2 9f       	mul	r27, r18
    2170:	70 0d       	add	r23, r0
    2172:	81 1d       	adc	r24, r1
    2174:	11 24       	eor	r1, r1
    2176:	91 1d       	adc	r25, r1
    2178:	08 95       	ret

0000217a <__ftoa_engine>:
    217a:	28 30       	cpi	r18, 0x08	; 8
    217c:	08 f0       	brcs	.+2      	; 0x2180 <__ftoa_engine+0x6>
    217e:	27 e0       	ldi	r18, 0x07	; 7
    2180:	33 27       	eor	r19, r19
    2182:	da 01       	movw	r26, r20
    2184:	99 0f       	add	r25, r25
    2186:	31 1d       	adc	r19, r1
    2188:	87 fd       	sbrc	r24, 7
    218a:	91 60       	ori	r25, 0x01	; 1
    218c:	00 96       	adiw	r24, 0x00	; 0
    218e:	61 05       	cpc	r22, r1
    2190:	71 05       	cpc	r23, r1
    2192:	39 f4       	brne	.+14     	; 0x21a2 <__ftoa_engine+0x28>
    2194:	32 60       	ori	r19, 0x02	; 2
    2196:	2e 5f       	subi	r18, 0xFE	; 254
    2198:	3d 93       	st	X+, r19
    219a:	30 e3       	ldi	r19, 0x30	; 48
    219c:	2a 95       	dec	r18
    219e:	e1 f7       	brne	.-8      	; 0x2198 <__ftoa_engine+0x1e>
    21a0:	08 95       	ret
    21a2:	9f 3f       	cpi	r25, 0xFF	; 255
    21a4:	30 f0       	brcs	.+12     	; 0x21b2 <__ftoa_engine+0x38>
    21a6:	80 38       	cpi	r24, 0x80	; 128
    21a8:	71 05       	cpc	r23, r1
    21aa:	61 05       	cpc	r22, r1
    21ac:	09 f0       	breq	.+2      	; 0x21b0 <__ftoa_engine+0x36>
    21ae:	3c 5f       	subi	r19, 0xFC	; 252
    21b0:	3c 5f       	subi	r19, 0xFC	; 252
    21b2:	3d 93       	st	X+, r19
    21b4:	91 30       	cpi	r25, 0x01	; 1
    21b6:	08 f0       	brcs	.+2      	; 0x21ba <__ftoa_engine+0x40>
    21b8:	80 68       	ori	r24, 0x80	; 128
    21ba:	91 1d       	adc	r25, r1
    21bc:	df 93       	push	r29
    21be:	cf 93       	push	r28
    21c0:	1f 93       	push	r17
    21c2:	0f 93       	push	r16
    21c4:	ff 92       	push	r15
    21c6:	ef 92       	push	r14
    21c8:	19 2f       	mov	r17, r25
    21ca:	98 7f       	andi	r25, 0xF8	; 248
    21cc:	96 95       	lsr	r25
    21ce:	e9 2f       	mov	r30, r25
    21d0:	96 95       	lsr	r25
    21d2:	96 95       	lsr	r25
    21d4:	e9 0f       	add	r30, r25
    21d6:	ff 27       	eor	r31, r31
    21d8:	ea 5e       	subi	r30, 0xEA	; 234
    21da:	fe 4f       	sbci	r31, 0xFE	; 254
    21dc:	99 27       	eor	r25, r25
    21de:	33 27       	eor	r19, r19
    21e0:	ee 24       	eor	r14, r14
    21e2:	ff 24       	eor	r15, r15
    21e4:	a7 01       	movw	r20, r14
    21e6:	e7 01       	movw	r28, r14
    21e8:	05 90       	lpm	r0, Z+
    21ea:	08 94       	sec
    21ec:	07 94       	ror	r0
    21ee:	28 f4       	brcc	.+10     	; 0x21fa <__ftoa_engine+0x80>
    21f0:	36 0f       	add	r19, r22
    21f2:	e7 1e       	adc	r14, r23
    21f4:	f8 1e       	adc	r15, r24
    21f6:	49 1f       	adc	r20, r25
    21f8:	51 1d       	adc	r21, r1
    21fa:	66 0f       	add	r22, r22
    21fc:	77 1f       	adc	r23, r23
    21fe:	88 1f       	adc	r24, r24
    2200:	99 1f       	adc	r25, r25
    2202:	06 94       	lsr	r0
    2204:	a1 f7       	brne	.-24     	; 0x21ee <__ftoa_engine+0x74>
    2206:	05 90       	lpm	r0, Z+
    2208:	07 94       	ror	r0
    220a:	28 f4       	brcc	.+10     	; 0x2216 <__ftoa_engine+0x9c>
    220c:	e7 0e       	add	r14, r23
    220e:	f8 1e       	adc	r15, r24
    2210:	49 1f       	adc	r20, r25
    2212:	56 1f       	adc	r21, r22
    2214:	c1 1d       	adc	r28, r1
    2216:	77 0f       	add	r23, r23
    2218:	88 1f       	adc	r24, r24
    221a:	99 1f       	adc	r25, r25
    221c:	66 1f       	adc	r22, r22
    221e:	06 94       	lsr	r0
    2220:	a1 f7       	brne	.-24     	; 0x220a <__ftoa_engine+0x90>
    2222:	05 90       	lpm	r0, Z+
    2224:	07 94       	ror	r0
    2226:	28 f4       	brcc	.+10     	; 0x2232 <__ftoa_engine+0xb8>
    2228:	f8 0e       	add	r15, r24
    222a:	49 1f       	adc	r20, r25
    222c:	56 1f       	adc	r21, r22
    222e:	c7 1f       	adc	r28, r23
    2230:	d1 1d       	adc	r29, r1
    2232:	88 0f       	add	r24, r24
    2234:	99 1f       	adc	r25, r25
    2236:	66 1f       	adc	r22, r22
    2238:	77 1f       	adc	r23, r23
    223a:	06 94       	lsr	r0
    223c:	a1 f7       	brne	.-24     	; 0x2226 <__ftoa_engine+0xac>
    223e:	05 90       	lpm	r0, Z+
    2240:	07 94       	ror	r0
    2242:	20 f4       	brcc	.+8      	; 0x224c <__ftoa_engine+0xd2>
    2244:	49 0f       	add	r20, r25
    2246:	56 1f       	adc	r21, r22
    2248:	c7 1f       	adc	r28, r23
    224a:	d8 1f       	adc	r29, r24
    224c:	99 0f       	add	r25, r25
    224e:	66 1f       	adc	r22, r22
    2250:	77 1f       	adc	r23, r23
    2252:	88 1f       	adc	r24, r24
    2254:	06 94       	lsr	r0
    2256:	a9 f7       	brne	.-22     	; 0x2242 <__ftoa_engine+0xc8>
    2258:	84 91       	lpm	r24, Z
    225a:	10 95       	com	r17
    225c:	17 70       	andi	r17, 0x07	; 7
    225e:	41 f0       	breq	.+16     	; 0x2270 <__ftoa_engine+0xf6>
    2260:	d6 95       	lsr	r29
    2262:	c7 95       	ror	r28
    2264:	57 95       	ror	r21
    2266:	47 95       	ror	r20
    2268:	f7 94       	ror	r15
    226a:	e7 94       	ror	r14
    226c:	1a 95       	dec	r17
    226e:	c1 f7       	brne	.-16     	; 0x2260 <__ftoa_engine+0xe6>
    2270:	ec eb       	ldi	r30, 0xBC	; 188
    2272:	f0 e0       	ldi	r31, 0x00	; 0
    2274:	68 94       	set
    2276:	15 90       	lpm	r1, Z+
    2278:	15 91       	lpm	r17, Z+
    227a:	35 91       	lpm	r19, Z+
    227c:	65 91       	lpm	r22, Z+
    227e:	95 91       	lpm	r25, Z+
    2280:	05 90       	lpm	r0, Z+
    2282:	7f e2       	ldi	r23, 0x2F	; 47
    2284:	73 95       	inc	r23
    2286:	e1 18       	sub	r14, r1
    2288:	f1 0a       	sbc	r15, r17
    228a:	43 0b       	sbc	r20, r19
    228c:	56 0b       	sbc	r21, r22
    228e:	c9 0b       	sbc	r28, r25
    2290:	d0 09       	sbc	r29, r0
    2292:	c0 f7       	brcc	.-16     	; 0x2284 <__ftoa_engine+0x10a>
    2294:	e1 0c       	add	r14, r1
    2296:	f1 1e       	adc	r15, r17
    2298:	43 1f       	adc	r20, r19
    229a:	56 1f       	adc	r21, r22
    229c:	c9 1f       	adc	r28, r25
    229e:	d0 1d       	adc	r29, r0
    22a0:	7e f4       	brtc	.+30     	; 0x22c0 <__ftoa_engine+0x146>
    22a2:	70 33       	cpi	r23, 0x30	; 48
    22a4:	11 f4       	brne	.+4      	; 0x22aa <__ftoa_engine+0x130>
    22a6:	8a 95       	dec	r24
    22a8:	e6 cf       	rjmp	.-52     	; 0x2276 <__ftoa_engine+0xfc>
    22aa:	e8 94       	clt
    22ac:	01 50       	subi	r16, 0x01	; 1
    22ae:	30 f0       	brcs	.+12     	; 0x22bc <__ftoa_engine+0x142>
    22b0:	08 0f       	add	r16, r24
    22b2:	0a f4       	brpl	.+2      	; 0x22b6 <__ftoa_engine+0x13c>
    22b4:	00 27       	eor	r16, r16
    22b6:	02 17       	cp	r16, r18
    22b8:	08 f4       	brcc	.+2      	; 0x22bc <__ftoa_engine+0x142>
    22ba:	20 2f       	mov	r18, r16
    22bc:	23 95       	inc	r18
    22be:	02 2f       	mov	r16, r18
    22c0:	7a 33       	cpi	r23, 0x3A	; 58
    22c2:	28 f0       	brcs	.+10     	; 0x22ce <__ftoa_engine+0x154>
    22c4:	79 e3       	ldi	r23, 0x39	; 57
    22c6:	7d 93       	st	X+, r23
    22c8:	2a 95       	dec	r18
    22ca:	e9 f7       	brne	.-6      	; 0x22c6 <__ftoa_engine+0x14c>
    22cc:	10 c0       	rjmp	.+32     	; 0x22ee <__ftoa_engine+0x174>
    22ce:	7d 93       	st	X+, r23
    22d0:	2a 95       	dec	r18
    22d2:	89 f6       	brne	.-94     	; 0x2276 <__ftoa_engine+0xfc>
    22d4:	06 94       	lsr	r0
    22d6:	97 95       	ror	r25
    22d8:	67 95       	ror	r22
    22da:	37 95       	ror	r19
    22dc:	17 95       	ror	r17
    22de:	17 94       	ror	r1
    22e0:	e1 18       	sub	r14, r1
    22e2:	f1 0a       	sbc	r15, r17
    22e4:	43 0b       	sbc	r20, r19
    22e6:	56 0b       	sbc	r21, r22
    22e8:	c9 0b       	sbc	r28, r25
    22ea:	d0 09       	sbc	r29, r0
    22ec:	98 f0       	brcs	.+38     	; 0x2314 <__ftoa_engine+0x19a>
    22ee:	23 95       	inc	r18
    22f0:	7e 91       	ld	r23, -X
    22f2:	73 95       	inc	r23
    22f4:	7a 33       	cpi	r23, 0x3A	; 58
    22f6:	08 f0       	brcs	.+2      	; 0x22fa <__ftoa_engine+0x180>
    22f8:	70 e3       	ldi	r23, 0x30	; 48
    22fa:	7c 93       	st	X, r23
    22fc:	20 13       	cpse	r18, r16
    22fe:	b8 f7       	brcc	.-18     	; 0x22ee <__ftoa_engine+0x174>
    2300:	7e 91       	ld	r23, -X
    2302:	70 61       	ori	r23, 0x10	; 16
    2304:	7d 93       	st	X+, r23
    2306:	30 f0       	brcs	.+12     	; 0x2314 <__ftoa_engine+0x19a>
    2308:	83 95       	inc	r24
    230a:	71 e3       	ldi	r23, 0x31	; 49
    230c:	7d 93       	st	X+, r23
    230e:	70 e3       	ldi	r23, 0x30	; 48
    2310:	2a 95       	dec	r18
    2312:	e1 f7       	brne	.-8      	; 0x230c <__ftoa_engine+0x192>
    2314:	11 24       	eor	r1, r1
    2316:	ef 90       	pop	r14
    2318:	ff 90       	pop	r15
    231a:	0f 91       	pop	r16
    231c:	1f 91       	pop	r17
    231e:	cf 91       	pop	r28
    2320:	df 91       	pop	r29
    2322:	99 27       	eor	r25, r25
    2324:	87 fd       	sbrc	r24, 7
    2326:	90 95       	com	r25
    2328:	08 95       	ret

0000232a <strnlen_P>:
    232a:	fc 01       	movw	r30, r24
    232c:	05 90       	lpm	r0, Z+
    232e:	61 50       	subi	r22, 0x01	; 1
    2330:	70 40       	sbci	r23, 0x00	; 0
    2332:	01 10       	cpse	r0, r1
    2334:	d8 f7       	brcc	.-10     	; 0x232c <strnlen_P+0x2>
    2336:	80 95       	com	r24
    2338:	90 95       	com	r25
    233a:	8e 0f       	add	r24, r30
    233c:	9f 1f       	adc	r25, r31
    233e:	08 95       	ret

00002340 <strncmp>:
    2340:	fb 01       	movw	r30, r22
    2342:	dc 01       	movw	r26, r24
    2344:	41 50       	subi	r20, 0x01	; 1
    2346:	50 40       	sbci	r21, 0x00	; 0
    2348:	30 f0       	brcs	.+12     	; 0x2356 <strncmp+0x16>
    234a:	8d 91       	ld	r24, X+
    234c:	01 90       	ld	r0, Z+
    234e:	80 19       	sub	r24, r0
    2350:	19 f4       	brne	.+6      	; 0x2358 <strncmp+0x18>
    2352:	00 20       	and	r0, r0
    2354:	b9 f7       	brne	.-18     	; 0x2344 <strncmp+0x4>
    2356:	88 1b       	sub	r24, r24
    2358:	99 0b       	sbc	r25, r25
    235a:	08 95       	ret

0000235c <strnlen>:
    235c:	fc 01       	movw	r30, r24
    235e:	61 50       	subi	r22, 0x01	; 1
    2360:	70 40       	sbci	r23, 0x00	; 0
    2362:	01 90       	ld	r0, Z+
    2364:	01 10       	cpse	r0, r1
    2366:	d8 f7       	brcc	.-10     	; 0x235e <strnlen+0x2>
    2368:	80 95       	com	r24
    236a:	90 95       	com	r25
    236c:	8e 0f       	add	r24, r30
    236e:	9f 1f       	adc	r25, r31
    2370:	08 95       	ret

00002372 <fputc>:
    2372:	0f 93       	push	r16
    2374:	1f 93       	push	r17
    2376:	cf 93       	push	r28
    2378:	df 93       	push	r29
    237a:	fb 01       	movw	r30, r22
    237c:	23 81       	ldd	r18, Z+3	; 0x03
    237e:	21 fd       	sbrc	r18, 1
    2380:	03 c0       	rjmp	.+6      	; 0x2388 <fputc+0x16>
    2382:	8f ef       	ldi	r24, 0xFF	; 255
    2384:	9f ef       	ldi	r25, 0xFF	; 255
    2386:	2c c0       	rjmp	.+88     	; 0x23e0 <fputc+0x6e>
    2388:	22 ff       	sbrs	r18, 2
    238a:	16 c0       	rjmp	.+44     	; 0x23b8 <fputc+0x46>
    238c:	46 81       	ldd	r20, Z+6	; 0x06
    238e:	57 81       	ldd	r21, Z+7	; 0x07
    2390:	24 81       	ldd	r18, Z+4	; 0x04
    2392:	35 81       	ldd	r19, Z+5	; 0x05
    2394:	42 17       	cp	r20, r18
    2396:	53 07       	cpc	r21, r19
    2398:	44 f4       	brge	.+16     	; 0x23aa <fputc+0x38>
    239a:	a0 81       	ld	r26, Z
    239c:	b1 81       	ldd	r27, Z+1	; 0x01
    239e:	9d 01       	movw	r18, r26
    23a0:	2f 5f       	subi	r18, 0xFF	; 255
    23a2:	3f 4f       	sbci	r19, 0xFF	; 255
    23a4:	31 83       	std	Z+1, r19	; 0x01
    23a6:	20 83       	st	Z, r18
    23a8:	8c 93       	st	X, r24
    23aa:	26 81       	ldd	r18, Z+6	; 0x06
    23ac:	37 81       	ldd	r19, Z+7	; 0x07
    23ae:	2f 5f       	subi	r18, 0xFF	; 255
    23b0:	3f 4f       	sbci	r19, 0xFF	; 255
    23b2:	37 83       	std	Z+7, r19	; 0x07
    23b4:	26 83       	std	Z+6, r18	; 0x06
    23b6:	14 c0       	rjmp	.+40     	; 0x23e0 <fputc+0x6e>
    23b8:	8b 01       	movw	r16, r22
    23ba:	ec 01       	movw	r28, r24
    23bc:	fb 01       	movw	r30, r22
    23be:	00 84       	ldd	r0, Z+8	; 0x08
    23c0:	f1 85       	ldd	r31, Z+9	; 0x09
    23c2:	e0 2d       	mov	r30, r0
    23c4:	09 95       	icall
    23c6:	89 2b       	or	r24, r25
    23c8:	e1 f6       	brne	.-72     	; 0x2382 <fputc+0x10>
    23ca:	d8 01       	movw	r26, r16
    23cc:	16 96       	adiw	r26, 0x06	; 6
    23ce:	8d 91       	ld	r24, X+
    23d0:	9c 91       	ld	r25, X
    23d2:	17 97       	sbiw	r26, 0x07	; 7
    23d4:	01 96       	adiw	r24, 0x01	; 1
    23d6:	17 96       	adiw	r26, 0x07	; 7
    23d8:	9c 93       	st	X, r25
    23da:	8e 93       	st	-X, r24
    23dc:	16 97       	sbiw	r26, 0x06	; 6
    23de:	ce 01       	movw	r24, r28
    23e0:	df 91       	pop	r29
    23e2:	cf 91       	pop	r28
    23e4:	1f 91       	pop	r17
    23e6:	0f 91       	pop	r16
    23e8:	08 95       	ret

000023ea <__ultoa_invert>:
    23ea:	fa 01       	movw	r30, r20
    23ec:	aa 27       	eor	r26, r26
    23ee:	28 30       	cpi	r18, 0x08	; 8
    23f0:	51 f1       	breq	.+84     	; 0x2446 <__ultoa_invert+0x5c>
    23f2:	20 31       	cpi	r18, 0x10	; 16
    23f4:	81 f1       	breq	.+96     	; 0x2456 <__ultoa_invert+0x6c>
    23f6:	e8 94       	clt
    23f8:	6f 93       	push	r22
    23fa:	6e 7f       	andi	r22, 0xFE	; 254
    23fc:	6e 5f       	subi	r22, 0xFE	; 254
    23fe:	7f 4f       	sbci	r23, 0xFF	; 255
    2400:	8f 4f       	sbci	r24, 0xFF	; 255
    2402:	9f 4f       	sbci	r25, 0xFF	; 255
    2404:	af 4f       	sbci	r26, 0xFF	; 255
    2406:	b1 e0       	ldi	r27, 0x01	; 1
    2408:	3e d0       	rcall	.+124    	; 0x2486 <__ultoa_invert+0x9c>
    240a:	b4 e0       	ldi	r27, 0x04	; 4
    240c:	3c d0       	rcall	.+120    	; 0x2486 <__ultoa_invert+0x9c>
    240e:	67 0f       	add	r22, r23
    2410:	78 1f       	adc	r23, r24
    2412:	89 1f       	adc	r24, r25
    2414:	9a 1f       	adc	r25, r26
    2416:	a1 1d       	adc	r26, r1
    2418:	68 0f       	add	r22, r24
    241a:	79 1f       	adc	r23, r25
    241c:	8a 1f       	adc	r24, r26
    241e:	91 1d       	adc	r25, r1
    2420:	a1 1d       	adc	r26, r1
    2422:	6a 0f       	add	r22, r26
    2424:	71 1d       	adc	r23, r1
    2426:	81 1d       	adc	r24, r1
    2428:	91 1d       	adc	r25, r1
    242a:	a1 1d       	adc	r26, r1
    242c:	20 d0       	rcall	.+64     	; 0x246e <__ultoa_invert+0x84>
    242e:	09 f4       	brne	.+2      	; 0x2432 <__ultoa_invert+0x48>
    2430:	68 94       	set
    2432:	3f 91       	pop	r19
    2434:	2a e0       	ldi	r18, 0x0A	; 10
    2436:	26 9f       	mul	r18, r22
    2438:	11 24       	eor	r1, r1
    243a:	30 19       	sub	r19, r0
    243c:	30 5d       	subi	r19, 0xD0	; 208
    243e:	31 93       	st	Z+, r19
    2440:	de f6       	brtc	.-74     	; 0x23f8 <__ultoa_invert+0xe>
    2442:	cf 01       	movw	r24, r30
    2444:	08 95       	ret
    2446:	46 2f       	mov	r20, r22
    2448:	47 70       	andi	r20, 0x07	; 7
    244a:	40 5d       	subi	r20, 0xD0	; 208
    244c:	41 93       	st	Z+, r20
    244e:	b3 e0       	ldi	r27, 0x03	; 3
    2450:	0f d0       	rcall	.+30     	; 0x2470 <__ultoa_invert+0x86>
    2452:	c9 f7       	brne	.-14     	; 0x2446 <__ultoa_invert+0x5c>
    2454:	f6 cf       	rjmp	.-20     	; 0x2442 <__ultoa_invert+0x58>
    2456:	46 2f       	mov	r20, r22
    2458:	4f 70       	andi	r20, 0x0F	; 15
    245a:	40 5d       	subi	r20, 0xD0	; 208
    245c:	4a 33       	cpi	r20, 0x3A	; 58
    245e:	18 f0       	brcs	.+6      	; 0x2466 <__ultoa_invert+0x7c>
    2460:	49 5d       	subi	r20, 0xD9	; 217
    2462:	31 fd       	sbrc	r19, 1
    2464:	40 52       	subi	r20, 0x20	; 32
    2466:	41 93       	st	Z+, r20
    2468:	02 d0       	rcall	.+4      	; 0x246e <__ultoa_invert+0x84>
    246a:	a9 f7       	brne	.-22     	; 0x2456 <__ultoa_invert+0x6c>
    246c:	ea cf       	rjmp	.-44     	; 0x2442 <__ultoa_invert+0x58>
    246e:	b4 e0       	ldi	r27, 0x04	; 4
    2470:	a6 95       	lsr	r26
    2472:	97 95       	ror	r25
    2474:	87 95       	ror	r24
    2476:	77 95       	ror	r23
    2478:	67 95       	ror	r22
    247a:	ba 95       	dec	r27
    247c:	c9 f7       	brne	.-14     	; 0x2470 <__ultoa_invert+0x86>
    247e:	00 97       	sbiw	r24, 0x00	; 0
    2480:	61 05       	cpc	r22, r1
    2482:	71 05       	cpc	r23, r1
    2484:	08 95       	ret
    2486:	9b 01       	movw	r18, r22
    2488:	ac 01       	movw	r20, r24
    248a:	0a 2e       	mov	r0, r26
    248c:	06 94       	lsr	r0
    248e:	57 95       	ror	r21
    2490:	47 95       	ror	r20
    2492:	37 95       	ror	r19
    2494:	27 95       	ror	r18
    2496:	ba 95       	dec	r27
    2498:	c9 f7       	brne	.-14     	; 0x248c <__ultoa_invert+0xa2>
    249a:	62 0f       	add	r22, r18
    249c:	73 1f       	adc	r23, r19
    249e:	84 1f       	adc	r24, r20
    24a0:	95 1f       	adc	r25, r21
    24a2:	a0 1d       	adc	r26, r0
    24a4:	08 95       	ret

000024a6 <_exit>:
    24a6:	f8 94       	cli

000024a8 <__stop_program>:
    24a8:	ff cf       	rjmp	.-2      	; 0x24a8 <__stop_program>
